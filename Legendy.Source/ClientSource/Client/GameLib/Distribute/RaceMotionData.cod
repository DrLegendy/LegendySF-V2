; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@	; CDynamicPool<CRaceMotionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8	; CDynamicPool<CRaceMotionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCRaceMotionData@@@@8	; CDynamicPool<CRaceMotionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCRaceMotionData@@@@8	; CDynamicPool<CRaceMotionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@VCRaceMotionData@@@@6B@	; CDynamicPool<CRaceMotionData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z ; CDynamicPool<CRaceMotionData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z:PROC ; CDynamicPool<CRaceMotionData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCRaceMotionData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCRaceMotionData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@ ; CDynamicPool<CRaceMotionData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCRaceMotionData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCRaceMotionData@@@@8 DD 00H	; CDynamicPool<CRaceMotionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CRaceMotionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCRaceMotionData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@ DD 00H	; CDynamicPool<CRaceMotionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??1SCollisionData@NRaceData@@UAE@XZ		; NRaceData::SCollisionData::~SCollisionData
PUBLIC	??_GSCollisionData@NRaceData@@UAEPAXI@Z		; NRaceData::SCollisionData::`scalar deleting destructor'
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
PUBLIC	??1SMotionEventData@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventData::~SMotionEventData
PUBLIC	?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventData::Load
PUBLIC	??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z	; NMotionEvent::SMotionEventData::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving
PUBLIC	?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataScreenWaving::Save
PUBLIC	?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataScreenWaving::Load
PUBLIC	??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect
PUBLIC	?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataEffect::Save
PUBLIC	?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataEffect::Load
PUBLIC	??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget
PUBLIC	?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataEffectToTarget::Save
PUBLIC	?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataEffectToTarget::Load
PUBLIC	??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataFly@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly
PUBLIC	?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataFly::Save
PUBLIC	?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataFly::Load
PUBLIC	??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack
PUBLIC	?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataAttack::Save
PUBLIC	?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataAttack::Load
PUBLIC	??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataSound@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound
PUBLIC	?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataSound::Save
PUBLIC	?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataSound::Load
PUBLIC	??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow
PUBLIC	?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataCharacterShow::Save
PUBLIC	??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide
PUBLIC	?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataCharacterHide::Save
PUBLIC	??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp
PUBLIC	?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataWarp::Save
PUBLIC	??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11
PUBLIC	?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataUnk11::Save
PUBLIC	?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataUnk11::Load
PUBLIC	??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12
PUBLIC	?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataUnk12::Save
PUBLIC	??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor'
PUBLIC	?New@CRaceMotionData@@SAPAV1@XZ			; CRaceMotionData::New
PUBLIC	?Delete@CRaceMotionData@@SAXPAV1@@Z		; CRaceMotionData::Delete
PUBLIC	?CreateSystem@CRaceMotionData@@SAXI@Z		; CRaceMotionData::CreateSystem
PUBLIC	?DestroySystem@CRaceMotionData@@SAXXZ		; CRaceMotionData::DestroySystem
PUBLIC	??0CRaceMotionData@@QAE@XZ			; CRaceMotionData::CRaceMotionData
PUBLIC	??1CRaceMotionData@@UAE@XZ			; CRaceMotionData::~CRaceMotionData
PUBLIC	?Initialize@CRaceMotionData@@QAEXXZ		; CRaceMotionData::Initialize
PUBLIC	?Destroy@CRaceMotionData@@QAEXXZ		; CRaceMotionData::Destroy
PUBLIC	?SetName@CRaceMotionData@@QAEXI@Z		; CRaceMotionData::SetName
PUBLIC	?GetType@CRaceMotionData@@QBEIXZ		; CRaceMotionData::GetType
PUBLIC	?IsLock@CRaceMotionData@@QBE_NXZ		; CRaceMotionData::IsLock
PUBLIC	?GetLoopCount@CRaceMotionData@@QBEHXZ		; CRaceMotionData::GetLoopCount
PUBLIC	?GetMotionFileName@CRaceMotionData@@QBEPBDXZ	; CRaceMotionData::GetMotionFileName
PUBLIC	?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ ; CRaceMotionData::GetSoundScriptFileName
PUBLIC	?SetMotionDuration@CRaceMotionData@@QAEXM@Z	; CRaceMotionData::SetMotionDuration
PUBLIC	?GetMotionDuration@CRaceMotionData@@QAEMXZ	; CRaceMotionData::GetMotionDuration
PUBLIC	?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ; CRaceMotionData::SetAccumulationPosition
PUBLIC	?IsComboInputTimeData@CRaceMotionData@@QBEHXZ	; CRaceMotionData::IsComboInputTimeData
PUBLIC	?GetComboInputStartTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetComboInputStartTime
PUBLIC	?GetNextComboTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetNextComboTime
PUBLIC	?GetComboInputEndTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetComboInputEndTime
PUBLIC	?isAttackingMotion@CRaceMotionData@@QBEHXZ	; CRaceMotionData::isAttackingMotion
PUBLIC	?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ ; CRaceMotionData::GetMotionAttackDataPointer
PUBLIC	?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ ; CRaceMotionData::GetMotionAttackDataReference
PUBLIC	?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ	; CRaceMotionData::HasSplashMotionEvent
PUBLIC	?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ	; CRaceMotionData::IsCancelEnableSkill
PUBLIC	?IsLoopMotion@CRaceMotionData@@QBEHXZ		; CRaceMotionData::IsLoopMotion
PUBLIC	?GetLoopStartTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetLoopStartTime
PUBLIC	?GetLoopEndTime@CRaceMotionData@@QBEMXZ		; CRaceMotionData::GetLoopEndTime
PUBLIC	?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
PUBLIC	?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ; CRaceMotionData::GetMotionEventDataPointer
PUBLIC	?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z ; CRaceMotionData::GetMotionAttackingEventDataPointer
PUBLIC	?GetEventType@CRaceMotionData@@QBEHK@Z		; CRaceMotionData::GetEventType
PUBLIC	?GetEventStartTime@CRaceMotionData@@QBEMK@Z	; CRaceMotionData::GetEventStartTime
PUBLIC	?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ ; CRaceMotionData::GetSoundInstanceVectorPointer
PUBLIC	?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z	; CRaceMotionData::LoadMotionData
PUBLIC	?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ; CRaceMotionData::LoadSoundScriptData
PUBLIC	?SetType@CRaceMotionData@@IAEXI@Z		; CRaceMotionData::SetType
PUBLIC	?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
PUBLIC	??_GCRaceMotionData@@UAEPAXI@Z			; CRaceMotionData::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
PUBLIC	?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z ; CDynamicPool<CRaceMotionData>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
PUBLIC	??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
PUBLIC	??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@QAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Destroy_range<std::allocator<NMotionEvent::SMotionEventData *> >
PUBLIC	??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundInstance> >
PUBLIC	??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundData> >
PUBLIC	??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAXPAPAVCRaceMotionData@@QAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ; std::_Destroy_range<std::allocator<CRaceMotionData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >
PUBLIC	??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>
PUBLIC	??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
PUBLIC	??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Uninitialized_fill_n<std::allocator<NMotionEvent::SMotionEventData *> >
PUBLIC	??$_Uninitialized_move@PAPAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Uninitialized_move<NMotionEvent::SMotionEventData * *,std::allocator<NMotionEvent::SMotionEventData *> >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`vftable'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSCollisionData@NRaceData@@@8		; NRaceData::SCollisionData `RTTI Type Descriptor'
PUBLIC	??_R3SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SCollisionData@NRaceData@@8	; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A ; CSingleton<CFlyingManager>::ms_singleton
PUBLIC	??_7SMotionEventData@NMotionEvent@@6B@		; NMotionEvent::SMotionEventData::`vftable'
PUBLIC	??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`vftable'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0L@KJGFIEPL@duringtime@			; `string'
PUBLIC	??_C@_05PLIADJJL@power@				; `string'
PUBLIC	??_C@_0P@JIGGKKJB@affectingrange@		; `string'
PUBLIC	??_7SMotionEventDataEffect@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataEffect::`vftable'
PUBLIC	??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BA@MCOMBMGO@independentflag@		; `string'
PUBLIC	??_C@_0BA@HJAHPMOG@attachingenable@		; `string'
PUBLIC	??_C@_0BC@FCIOLNPK@attachingbonename@		; `string'
PUBLIC	??_C@_0P@MBGGNLC@effectfilename@		; `string'
PUBLIC	??_C@_0P@PMGDNJPL@effectposition@		; `string'
PUBLIC	??_C@_0BA@DEKLACIK@followingenable@		; `string'
PUBLIC	??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`vftable'
PUBLIC	??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BC@PGIDKNAJ@fishingeffectflag@		; `string'
PUBLIC	??_7SMotionEventDataFly@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataFly::`vftable'
PUBLIC	??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0M@BKDIDPMI@flyfilename@			; `string'
PUBLIC	??_C@_0M@OKENILIB@flyposition@			; `string'
PUBLIC	??_7SMotionEventDataAttack@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataAttack::`vftable'
PUBLIC	??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BB@NODGLCEN@enablehitprocess@		; `string'
PUBLIC	??_7SMotionEventDataSound@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataSound::`vftable'
PUBLIC	??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0O@POGBJFAA@soundfilename@		; `string'
PUBLIC	??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`vftable'
PUBLIC	??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`vftable'
PUBLIC	??_7SMotionEventDataWarp@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataWarp::`vftable'
PUBLIC	??_7SMotionEventDataUnk11@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk11::`vftable'
PUBLIC	??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@ ; `string'
PUBLIC	??_C@_0N@OGGCDFHA@basevelocity@			; `string'
PUBLIC	??_7SMotionEventDataUnk12@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk12::`vftable'
PUBLIC	?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A ; CRaceMotionData::ms_kPool
PUBLIC	??_7CRaceMotionData@@6B@			; CRaceMotionData::`vftable'
PUBLIC	??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@ ; `string'
PUBLIC	??_C@_0P@IGAOIDID@motionfilename@		; `string'
PUBLIC	??_C@_0P@CAAIIAIN@motionduration@		; `string'
PUBLIC	??_C@_0N@JBNPINGA@accumulation@			; `string'
PUBLIC	??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@ ; `string'
PUBLIC	??_C@_0P@BEGKENNC@comboinputdata@		; `string'
PUBLIC	??_C@_0N@IKJEINLI@preinputtime@			; `string'
PUBLIC	??_C@_0BA@OKILMLFK@directinputtime@		; `string'
PUBLIC	??_C@_0P@PPFBMGLB@inputlimittime@		; `string'
PUBLIC	??_C@_0O@NGMBMFEH@attackingdata@		; `string'
PUBLIC	??_C@_08BMIAMBLK@loopdata@			; `string'
PUBLIC	??_C@_0BA@HKGDAAAM@motionloopcount@		; `string'
PUBLIC	??_C@_0BB@LFNJMKIF@loopcancelenable@		; `string'
PUBLIC	??_C@_0O@FAMGINHI@loopstarttime@		; `string'
PUBLIC	??_C@_0M@HIAPALPD@loopendtime@			; `string'
PUBLIC	??_C@_0BA@LAEICHPP@motioneventdata@		; `string'
PUBLIC	??_C@_0BF@KNDELFNF@motioneventdatacount@	; `string'
PUBLIC	??_C@_05GFHEIIDD@event@				; `string'
PUBLIC	??_C@_0BA@CGGAKCNF@motioneventtype@		; `string'
PUBLIC	??_C@_0N@NHFBHOF@startingtime@			; `string'
PUBLIC	??_C@_04NMMFEKGF@?4mss@				; `string'
PUBLIC	??_C@_06PBLIODKG@sound?1@			; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4SMotionEventData@NMotionEvent@@6B@		; NMotionEvent::SMotionEventData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventData@NMotionEvent@@@8	; NMotionEvent::SMotionEventData `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventData@NMotionEvent@@8		; NMotionEvent::SMotionEventData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventData@NMotionEvent@@8		; NMotionEvent::SMotionEventData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8	; NMotionEvent::SMotionEventData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataScreenWaving `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataEffect@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataEffect::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataEffect `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataEffect@NMotionEvent@@8	; NMotionEvent::SMotionEventDataEffect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataEffect@NMotionEvent@@8	; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffectToTarget `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataFly@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataFly::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataFly@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataFly `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataFly@NMotionEvent@@8	; NMotionEvent::SMotionEventDataFly::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataFly@NMotionEvent@@8	; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataAttack@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataAttack::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataAttack `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataAttack@NMotionEvent@@8	; NMotionEvent::SMotionEventDataAttack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataAttack@NMotionEvent@@8	; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataSound@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataSound::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataSound@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataSound `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataSound@NMotionEvent@@8	; NMotionEvent::SMotionEventDataSound::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataSound@NMotionEvent@@8	; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterShow `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterHide `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataWarp@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataWarp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataWarp `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataWarp@NMotionEvent@@8	; NMotionEvent::SMotionEventDataWarp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataWarp@NMotionEvent@@8	; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataUnk11@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk11::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataUnk11 `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataUnk11@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk11::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataUnk11@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataUnk12@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk12::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataUnk12 `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataUnk12@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk12::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataUnk12@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRaceMotionData@@6B@			; CRaceMotionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaceMotionData@@@8			; CRaceMotionData `RTTI Type Descriptor'
PUBLIC	??_R3CRaceMotionData@@8				; CRaceMotionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaceMotionData@@8				; CRaceMotionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaceMotionData@@8		; CRaceMotionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ:PROC		; PrintfTabs
EXTRN	?Cache@CTextFileLoader@@SAPAV1@PBD@Z:PROC	; CTextFileLoader::Cache
EXTRN	?IsEmpty@CTextFileLoader@@QAE_NXZ:PROC		; CTextFileLoader::IsEmpty
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?GetChildNodeCount@CTextFileLoader@@QAEKXZ:PROC	; CTextFileLoader::GetChildNodeCount
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CTextFileLoader::GetCurrentNodeName
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	??_ESCollisionData@NRaceData@@UAEPAXI@Z:PROC	; NRaceData::SCollisionData::`vector deleting destructor'
EXTRN	?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z:PROC ; NRaceData::SaveAttackData
EXTRN	?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z:PROC ; NRaceData::SaveCollisionData
EXTRN	?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z:PROC ; NRaceData::LoadAttackData
EXTRN	?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z:PROC ; NRaceData::LoadMotionAttackData
EXTRN	?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z:PROC ; NRaceData::LoadCollisionData
EXTRN	?LoadSoundInformationPiece@NSound@@YA_NPBDAAV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@0@Z:PROC ; NSound::LoadSoundInformationPiece
EXTRN	?DataToInstance@NSound@@YAXABV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@PAV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@3@@Z:PROC ; NSound::DataToInstance
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	?RegisterFlyingData@CFlyingManager@@QAE_NPBD@Z:PROC ; CFlyingManager::RegisterFlyingData
EXTRN	??_ESMotionEventData@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventData::`vector deleting destructor'
EXTRN	??_ESMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataScreenWaving::`vector deleting destructor'
EXTRN	??_ESMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataEffect::`vector deleting destructor'
EXTRN	??_ESMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataEffectToTarget::`vector deleting destructor'
EXTRN	??_ESMotionEventDataFly@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataFly::`vector deleting destructor'
EXTRN	??_ESMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataAttack::`vector deleting destructor'
EXTRN	??_ESMotionEventDataSound@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataSound::`vector deleting destructor'
EXTRN	??_ESMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataCharacterShow::`vector deleting destructor'
EXTRN	??_ESMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataCharacterHide::`vector deleting destructor'
EXTRN	??_ESMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataWarp::`vector deleting destructor'
EXTRN	??_ESMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataUnk11::`vector deleting destructor'
EXTRN	??_ESMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataUnk12::`vector deleting destructor'
EXTRN	??_ECRaceMotionData@@UAEPAXI@Z:PROC		; CRaceMotionData::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	?g_fGameFPS@@3MA:DWORD				; g_fGameFPS
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A DD 01H DUP (?) ; CSingleton<CFlyingManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CRaceMotionData@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CRaceMotionData@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CRaceMotionData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaceMotionData@@8 DD FLAT:??_R0?AVCRaceMotionData@@@8 ; CRaceMotionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaceMotionData@@8
rdata$r	SEGMENT
??_R2CRaceMotionData@@8 DD FLAT:??_R1A@?0A@EA@CRaceMotionData@@8 ; CRaceMotionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaceMotionData@@8
rdata$r	SEGMENT
??_R3CRaceMotionData@@8 DD 00H				; CRaceMotionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaceMotionData@@@8
data$r	SEGMENT
??_R0?AVCRaceMotionData@@@8 DD FLAT:??_7type_info@@6B@	; CRaceMotionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaceMotionData@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRaceMotionData@@6B@
rdata$r	SEGMENT
??_R4CRaceMotionData@@6B@ DD 00H			; CRaceMotionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaceMotionData@@@8
	DD	FLAT:??_R3CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataUnk12@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataUnk12@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataUnk12::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataUnk12 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataUnk12@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataUnk12@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataUnk12@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataUnk12::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataUnk11@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataUnk11@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataUnk11::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataUnk11 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataUnk11@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataUnk11@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataUnk11@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataUnk11::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataWarp@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataWarp@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataWarp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataWarp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataWarp@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataWarp@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataWarp@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataWarp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataCharacterHide@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataCharacterHide@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataCharacterHide@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataCharacterShow@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataCharacterShow@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataCharacterShow@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataSound@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataSound@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataSound@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataSound::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataSound@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataSound@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataSound `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataSound@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataSound@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataSound@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataSound::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataSound@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataAttack@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataAttack@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataAttack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataAttack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataAttack@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataAttack@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataAttack@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataAttack::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataFly@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataFly@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataFly@NMotionEvent@@8 DD 00H		; NMotionEvent::SMotionEventDataFly::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataFly@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataFly@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataFly `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataFly@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataFly@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataFly@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataFly::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataFly@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataEffectToTarget@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataEffect@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataEffect@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataEffect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataEffect@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataEffect@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataEffect@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataScreenWaving@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataScreenWaving@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataScreenWaving@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventData@NMotionEvent@@@8 ; NMotionEvent::SMotionEventData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventData@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8 ; NMotionEvent::SMotionEventData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventData@NMotionEvent@@8 DD 00H		; NMotionEvent::SMotionEventData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventData@NMotionEvent@@@8
data$r	SEGMENT
??_R0?AUSMotionEventData@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventData@NMotionEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4SMotionEventData@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventData@NMotionEvent@@6B@ DD 00H		; NMotionEvent::SMotionEventData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventData@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06PBLIODKG@sound?1@
CONST	SEGMENT
??_C@_06PBLIODKG@sound?1@ DB 'sound/', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NMMFEKGF@?4mss@
CONST	SEGMENT
??_C@_04NMMFEKGF@?4mss@ DB '.mss', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NHFBHOF@startingtime@
CONST	SEGMENT
??_C@_0N@NHFBHOF@startingtime@ DB 'startingtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGGAKCNF@motioneventtype@
CONST	SEGMENT
??_C@_0BA@CGGAKCNF@motioneventtype@ DB 'motioneventtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFHEIIDD@event@
CONST	SEGMENT
??_C@_05GFHEIIDD@event@ DB 'event', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNDELFNF@motioneventdatacount@
CONST	SEGMENT
??_C@_0BF@KNDELFNF@motioneventdatacount@ DB 'motioneventdatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAEICHPP@motioneventdata@
CONST	SEGMENT
??_C@_0BA@LAEICHPP@motioneventdata@ DB 'motioneventdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIAPALPD@loopendtime@
CONST	SEGMENT
??_C@_0M@HIAPALPD@loopendtime@ DB 'loopendtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAMGINHI@loopstarttime@
CONST	SEGMENT
??_C@_0O@FAMGINHI@loopstarttime@ DB 'loopstarttime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LFNJMKIF@loopcancelenable@
CONST	SEGMENT
??_C@_0BB@LFNJMKIF@loopcancelenable@ DB 'loopcancelenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HKGDAAAM@motionloopcount@
CONST	SEGMENT
??_C@_0BA@HKGDAAAM@motionloopcount@ DB 'motionloopcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BMIAMBLK@loopdata@
CONST	SEGMENT
??_C@_08BMIAMBLK@loopdata@ DB 'loopdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NGMBMFEH@attackingdata@
CONST	SEGMENT
??_C@_0O@NGMBMFEH@attackingdata@ DB 'attackingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PPFBMGLB@inputlimittime@
CONST	SEGMENT
??_C@_0P@PPFBMGLB@inputlimittime@ DB 'inputlimittime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKILMLFK@directinputtime@
CONST	SEGMENT
??_C@_0BA@OKILMLFK@directinputtime@ DB 'directinputtime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IKJEINLI@preinputtime@
CONST	SEGMENT
??_C@_0N@IKJEINLI@preinputtime@ DB 'preinputtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BEGKENNC@comboinputdata@
CONST	SEGMENT
??_C@_0P@BEGKENNC@comboinputdata@ DB 'comboinputdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@
CONST	SEGMENT
??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@ DB 'CRaceMotioNData'
	DB	'::LoadMotionData : syntax error on accumulation, vector size '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBNPINGA@accumulation@
CONST	SEGMENT
??_C@_0N@JBNPINGA@accumulation@ DB 'accumulation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAAIIAIN@motionduration@
CONST	SEGMENT
??_C@_0P@CAAIIAIN@motionduration@ DB 'motionduration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGAOIDID@motionfilename@
CONST	SEGMENT
??_C@_0P@IGAOIDID@motionfilename@ DB 'motionfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@
CONST	SEGMENT
??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@ DB 'CRaceMotionD'
	DB	'ata::SetName - UNKNOWN NAME %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CRaceMotionData@@6B@
CONST	SEGMENT
??_7CRaceMotionData@@6B@ DD FLAT:??_R4CRaceMotionData@@6B@ ; CRaceMotionData::`vftable'
	DD	FLAT:??_ECRaceMotionData@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A DD FLAT:??_7?$CDynamicPool@VCRaceMotionData@@@@6B@ ; CRaceMotionData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SMotionEventDataUnk12@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataUnk12@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataUnk12@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataUnk12::`vftable'
	DD	FLAT:??_ESMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0N@OGGCDFHA@basevelocity@
CONST	SEGMENT
??_C@_0N@OGGCDFHA@basevelocity@ DB 'basevelocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@
CONST	SEGMENT
??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@ DB 'BaseV'
	DB	'elocity        "%d"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataUnk11@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataUnk11@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataUnk11@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataUnk11::`vftable'
	DD	FLAT:??_ESMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataWarp@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataWarp@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataWarp@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataWarp::`vftable'
	DD	FLAT:??_ESMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`vftable'
	DD	FLAT:??_ESMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`vftable'
	DD	FLAT:??_ESMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@POGBJFAA@soundfilename@
CONST	SEGMENT
??_C@_0O@POGBJFAA@soundfilename@ DB 'soundfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Soun'
	DB	'dFileName        "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataSound@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataSound@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataSound@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataSound::`vftable'
	DD	FLAT:??_ESMotionEventDataSound@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BB@NODGLCEN@enablehitprocess@
CONST	SEGMENT
??_C@_0BB@NODGLCEN@enablehitprocess@ DB 'enablehitprocess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@ DB 'EnableHitProces'
	DB	's     %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataAttack@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataAttack@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataAttack@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataAttack::`vftable'
	DD	FLAT:??_ESMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0M@OKENILIB@flyposition@
CONST	SEGMENT
??_C@_0M@OKENILIB@flyposition@ DB 'flyposition', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKDIDPMI@flyfilename@
CONST	SEGMENT
??_C@_0M@BKDIDPMI@flyfilename@ DB 'flyfilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'Fly'
	DB	'Position       %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'FlyFileN'
	DB	'ame       "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataFly@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataFly@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataFly@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataFly::`vftable'
	DD	FLAT:??_ESMotionEventDataFly@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BC@PGIDKNAJ@fishingeffectflag@
CONST	SEGMENT
??_C@_0BC@PGIDKNAJ@fishingeffectflag@ DB 'fishingeffectflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@ DB 'FishingEffectFla'
	DB	'g    %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`vftable'
	DD	FLAT:??_ESMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@DEKLACIK@followingenable@
CONST	SEGMENT
??_C@_0BA@DEKLACIK@followingenable@ DB 'followingenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMGDNJPL@effectposition@
CONST	SEGMENT
??_C@_0P@PMGDNJPL@effectposition@ DB 'effectposition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBGGNLC@effectfilename@
CONST	SEGMENT
??_C@_0P@MBGGNLC@effectfilename@ DB 'effectfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCIOLNPK@attachingbonename@
CONST	SEGMENT
??_C@_0BC@FCIOLNPK@attachingbonename@ DB 'attachingbonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HJAHPMOG@attachingenable@
CONST	SEGMENT
??_C@_0BA@HJAHPMOG@attachingenable@ DB 'attachingenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCOMBMGO@independentflag@
CONST	SEGMENT
??_C@_0BA@MCOMBMGO@independentflag@ DB 'independentflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectPosition       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Effec'
	DB	'tFileName       "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@ DB 'FollowingEnabl'
	DB	'e      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Attachin'
	DB	'gBoneName    "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@ DB 'AttachingEnabl'
	DB	'e      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@ DB 'IndependentFla'
	DB	'g      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataEffect@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataEffect@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataEffect@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffect::`vftable'
	DD	FLAT:??_ESMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0P@JIGGKKJB@affectingrange@
CONST	SEGMENT
??_C@_0P@JIGGKKJB@affectingrange@ DB 'affectingrange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLIADJJL@power@
CONST	SEGMENT
??_C@_05PLIADJJL@power@ DB 'power', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KJGFIEPL@duringtime@
CONST	SEGMENT
??_C@_0L@KJGFIEPL@duringtime@ DB 'duringtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@ DB 'AffectingRang'
	DB	'e       %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Powe'
	DB	'r                %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'DuringTim'
	DB	'e           %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`vftable'
	DD	FLAT:??_ESMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventData@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventData@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventData@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventData::`vftable'
	DD	FLAT:??_ESMotionEventData@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SCollisionData@NRaceData@@8 DD FLAT:??_R0?AUSCollisionData@NRaceData@@@8 ; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R2SCollisionData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SCollisionData@NRaceData@@8 ; NRaceData::SCollisionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R3SCollisionData@NRaceData@@8 DD 00H			; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSCollisionData@NRaceData@@@8
data$r	SEGMENT
??_R0?AUSCollisionData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SCollisionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSCollisionData@NRaceData@@', 00H
data$r	ENDS
;	COMDAT ??_R4SCollisionData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SCollisionData@NRaceData@@6B@ DD 00H		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSCollisionData@NRaceData@@@8
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7SCollisionData@NRaceData@@6B@
CONST	SEGMENT
??_7SCollisionData@NRaceData@@6B@ DD FLAT:??_R4SCollisionData@NRaceData@@6B@ ; NRaceData::SCollisionData::`vftable'
	DD	FLAT:??_ESCollisionData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z$0
__ehfuncinfo$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z DD 019930522H
	DD	01dH
	DD	FLAT:__unwindtable$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$5
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$6
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$7
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$9
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$10
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$11
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$12
	DD	03H
	DD	FLAT:___std_terminate
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$13
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$14
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$26
	DD	03H
	DD	FLAT:___std_terminate
	DD	03H
	DD	FLAT:___std_terminate
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$27
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
__ehfuncinfo$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
__ehfuncinfo$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
__ehfuncinfo$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
__ehfuncinfo$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
__ehfuncinfo$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
__ehfuncinfo$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z PROC ; std::_Uninitialized_move<NMotionEvent::SMotionEventData * *,std::allocator<NMotionEvent::SMotionEventData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ENDP ; std::_Uninitialized_move<NMotionEvent::SMotionEventData * *,std::allocator<NMotionEvent::SMotionEventData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::allocator<NMotionEvent::SMotionEventData *> >, COMDAT

; 1712 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, const typename _Alloc::value_type& _Val, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1713 :     // copy _Count copies of _Val to raw _First, using _Al
; 1714 :     using _Ty = typename _Alloc::value_type;
; 1715 :     if constexpr (_Fill_memset_is_safe<_Ty*, _Ty> && _Uses_default_construct<_Alloc, _Ty*, _Ty>::value) {
; 1716 :         _CSTD memset(_Unfancy(_First), static_cast<unsigned char>(_Val), static_cast<size_t>(_Count));
; 1717 :         return _First + _Count;
; 1718 :     } else {
; 1719 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1720 :         for (; 0 < _Count; --_Count) {

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 1713 :     // copy _Count copies of _Val to raw _First, using _Al
; 1714 :     using _Ty = typename _Alloc::value_type;
; 1715 :     if constexpr (_Fill_memset_is_safe<_Ty*, _Ty> && _Uses_default_construct<_Alloc, _Ty*, _Ty>::value) {
; 1716 :         _CSTD memset(_Unfancy(_First), static_cast<unsigned char>(_Val), static_cast<size_t>(_Count));
; 1717 :         return _First + _Count;
; 1718 :     } else {
; 1719 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1720 :         for (; 0 < _Count; --_Count) {

  00009	85 d2		 test	 edx, edx
  0000b	74 11		 je	 SHORT $LN3@Uninitiali
  0000d	56		 push	 esi
  0000e	8b 75 10	 mov	 esi, DWORD PTR __Val$[ebp]
$LL4@Uninitiali:

; 1508 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 1509 :         ++_Last;

  00015	83 c0 04	 add	 eax, 4

; 1713 :     // copy _Count copies of _Val to raw _First, using _Al
; 1714 :     using _Ty = typename _Alloc::value_type;
; 1715 :     if constexpr (_Fill_memset_is_safe<_Ty*, _Ty> && _Uses_default_construct<_Alloc, _Ty*, _Ty>::value) {
; 1716 :         _CSTD memset(_Unfancy(_First), static_cast<unsigned char>(_Val), static_cast<size_t>(_Count));
; 1717 :         return _First + _Count;
; 1718 :     } else {
; 1719 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1720 :         for (; 0 < _Count; --_Count) {

  00018	83 ea 01	 sub	 edx, 1
  0001b	75 f4		 jne	 SHORT $LL4@Uninitiali

; 1721 :             _Backout._Emplace_back(_Val);
; 1722 :         }
; 1723 : 
; 1724 :         return _Backout._Release();

  0001d	5e		 pop	 esi
$LN3@Uninitiali:

; 1725 :     }
; 1726 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::allocator<NMotionEvent::SMotionEventData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z
_TEXT	SEGMENT
tv345 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z PROC ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 95 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6d		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv345[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1578 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  00055	56		 push	 esi
  00056	ff 75 0c	 push	 DWORD PTR __Val$[ebp]

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00059	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005b	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005e	2b cb		 sub	 ecx, ebx

; 1578 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  00060	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00061	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1578 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Uninitialized_fill_n<std::allocator<NMotionEvent::SMotionEventData *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0006a	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006d	56		 push	 esi
  0006e	53		 push	 ebx
  0006f	ff 76 04	 push	 DWORD PTR [esi+4]
  00072	ff 36		 push	 DWORD PTR [esi]
  00074	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Uninitialized_move<NMotionEvent::SMotionEventData * *,std::allocator<NMotionEvent::SMotionEventData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00079	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0007b	83 c4 24	 add	 esp, 36			; 00000024H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007e	85 c9		 test	 ecx, ecx
  00080	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00082	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00085	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	83 e0 fc	 and	 eax, -4			; fffffffcH
  0008a	50		 push	 eax
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00091	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00094	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00097	89 1e		 mov	 DWORD PTR [esi], ebx
  00099	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  0009c	8b 45 fc	 mov	 eax, DWORD PTR tv345[ebp]
  0009f	03 c3		 add	 eax, ebx
  000a1	5f		 pop	 edi
  000a2	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx

; 1208 :     }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000ad	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000b2	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b7	cc		 int	 3
??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ENDP ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z PROC ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ENDP ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAXPAPAVCRaceMotionData@@QAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAXPAPAVCRaceMotionData@@QAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CRaceMotionData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAXPAPAVCRaceMotionData@@QAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CRaceMotionData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000b	3b f3		 cmp	 esi, ebx
  0000d	74 70		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 24	 add	 esi, 36			; 00000024H
  00012	57		 push	 edi
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00018	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0001c	75 24		 jne	 SHORT $LN55@Destroy_ra
  0001e	66 90		 npad	 2
$LL22@Destroy_ra:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00020	ff 77 08	 push	 DWORD PTR [edi+8]
  00023	8b ce		 mov	 ecx, esi
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0002b	8b c7		 mov	 eax, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0002d	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0002f	6a 30		 push	 48			; 00000030H
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00037	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0003a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0003e	74 e0		 je	 SHORT $LL22@Destroy_ra
  00040	8b 06		 mov	 eax, DWORD PTR [esi]
$LN55@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00042	6a 30		 push	 48			; 00000030H
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0004a	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00050	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00053	72 0d		 jb	 SHORT $LN41@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00055	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00056	50		 push	 eax
  00057	ff 76 e8	 push	 DWORD PTR [esi-24]
  0005a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005f	83 c4 08	 add	 esp, 8
$LN41@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00062	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00069	c7 46 fc 0f 00
	00 00		 mov	 DWORD PTR [esi-4], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00070	c6 46 e8 00	 mov	 BYTE PTR [esi-24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00074	83 c6 2c	 add	 esi, 44			; 0000002cH
  00077	8d 46 dc	 lea	 eax, DWORD PTR [esi-36]
  0007a	3b c3		 cmp	 eax, ebx
  0007c	75 95		 jne	 SHORT $LL4@Destroy_ra
  0007e	5f		 pop	 edi
$LN3@Destroy_ra:
  0007f	5e		 pop	 esi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00080	5b		 pop	 ebx
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NSound::SSoundData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 18	 add	 esi, 24			; 00000018H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 1c	 add	 esi, 28			; 0000001cH
  0003a	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NSound::SSoundData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NSound::SSoundInstance> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 18	 add	 esi, 24			; 00000018H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 1c	 add	 esi, 28			; 0000001cH
  0003a	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NSound::SSoundInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@QAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@QAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NMotionEvent::SMotionEventData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@QAPAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NMotionEvent::SMotionEventData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ PROC ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 4d		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	03 d1		 add	 edx, ecx
  00021	c1 fa 04	 sar	 edx, 4
  00024	8b ca		 mov	 ecx, edx
  00026	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00029	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00032	2b c1		 sub	 eax, ecx
  00034	c1 e0 02	 shl	 eax, 2
  00037	50		 push	 eax
  00038	ff 37		 push	 DWORD PTR [edi]
  0003a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00048	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0004f	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  00056	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00057	c3		 ret	 0
??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ENDP ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
;	COMDAT ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z
_TEXT	SEGMENT
_container$ = 8						; size = 4
??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z PROC ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00005	8b 7d 08	 mov	 edi, DWORD PTR _container$[ebp]
  00008	8b 37		 mov	 esi, DWORD PTR [edi]
  0000a	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  0000d	74 24		 je	 SHORT $LN32@stl_wipe
  0000f	90		 npad	 1
$LL4@stl_wipe:

; 96   : 	{
; 97   : 		delete *i;

  00010	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00012	85 c9		 test	 ecx, ecx
  00014	74 06		 je	 SHORT $LN6@stl_wipe
  00016	8b 01		 mov	 eax, DWORD PTR [ecx]
  00018	6a 01		 push	 1
  0001a	ff 10		 call	 DWORD PTR [eax]
$LN6@stl_wipe:

; 98   : 		*i = NULL;

  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00022	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00025	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00028	75 e6		 jne	 SHORT $LL4@stl_wipe

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  0002a	8b 07		 mov	 eax, DWORD PTR [edi]
  0002c	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0002f	5f		 pop	 edi

; 102  : }

  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN32@stl_wipe:

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  00033	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00036	5f		 pop	 edi

; 102  : }

  00037	5e		 pop	 esi
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ENDP ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A ; CRaceMotionData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CRaceMotionData::ms_kPool'', COMDAT

; 7    : CDynamicPool<CRaceMotionData> CRaceMotionData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CRaceMotionData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z PROC	; CDynamicPool<CRaceMotionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z ENDP	; CDynamicPool<CRaceMotionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@YAPAPAVCRaceMotionData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCRaceMotionData@@@0@@Z ; std::_Uninitialized_move<CRaceMotionData * *,std::allocator<CRaceMotionData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z PROC ; CDynamicPool<CRaceMotionData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z ENDP ; CDynamicPool<CRaceMotionData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ PROC	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCRaceMotionData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ENDP	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRaceMotionData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRaceMotionData@@UAEPAXI@Z PROC			; CRaceMotionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRaceMotionData@@UAE@XZ ; CRaceMotionData::~CRaceMotionData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c0 00 00 00	 push	 192			; 000000c0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRaceMotionData@@UAEPAXI@Z ENDP			; CRaceMotionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ PROC ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ENDP ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetType@CRaceMotionData@@IAEXI@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?SetType@CRaceMotionData@@IAEXI@Z PROC			; CRaceMotionData::SetType, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	m_eType=eType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 156  : 
; 157  : 	switch (m_eType)

  00009	83 f8 03	 cmp	 eax, 3
  0000c	72 15		 jb	 SHORT $LN5@SetType
  0000e	83 f8 04	 cmp	 eax, 4
  00011	76 05		 jbe	 SHORT $LN4@SetType
  00013	83 f8 08	 cmp	 eax, 8
  00016	75 0b		 jne	 SHORT $LN5@SetType
$LN4@SetType:

; 158  : 	{
; 159  : 		case TYPE_ATTACK:
; 160  : 		case TYPE_COMBO:
; 161  : 		case TYPE_SKILL:
; 162  : 			m_isLock=TRUE;
; 163  : 			break;
; 164  : 		default:
; 165  : 			m_isLock=FALSE;
; 166  : 			break;
; 167  : 	}
; 168  : }

  00018	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN5@SetType:
  00023	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetType@CRaceMotionData@@IAEXI@Z ENDP			; CRaceMotionData::SetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
_TEXT	SEGMENT
_SoundDataVector$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z PROC	; CRaceMotionData::LoadSoundScriptData, COMDAT
; _this$ = ecx

; 576  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00029	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp], 0
  00030	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp+4], 0
  00037	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 578  : 	if (!NSound::LoadSoundInformationPiece(c_szFileName, SoundDataVector))

  0003e	6a 00		 push	 0
  00040	8d 45 e8	 lea	 eax, DWORD PTR _SoundDataVector$[ebp]
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	50		 push	 eax
  0004b	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0004e	e8 00 00 00 00	 call	 ?LoadSoundInformationPiece@NSound@@YA_NPBDAAV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@0@Z ; NSound::LoadSoundInformationPiece
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH
  00056	84 c0		 test	 al, al
  00058	75 04		 jne	 SHORT $LN2@LoadSoundS
  0005a	32 db		 xor	 bl, bl
  0005c	eb 15		 jmp	 SHORT $LN5@LoadSoundS
$LN2@LoadSoundS:

; 579  : 	{
; 580  : 		return false;
; 581  : 	}
; 582  : 
; 583  : 	NSound::DataToInstance(SoundDataVector, &m_SoundInstanceVector);

  0005e	8d 86 b0 00 00
	00		 lea	 eax, DWORD PTR [esi+176]
  00064	50		 push	 eax
  00065	8d 45 e8	 lea	 eax, DWORD PTR _SoundDataVector$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?DataToInstance@NSound@@YAXABV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@PAV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@3@@Z ; NSound::DataToInstance
  0006e	83 c4 08	 add	 esp, 8

; 584  : 	return true;

  00071	b3 01		 mov	 bl, 1
$LN5@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00073	8b 45 e8	 mov	 eax, DWORD PTR _SoundDataVector$[ebp]
  00076	85 c0		 test	 eax, eax
  00078	74 3e		 je	 SHORT $LN30@LoadSoundS

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0007a	8d 4d e8	 lea	 ecx, DWORD PTR _SoundDataVector$[ebp]
  0007d	51		 push	 ecx
  0007e	ff 75 ec	 push	 DWORD PTR _SoundDataVector$[ebp+4]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USSoundData@NSound@@@std@@@std@@YAXPAUSSoundData@NSound@@QAU12@AAV?$allocator@USSoundData@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	8b 4d f0	 mov	 ecx, DWORD PTR _SoundDataVector$[ebp+8]
  0008a	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0008f	2b 4d e8	 sub	 ecx, DWORD PTR _SoundDataVector$[ebp]
  00092	f7 e9		 imul	 ecx
  00094	03 d1		 add	 edx, ecx
  00096	c1 fa 04	 sar	 edx, 4
  00099	8b f2		 mov	 esi, edx
  0009b	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0009e	03 f2		 add	 esi, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a0	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  000a7	2b ce		 sub	 ecx, esi
  000a9	c1 e1 02	 shl	 ecx, 2
  000ac	51		 push	 ecx
  000ad	ff 75 e8	 push	 DWORD PTR _SoundDataVector$[ebp]
  000b0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b5	83 c4 14	 add	 esp, 20			; 00000014H
$LN30@LoadSoundS:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 585  : }

  000b8	8a c3		 mov	 al, bl
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _SoundDataVector$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ENDP	; CRaceMotionData::LoadSoundScriptData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
_TEXT	SEGMENT
_GotoChild$2 = -148					; size = 4
$T3 = -144						; size = 16
_pos$4 = -140						; size = 12
_dwMotionEventDataCount$5 = -128			; size = 4
_c_szFileName$GSCopy$1$ = -124				; size = 4
__New_array$6 = -124					; size = 4
_c_fFrameTime$1$ = -120					; size = 4
__Result$2$ = -120					; size = 4
_pTokenVector$ = -116					; size = 4
_fy$ = -112						; size = 4
_iType$7 = -112						; size = 4
__Right_size$1$ = -108					; size = 4
_i$1$ = -108						; size = 4
_fx$ = -108						; size = 4
_this$GSCopy$1$ = -104					; size = 4
tv7723 = -100						; size = 4
$T8 = -100						; size = 4
$T9 = -100						; size = 4
$T10 = -100						; size = 4
$T11 = -100						; size = 4
$T12 = -100						; size = 4
$T13 = -100						; size = 4
$T14 = -100						; size = 4
$T15 = -100						; size = 4
$T16 = -100						; size = 4
$T17 = -100						; size = 4
$T18 = -100						; size = 4
__Result$1$ = -96					; size = 4
_j$1$ = -96						; size = 4
__New_ptr$19 = -96					; size = 4
__New_ptr$20 = -96					; size = 4
_fz$ = -96						; size = 4
$T21 = -96						; size = 4
$T22 = -89						; size = 1
$T23 = -89						; size = 1
$T24 = -89						; size = 1
$T25 = -89						; size = 1
$T26 = -89						; size = 1
$T27 = -89						; size = 1
$T28 = -89						; size = 1
$T29 = -89						; size = 1
$T30 = -89						; size = 1
$T31 = -89						; size = 1
$T32 = -89						; size = 1
$T33 = -89						; size = 1
$T34 = -89						; size = 1
_strSoundFileNameTemp$ = -88				; size = 24
_strNodeName$ = -64					; size = 24
$T35 = -40						; size = 24
$T36 = -40						; size = 24
$T37 = -40						; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z PROC	; CRaceMotionData::LoadMotionData, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 75 98	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi

; 324  : 	const float c_fFrameTime = 1.0f / g_fGameFPS;

  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0003a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?g_fGameFPS@@3MA
  00042	8b 45 08	 mov	 eax, DWORD PTR _c_szFileName$[ebp]

; 325  : 
; 326  : 	CTextFileLoader* pkTextFileLoader=CTextFileLoader::Cache(c_szFileName);

  00045	50		 push	 eax
  00046	89 45 84	 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], eax
  00049	f3 0f 11 45 88	 movss	 DWORD PTR _c_fFrameTime$1$[ebp], xmm0
  0004e	e8 00 00 00 00	 call	 ?Cache@CTextFileLoader@@SAPAV1@PBD@Z ; CTextFileLoader::Cache
  00053	8b f8		 mov	 edi, eax
  00055	83 c4 04	 add	 esp, 4

; 327  : 	if (!pkTextFileLoader)

  00058	85 ff		 test	 edi, edi
  0005a	0f 84 8b 01 00
	00		 je	 $LN1378@LoadMotion

; 328  : 		return false;
; 329  : 
; 330  : 	CTextFileLoader& rkTextFileLoader=*pkTextFileLoader;
; 331  : 
; 332  : 	if (rkTextFileLoader.IsEmpty())

  00060	8b cf		 mov	 ecx, edi
  00062	e8 00 00 00 00	 call	 ?IsEmpty@CTextFileLoader@@QAE_NXZ ; CTextFileLoader::IsEmpty
  00067	84 c0		 test	 al, al
  00069	0f 85 7c 01 00
	00		 jne	 $LN1378@LoadMotion

; 333  : 		return false;
; 334  : 
; 335  : 	rkTextFileLoader.SetTop();

  0006f	8b cf		 mov	 ecx, edi
  00071	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00076	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@IGAOIDID@motionfilename@+8
  0007b	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@IGAOIDID@motionfilename@
  00083	89 45 e0	 mov	 DWORD PTR $T49[ebp+8], eax
  00086	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@IGAOIDID@motionfilename@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0008c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T49[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00093	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T49[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0009a	66 0f d6 45 d8	 movq	 QWORD PTR $T49[ebp], xmm0
  0009f	66 89 45 e4	 mov	 WORD PTR $T49[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000a3	c6 45 e6 00	 mov	 BYTE PTR $T49[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  000a7	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000aa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b1	50		 push	 eax
  000b2	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  000b5	8b cf		 mov	 ecx, edi
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  000bd	85 c0		 test	 eax, eax
  000bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000c6	8b 45 ec	 mov	 eax, DWORD PTR $T49[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  000c9	0f 94 45 a7	 sete	 BYTE PTR $T34[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cd	83 f8 10	 cmp	 eax, 16			; 00000010H
  000d0	72 0d		 jb	 SHORT $LN161@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000d2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d3	50		 push	 eax
  000d4	ff 75 d8	 push	 DWORD PTR $T49[ebp]
  000d7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000dc	83 c4 08	 add	 esp, 8
$LN161@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  000df	80 7d a7 00	 cmp	 BYTE PTR $T34[ebp], 0
  000e3	0f 85 02 01 00
	00		 jne	 $LN1378@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000e9	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@CAAIIAIN@motionduration@+8
  000ee	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@CAAIIAIN@motionduration@
  000f6	89 45 e0	 mov	 DWORD PTR $T48[ebp+8], eax
  000f9	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@CAAIIAIN@motionduration@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ff	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T48[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00106	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T48[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0010d	66 0f d6 45 d8	 movq	 QWORD PTR $T48[ebp], xmm0
  00112	66 89 45 e4	 mov	 WORD PTR $T48[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00116	c6 45 e6 00	 mov	 BYTE PTR $T48[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  0011a	8d 46 44	 lea	 eax, DWORD PTR [esi+68]
  0011d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00124	50		 push	 eax
  00125	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  00128	8b cf		 mov	 ecx, edi
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00130	85 c0		 test	 eax, eax
  00132	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00139	8b 45 ec	 mov	 eax, DWORD PTR $T48[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  0013c	0f 94 45 a7	 sete	 BYTE PTR $T33[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00140	83 f8 10	 cmp	 eax, 16			; 00000010H
  00143	72 0d		 jb	 SHORT $LN217@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00145	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00146	50		 push	 eax
  00147	ff 75 d8	 push	 DWORD PTR $T48[ebp]
  0014a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0014f	83 c4 08	 add	 esp, 8
$LN217@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  00152	80 7d a7 00	 cmp	 BYTE PTR $T33[ebp], 0
  00156	0f 85 8f 00 00
	00		 jne	 $LN1378@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0015c	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@JBNPINGA@accumulation@
  00164	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@JBNPINGA@accumulation@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00169	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00170	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 12 ; 0000000cH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00177	66 0f d6 45 d8	 movq	 QWORD PTR $T47[ebp], xmm0
  0017c	89 45 e0	 mov	 DWORD PTR $T47[ebp+8], eax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0017f	c6 45 e4 00	 mov	 BYTE PTR $T47[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  00183	8d 45 8c	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00186	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0018d	50		 push	 eax
  0018e	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00191	8b cf		 mov	 ecx, edi
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00199	8b 4d ec	 mov	 ecx, DWORD PTR $T47[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  0019c	8b f0		 mov	 esi, eax
  0019e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001a5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  001a8	72 0d		 jb	 SHORT $LN273@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001aa	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ab	51		 push	 ecx
  001ac	ff 75 d8	 push	 DWORD PTR $T47[ebp]
  001af	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001b4	83 c4 08	 add	 esp, 8
$LN273@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  001b7	85 f6		 test	 esi, esi
  001b9	0f 84 de 00 00
	00		 je	 $LN14@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001bf	8b 75 8c	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  001c2	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  001ca	2b 0e		 sub	 ecx, DWORD PTR [esi]
  001cc	f7 e9		 imul	 ecx
  001ce	c1 fa 02	 sar	 edx, 2
  001d1	8b c2		 mov	 eax, edx
  001d3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001d6	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 347  : 		if (pTokenVector->size() != 3)

  001d8	83 f8 03	 cmp	 eax, 3
  001db	74 2d		 je	 SHORT $LN15@LoadMotion

; 348  : 		{
; 349  : 			TraceError("CRaceMotioNData::LoadMotionData : syntax error on accumulation, vector size %d", pTokenVector->size());

  001dd	50		 push	 eax
  001de	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@
  001e3	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  001e8	83 c4 08	 add	 esp, 8
$LN1378@LoadMotion:

; 493  : }

  001eb	32 c0		 xor	 al, al
$LN1@LoadMotion:
  001ed	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f7	59		 pop	 ecx
  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fd	33 cd		 xor	 ecx, ebp
  001ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c2 04 00	 ret	 4
$LN15@LoadMotion:

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  0020a	6a 02		 push	 2
  0020c	8b ce		 mov	 ecx, esi
  0020e	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00213	8b f0		 mov	 esi, eax

; 2145 :         if (_Large_string_engaged()) {

  00215	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00219	72 02		 jb	 SHORT $LN286@LoadMotion

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0021b	8b 36		 mov	 esi, DWORD PTR [esi]
$LN286@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  0021d	8b 4d 8c	 mov	 ecx, DWORD PTR _pTokenVector$[ebp]
  00220	6a 01		 push	 1
  00222	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00227	89 45 a0	 mov	 DWORD PTR __Result$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  0022a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0022e	72 05		 jb	 SHORT $LN293@LoadMotion

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00230	8b 00		 mov	 eax, DWORD PTR [eax]
  00232	89 45 a0	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN293@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  00235	8b 4d 8c	 mov	 ecx, DWORD PTR _pTokenVector$[ebp]
  00238	6a 00		 push	 0
  0023a	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0023f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00243	72 02		 jb	 SHORT $LN300@LoadMotion

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00245	8b 00		 mov	 eax, DWORD PTR [eax]
$LN300@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  00247	50		 push	 eax
  00248	e8 00 00 00 00	 call	 _atof
  0024d	ff 75 a0	 push	 DWORD PTR __Result$1$[ebp]
  00250	d9 5d 94	 fstp	 DWORD PTR _fx$[ebp]
  00253	e8 00 00 00 00	 call	 _atof
  00258	d9 5d 90	 fstp	 DWORD PTR _fy$[ebp]
  0025b	56		 push	 esi
  0025c	e8 00 00 00 00	 call	 _atof
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00261	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fx$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  00266	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _pos$4[ebp]
  0026c	8b 4d 98	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0026f	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00272	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp], xmm0

; 181  :     y = fy;

  0027a	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _fy$[ebp]
  0027f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  00287	d9 5d a0	 fstp	 DWORD PTR _fz$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0028a	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fz$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  0028f	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00290	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  00298	e8 00 00 00 00	 call	 ?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ; CRaceMotionData::SetAccumulationPosition
$LN14@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0029d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002a4	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strNodeName$[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002ab	c6 45 c0 00	 mov	 BYTE PTR _strNodeName$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 361  : 	for (DWORD i = 0; i < rkTextFileLoader.GetChildNodeCount(); ++i)

  002af	33 f6		 xor	 esi, esi
  002b1	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  002b8	8b cf		 mov	 ecx, edi
  002ba	89 75 94	 mov	 DWORD PTR _i$1$[ebp], esi
  002bd	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  002c2	85 c0		 test	 eax, eax
  002c4	0f 84 c8 0a 00
	00		 je	 $LN1379@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 49   : 			CGotoChild(CTextFileLoader * pOwner, DWORD dwIndex) : m_pOwner(pOwner)

  002ca	89 bd 6c ff ff
	ff		 mov	 DWORD PTR _GotoChild$2[ebp], edi
$LL4@LoadMotion:

; 50   : 			{
; 51   : 				m_pOwner->SetChildNode(dwIndex);

  002d0	56		 push	 esi
  002d1	8b cf		 mov	 ecx, edi
  002d3	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 365  : 		rkTextFileLoader.GetCurrentNodeName(&strNodeName);

  002d8	8d 45 c0	 lea	 eax, DWORD PTR _strNodeName$[ebp]
  002db	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  002df	50		 push	 eax
  002e0	8b cf		 mov	 ecx, edi
  002e2	e8 00 00 00 00	 call	 ?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::GetCurrentNodeName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  002e7	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  002eb	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  002ee	8b 75 d0	 mov	 esi, DWORD PTR _strNodeName$[ebp+16]
  002f1	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH

; 2145 :         if (_Large_string_engaged()) {

  002f6	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  002fa	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0P@BEGKENNC@comboinputdata@

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  002ff	83 fe 0e	 cmp	 esi, 14			; 0000000eH
  00302	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00305	83 ee 04	 sub	 esi, 4
  00308	72 17		 jb	 SHORT $LN1382@LoadMotion
  0030a	66 0f 1f 44 00
	00		 npad	 6
$LL1383@LoadMotion:
  00310	8b 01		 mov	 eax, DWORD PTR [ecx]
  00312	3b 02		 cmp	 eax, DWORD PTR [edx]
  00314	75 10		 jne	 SHORT $LN1381@LoadMotion
  00316	83 c1 04	 add	 ecx, 4
  00319	83 c2 04	 add	 edx, 4
  0031c	83 ee 04	 sub	 esi, 4
  0031f	73 ef		 jae	 SHORT $LL1383@LoadMotion
$LN1382@LoadMotion:
  00321	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00324	74 34		 je	 SHORT $LN1380@LoadMotion
$LN1381@LoadMotion:
  00326	8a 01		 mov	 al, BYTE PTR [ecx]
  00328	3a 02		 cmp	 al, BYTE PTR [edx]
  0032a	75 27		 jne	 SHORT $LN1384@LoadMotion
  0032c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0032f	74 29		 je	 SHORT $LN1380@LoadMotion
  00331	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00334	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00337	75 1a		 jne	 SHORT $LN1384@LoadMotion
  00339	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0033c	74 1c		 je	 SHORT $LN1380@LoadMotion
  0033e	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00341	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00344	75 0d		 jne	 SHORT $LN1384@LoadMotion
  00346	83 fe ff	 cmp	 esi, -1
  00349	74 0f		 je	 SHORT $LN1380@LoadMotion
  0034b	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0034e	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00351	74 07		 je	 SHORT $LN1380@LoadMotion
$LN1384@LoadMotion:
  00353	1b c0		 sbb	 eax, eax
  00355	83 c8 01	 or	 eax, 1
  00358	eb 02		 jmp	 SHORT $LN1385@LoadMotion
$LN1380@LoadMotion:
  0035a	33 c0		 xor	 eax, eax
$LN1385@LoadMotion:

; 513  :     if (_Ans != 0) {

  0035c	85 c0		 test	 eax, eax
  0035e	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  00361	0f 85 26 01 00
	00		 jne	 $LN16@LoadMotion

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00367	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0036a	0f 82 1d 01 00
	00		 jb	 $LN16@LoadMotion

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  00370	0f 87 17 01 00
	00		 ja	 $LN16@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 369  : 			m_isComboMotion = TRUE;

  00376	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00379	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00380	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 12 ; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00387	c6 45 e4 00	 mov	 BYTE PTR $T46[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 369  : 			m_isComboMotion = TRUE;

  0038b	c7 46 58 01 00
	00 00		 mov	 DWORD PTR [esi+88], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00392	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@IKJEINLI@preinputtime@
  0039a	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@IKJEINLI@preinputtime@+8
  0039f	66 0f d6 45 d8	 movq	 QWORD PTR $T46[ebp], xmm0
  003a4	89 45 e0	 mov	 DWORD PTR $T46[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  003a7	8d 46 5c	 lea	 eax, DWORD PTR [esi+92]
  003aa	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  003ae	50		 push	 eax
  003af	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  003b2	8b cf		 mov	 ecx, edi
  003b4	50		 push	 eax
  003b5	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  003ba	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003bc	8b 45 ec	 mov	 eax, DWORD PTR $T46[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  003bf	0f 94 45 a7	 sete	 BYTE PTR $T32[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003c3	83 f8 10	 cmp	 eax, 16			; 00000010H
  003c6	72 0d		 jb	 SHORT $LN385@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003c8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003c9	50		 push	 eax
  003ca	ff 75 d8	 push	 DWORD PTR $T46[ebp]
  003cd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003d2	83 c4 08	 add	 esp, 8
$LN385@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  003d5	80 7d a7 00	 cmp	 BYTE PTR $T32[ebp], 0
  003d9	0f 85 4a 01 00
	00		 jne	 $LN1349@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  003df	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@OKILMLFK@directinputtime@+8
  003e4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@OKILMLFK@directinputtime@
  003ec	89 45 e0	 mov	 DWORD PTR $T45[ebp+8], eax
  003ef	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@OKILMLFK@directinputtime@+12
  003f5	66 89 45 e4	 mov	 WORD PTR $T45[ebp+12], ax
  003f9	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@OKILMLFK@directinputtime@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003fe	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00405	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0040c	66 0f d6 45 d8	 movq	 QWORD PTR $T45[ebp], xmm0
  00411	88 45 e6	 mov	 BYTE PTR $T45[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00414	c6 45 e7 00	 mov	 BYTE PTR $T45[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  00418	8d 46 60	 lea	 eax, DWORD PTR [esi+96]
  0041b	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0041f	50		 push	 eax
  00420	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  00423	8b cf		 mov	 ecx, edi
  00425	50		 push	 eax
  00426	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0042b	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0042d	8b 45 ec	 mov	 eax, DWORD PTR $T45[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  00430	0f 94 45 a7	 sete	 BYTE PTR $T31[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00434	83 f8 10	 cmp	 eax, 16			; 00000010H
  00437	72 0d		 jb	 SHORT $LN454@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00439	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0043a	50		 push	 eax
  0043b	ff 75 d8	 push	 DWORD PTR $T45[ebp]
  0043e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00443	83 c4 08	 add	 esp, 8
$LN454@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  00446	80 7d a7 00	 cmp	 BYTE PTR $T31[ebp], 0
  0044a	0f 85 d9 00 00
	00		 jne	 $LN1349@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00450	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@+8
  00455	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@
  0045d	89 45 e0	 mov	 DWORD PTR $T44[ebp+8], eax
  00460	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00466	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0046d	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00474	66 0f d6 45 d8	 movq	 QWORD PTR $T44[ebp], xmm0
  00479	66 89 45 e4	 mov	 WORD PTR $T44[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0047d	c6 45 e6 00	 mov	 BYTE PTR $T44[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 375  : 			if (!rkTextFileLoader.GetTokenFloat("inputlimittime", &m_ComboInputData.fInputEndTime))

  00481	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00485	8d 46 64	 lea	 eax, DWORD PTR [esi+100]
  00488	e9 e4 02 00 00	 jmp	 $LN1418@LoadMotion
$LN16@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0048d	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  00491	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00494	8b f0		 mov	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00496	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0O@NGMBMFEH@attackingdata@

; 2145 :         if (_Large_string_engaged()) {

  0049b	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0049f	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  004a2	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  004a7	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  004aa	83 ee 04	 sub	 esi, 4
  004ad	72 12		 jb	 SHORT $LN1388@LoadMotion
  004af	90		 npad	 1
$LL1389@LoadMotion:
  004b0	8b 01		 mov	 eax, DWORD PTR [ecx]
  004b2	3b 02		 cmp	 eax, DWORD PTR [edx]
  004b4	75 10		 jne	 SHORT $LN1387@LoadMotion
  004b6	83 c1 04	 add	 ecx, 4
  004b9	83 c2 04	 add	 edx, 4
  004bc	83 ee 04	 sub	 esi, 4
  004bf	73 ef		 jae	 SHORT $LL1389@LoadMotion
$LN1388@LoadMotion:
  004c1	83 fe fc	 cmp	 esi, -4			; fffffffcH
  004c4	74 34		 je	 SHORT $LN1386@LoadMotion
$LN1387@LoadMotion:
  004c6	8a 01		 mov	 al, BYTE PTR [ecx]
  004c8	3a 02		 cmp	 al, BYTE PTR [edx]
  004ca	75 27		 jne	 SHORT $LN1390@LoadMotion
  004cc	83 fe fd	 cmp	 esi, -3			; fffffffdH
  004cf	74 29		 je	 SHORT $LN1386@LoadMotion
  004d1	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  004d4	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  004d7	75 1a		 jne	 SHORT $LN1390@LoadMotion
  004d9	83 fe fe	 cmp	 esi, -2			; fffffffeH
  004dc	74 1c		 je	 SHORT $LN1386@LoadMotion
  004de	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  004e1	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  004e4	75 0d		 jne	 SHORT $LN1390@LoadMotion
  004e6	83 fe ff	 cmp	 esi, -1
  004e9	74 0f		 je	 SHORT $LN1386@LoadMotion
  004eb	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  004ee	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  004f1	74 07		 je	 SHORT $LN1386@LoadMotion
$LN1390@LoadMotion:
  004f3	1b c0		 sbb	 eax, eax
  004f5	83 c8 01	 or	 eax, 1
  004f8	eb 02		 jmp	 SHORT $LN1391@LoadMotion
$LN1386@LoadMotion:
  004fa	33 c0		 xor	 eax, eax
$LN1391@LoadMotion:

; 513  :     if (_Ans != 0) {

  004fc	85 c0		 test	 eax, eax
  004fe	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  00501	75 3a		 jne	 SHORT $LN21@LoadMotion

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00503	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00506	72 35		 jb	 SHORT $LN21@LoadMotion

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  00508	77 33		 ja	 SHORT $LN21@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 380  : 			m_isAttackingMotion = TRUE;

  0050a	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0050d	c7 40 74 01 00
	00 00		 mov	 DWORD PTR [eax+116], 1

; 381  : 
; 382  : 			if (!NRaceData::LoadMotionAttackData(rkTextFileLoader, &m_MotionAttackData))

  00514	83 c0 78	 add	 eax, 120		; 00000078H
  00517	50		 push	 eax
  00518	57		 push	 edi
  00519	e8 00 00 00 00	 call	 ?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ; NRaceData::LoadMotionAttackData
  0051e	83 c4 08	 add	 esp, 8
  00521	85 c0		 test	 eax, eax
  00523	0f 85 44 08 00
	00		 jne	 $LN6@LoadMotion
$LN1349@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 55   : 				m_pOwner->SetParentNode();

  00529	8b cf		 mov	 ecx, edi
  0052b	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  0052f	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00534	c6 45 a7 00	 mov	 BYTE PTR $T22[ebp], 0
  00538	e9 f7 09 00 00	 jmp	 $LN1326@LoadMotion
$LN21@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0053d	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  00541	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00544	8b f0		 mov	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00546	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_08BMIAMBLK@loopdata@

; 2145 :         if (_Large_string_engaged()) {

  0054b	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0054f	83 f8 08	 cmp	 eax, 8
  00552	b8 08 00 00 00	 mov	 eax, 8
  00557	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0055a	83 ee 04	 sub	 esi, 4
  0055d	72 12		 jb	 SHORT $LN1394@LoadMotion
  0055f	90		 npad	 1
$LL1395@LoadMotion:
  00560	8b 01		 mov	 eax, DWORD PTR [ecx]
  00562	3b 02		 cmp	 eax, DWORD PTR [edx]
  00564	75 10		 jne	 SHORT $LN1393@LoadMotion
  00566	83 c1 04	 add	 ecx, 4
  00569	83 c2 04	 add	 edx, 4
  0056c	83 ee 04	 sub	 esi, 4
  0056f	73 ef		 jae	 SHORT $LL1395@LoadMotion
$LN1394@LoadMotion:
  00571	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00574	74 34		 je	 SHORT $LN1392@LoadMotion
$LN1393@LoadMotion:
  00576	8a 01		 mov	 al, BYTE PTR [ecx]
  00578	3a 02		 cmp	 al, BYTE PTR [edx]
  0057a	75 27		 jne	 SHORT $LN1396@LoadMotion
  0057c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0057f	74 29		 je	 SHORT $LN1392@LoadMotion
  00581	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00584	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00587	75 1a		 jne	 SHORT $LN1396@LoadMotion
  00589	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0058c	74 1c		 je	 SHORT $LN1392@LoadMotion
  0058e	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00591	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00594	75 0d		 jne	 SHORT $LN1396@LoadMotion
  00596	83 fe ff	 cmp	 esi, -1
  00599	74 0f		 je	 SHORT $LN1392@LoadMotion
  0059b	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0059e	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  005a1	74 07		 je	 SHORT $LN1392@LoadMotion
$LN1396@LoadMotion:
  005a3	1b c0		 sbb	 eax, eax
  005a5	83 c8 01	 or	 eax, 1
  005a8	eb 02		 jmp	 SHORT $LN1397@LoadMotion
$LN1392@LoadMotion:
  005aa	33 c0		 xor	 eax, eax
$LN1397@LoadMotion:

; 513  :     if (_Ans != 0) {

  005ac	85 c0		 test	 eax, eax
  005ae	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  005b1	0f 85 f0 01 00
	00		 jne	 $LN24@LoadMotion

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  005b7	83 f8 08	 cmp	 eax, 8
  005ba	0f 82 e7 01 00
	00		 jb	 $LN24@LoadMotion

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  005c0	0f 87 e1 01 00
	00		 ja	 $LN24@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 387  : 			m_isLoopMotion = TRUE;

  005c6	8b 4d 98	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005c9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  005d0	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 15 ; 0000000fH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  005d7	c6 45 e7 00	 mov	 BYTE PTR $T43[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 387  : 			m_isLoopMotion = TRUE;

  005db	c7 41 68 01 00
	00 00		 mov	 DWORD PTR [ecx+104], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  005e2	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+8
  005e7	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@
  005ef	89 45 e0	 mov	 DWORD PTR $T43[ebp+8], eax
  005f2	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+12
  005f8	66 89 45 e4	 mov	 WORD PTR $T43[ebp+12], ax
  005fc	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+14
  00601	66 0f d6 45 d8	 movq	 QWORD PTR $T43[ebp], xmm0
  00606	88 45 e6	 mov	 BYTE PTR $T43[ebp+14], al
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  00609	8d 71 10	 lea	 esi, DWORD PTR [ecx+16]
  0060c	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00610	56		 push	 esi
  00611	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00614	8b cf		 mov	 ecx, edi
  00616	50		 push	 eax
  00617	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  0061c	85 c0		 test	 eax, eax
  0061e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00622	8b 45 ec	 mov	 eax, DWORD PTR $T43[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  00625	0f 94 45 a7	 sete	 BYTE PTR $T30[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00629	83 f8 10	 cmp	 eax, 16			; 00000010H
  0062c	72 0d		 jb	 SHORT $LN641@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0062e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0062f	50		 push	 eax
  00630	ff 75 d8	 push	 DWORD PTR $T43[ebp]
  00633	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00638	83 c4 08	 add	 esp, 8
$LN641@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  0063b	80 7d a7 00	 cmp	 BYTE PTR $T30[ebp], 0
  0063f	74 06		 je	 SHORT $LN26@LoadMotion

; 389  : 			{
; 390  : 				m_iLoopCount = -1;

  00641	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
$LN26@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00647	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00649	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00650	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00657	c6 45 d8 00	 mov	 BYTE PTR $T42[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0065b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00660	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@LFNJMKIF@loopcancelenable@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00667	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 16 ; 00000010H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0066e	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00675	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00678	89 45 a0	 mov	 DWORD PTR __New_ptr$20[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0067b	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0067f	8d 45 a0	 lea	 eax, DWORD PTR __New_ptr$20[ebp]
  00682	50		 push	 eax
  00683	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  00686	50		 push	 eax
  00687	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  0068c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  0068f	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00692	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  00695	81 c6 a0 00 00
	00		 add	 esi, 160		; 000000a0H
  0069b	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  0069f	56		 push	 esi
  006a0	50		 push	 eax
  006a1	8b cf		 mov	 ecx, edi
  006a3	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  006a8	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006aa	8b 45 ec	 mov	 eax, DWORD PTR $T42[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  006ad	0f 94 45 a7	 sete	 BYTE PTR $T29[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006b1	83 f8 10	 cmp	 eax, 16			; 00000010H
  006b4	72 0d		 jb	 SHORT $LN697@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  006b6	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006b7	50		 push	 eax
  006b8	ff 75 d8	 push	 DWORD PTR $T42[ebp]
  006bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  006c0	83 c4 08	 add	 esp, 8
$LN697@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  006c3	80 7d a7 00	 cmp	 BYTE PTR $T29[ebp], 0
  006c7	74 06		 je	 SHORT $LN27@LoadMotion

; 393  : 			{
; 394  : 				m_bCancelEnableSkill = FALSE;

  006c9	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN27@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  006cf	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@FAMGINHI@loopstarttime@+8
  006d4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@FAMGINHI@loopstarttime@
  006dc	89 45 e0	 mov	 DWORD PTR $T41[ebp+8], eax
  006df	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@FAMGINHI@loopstarttime@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  006e4	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  006eb	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 13 ; 0000000dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  006f2	66 0f d6 45 d8	 movq	 QWORD PTR $T41[ebp], xmm0
  006f7	88 45 e4	 mov	 BYTE PTR $T41[ebp+12], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  006fa	c6 45 e5 00	 mov	 BYTE PTR $T41[ebp+13], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  006fe	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00701	8b cf		 mov	 ecx, edi
  00703	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00707	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  0070a	50		 push	 eax
  0070b	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  0070e	50		 push	 eax
  0070f	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00714	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00716	8b 45 ec	 mov	 eax, DWORD PTR $T41[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  00719	0f 94 45 a7	 sete	 BYTE PTR $T28[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0071d	83 f8 10	 cmp	 eax, 16			; 00000010H
  00720	72 0d		 jb	 SHORT $LN753@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00722	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00723	50		 push	 eax
  00724	ff 75 d8	 push	 DWORD PTR $T41[ebp]
  00727	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0072c	83 c4 08	 add	 esp, 8
$LN753@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  0072f	80 7d a7 00	 cmp	 BYTE PTR $T28[ebp], 0
  00733	0f 85 f0 fd ff
	ff		 jne	 $LN1349@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00739	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@HIAPALPD@loopendtime@+8
  0073f	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@HIAPALPD@loopendtime@
  00747	66 89 45 e0	 mov	 WORD PTR $T40[ebp+8], ax
  0074b	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@HIAPALPD@loopendtime@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00750	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00757	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T40[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0075e	66 0f d6 45 d8	 movq	 QWORD PTR $T40[ebp], xmm0
  00763	88 45 e2	 mov	 BYTE PTR $T40[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00766	c6 45 e3 00	 mov	 BYTE PTR $T40[ebp+11], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 398  : 			if (!rkTextFileLoader.GetTokenFloat("loopendtime", &m_fLoopEndTime))

  0076a	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  0076e	8d 46 70	 lea	 eax, DWORD PTR [esi+112]
$LN1418@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00771	50		 push	 eax
  00772	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  00775	8b cf		 mov	 ecx, edi
  00777	50		 push	 eax
  00778	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0077d	85 c0		 test	 eax, eax
  0077f	8b 45 ec	 mov	 eax, DWORD PTR $T40[ebp+20]
  00782	0f 94 45 a7	 sete	 BYTE PTR $T27[ebp]
  00786	83 f8 10	 cmp	 eax, 16			; 00000010H
  00789	72 0d		 jb	 SHORT $LN822@LoadMotion
  0078b	40		 inc	 eax
  0078c	50		 push	 eax
  0078d	ff 75 d8	 push	 DWORD PTR $T40[ebp]
  00790	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00795	83 c4 08	 add	 esp, 8
$LN822@LoadMotion:
  00798	80 7d a7 00	 cmp	 BYTE PTR $T27[ebp], 0
  0079c	0f 85 87 fd ff
	ff		 jne	 $LN1349@LoadMotion
  007a2	e9 c6 05 00 00	 jmp	 $LN6@LoadMotion
$LN24@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  007a7	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  007ab	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  007ae	8b f0		 mov	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  007b0	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BA@LAEICHPP@motioneventdata@

; 2145 :         if (_Large_string_engaged()) {

  007b5	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  007b9	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  007bc	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  007c1	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  007c4	83 ee 04	 sub	 esi, 4
  007c7	72 18		 jb	 SHORT $LN1400@LoadMotion
  007c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL1401@LoadMotion:
  007d0	8b 01		 mov	 eax, DWORD PTR [ecx]
  007d2	3b 02		 cmp	 eax, DWORD PTR [edx]
  007d4	75 10		 jne	 SHORT $LN1399@LoadMotion
  007d6	83 c1 04	 add	 ecx, 4
  007d9	83 c2 04	 add	 edx, 4
  007dc	83 ee 04	 sub	 esi, 4
  007df	73 ef		 jae	 SHORT $LL1401@LoadMotion
$LN1400@LoadMotion:
  007e1	83 fe fc	 cmp	 esi, -4			; fffffffcH
  007e4	74 34		 je	 SHORT $LN1398@LoadMotion
$LN1399@LoadMotion:
  007e6	8a 01		 mov	 al, BYTE PTR [ecx]
  007e8	3a 02		 cmp	 al, BYTE PTR [edx]
  007ea	75 27		 jne	 SHORT $LN1402@LoadMotion
  007ec	83 fe fd	 cmp	 esi, -3			; fffffffdH
  007ef	74 29		 je	 SHORT $LN1398@LoadMotion
  007f1	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  007f4	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  007f7	75 1a		 jne	 SHORT $LN1402@LoadMotion
  007f9	83 fe fe	 cmp	 esi, -2			; fffffffeH
  007fc	74 1c		 je	 SHORT $LN1398@LoadMotion
  007fe	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00801	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00804	75 0d		 jne	 SHORT $LN1402@LoadMotion
  00806	83 fe ff	 cmp	 esi, -1
  00809	74 0f		 je	 SHORT $LN1398@LoadMotion
  0080b	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0080e	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00811	74 07		 je	 SHORT $LN1398@LoadMotion
$LN1402@LoadMotion:
  00813	1b c0		 sbb	 eax, eax
  00815	83 c8 01	 or	 eax, 1
  00818	eb 02		 jmp	 SHORT $LN1403@LoadMotion
$LN1398@LoadMotion:
  0081a	33 c0		 xor	 eax, eax
$LN1403@LoadMotion:

; 513  :     if (_Ans != 0) {

  0081c	85 c0		 test	 eax, eax
  0081e	0f 85 49 05 00
	00		 jne	 $LN6@LoadMotion

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00824	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  00827	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0082a	73 05		 jae	 SHORT $LN852@LoadMotion

; 518  :         return -1;

  0082c	83 c8 ff	 or	 eax, -1
  0082f	eb 0b		 jmp	 SHORT $LN853@LoadMotion
$LN852@LoadMotion:

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  00831	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00836	3b c8		 cmp	 ecx, eax
  00838	1b c0		 sbb	 eax, eax
  0083a	f7 d8		 neg	 eax
$LN853@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 401  : 		else if (0 == strNodeName.compare("motioneventdata"))

  0083c	85 c0		 test	 eax, eax
  0083e	0f 85 29 05 00
	00		 jne	 $LN6@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00844	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00846	89 45 e8	 mov	 DWORD PTR $T39[ebp+16], eax

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00849	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00850	88 45 d8	 mov	 BYTE PTR $T39[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00853	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00858	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@KNDELFNF@motioneventdatacount@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0085f	c7 45 e8 14 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 20 ; 00000014H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00866	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0086d	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00870	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@KNDELFNF@motioneventdatacount@+16
  00876	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00879	89 45 a0	 mov	 DWORD PTR __New_ptr$19[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0087c	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00880	8d 45 a0	 lea	 eax, DWORD PTR __New_ptr$19[ebp]
  00883	50		 push	 eax
  00884	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  00887	50		 push	 eax
  00888	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  0088d	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  00890	8d 45 80	 lea	 eax, DWORD PTR _dwMotionEventDataCount$5[ebp]
  00893	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00897	50		 push	 eax
  00898	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  0089b	8b cf		 mov	 ecx, edi
  0089d	50		 push	 eax
  0089e	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  008a3	85 c0		 test	 eax, eax
  008a5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008a9	8b 45 ec	 mov	 eax, DWORD PTR $T39[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  008ac	0f 94 45 a7	 sete	 BYTE PTR $T26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008b0	83 f8 10	 cmp	 eax, 16			; 00000010H
  008b3	72 0d		 jb	 SHORT $LN909@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  008b5	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008b6	50		 push	 eax
  008b7	ff 75 d8	 push	 DWORD PTR $T39[ebp]
  008ba	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  008bf	83 c4 08	 add	 esp, 8
$LN909@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  008c2	80 7d a7 00	 cmp	 BYTE PTR $T26[ebp], 0
  008c6	74 09		 je	 SHORT $LN31@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 54   : 			{

  008c8	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 406  : 				continue;

  008cc	e9 a0 04 00 00	 jmp	 $LN1410@LoadMotion
$LN31@LoadMotion:

; 408  : 			stl_wipe(m_MotionEventDataVector);

  008d1	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  008d4	81 c6 a4 00 00
	00		 add	 esi, 164		; 000000a4H
  008da	56		 push	 esi
  008db	e8 00 00 00 00	 call	 ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  008e0	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 408  : 			stl_wipe(m_MotionEventDataVector);

  008e3	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  008e6	8b 06		 mov	 eax, DWORD PTR [esi]
  008e8	2b d0		 sub	 edx, eax

; 1216 :         if (_Newsize < _Oldsize) { // trim

  008ea	8b 4d 80	 mov	 ecx, DWORD PTR _dwMotionEventDataCount$5[ebp]
  008ed	c1 fa 02	 sar	 edx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 410  : 			m_MotionEventDataVector.resize(dwMotionEventDataCount, NULL);

  008f0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T21[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1216 :         if (_Newsize < _Oldsize) { // trim

  008f7	3b ca		 cmp	 ecx, edx
  008f9	73 05		 jae	 SHORT $LN921@LoadMotion

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  008fb	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 1218 :             _Orphan_range(_Newlast, _Mylast);
; 1219 :             _Destroy(_Newlast, _Mylast);
; 1220 :             _Mylast = _Newlast;
; 1221 :             return;

  008fe	eb 2c		 jmp	 SHORT $LN1411@LoadMotion
$LN921@LoadMotion:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  00900	76 2d		 jbe	 SHORT $LN922@LoadMotion

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00902	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00905	2b 06		 sub	 eax, DWORD PTR [esi]
  00907	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  0090a	3b c8		 cmp	 ecx, eax
  0090c	8d 45 a0	 lea	 eax, DWORD PTR $T21[ebp]
  0090f	76 0b		 jbe	 SHORT $LN923@LoadMotion

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00911	50		 push	 eax
  00912	51		 push	 ecx
  00913	8b ce		 mov	 ecx, esi
  00915	e8 00 00 00 00	 call	 ??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>

; 1228 :                 return;

  0091a	eb 13		 jmp	 SHORT $LN922@LoadMotion
$LN923@LoadMotion:

; 1578 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  0091c	56		 push	 esi
  0091d	50		 push	 eax

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0091e	2b ca		 sub	 ecx, edx

; 1578 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  00920	51		 push	 ecx
  00921	ff 76 04	 push	 DWORD PTR [esi+4]
  00924	e8 00 00 00 00	 call	 ??$_Uninitialized_fill_n@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@IABQAU12@AAV?$allocator@PAUSMotionEventData@NMotionEvent@@@0@@Z ; std::_Uninitialized_fill_n<std::allocator<NMotionEvent::SMotionEventData *> >
  00929	83 c4 10	 add	 esp, 16			; 00000010H
$LN1411@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  0092c	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN922@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0092f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00932	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00934	2b 06		 sub	 eax, DWORD PTR [esi]
  00936	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00939	89 4d a0	 mov	 DWORD PTR _j$1$[ebp], ecx
  0093c	85 c0		 test	 eax, eax
  0093e	0f 84 29 04 00
	00		 je	 $LN6@LoadMotion
  00944	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL7@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00950	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_05GFHEIIDD@event@
  00955	89 45 d8	 mov	 DWORD PTR $T38[ebp], eax
  00958	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_05GFHEIIDD@event@+4

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0095d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00964	c7 45 e8 05 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 5

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0096b	88 45 dc	 mov	 BYTE PTR $T38[ebp+4], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0096e	c6 45 dd 00	 mov	 BYTE PTR $T38[ebp+5], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  00972	51		 push	 ecx
  00973	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  00976	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0097a	50		 push	 eax
  0097b	8b cf		 mov	 ecx, edi
  0097d	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
  00982	85 c0		 test	 eax, eax
  00984	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00988	8b 45 ec	 mov	 eax, DWORD PTR $T38[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  0098b	0f 94 45 a7	 sete	 BYTE PTR $T25[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0098f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00992	72 0d		 jb	 SHORT $LN979@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00994	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00995	50		 push	 eax
  00996	ff 75 d8	 push	 DWORD PTR $T38[ebp]
  00999	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0099e	83 c4 08	 add	 esp, 8
$LN979@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  009a1	80 7d a7 00	 cmp	 BYTE PTR $T25[ebp], 0
  009a5	0f 85 7e fb ff
	ff		 jne	 $LN1349@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009ab	6a 0f		 push	 15			; 0000000fH
  009ad	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CGGAKCNF@motioneventtype@
  009b2	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  009b5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  009bc	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  009c3	c6 45 d8 00	 mov	 BYTE PTR $T37[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  009cc	8d 45 90	 lea	 eax, DWORD PTR _iType$7[ebp]
  009cf	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  009d3	50		 push	 eax
  009d4	8d 45 d8	 lea	 eax, DWORD PTR $T37[ebp]
  009d7	8b cf		 mov	 ecx, edi
  009d9	50		 push	 eax
  009da	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  009df	85 c0		 test	 eax, eax
  009e1	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009e5	8b 45 ec	 mov	 eax, DWORD PTR $T37[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  009e8	0f 94 45 a7	 sete	 BYTE PTR $T24[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009ec	83 f8 10	 cmp	 eax, 16			; 00000010H
  009ef	72 0d		 jb	 SHORT $LN1014@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009f1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009f2	50		 push	 eax
  009f3	ff 75 d8	 push	 DWORD PTR $T37[ebp]
  009f6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  009fb	83 c4 08	 add	 esp, 8
$LN1014@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  009fe	80 7d a7 00	 cmp	 BYTE PTR $T24[ebp], 0
  00a02	0f 85 21 fb ff
	ff		 jne	 $LN1349@LoadMotion

; 419  : 					return false;
; 420  : 
; 421  : 				TMotionEventData * pData = NULL;
; 422  : 				switch(iType)

  00a08	8b 45 90	 mov	 eax, DWORD PTR _iType$7[ebp]
  00a0b	48		 dec	 eax
  00a0c	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00a0f	0f 87 14 fb ff
	ff		 ja	 $LN1349@LoadMotion
  00a15	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1404@LoadMotion[eax*4]
$LN34@LoadMotion:

; 423  : 				{
; 424  : 					case MOTION_EVENT_TYPE_FLY:
; 425  : 						pData = new TMotionFlyEventData;

  00a1c	6a 58		 push	 88			; 00000058H
  00a1e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a23	8b c8		 mov	 ecx, eax
  00a25	83 c4 04	 add	 esp, 4
  00a28	89 4d 9c	 mov	 DWORD PTR $T18[ebp], ecx
  00a2b	85 c9		 test	 ecx, ecx
  00a2d	0f 84 6a 02 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00a33	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00a3a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00a41	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 169  : 		SMotionEventDataFly() {}

  00a48	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00a4e	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a55	c7 41 2c 0f 00
	00 00		 mov	 DWORD PTR [ecx+44], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a5c	c6 41 18 00	 mov	 BYTE PTR [ecx+24], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00a60	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a67	c7 41 54 0f 00
	00 00		 mov	 DWORD PTR [ecx+84], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a6e	c6 41 40 00	 mov	 BYTE PTR [ecx+64], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 426  : 						break;

  00a72	e9 28 02 00 00	 jmp	 $LN70@LoadMotion
$LN35@LoadMotion:

; 427  : 					case MOTION_EVENT_TYPE_EFFECT:
; 428  : 						pData = new TMotionEffectEventData;

  00a77	6a 60		 push	 96			; 00000060H
  00a79	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a7e	8b c8		 mov	 ecx, eax
  00a80	83 c4 04	 add	 esp, 4
  00a83	89 4d 9c	 mov	 DWORD PTR $T17[ebp], ecx
  00a86	85 c9		 test	 ecx, ecx
  00a88	0f 84 0f 02 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00a8e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00a95	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00a9c	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 79   : 		SMotionEventDataEffect() {}

  00aa3	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00aa9	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ab0	c7 41 34 0f 00
	00 00		 mov	 DWORD PTR [ecx+52], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ab7	c6 41 20 00	 mov	 BYTE PTR [ecx+32], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00abb	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ac2	c7 41 5c 0f 00
	00 00		 mov	 DWORD PTR [ecx+92], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ac9	c6 41 48 00	 mov	 BYTE PTR [ecx+72], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 429  : 						break;

  00acd	e9 cd 01 00 00	 jmp	 $LN70@LoadMotion
$LN36@LoadMotion:

; 430  : 					case MOTION_EVENT_TYPE_SCREEN_WAVING:
; 431  : 						pData = new TScreenWavingEventData;

  00ad2	6a 1c		 push	 28			; 0000001cH
  00ad4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ad9	8b c8		 mov	 ecx, eax
  00adb	83 c4 04	 add	 esp, 4
  00ade	89 4d 9c	 mov	 DWORD PTR $T16[ebp], ecx
  00ae1	85 c9		 test	 ecx, ecx
  00ae3	0f 84 b4 01 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 29   : 		SMotionEventDataScreenWaving() {}

  00ae9	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 432  : 						break;

  00aef	e9 92 01 00 00	 jmp	 $LN1413@LoadMotion
$LN37@LoadMotion:

; 433  : 					case MOTION_EVENT_TYPE_SPECIAL_ATTACKING:
; 434  : 						pData = new TMotionAttackingEventData;

  00af4	6a 44		 push	 68			; 00000044H
  00af6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00afb	8b c8		 mov	 ecx, eax
  00afd	83 c4 04	 add	 esp, 4
  00b00	89 4d 9c	 mov	 DWORD PTR $T15[ebp], ecx
  00b03	85 c9		 test	 ecx, ecx
  00b05	74 49		 je	 SHORT $LN55@LoadMotion

; 435  : 						m_hasSplashEvent = TRUE;

  00b07	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00b0a	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00b11	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00b18	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 208  : 		SMotionEventDataAttack() {}

  00b1f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 119  : 		SCollisionData() {}

  00b25	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00b2c	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00b33	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00b3a	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 435  : 						m_hasSplashEvent = TRUE;

  00b41	c7 80 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+188], 1

; 436  : 						break;

  00b4b	e9 4f 01 00 00	 jmp	 $LN70@LoadMotion
$LN55@LoadMotion:

; 435  : 						m_hasSplashEvent = TRUE;

  00b50	8b 45 98	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00b53	33 c9		 xor	 ecx, ecx
  00b55	c7 80 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+188], 1

; 436  : 						break;

  00b5f	e9 3b 01 00 00	 jmp	 $LN70@LoadMotion
$LN38@LoadMotion:

; 437  : 					case MOTION_EVENT_TYPE_SOUND:
; 438  : 						pData = new TMotionSoundEventData;

  00b64	6a 2c		 push	 44			; 0000002cH
  00b66	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b6b	8b c8		 mov	 ecx, eax
  00b6d	83 c4 04	 add	 esp, 4
  00b70	89 4d 9c	 mov	 DWORD PTR $T14[ebp], ecx
  00b73	85 c9		 test	 ecx, ecx
  00b75	0f 84 22 01 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00b7b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00b82	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00b89	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 245  : 		SMotionEventDataSound() {}

  00b90	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00b96	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b9d	c7 41 28 0f 00
	00 00		 mov	 DWORD PTR [ecx+40], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ba4	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 439  : 						break;

  00ba8	e9 f2 00 00 00	 jmp	 $LN70@LoadMotion
$LN39@LoadMotion:

; 440  : 					case MOTION_EVENT_TYPE_CHARACTER_SHOW:
; 441  : 						pData = new TMotionCharacterShowEventData;

  00bad	6a 14		 push	 20			; 00000014H
  00baf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bb4	8b c8		 mov	 ecx, eax
  00bb6	83 c4 04	 add	 esp, 4
  00bb9	89 4d 9c	 mov	 DWORD PTR $T13[ebp], ecx
  00bbc	85 c9		 test	 ecx, ecx
  00bbe	0f 84 d9 00 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 265  : 		SMotionEventDataCharacterShow() {}

  00bc4	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 442  : 						break;

  00bca	e9 b7 00 00 00	 jmp	 $LN1413@LoadMotion
$LN40@LoadMotion:

; 443  : 					case MOTION_EVENT_TYPE_CHARACTER_HIDE:
; 444  : 						pData = new TMotionCharacterHideEventData;

  00bcf	6a 14		 push	 20			; 00000014H
  00bd1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bd6	8b c8		 mov	 ecx, eax
  00bd8	83 c4 04	 add	 esp, 4
  00bdb	89 4d 9c	 mov	 DWORD PTR $T12[ebp], ecx
  00bde	85 c9		 test	 ecx, ecx
  00be0	0f 84 b7 00 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 275  : 		SMotionEventDataCharacterHide() {}

  00be6	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 445  : 						break;

  00bec	e9 95 00 00 00	 jmp	 $LN1413@LoadMotion
$LN41@LoadMotion:

; 446  : 					case MOTION_EVENT_TYPE_WARP:
; 447  : 						pData = new TMotionWarpEventData;

  00bf1	6a 14		 push	 20			; 00000014H
  00bf3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bf8	8b c8		 mov	 ecx, eax
  00bfa	83 c4 04	 add	 esp, 4
  00bfd	89 4d 9c	 mov	 DWORD PTR $T11[ebp], ecx
  00c00	85 c9		 test	 ecx, ecx
  00c02	0f 84 95 00 00
	00		 je	 $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 285  : 		SMotionEventDataWarp() {}

  00c08	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataWarp@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 448  : 						break;

  00c0e	eb 76		 jmp	 SHORT $LN1413@LoadMotion
$LN42@LoadMotion:

; 449  : 					case MOTION_EVENT_TYPE_EFFECT_TO_TARGET:
; 450  : 						pData = new TMotionEffectToTargetEventData;

  00c10	6a 44		 push	 68			; 00000044H
  00c12	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c17	8b c8		 mov	 ecx, eax
  00c19	83 c4 04	 add	 esp, 4
  00c1c	89 4d 9c	 mov	 DWORD PTR $T10[ebp], ecx
  00c1f	85 c9		 test	 ecx, ecx
  00c21	74 7a		 je	 SHORT $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00c23	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00c2a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00c31	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 125  : 		SMotionEventDataEffectToTarget() {}

  00c38	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00c3e	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00c45	c7 41 2c 0f 00
	00 00		 mov	 DWORD PTR [ecx+44], 15	; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00c4c	c6 41 18 00	 mov	 BYTE PTR [ecx+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 451  : 						break;

  00c50	eb 4d		 jmp	 SHORT $LN70@LoadMotion
$LN43@LoadMotion:

; 452  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 453  : 					case MOTION_EVENT_TYPE_UNK11:
; 454  : 						pData = new TMotionUnk11EventData;

  00c52	6a 18		 push	 24			; 00000018H
  00c54	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c59	8b c8		 mov	 ecx, eax
  00c5b	83 c4 04	 add	 esp, 4
  00c5e	89 4d 9c	 mov	 DWORD PTR $T9[ebp], ecx
  00c61	85 c9		 test	 ecx, ecx
  00c63	74 38		 je	 SHORT $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 298  : 		SMotionEventDataUnk11() {}

  00c65	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataUnk11@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 455  : 						break;

  00c6b	eb 19		 jmp	 SHORT $LN1413@LoadMotion
$LN44@LoadMotion:

; 456  : 					case MOTION_EVENT_TYPE_UNK12:
; 457  : 						pData = new TMotionUnk12EventData;

  00c6d	6a 18		 push	 24			; 00000018H
  00c6f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c74	8b c8		 mov	 ecx, eax
  00c76	83 c4 04	 add	 esp, 4
  00c79	89 4d 9c	 mov	 DWORD PTR $T8[ebp], ecx
  00c7c	85 c9		 test	 ecx, ecx
  00c7e	74 1d		 je	 SHORT $LN69@LoadMotion
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 320  : 		SMotionEventDataUnk12() {}

  00c80	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataUnk12@NMotionEvent@@6B@
$LN1413@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00c86	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00c8d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00c94	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00c9b	eb 02		 jmp	 SHORT $LN70@LoadMotion
$LN69@LoadMotion:
  00c9d	33 c9		 xor	 ecx, ecx
$LN70@LoadMotion:
  00c9f	8b 45 a0	 mov	 eax, DWORD PTR _j$1$[ebp]
  00ca2	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  00ca9	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 466  : 				m_MotionEventDataVector[j]->Load(rkTextFileLoader);

  00cab	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00cac	89 55 9c	 mov	 DWORD PTR tv7723[ebp], edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 465  : 				m_MotionEventDataVector[j] = pData;

  00caf	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00cb2	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 466  : 				m_MotionEventDataVector[j]->Load(rkTextFileLoader);

  00cb4	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  00cb7	8b 01		 mov	 eax, DWORD PTR [ecx]
  00cb9	ff 50 08	 call	 DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00cbc	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00cbe	03 4d 9c	 add	 ecx, DWORD PTR tv7723[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 467  : 				m_MotionEventDataVector[j]->iType = iType;

  00cc1	8b 45 90	 mov	 eax, DWORD PTR _iType$7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00cc4	6a 0c		 push	 12			; 0000000cH
  00cc6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NHFBHOF@startingtime@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 467  : 				m_MotionEventDataVector[j]->iType = iType;

  00ccb	8b 09		 mov	 ecx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00ccd	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00cd4	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00cdb	c6 45 d8 00	 mov	 BYTE PTR $T36[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 467  : 				m_MotionEventDataVector[j]->iType = iType;

  00cdf	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ce2	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00ce5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00cea	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00cec	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00cee	03 45 9c	 add	 eax, DWORD PTR tv7723[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00cf1	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00cf5	8b 00		 mov	 eax, DWORD PTR [eax]
  00cf7	83 c0 0c	 add	 eax, 12			; 0000000cH
  00cfa	50		 push	 eax
  00cfb	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  00cfe	50		 push	 eax
  00cff	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00d04	85 c0		 test	 eax, eax
  00d06	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d0a	8b 45 ec	 mov	 eax, DWORD PTR $T36[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00d0d	0f 94 45 a7	 sete	 BYTE PTR $T23[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d11	83 f8 10	 cmp	 eax, 16			; 00000010H
  00d14	72 0d		 jb	 SHORT $LN1176@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00d16	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d17	50		 push	 eax
  00d18	ff 75 d8	 push	 DWORD PTR $T36[ebp]
  00d1b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00d20	83 c4 08	 add	 esp, 8
$LN1176@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00d23	80 7d a7 00	 cmp	 BYTE PTR $T23[ebp], 0
  00d27	0f 85 fc f7 ff
	ff		 jne	 $LN1349@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00d2d	8b 06		 mov	 eax, DWORD PTR [esi]
  00d2f	03 45 9c	 add	 eax, DWORD PTR tv7723[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 471  : 				m_MotionEventDataVector[j]->dwFrame = (m_MotionEventDataVector[j]->fStartingTime / c_fFrameTime);

  00d32	8b 30		 mov	 esi, DWORD PTR [eax]
  00d34	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00d39	f3 0f 5e 45 88	 divss	 xmm0, DWORD PTR _c_fFrameTime$1$[ebp]
  00d3e	e8 00 00 00 00	 call	 __ftoui3

; 472  : 
; 473  : 				rkTextFileLoader.SetParentNode();

  00d43	8b cf		 mov	 ecx, edi
  00d45	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00d48	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00d4d	8b 75 98	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00d50	8b 4d a0	 mov	 ecx, DWORD PTR _j$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00d53	81 c6 a4 00 00
	00		 add	 esi, 164		; 000000a4H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00d59	41		 inc	 ecx
  00d5a	89 4d a0	 mov	 DWORD PTR _j$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00d5d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00d60	2b 06		 sub	 eax, DWORD PTR [esi]
  00d62	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00d65	3b c8		 cmp	 ecx, eax
  00d67	0f 82 e3 fb ff
	ff		 jb	 $LL7@LoadMotion
$LN6@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00d6d	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
$LN1410@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 361  : 	for (DWORD i = 0; i < rkTextFileLoader.GetChildNodeCount(); ++i)

  00d71	8b cf		 mov	 ecx, edi
  00d73	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00d78	8b 75 94	 mov	 esi, DWORD PTR _i$1$[ebp]
  00d7b	8b cf		 mov	 ecx, edi
  00d7d	46		 inc	 esi
  00d7e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00d82	89 75 94	 mov	 DWORD PTR _i$1$[ebp], esi
  00d85	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  00d8a	3b f0		 cmp	 esi, eax
  00d8c	0f 82 3e f5 ff
	ff		 jb	 $LL4@LoadMotion
$LN1379@LoadMotion:

; 478  : 	std::string strSoundFileNameTemp=c_szFileName;

  00d92	ff 75 84	 push	 DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  00d95	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00d98	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00d9d	8b 7d bc	 mov	 edi, DWORD PTR _strSoundFileNameTemp$[ebp+20]

; 2144 :         const value_type* _Result = _Bx._Buf;

  00da0	8d 55 a8	 lea	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]

; 604  :     if (_Hay_size != 0) { // room for match, look for it

  00da3	8b 75 b8	 mov	 esi, DWORD PTR _strSoundFileNameTemp$[ebp+16]

; 2153 :         return _BUF_SIZE <= _Myres;

  00da6	83 ff 10	 cmp	 edi, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 478  : 	std::string strSoundFileNameTemp=c_szFileName;

  00da9	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00dad	0f 43 55 a8	 cmovae	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]

; 604  :     if (_Hay_size != 0) { // room for match, look for it

  00db1	89 75 94	 mov	 DWORD PTR __Right_size$1$[ebp], esi
  00db4	85 f6		 test	 esi, esi
  00db6	74 56		 je	 SHORT $LN1203@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00db8	83 c9 ff	 or	 ecx, -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 605  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00dbb	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00dbe	3b c1		 cmp	 eax, ecx
  00dc0	0f 42 c8	 cmovb	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 605  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00dc3	03 ca		 add	 ecx, edx

; 377  :         return _Left == _Right;

  00dc5	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH

; 606  :             if (_Traits::eq(*_Match_try, _Ch)) {

  00dc8	74 10		 je	 SHORT $LN1362@LoadMotion
  00dca	66 0f 1f 44 00
	00		 npad	 6
$LL1217@LoadMotion:

; 608  :             }
; 609  : 
; 610  :             if (_Match_try == _Haystack) {

  00dd0	3b ca		 cmp	 ecx, edx
  00dd2	74 3a		 je	 SHORT $LN1203@LoadMotion

; 605  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00dd4	49		 dec	 ecx

; 377  :         return _Left == _Right;

  00dd5	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH

; 606  :             if (_Traits::eq(*_Match_try, _Ch)) {

  00dd8	75 f6		 jne	 SHORT $LL1217@LoadMotion
$LN1362@LoadMotion:

; 607  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00dda	2b ca		 sub	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h

; 335  : 	if (string::npos != npos)

  00ddc	83 f9 ff	 cmp	 ecx, -1
  00ddf	74 2d		 je	 SHORT $LN1203@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00de1	3b f1		 cmp	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00de3	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 0

; 2144 :         const value_type* _Result = _Bx._Buf;

  00dea	8d 45 a8	 lea	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ded	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00df4	0f 42 ce	 cmovb	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00df7	c6 45 d8 00	 mov	 BYTE PTR $T35[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00dfb	83 ff 10	 cmp	 edi, 16			; 00000010H

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00dfe	51		 push	 ecx

; 2145 :         if (_Large_string_engaged()) {

  00dff	0f 43 45 a8	 cmovae	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00e03	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00e06	50		 push	 eax
  00e07	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\filename.h

; 336  : 		return std::string(str, 0, npos);

  00e0c	eb 75		 jmp	 SHORT $LN1415@LoadMotion
$LN1203@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00e0e	8b 55 a8	 mov	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00e11	8d 45 a8	 lea	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  00e14	83 ff 10	 cmp	 edi, 16			; 00000010H

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00e17	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 0
  00e1e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 0

; 2145 :         if (_Large_string_engaged()) {

  00e25	0f 43 c2	 cmovae	 eax, edx
  00e28	89 45 88	 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00e2b	83 fe 10	 cmp	 esi, 16			; 00000010H
  00e2e	73 0f		 jae	 SHORT $LN1258@LoadMotion

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00e30	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2661 :             _My_data._Mysize = _Right_size;

  00e33	89 75 e8	 mov	 DWORD PTR $T35[ebp+16], esi

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00e36	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 2663 :             return;

  00e3d	eb 4e		 jmp	 SHORT $LN1416@LoadMotion
$LN1258@LoadMotion:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00e3f	8b fe		 mov	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00e41	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00e46	83 cf 0f	 or	 edi, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00e49	3b f8		 cmp	 edi, eax
  00e4b	0f 47 f8	 cmova	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00e4e	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00e51	50		 push	 eax
  00e52	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00e57	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00e59	8d 45 84	 lea	 eax, DWORD PTR __New_array$6[ebp]
  00e5c	50		 push	 eax
  00e5d	8d 45 d8	 lea	 eax, DWORD PTR $T35[ebp]
  00e60	89 75 84	 mov	 DWORD PTR __New_array$6[ebp], esi
  00e63	50		 push	 eax
  00e64	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00e69	8b 4d 94	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00e6c	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00e6d	51		 push	 ecx
  00e6e	ff 75 88	 push	 DWORD PTR __Result$2$[ebp]
  00e71	56		 push	 esi
  00e72	e8 00 00 00 00	 call	 _memcpy

; 2671 :         _My_data._Mysize = _Right_size;

  00e77	8b 45 94	 mov	 eax, DWORD PTR __Right_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00e7a	83 c4 18	 add	 esp, 24			; 00000018H

; 2671 :         _My_data._Mysize = _Right_size;

  00e7d	89 45 e8	 mov	 DWORD PTR $T35[ebp+16], eax

; 2672 :         _My_data._Myres  = _New_capacity;

  00e80	89 7d ec	 mov	 DWORD PTR $T35[ebp+20], edi
$LN1415@LoadMotion:

; 2153 :         return _BUF_SIZE <= _Myres;

  00e83	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR $T35[ebp]
  00e87	8b 55 a8	 mov	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00e8a	8b 7d bc	 mov	 edi, DWORD PTR _strSoundFileNameTemp$[ebp+20]
$LN1416@LoadMotion:
  00e8d	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR $T3[ebp], xmm0
  00e94	83 ff 10	 cmp	 edi, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e97	72 0d		 jb	 SHORT $LN1279@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00e99	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e9c	50		 push	 eax
  00e9d	52		 push	 edx
  00e9e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00ea3	83 c4 08	 add	 esp, 8
$LN1279@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00ea6	0f 10 85 70 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 480  : 	strSoundFileNameTemp+= ".mss";

  00ead	68 00 00 00 00	 push	 OFFSET ??_C@_04NMMFEKGF@?4mss@
  00eb2	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00eb5	0f 11 45 a8	 movups	 XMMWORD PTR _strSoundFileNameTemp$[ebp], xmm0
  00eb9	f3 0f 7e 45 e8	 movq	 xmm0, QWORD PTR $T35[ebp+16]
  00ebe	66 0f d6 45 b8	 movq	 QWORD PTR _strSoundFileNameTemp$[ebp+16], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 480  : 	strSoundFileNameTemp+= ".mss";

  00ec3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 481  : 
; 482  : 	if (strSoundFileNameTemp.length() > 13)

  00ec8	83 7d b8 0d	 cmp	 DWORD PTR _strSoundFileNameTemp$[ebp+16], 13 ; 0000000dH
  00ecc	76 3b		 jbe	 SHORT $LN47@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00ece	83 7d bc 10	 cmp	 DWORD PTR _strSoundFileNameTemp$[ebp+20], 16 ; 00000010H

; 2135 :         value_type* _Result = _Bx._Buf;

  00ed2	8d 75 a8	 lea	 esi, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 486  : 		m_strSoundScriptDataFileName = "sound/";

  00ed5	8b 7d 98	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  00ed8	0f 43 75 a8	 cmovae	 esi, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 486  : 		m_strSoundScriptDataFileName = "sound/";

  00edc	83 c7 2c	 add	 edi, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00edf	6a 06		 push	 6
  00ee1	68 00 00 00 00	 push	 OFFSET ??_C@_06PBLIODKG@sound?1@
  00ee6	8b cf		 mov	 ecx, edi
  00ee8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3590 :         return _Mypair._Myval2._Myptr()[_Off];

  00eed	8d 46 0d	 lea	 eax, DWORD PTR [esi+13]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 487  : 		m_strSoundScriptDataFileName += c_szHeader;

  00ef0	8b cf		 mov	 ecx, edi
  00ef2	50		 push	 eax
  00ef3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00ef8	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00efc	72 02		 jb	 SHORT $LN1317@LoadMotion

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00efe	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN1317@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 489  : 		LoadSoundScriptData(m_strSoundScriptDataFileName.c_str());

  00f00	8b 4d 98	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00f03	57		 push	 edi
  00f04	e8 00 00 00 00	 call	 ?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ; CRaceMotionData::LoadSoundScriptData
$LN47@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00f09	8b 45 bc	 mov	 eax, DWORD PTR _strSoundFileNameTemp$[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 492  : 	return true;

  00f0c	c6 45 a7 01	 mov	 BYTE PTR $T22[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00f10	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f13	72 0d		 jb	 SHORT $LN1325@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f15	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f16	50		 push	 eax
  00f17	ff 75 a8	 push	 DWORD PTR _strSoundFileNameTemp$[ebp]
  00f1a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00f1f	83 c4 08	 add	 esp, 8
$LN1325@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00f22	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strSoundFileNameTemp$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00f29	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strSoundFileNameTemp$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00f30	c6 45 a8 00	 mov	 BYTE PTR _strSoundFileNameTemp$[ebp], 0
$LN1326@LoadMotion:

; 2153 :         return _BUF_SIZE <= _Myres;

  00f34	8b 4d d4	 mov	 ecx, DWORD PTR _strNodeName$[ebp+20]
  00f37	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f3a	72 0d		 jb	 SHORT $LN1335@LoadMotion

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f3c	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f3d	51		 push	 ecx
  00f3e	ff 75 c0	 push	 DWORD PTR _strNodeName$[ebp]
  00f41	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00f46	83 c4 08	 add	 esp, 8
$LN1335@LoadMotion:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 492  : 	return true;

  00f49	8a 45 a7	 mov	 al, BYTE PTR $T22[ebp]
  00f4c	e9 9c f2 ff ff	 jmp	 $LN1@LoadMotion
  00f51	0f 1f 00	 npad	 3
$LN1404@LoadMotion:

; 493  : }

  00f54	00 00 00 00	 DD	 $LN35@LoadMotion
  00f58	00 00 00 00	 DD	 $LN36@LoadMotion
  00f5c	00 00 00 00	 DD	 $LN1349@LoadMotion
  00f60	00 00 00 00	 DD	 $LN37@LoadMotion
  00f64	00 00 00 00	 DD	 $LN38@LoadMotion
  00f68	00 00 00 00	 DD	 $LN34@LoadMotion
  00f6c	00 00 00 00	 DD	 $LN39@LoadMotion
  00f70	00 00 00 00	 DD	 $LN40@LoadMotion
  00f74	00 00 00 00	 DD	 $LN41@LoadMotion
  00f78	00 00 00 00	 DD	 $LN42@LoadMotion
  00f7c	00 00 00 00	 DD	 $LN43@LoadMotion
  00f80	00 00 00 00	 DD	 $LN44@LoadMotion
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$3:
  00018	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$4:
  00020	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _GotoChild$2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$7:
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0003e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$8:
  00043	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$9:
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  0004e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$10:
  00053	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00056	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$11:
  0005b	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$12:
  00063	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00066	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$13:
  0006b	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  0006e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$14:
  00073	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  00076	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$26:
  0007b	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$27:
  00083	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00086	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
__ehhandler$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z:
  00090	90		 npad	 1
  00091	90		 npad	 1
  00092	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00096	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00099	8b 8a 6c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-148]
  0009f	33 c8		 xor	 ecx, eax
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000a9	33 c8		 xor	 ecx, eax
  000ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b0	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
  000b5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z ENDP	; CRaceMotionData::LoadMotionData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ PROC ; CRaceMotionData::GetSoundInstanceVectorPointer, COMDAT
; _this$ = ecx

; 313  : 	return &m_SoundInstanceVector;

  00000	8d 81 b0 00 00
	00		 lea	 eax, DWORD PTR [ecx+176]

; 314  : }

  00006	c3		 ret	 0
?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ ENDP ; CRaceMotionData::GetSoundInstanceVectorPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetEventStartTime@CRaceMotionData@@QBEMK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetEventStartTime@CRaceMotionData@@QBEMK@Z PROC	; CRaceMotionData::GetEventStartTime, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 305  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 305  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetEventSt

; 306  : 		return 0.0f;

  0001b	d9 ee		 fldz

; 309  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN2@GetEventSt:

; 307  : 
; 308  : 	return m_MotionEventDataVector[dwIndex]->fStartingTime;

  00021	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00024	d9 40 0c	 fld	 DWORD PTR [eax+12]

; 309  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?GetEventStartTime@CRaceMotionData@@QBEMK@Z ENDP	; CRaceMotionData::GetEventStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetEventType@CRaceMotionData@@QBEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetEventType@CRaceMotionData@@QBEHK@Z PROC		; CRaceMotionData::GetEventType, COMDAT
; _this$ = ecx

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 297  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 297  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetEventTy

; 298  : 		return MOTION_EVENT_TYPE_NONE;

  0001b	33 c0		 xor	 eax, eax

; 301  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN2@GetEventTy:

; 299  : 
; 300  : 	return m_MotionEventDataVector[dwIndex]->iType;

  00021	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00024	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 301  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?GetEventType@CRaceMotionData@@QBEHK@Z ENDP		; CRaceMotionData::GetEventType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_c_ppData$ = 12						; size = 4
?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z PROC ; CRaceMotionData::GetMotionAttackingEventDataPointer, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 280  : {

  00011	56		 push	 esi

; 281  : 	if (byIndex >= m_MotionEventDataVector.size())

  00012	0f b6 75 08	 movzx	 esi, BYTE PTR _byIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 281  : 	if (byIndex >= m_MotionEventDataVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	73 18		 jae	 SHORT $LN9@GetMotionA

; 282  : 		return FALSE;
; 283  : 
; 284  : 	const CRaceMotionData::TMotionEventData * pData = m_MotionEventDataVector[byIndex];
; 285  : 	const CRaceMotionData::TMotionAttackingEventData * pAttackingEvent = (const CRaceMotionData::TMotionAttackingEventData *)pData;

  0001d	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]

; 286  : 
; 287  : 	if (MOTION_EVENT_TYPE_SPECIAL_ATTACKING == pAttackingEvent->iType)

  00020	83 79 04 04	 cmp	 DWORD PTR [ecx+4], 4
  00024	74 0f		 je	 SHORT $LN9@GetMotionA

; 289  : 
; 290  : 	*c_ppData = pAttackingEvent;

  00026	8b 45 0c	 mov	 eax, DWORD PTR _c_ppData$[ebp]
  00029	5e		 pop	 esi
  0002a	89 08		 mov	 DWORD PTR [eax], ecx

; 291  : 
; 292  : 	return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 293  : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
$LN9@GetMotionA:

; 288  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax
  00037	5e		 pop	 esi

; 293  : }

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z ENDP ; CRaceMotionData::GetMotionAttackingEventDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_c_ppData$ = 12						; size = 4
?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z PROC ; CRaceMotionData::GetMotionEventDataPointer, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 270  : {

  00011	56		 push	 esi

; 271  : 	if (byIndex >= m_MotionEventDataVector.size())

  00012	0f b6 75 08	 movzx	 esi, BYTE PTR _byIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 271  : 	if (byIndex >= m_MotionEventDataVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	72 07		 jb	 SHORT $LN2@GetMotionE

; 272  : 		return FALSE;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 277  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN2@GetMotionE:

; 273  : 
; 274  : 	*c_ppData = m_MotionEventDataVector[byIndex];

  00024	8b 45 0c	 mov	 eax, DWORD PTR _c_ppData$[ebp]
  00027	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  0002a	5e		 pop	 esi
  0002b	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 
; 276  : 	return TRUE;

  0002d	b8 01 00 00 00	 mov	 eax, 1

; 277  : }

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ENDP ; CRaceMotionData::GetMotionEventDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ
_TEXT	SEGMENT
?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ PROC	; CRaceMotionData::GetMotionEventDataCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00006	2b 81 a4 00 00
	00		 sub	 eax, DWORD PTR [ecx+164]
  0000c	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 267  : }

  0000f	c3		 ret	 0
?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ENDP	; CRaceMotionData::GetMotionEventDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopEndTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetLoopEndTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetLoopEndTime, COMDAT
; _this$ = ecx

; 260  : 	return m_fLoopEndTime;

  00000	d9 41 70	 fld	 DWORD PTR [ecx+112]

; 261  : }

  00003	c3		 ret	 0
?GetLoopEndTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetLoopEndTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopStartTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetLoopStartTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetLoopStartTime, COMDAT
; _this$ = ecx

; 255  : 	return m_fLoopStartTime;

  00000	d9 41 6c	 fld	 DWORD PTR [ecx+108]

; 256  : }

  00003	c3		 ret	 0
?GetLoopStartTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetLoopStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsLoopMotion@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsLoopMotion@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::IsLoopMotion, COMDAT
; _this$ = ecx

; 250  : 	return m_isLoopMotion;

  00000	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]

; 251  : }

  00003	c3		 ret	 0
?IsLoopMotion@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::IsLoopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::IsCancelEnableSkill, COMDAT
; _this$ = ecx

; 244  : 	return m_bCancelEnableSkill;

  00000	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]

; 245  : }

  00006	c3		 ret	 0
?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::IsCancelEnableSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::HasSplashMotionEvent, COMDAT
; _this$ = ecx

; 238  : 	return m_hasSplashEvent;

  00000	8b 81 bc 00 00
	00		 mov	 eax, DWORD PTR [ecx+188]

; 239  : }

  00006	c3		 ret	 0
?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::HasSplashMotionEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ
_TEXT	SEGMENT
?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ PROC ; CRaceMotionData::GetMotionAttackDataReference, COMDAT
; _this$ = ecx

; 232  : 	assert(m_isAttackingMotion);
; 233  : 	return m_MotionAttackData;

  00000	8d 41 78	 lea	 eax, DWORD PTR [ecx+120]

; 234  : }

  00003	c3		 ret	 0
?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ ENDP ; CRaceMotionData::GetMotionAttackDataReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ
_TEXT	SEGMENT
?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ PROC ; CRaceMotionData::GetMotionAttackDataPointer, COMDAT
; _this$ = ecx

; 227  : 	return & m_MotionAttackData;

  00000	8d 41 78	 lea	 eax, DWORD PTR [ecx+120]

; 228  : }

  00003	c3		 ret	 0
?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ ENDP ; CRaceMotionData::GetMotionAttackDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?isAttackingMotion@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?isAttackingMotion@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::isAttackingMotion, COMDAT
; _this$ = ecx

; 222  : 	return m_isAttackingMotion;

  00000	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]

; 223  : }

  00003	c3		 ret	 0
?isAttackingMotion@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::isAttackingMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetComboInputEndTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetComboInputEndTime@CRaceMotionData@@QBEMXZ PROC	; CRaceMotionData::GetComboInputEndTime, COMDAT
; _this$ = ecx

; 215  : 	assert(m_isComboMotion);
; 216  : 	return m_ComboInputData.fInputEndTime;

  00000	d9 41 64	 fld	 DWORD PTR [ecx+100]

; 217  : }

  00003	c3		 ret	 0
?GetComboInputEndTime@CRaceMotionData@@QBEMXZ ENDP	; CRaceMotionData::GetComboInputEndTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetNextComboTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetNextComboTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetNextComboTime, COMDAT
; _this$ = ecx

; 209  : 	assert(m_isComboMotion);
; 210  : 	return m_ComboInputData.fNextComboTime;

  00000	d9 41 60	 fld	 DWORD PTR [ecx+96]

; 211  : }

  00003	c3		 ret	 0
?GetNextComboTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetNextComboTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetComboInputStartTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetComboInputStartTime@CRaceMotionData@@QBEMXZ PROC	; CRaceMotionData::GetComboInputStartTime, COMDAT
; _this$ = ecx

; 203  : 	assert(m_isComboMotion);
; 204  : 	return m_ComboInputData.fInputStartTime;

  00000	d9 41 5c	 fld	 DWORD PTR [ecx+92]

; 205  : }

  00003	c3		 ret	 0
?GetComboInputStartTime@CRaceMotionData@@QBEMXZ ENDP	; CRaceMotionData::GetComboInputStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsComboInputTimeData@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsComboInputTimeData@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::IsComboInputTimeData, COMDAT
; _this$ = ecx

; 198  : 	return m_isComboMotion;

  00000	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]

; 199  : }

  00003	c3		 ret	 0
?IsComboInputTimeData@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::IsComboInputTimeData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rPos$ = 8						; size = 4
?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z PROC ; CRaceMotionData::SetAccumulationPosition, COMDAT
; _this$ = ecx

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 318  : 	m_accumulationPosition = c_rPos;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rPos$[ebp]
  00006	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0000a	66 0f d6 41 4c	 movq	 QWORD PTR [ecx+76], xmm0
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 319  : 	m_isAccumulationMotion = TRUE;

  00015	c7 41 48 01 00
	00 00		 mov	 DWORD PTR [ecx+72], 1

; 320  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ENDP ; CRaceMotionData::SetAccumulationPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionDuration@CRaceMotionData@@QAEMXZ
_TEXT	SEGMENT
?GetMotionDuration@CRaceMotionData@@QAEMXZ PROC		; CRaceMotionData::GetMotionDuration, COMDAT
; _this$ = ecx

; 187  : 	return m_fMotionDuration;

  00000	d9 41 44	 fld	 DWORD PTR [ecx+68]

; 188  : }

  00003	c3		 ret	 0
?GetMotionDuration@CRaceMotionData@@QAEMXZ ENDP		; CRaceMotionData::GetMotionDuration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetMotionDuration@CRaceMotionData@@QAEXM@Z
_TEXT	SEGMENT
_fDuration$ = 8						; size = 4
?SetMotionDuration@CRaceMotionData@@QAEXM@Z PROC	; CRaceMotionData::SetMotionDuration, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 192  : 	m_fMotionDuration = fDuration;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDuration$[ebp]
  00008	f3 0f 11 41 44	 movss	 DWORD PTR [ecx+68], xmm0

; 193  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetMotionDuration@CRaceMotionData@@QAEXM@Z ENDP	; CRaceMotionData::SetMotionDuration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ
_TEXT	SEGMENT
?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ PROC	; CRaceMotionData::GetSoundScriptFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 79 40 10	 cmp	 DWORD PTR [ecx+64], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 2145 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetSoundSc
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 594  : 	return m_strSoundScriptDataFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetSoundSc:

; 595  : }

  0000b	c3		 ret	 0
?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ ENDP	; CRaceMotionData::GetSoundScriptFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionFileName@CRaceMotionData@@QBEPBDXZ
_TEXT	SEGMENT
?GetMotionFileName@CRaceMotionData@@QBEPBDXZ PROC	; CRaceMotionData::GetMotionFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 79 28 10	 cmp	 DWORD PTR [ecx+40], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]

; 2145 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetMotionF
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 589  : 	return m_strMotionFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetMotionF:

; 590  : }

  0000b	c3		 ret	 0
?GetMotionFileName@CRaceMotionData@@QBEPBDXZ ENDP	; CRaceMotionData::GetMotionFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopCount@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?GetLoopCount@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::GetLoopCount, COMDAT
; _this$ = ecx

; 182  : 	return m_iLoopCount;

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 183  : }

  00003	c3		 ret	 0
?GetLoopCount@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::GetLoopCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsLock@CRaceMotionData@@QBE_NXZ
_TEXT	SEGMENT
?IsLock@CRaceMotionData@@QBE_NXZ PROC			; CRaceMotionData::IsLock, COMDAT
; _this$ = ecx

; 177  : 	return m_isLock ? true : false;

  00000	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00004	0f 95 c0	 setne	 al

; 178  : }

  00007	c3		 ret	 0
?IsLock@CRaceMotionData@@QBE_NXZ ENDP			; CRaceMotionData::IsLock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetType@CRaceMotionData@@QBEIXZ
_TEXT	SEGMENT
?GetType@CRaceMotionData@@QBEIXZ PROC			; CRaceMotionData::GetType, COMDAT
; _this$ = ecx

; 172  : 	return m_eType;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 173  : }

  00003	c3		 ret	 0
?GetType@CRaceMotionData@@QBEIXZ ENDP			; CRaceMotionData::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetName@CRaceMotionData@@QAEXI@Z
_TEXT	SEGMENT
_eName$ = 8						; size = 4
?SetName@CRaceMotionData@@QAEXI@Z PROC			; CRaceMotionData::SetName, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 33   : 	m_eName=eName;

  00003	8b 55 08	 mov	 edx, DWORD PTR _eName$[ebp]
  00006	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 34   : 
; 35   : 	switch (m_eName)

  00009	81 fa 4f 01 00
	00		 cmp	 edx, 335		; 0000014fH
  0000f	0f 87 a5 00 00
	00		 ja	 $LN19@SetName
  00015	81 fa 32 01 00
	00		 cmp	 edx, 306		; 00000132H
  0001b	0f 83 a4 00 00
	00		 jae	 $LN10@SetName
  00021	83 fa 26	 cmp	 edx, 38			; 00000026H
  00024	0f 87 a8 00 00
	00		 ja	 $LN15@SetName
  0002a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN20@SetName[edx]
  00031	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN21@SetName[eax*4]
$LN4@SetName:

; 36   : 	{
; 37   : 		case NAME_NONE:
; 38   : 			SetType(TYPE_NONE);

  00038	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 0

; 150  : 			break;
; 151  : 	}
; 152  : }

  0003f	5d		 pop	 ebp

; 36   : 	{
; 37   : 		case NAME_NONE:
; 38   : 			SetType(TYPE_NONE);

  00040	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN5@SetName:

; 39   : 			break;
; 40   : 		case NAME_WAIT:
; 41   : 		case NAME_INTRO_WAIT:
; 42   : 		case NAME_STOP:
; 43   : 			SetType(TYPE_WAIT);

  00045	c7 45 08 01 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 1

; 150  : 			break;
; 151  : 	}
; 152  : }

  0004c	5d		 pop	 ebp

; 39   : 			break;
; 40   : 		case NAME_WAIT:
; 41   : 		case NAME_INTRO_WAIT:
; 42   : 		case NAME_STOP:
; 43   : 			SetType(TYPE_WAIT);

  0004d	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN6@SetName:

; 44   : 			break;
; 45   : 		case NAME_WALK:
; 46   : 		case NAME_RUN:
; 47   : 			SetType(TYPE_MOVE);

  00052	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 2

; 150  : 			break;
; 151  : 	}
; 152  : }

  00059	5d		 pop	 ebp

; 44   : 			break;
; 45   : 		case NAME_WALK:
; 46   : 		case NAME_RUN:
; 47   : 			SetType(TYPE_MOVE);

  0005a	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN7@SetName:

; 48   : 			break;
; 49   : 		case NAME_DAMAGE:
; 50   : 		case NAME_DAMAGE_BACK:
; 51   : 			SetType(TYPE_DAMAGE);

  0005f	c7 45 08 05 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 5

; 150  : 			break;
; 151  : 	}
; 152  : }

  00066	5d		 pop	 ebp

; 48   : 			break;
; 49   : 		case NAME_DAMAGE:
; 50   : 		case NAME_DAMAGE_BACK:
; 51   : 			SetType(TYPE_DAMAGE);

  00067	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN8@SetName:

; 52   : 			break;
; 53   : 		case NAME_DAMAGE_FLYING:
; 54   : 		case NAME_DAMAGE_FLYING_BACK:
; 55   : 			SetType(TYPE_KNOCKDOWN);

  0006c	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 6

; 150  : 			break;
; 151  : 	}
; 152  : }

  00073	5d		 pop	 ebp

; 52   : 			break;
; 53   : 		case NAME_DAMAGE_FLYING:
; 54   : 		case NAME_DAMAGE_FLYING_BACK:
; 55   : 			SetType(TYPE_KNOCKDOWN);

  00074	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN9@SetName:

; 56   : 			break;
; 57   : 		case NAME_STAND_UP:
; 58   : 		case NAME_STAND_UP_BACK:
; 59   : 			SetType(TYPE_STANDUP);

  00079	c7 45 08 09 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 9

; 150  : 			break;
; 151  : 	}
; 152  : }

  00080	5d		 pop	 ebp

; 56   : 			break;
; 57   : 		case NAME_STAND_UP:
; 58   : 		case NAME_STAND_UP_BACK:
; 59   : 			SetType(TYPE_STANDUP);

  00081	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN11@SetName:

; 119  : 			break;
; 120  : 		case NAME_DEAD:
; 121  : 		case NAME_DEAD_BACK:
; 122  : 			SetType(TYPE_DIE);

  00086	c7 45 08 07 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 7

; 150  : 			break;
; 151  : 	}
; 152  : }

  0008d	5d		 pop	 ebp

; 119  : 			break;
; 120  : 		case NAME_DEAD:
; 121  : 		case NAME_DEAD_BACK:
; 122  : 			SetType(TYPE_DIE);

  0008e	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN12@SetName:

; 123  : 			break;
; 124  : 		case NAME_NORMAL_ATTACK:
; 125  : 			SetType(TYPE_ATTACK);

  00093	c7 45 08 03 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 3

; 150  : 			break;
; 151  : 	}
; 152  : }

  0009a	5d		 pop	 ebp

; 123  : 			break;
; 124  : 		case NAME_NORMAL_ATTACK:
; 125  : 			SetType(TYPE_ATTACK);

  0009b	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN13@SetName:

; 126  : 			break;
; 127  : 		case NAME_COMBO_ATTACK_1:
; 128  : 		case NAME_COMBO_ATTACK_2:
; 129  : 		case NAME_COMBO_ATTACK_3:
; 130  : 		case NAME_COMBO_ATTACK_4:
; 131  : 		case NAME_COMBO_ATTACK_5:
; 132  : 		case NAME_COMBO_ATTACK_6:
; 133  : 		case NAME_COMBO_ATTACK_7:
; 134  : 		case NAME_COMBO_ATTACK_8:
; 135  : 			SetType(TYPE_COMBO);

  000a0	c7 45 08 04 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 4

; 150  : 			break;
; 151  : 	}
; 152  : }

  000a7	5d		 pop	 ebp

; 126  : 			break;
; 127  : 		case NAME_COMBO_ATTACK_1:
; 128  : 		case NAME_COMBO_ATTACK_2:
; 129  : 		case NAME_COMBO_ATTACK_3:
; 130  : 		case NAME_COMBO_ATTACK_4:
; 131  : 		case NAME_COMBO_ATTACK_5:
; 132  : 		case NAME_COMBO_ATTACK_6:
; 133  : 		case NAME_COMBO_ATTACK_7:
; 134  : 		case NAME_COMBO_ATTACK_8:
; 135  : 			SetType(TYPE_COMBO);

  000a8	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN14@SetName:

; 136  : 			break;
; 137  : 		case NAME_FISHING_THROW:
; 138  : 		case NAME_FISHING_WAIT:
; 139  : 		case NAME_FISHING_REACT:
; 140  : 		case NAME_FISHING_CATCH:
; 141  : 		case NAME_FISHING_FAIL:
; 142  : 		case NAME_FISHING_STOP:
; 143  : 			SetType(TYPE_FISHING);

  000ad	c7 45 08 0b 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 11 ; 0000000bH

; 150  : 			break;
; 151  : 	}
; 152  : }

  000b4	5d		 pop	 ebp

; 136  : 			break;
; 137  : 		case NAME_FISHING_THROW:
; 138  : 		case NAME_FISHING_WAIT:
; 139  : 		case NAME_FISHING_REACT:
; 140  : 		case NAME_FISHING_CATCH:
; 141  : 		case NAME_FISHING_FAIL:
; 142  : 		case NAME_FISHING_STOP:
; 143  : 			SetType(TYPE_FISHING);

  000b5	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN19@SetName:

; 34   : 
; 35   : 	switch (m_eName)

  000ba	8d 82 a5 fe ff
	ff		 lea	 eax, DWORD PTR [edx-347]
  000c0	83 f8 08	 cmp	 eax, 8
  000c3	77 0d		 ja	 SHORT $LN15@SetName
$LN10@SetName:

; 60   : 			break;
; 61   : 		case NAME_SPAWN:
; 62   : 		case NAME_CHANGE_WEAPON:
; 63   : 		case NAME_INTRO_SELECTED:
; 64   : 		case NAME_INTRO_NOT_SELECTED:
; 65   : 		case NAME_SPECIAL_1:
; 66   : 		case NAME_SPECIAL_2:
; 67   : 		case NAME_SPECIAL_3:
; 68   : 		case NAME_SPECIAL_4:
; 69   : 		case NAME_SPECIAL_5:
; 70   : 		case NAME_SPECIAL_6:
; 71   : 		case NAME_CLAP:
; 72   : 		case NAME_DANCE_1:
; 73   : 		case NAME_DANCE_2:
; 74   : 		case NAME_DANCE_3:
; 75   : 		case NAME_DANCE_4:
; 76   : 		case NAME_DANCE_5:
; 77   : 		case NAME_DANCE_6:
; 78   : 		case NAME_CONGRATULATION:
; 79   : 		case NAME_FORGIVE:
; 80   : 		case NAME_ANGRY:
; 81   : 		case NAME_ATTRACTIVE:
; 82   : 		case NAME_SAD:
; 83   : 		case NAME_SHY:
; 84   : 		case NAME_CHEERUP:
; 85   : 		case NAME_BANTER:
; 86   : 		case NAME_JOY:
; 87   : 		case NAME_CHEERS_1:
; 88   : 		case NAME_CHEERS_2:
; 89   : 		case NAME_KISS_WITH_WARRIOR:
; 90   : 		case NAME_KISS_WITH_ASSASSIN:
; 91   : 		case NAME_KISS_WITH_SURA:
; 92   : 		case NAME_KISS_WITH_SHAMAN:
; 93   : #ifdef ENABLE_WOLFMAN_CHARACTER
; 94   : 		case NAME_KISS_WITH_WOLFMAN:
; 95   : #endif
; 96   : 		case NAME_FRENCH_KISS_WITH_WARRIOR:
; 97   : 		case NAME_FRENCH_KISS_WITH_ASSASSIN:
; 98   : 		case NAME_FRENCH_KISS_WITH_SURA:
; 99   : 		case NAME_FRENCH_KISS_WITH_SHAMAN:
; 100  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 101  : 		case NAME_FRENCH_KISS_WITH_WOLFMAN:
; 102  : #endif
; 103  : 		case NAME_SLAP_HIT_WITH_WARRIOR:
; 104  : 		case NAME_SLAP_HIT_WITH_ASSASSIN:
; 105  : 		case NAME_SLAP_HIT_WITH_SURA:
; 106  : 		case NAME_SLAP_HIT_WITH_SHAMAN:
; 107  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 108  : 		case NAME_SLAP_HIT_WITH_WOLFMAN:
; 109  : #endif
; 110  : 		case NAME_SLAP_HURT_WITH_WARRIOR:
; 111  : 		case NAME_SLAP_HURT_WITH_ASSASSIN:
; 112  : 		case NAME_SLAP_HURT_WITH_SURA:
; 113  : 		case NAME_SLAP_HURT_WITH_SHAMAN:
; 114  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 115  : 		case NAME_SLAP_HURT_WITH_WOLFMAN:
; 116  : #endif
; 117  : 		case NAME_DIG:
; 118  : 			SetType(TYPE_EVENT);

  000c5	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 10 ; 0000000aH

; 150  : 			break;
; 151  : 	}
; 152  : }

  000cc	5d		 pop	 ebp

; 60   : 			break;
; 61   : 		case NAME_SPAWN:
; 62   : 		case NAME_CHANGE_WEAPON:
; 63   : 		case NAME_INTRO_SELECTED:
; 64   : 		case NAME_INTRO_NOT_SELECTED:
; 65   : 		case NAME_SPECIAL_1:
; 66   : 		case NAME_SPECIAL_2:
; 67   : 		case NAME_SPECIAL_3:
; 68   : 		case NAME_SPECIAL_4:
; 69   : 		case NAME_SPECIAL_5:
; 70   : 		case NAME_SPECIAL_6:
; 71   : 		case NAME_CLAP:
; 72   : 		case NAME_DANCE_1:
; 73   : 		case NAME_DANCE_2:
; 74   : 		case NAME_DANCE_3:
; 75   : 		case NAME_DANCE_4:
; 76   : 		case NAME_DANCE_5:
; 77   : 		case NAME_DANCE_6:
; 78   : 		case NAME_CONGRATULATION:
; 79   : 		case NAME_FORGIVE:
; 80   : 		case NAME_ANGRY:
; 81   : 		case NAME_ATTRACTIVE:
; 82   : 		case NAME_SAD:
; 83   : 		case NAME_SHY:
; 84   : 		case NAME_CHEERUP:
; 85   : 		case NAME_BANTER:
; 86   : 		case NAME_JOY:
; 87   : 		case NAME_CHEERS_1:
; 88   : 		case NAME_CHEERS_2:
; 89   : 		case NAME_KISS_WITH_WARRIOR:
; 90   : 		case NAME_KISS_WITH_ASSASSIN:
; 91   : 		case NAME_KISS_WITH_SURA:
; 92   : 		case NAME_KISS_WITH_SHAMAN:
; 93   : #ifdef ENABLE_WOLFMAN_CHARACTER
; 94   : 		case NAME_KISS_WITH_WOLFMAN:
; 95   : #endif
; 96   : 		case NAME_FRENCH_KISS_WITH_WARRIOR:
; 97   : 		case NAME_FRENCH_KISS_WITH_ASSASSIN:
; 98   : 		case NAME_FRENCH_KISS_WITH_SURA:
; 99   : 		case NAME_FRENCH_KISS_WITH_SHAMAN:
; 100  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 101  : 		case NAME_FRENCH_KISS_WITH_WOLFMAN:
; 102  : #endif
; 103  : 		case NAME_SLAP_HIT_WITH_WARRIOR:
; 104  : 		case NAME_SLAP_HIT_WITH_ASSASSIN:
; 105  : 		case NAME_SLAP_HIT_WITH_SURA:
; 106  : 		case NAME_SLAP_HIT_WITH_SHAMAN:
; 107  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 108  : 		case NAME_SLAP_HIT_WITH_WOLFMAN:
; 109  : #endif
; 110  : 		case NAME_SLAP_HURT_WITH_WARRIOR:
; 111  : 		case NAME_SLAP_HURT_WITH_ASSASSIN:
; 112  : 		case NAME_SLAP_HURT_WITH_SURA:
; 113  : 		case NAME_SLAP_HURT_WITH_SHAMAN:
; 114  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 115  : 		case NAME_SLAP_HURT_WITH_WOLFMAN:
; 116  : #endif
; 117  : 		case NAME_DIG:
; 118  : 			SetType(TYPE_EVENT);

  000cd	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN15@SetName:

; 144  : 			break;
; 145  : 		default:
; 146  : 			if (eName>=NAME_SKILL && eName<=NAME_SKILL+SKILL_NUM)

  000d2	8d 42 ce	 lea	 eax, DWORD PTR [edx-50]
  000d5	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  000da	77 0d		 ja	 SHORT $LN16@SetName

; 147  : 				SetType(TYPE_SKILL);

  000dc	c7 45 08 08 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 8

; 150  : 			break;
; 151  : 	}
; 152  : }

  000e3	5d		 pop	 ebp

; 147  : 				SetType(TYPE_SKILL);

  000e4	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN16@SetName:

; 148  : 			else
; 149  : 				TraceError("CRaceMotionData::SetName - UNKNOWN NAME %d", eName);

  000e9	52		 push	 edx
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@
  000ef	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000f4	83 c4 08	 add	 esp, 8

; 150  : 			break;
; 151  : 	}
; 152  : }

  000f7	5d		 pop	 ebp
  000f8	c2 04 00	 ret	 4
  000fb	90		 npad	 1
$LN21@SetName:
  000fc	00 00 00 00	 DD	 $LN4@SetName
  00100	00 00 00 00	 DD	 $LN5@SetName
  00104	00 00 00 00	 DD	 $LN6@SetName
  00108	00 00 00 00	 DD	 $LN10@SetName
  0010c	00 00 00 00	 DD	 $LN7@SetName
  00110	00 00 00 00	 DD	 $LN8@SetName
  00114	00 00 00 00	 DD	 $LN9@SetName
  00118	00 00 00 00	 DD	 $LN11@SetName
  0011c	00 00 00 00	 DD	 $LN12@SetName
  00120	00 00 00 00	 DD	 $LN13@SetName
  00124	00 00 00 00	 DD	 $LN14@SetName
$LN20@SetName:
  00128	00		 DB	 0
  00129	01		 DB	 1
  0012a	02		 DB	 2
  0012b	02		 DB	 2
  0012c	03		 DB	 3
  0012d	04		 DB	 4
  0012e	05		 DB	 5
  0012f	06		 DB	 6
  00130	04		 DB	 4
  00131	05		 DB	 5
  00132	06		 DB	 6
  00133	07		 DB	 7
  00134	07		 DB	 7
  00135	08		 DB	 8
  00136	09		 DB	 9
  00137	09		 DB	 9
  00138	09		 DB	 9
  00139	09		 DB	 9
  0013a	09		 DB	 9
  0013b	09		 DB	 9
  0013c	09		 DB	 9
  0013d	09		 DB	 9
  0013e	01		 DB	 1
  0013f	03		 DB	 3
  00140	03		 DB	 3
  00141	03		 DB	 3
  00142	0a		 DB	 10			; 0000000aH
  00143	0a		 DB	 10			; 0000000aH
  00144	0a		 DB	 10			; 0000000aH
  00145	0a		 DB	 10			; 0000000aH
  00146	0a		 DB	 10			; 0000000aH
  00147	0a		 DB	 10			; 0000000aH
  00148	01		 DB	 1
  00149	03		 DB	 3
  0014a	03		 DB	 3
  0014b	03		 DB	 3
  0014c	03		 DB	 3
  0014d	03		 DB	 3
  0014e	03		 DB	 3
?SetName@CRaceMotionData@@QAEXI@Z ENDP			; CRaceMotionData::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Destroy@CRaceMotionData@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CRaceMotionData@@QAEXXZ PROC			; CRaceMotionData::Destroy, COMDAT
; _this$ = ecx

; 625  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 626  : 	stl_wipe(m_MotionEventDataVector);

  00003	8d 86 a4 00 00
	00		 lea	 eax, DWORD PTR [esi+164]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
  0000f	83 c4 04	 add	 esp, 4

; 627  : 	Initialize();

  00012	8b ce		 mov	 ecx, esi
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ?Initialize@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Initialize
?Destroy@CRaceMotionData@@QAEXXZ ENDP			; CRaceMotionData::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Initialize@CRaceMotionData@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CRaceMotionData@@QAEXXZ PROC		; CRaceMotionData::Initialize, COMDAT
; _this$ = ecx

; 599  : 	m_iLoopCount = 0;
; 600  : 	m_fMotionDuration = 0.0f;
; 601  : 	m_accumulationPosition.x = 0.0f;
; 602  : 	m_accumulationPosition.y = 0.0f;
; 603  : 	m_accumulationPosition.z = 0.0f;
; 604  : 	m_fLoopStartTime = 0.0f;
; 605  : 	m_fLoopEndTime = 0.0f;
; 606  : 
; 607  : 	m_isAccumulationMotion = FALSE;
; 608  : 	m_isComboMotion = FALSE;
; 609  : 	m_isLoopMotion = FALSE;
; 610  : 	m_isAttackingMotion = FALSE;
; 611  : 	m_bCancelEnableSkill = FALSE;
; 612  : 
; 613  : 	m_hasSplashEvent = FALSE;
; 614  : 
; 615  : 	m_isLock = FALSE;
; 616  : 
; 617  : 	m_eType=TYPE_NONE;
; 618  : 	m_eName=NAME_NONE;
; 619  : 
; 620  : 	m_MotionEventDataVector.clear();

  00000	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  00006	56		 push	 esi

; 621  : 	m_SoundInstanceVector.clear();

  00007	8d b1 b0 00 00
	00		 lea	 esi, DWORD PTR [ecx+176]
  0000d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00014	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0
  0001b	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0
  00022	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
  00029	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0
  00030	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0
  00037	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  0003e	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0
  00045	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0
  0004c	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0
  00053	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], 0
  0005a	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0
  00064	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0
  0006e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00075	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0007c	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00083	89 81 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00089	56		 push	 esi
  0008a	ff 76 04	 push	 DWORD PTR [esi+4]
  0008d	ff 36		 push	 DWORD PTR [esi]
  0008f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundInstance> >

; 1390 :         _Mylast = _Myfirst;

  00094	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00096	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00099	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0009c	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 622  : }

  0009d	c3		 ret	 0
?Initialize@CRaceMotionData@@QAEXXZ ENDP		; CRaceMotionData::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??1CRaceMotionData@@UAE@XZ
_TEXT	SEGMENT
??1CRaceMotionData@@UAE@XZ PROC				; CRaceMotionData::~CRaceMotionData, COMDAT
; _this$ = ecx

; 636  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
  00003	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CRaceMotionData@@6B@

; 637  : 	Destroy();

  00009	e8 00 00 00 00	 call	 ?Destroy@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Destroy

; 638  : }

  0000e	8d 8f b0 00 00
	00		 lea	 ecx, DWORD PTR [edi+176]
  00014	e8 00 00 00 00	 call	 ??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00019	8b 8f a4 00 00
	00		 mov	 ecx, DWORD PTR [edi+164]
  0001f	85 c9		 test	 ecx, ecx
  00021	74 33		 je	 SHORT $LN6@CRaceMotio

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00023	8b 87 ac 00 00
	00		 mov	 eax, DWORD PTR [edi+172]
  00029	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0002e	50		 push	 eax
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00035	c7 87 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+164], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00042	c7 87 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+168], 0

; 1699 :             _Myend   = pointer();

  0004c	c7 87 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+172], 0
$LN6@CRaceMotio:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00056	8b 87 94 00 00
	00		 mov	 eax, DWORD PTR [edi+148]
  0005c	53		 push	 ebx
  0005d	8d 9f 94 00 00
	00		 lea	 ebx, DWORD PTR [edi+148]
  00063	85 c0		 test	 eax, eax
  00065	74 42		 je	 SHORT $LN16@CRaceMotio

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00067	53		 push	 ebx
  00068	ff 73 04	 push	 DWORD PTR [ebx+4]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAXPAUSHitData@NRaceData@@QAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SHitData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00071	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00074	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00079	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  0007b	f7 e9		 imul	 ecx
  0007d	c1 fa 03	 sar	 edx, 3
  00080	8b c2		 mov	 eax, edx
  00082	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00085	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	6b c0 2c	 imul	 eax, eax, 44
  0008a	50		 push	 eax
  0008b	ff 33		 push	 DWORD PTR [ebx]
  0008d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00092	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00098	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0009b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  000a2	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN16@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000a9	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  000ac	5b		 pop	 ebx
  000ad	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b0	72 0d		 jb	 SHORT $LN26@CRaceMotio

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b3	50		 push	 eax
  000b4	ff 77 2c	 push	 DWORD PTR [edi+44]
  000b7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000bc	83 c4 08	 add	 esp, 8
$LN26@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000bf	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c6	c7 47 40 0f 00
	00 00		 mov	 DWORD PTR [edi+64], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000cd	c6 47 2c 00	 mov	 BYTE PTR [edi+44], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  000d1	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  000d4	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d7	72 0d		 jb	 SHORT $LN36@CRaceMotio

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000d9	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000da	50		 push	 eax
  000db	ff 77 14	 push	 DWORD PTR [edi+20]
  000de	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e3	83 c4 08	 add	 esp, 8
$LN36@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000e6	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ed	c7 47 28 0f 00
	00 00		 mov	 DWORD PTR [edi+40], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000f4	c6 47 14 00	 mov	 BYTE PTR [edi+20], 0
  000f8	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 638  : }

  000f9	c3		 ret	 0
??1CRaceMotionData@@UAE@XZ ENDP				; CRaceMotionData::~CRaceMotionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??0CRaceMotionData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRaceMotionData@@QAE@XZ PROC				; CRaceMotionData::CRaceMotionData, COMDAT
; _this$ = ecx

; 631  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRaceMotionData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00010	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00017	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001e	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00022	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00029	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00030	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00034	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0
  0003e	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0
  00048	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
  00052	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  0005c	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
  00066	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00070	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  0007a	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
  00084	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 632  : 	Initialize();

  0008e	e8 00 00 00 00	 call	 ?Initialize@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Initialize

; 633  : }

  00093	8b c6		 mov	 eax, esi
  00095	5e		 pop	 esi
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
??0CRaceMotionData@@QAE@XZ ENDP				; CRaceMotionData::CRaceMotionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?DestroySystem@CRaceMotionData@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CRaceMotionData@@SAXXZ PROC		; CRaceMotionData::DestroySystem, COMDAT

; 15   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 15   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN32@DestroySys
$LL22@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN20@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN20@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL22@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 17   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN32@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 17   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CRaceMotionData@@SAXXZ ENDP		; CRaceMotionData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?CreateSystem@CRaceMotionData@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CRaceMotionData@@SAXI@Z PROC		; CRaceMotionData::CreateSystem, COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 10   : {

  0000e	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+28, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1307 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1307 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 12   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1308 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
$LN20@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CRaceMotionData@@SAXI@Z ENDP		; CRaceMotionData::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Delete@CRaceMotionData@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@CRaceMotionData@@SAXPAV1@@Z PROC		; CRaceMotionData::Delete, COMDAT

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 26   : 	pkData->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 28   : 	ms_kPool.Free(pkData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 29   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 29   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CRaceMotionData@@SAXPAV1@@Z ENDP		; CRaceMotionData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?New@CRaceMotionData@@SAPAV1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pkNewData$2 = -4					; size = 4
?New@CRaceMotionData@@SAPAV1@XZ PROC			; CRaceMotionData::New, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00010	75 64		 jne	 SHORT $LN4@New

; 65   : 				T* pkNewData=new T;

  00012	56		 push	 esi
  00013	68 c0 00 00 00	 push	 192			; 000000c0H
  00018	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001d	83 c4 04	 add	 esp, 4
  00020	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN6@New
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ??0CRaceMotionData@@QAE@XZ ; CRaceMotionData::CRaceMotionData
  0002e	8b f0		 mov	 esi, eax
  00030	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00032	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00034	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00039	89 75 fc	 mov	 DWORD PTR _pkNewData$2[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0003c	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+12
  00042	74 16		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00044	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  00046	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00048	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0004f	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  00055	5e		 pop	 esi

; 22   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$2[ebp]
  0005d	51		 push	 ecx
  0005e	50		 push	 eax
  0005f	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  00064	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00069	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  0006f	8b c6		 mov	 eax, esi
  00071	5e		 pop	 esi

; 22   : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00076	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00079	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  0007c	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp

; 22   : }

  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?New@CRaceMotionData@@SAPAV1@XZ ENDP			; CRaceMotionData::New
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 18		 push	 24			; 00000018H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataUnk12::Save, COMDAT
; _this$ = ecx

; 323  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataUnk12::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12, COMDAT
; _this$ = ecx

; 321  : 		virtual ~SMotionEventDataUnk12() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 18		 push	 24			; 00000018H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataUnk11::Load, COMDAT
; _this$ = ecx

; 307  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00029	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@OGGCDFHA@basevelocity@
  00031	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@OGGCDFHA@basevelocity@+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 307  : 		{

  00036	8b 55 08	 mov	 edx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00040	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 12 ; 0000000cH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00047	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  0004c	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004f	c6 45 e4 00	 mov	 BYTE PTR $T2[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  00053	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	50		 push	 eax
  0005e	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00061	8b ca		 mov	 ecx, edx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00069	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006b	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  0006e	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00071	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00074	72 0d		 jb	 SHORT $LN56@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00076	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00077	50		 push	 eax
  00078	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  0007b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00080	83 c4 08	 add	 esp, 8
$LN56@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  00083	84 db		 test	 bl, bl
  00085	0f 94 c0	 sete	 al

; 309  : 				return false;
; 310  : 
; 311  : 			return true;
; 312  : 		}

  00088	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00092	59		 pop	 ecx
  00093	5b		 pop	 ebx
  00094	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00097	33 cd		 xor	 ecx, ebp
  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataUnk11::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataUnk11::Save, COMDAT
; _this$ = ecx

; 302  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 303  : 			PrintfTabs(File, iTabs, "\n");

  00004	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00009	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0000c	8b f9		 mov	 edi, ecx
  0000e	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00011	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 304  : 			PrintfTabs(File, iTabs, "BaseVelocity        \"%d\"\n", iAniSpeed);

  00016	ff 77 14	 push	 DWORD PTR [edi+20]
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@
  0001e	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  00021	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00029	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002c	5f		 pop	 edi

; 305  : 		}

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataUnk11::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11, COMDAT
; _this$ = ecx

; 299  : 		virtual ~SMotionEventDataUnk11() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataWarp::Save, COMDAT
; _this$ = ecx

; 288  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataWarp::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp, COMDAT
; _this$ = ecx

; 286  : 		virtual ~SMotionEventDataWarp() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataCharacterHide::Save, COMDAT
; _this$ = ecx

; 278  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataCharacterHide::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide, COMDAT
; _this$ = ecx

; 276  : 		virtual ~SMotionEventDataCharacterHide() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataCharacterShow::Save, COMDAT
; _this$ = ecx

; 268  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataCharacterShow::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow, COMDAT
; _this$ = ecx

; 266  : 		virtual ~SMotionEventDataCharacterShow() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 246  : 		virtual ~SMotionEventDataSound() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 14	 push	 DWORD PTR [esi+20]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
  00021	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00025	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002c	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 246  : 		virtual ~SMotionEventDataSound() {}

  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0003d	74 0b		 je	 SHORT $LN17@scalar
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	83 c4 08	 add	 esp, 8
$LN17@scalar:
  0004a	8b c6		 mov	 eax, esi
  0004c	5e		 pop	 esi
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataSound::Load, COMDAT
; _this$ = ecx

; 254  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00029	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@POGBJFAA@soundfilename@+8
  0002e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@POGBJFAA@soundfilename@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 254  : 		{

  00036	8b 55 08	 mov	 edx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00039	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax
  0003c	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@POGBJFAA@soundfilename@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00041	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00048	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 13 ; 0000000dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0004f	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  00054	88 45 e4	 mov	 BYTE PTR $T2[ebp+12], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00057	c6 45 e5 00	 mov	 BYTE PTR $T2[ebp+13], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  0005b	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00069	8b ca		 mov	 ecx, edx
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00071	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00073	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  00076	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00079	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007c	72 0d		 jb	 SHORT $LN56@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007f	50		 push	 eax
  00080	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  00083	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00088	83 c4 08	 add	 esp, 8
$LN56@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  0008b	84 db		 test	 bl, bl
  0008d	0f 94 c0	 sete	 al

; 256  : 				return false;
; 257  : 
; 258  : 			return true;
; 259  : 		}

  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5b		 pop	 ebx
  0009c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009f	33 cd		 xor	 ecx, ebp
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataSound::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataSound::Save, COMDAT
; _this$ = ecx

; 249  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 250  : 			PrintfTabs(File, iTabs, "\n");

  00004	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00009	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00011	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00016	83 c6 14	 add	 esi, 20			; 00000014H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 250  : 			PrintfTabs(File, iTabs, "\n");

  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0001c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00020	72 02		 jb	 SHORT $LN6@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00022	8b 36		 mov	 esi, DWORD PTR [esi]
$LN6@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 251  : 			PrintfTabs(File, iTabs, "SoundFileName        \"%s\"\n", strSoundFileName.c_str());

  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  0002a	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0002d	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00035	83 c4 10	 add	 esp, 16			; 00000010H
  00038	5e		 pop	 esi

; 252  : 		}

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataSound::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataSound@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataSound@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound, COMDAT
; _this$ = ecx

; 246  : 		virtual ~SMotionEventDataSound() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 14	 push	 DWORD PTR [esi+20]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 246  : 		virtual ~SMotionEventDataSound() {}

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00036	5e		 pop	 esi
  00037	c3		 ret	 0
??1SMotionEventDataSound@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  0000d	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00014	8b 7e 1c	 mov	 edi, DWORD PTR [esi+28]
  00017	85 ff		 test	 edi, edi
  00019	74 3b		 je	 SHORT $LN13@scalar

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0001b	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0001e	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00023	2b cf		 sub	 ecx, edi
  00025	f7 e9		 imul	 ecx
  00027	c1 fa 03	 sar	 edx, 3
  0002a	8b c2		 mov	 eax, edx
  0002c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002f	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00031	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00034	c1 e0 02	 shl	 eax, 2
  00037	50		 push	 eax
  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003e	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00048	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 1699 :             _Myend   = pointer();

  0004f	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN13@scalar:
  00056	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 209  : 		virtual ~SMotionEventDataAttack() {}

  0005a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00060	74 0b		 je	 SHORT $LN17@scalar
  00062	6a 44		 push	 68			; 00000044H
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006a	83 c4 08	 add	 esp, 8
$LN17@scalar:
  0006d	5f		 pop	 edi
  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
__New_ptr$2 = -48					; size = 4
tv758 = -41						; size = 1
tv756 = -41						; size = 1
$T3 = -40						; size = 24
$T4 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataAttack::Load, COMDAT
; _this$ = ecx

; 221  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002c	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@KJGFIEPL@duringtime@
  00034	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@KJGFIEPL@duringtime@+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 221  : 		{

  0003a	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00044	c7 45 e8 0a 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 10 ; 0000000aH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0004b	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  00050	66 89 45 e0	 mov	 WORD PTR $T4[ebp+8], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00054	c6 45 e2 00	 mov	 BYTE PTR $T4[ebp+10], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00058	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	50		 push	 eax
  00063	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00066	8b cf		 mov	 ecx, edi
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0006e	85 c0		 test	 eax, eax
  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00077	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  0007a	0f 94 45 d7	 sete	 BYTE PTR tv758[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00081	72 0d		 jb	 SHORT $LN60@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00083	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	50		 push	 eax
  00085	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00088	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008d	83 c4 08	 add	 esp, 8
$LN60@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00090	80 7d d7 00	 cmp	 BYTE PTR tv758[ebp], 0
  00094	0f 85 c5 00 00
	00		 jne	 $LN122@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009a	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0009c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ae	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000b3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@NODGLCEN@enablehitprocess@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  000ba	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 16 ; 00000010H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c1	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c8	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000cb	89 45 d0	 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000ce	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000d2	8d 45 d0	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  000d5	50		 push	 eax
  000d6	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  000e2	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  000e5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000ec	50		 push	 eax
  000ed	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  000f0	8b cf		 mov	 ecx, edi
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  000f8	85 c0		 test	 eax, eax
  000fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00101	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  00104	0f 94 45 d7	 sete	 BYTE PTR tv756[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00108	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010b	72 0d		 jb	 SHORT $LN116@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010e	50		 push	 eax
  0010f	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  00112	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00117	83 c4 08	 add	 esp, 8
$LN116@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  0011a	80 7d d7 00	 cmp	 BYTE PTR tv756[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0011e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00125	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0012c	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  00130	74 07		 je	 SHORT $LN3@Load

; 226  : 			{
; 227  : 				isEnableHitProcess = TRUE;

  00132	c7 46 40 01 00
	00 00		 mov	 DWORD PTR [esi+64], 1
$LN3@Load:

; 228  : 			}
; 229  : 
; 230  : 			if (!NRaceData::LoadAttackData(rTextFileLoader, &AttackData))

  00139	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  0013c	50		 push	 eax
  0013d	57		 push	 edi
  0013e	e8 00 00 00 00	 call	 ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
  00143	83 c4 08	 add	 esp, 8
  00146	85 c0		 test	 eax, eax
  00148	74 15		 je	 SHORT $LN122@Load

; 231  : 				return false;
; 232  : 
; 233  : 			if (!NRaceData::LoadCollisionData(rTextFileLoader, &CollisionData))

  0014a	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  0014d	50		 push	 eax
  0014e	57		 push	 edi
  0014f	e8 00 00 00 00	 call	 ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
  00154	83 c4 08	 add	 esp, 8
  00157	85 c0		 test	 eax, eax
  00159	74 04		 je	 SHORT $LN122@Load

; 235  : 
; 236  : 			return true;

  0015b	b0 01		 mov	 al, 1
  0015d	eb 02		 jmp	 SHORT $LN1@Load
$LN122@Load:

; 234  : 				return false;

  0015f	32 c0		 xor	 al, al
$LN1@Load:

; 237  : 		}

  00161	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00164	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016b	59		 pop	 ecx
  0016c	5f		 pop	 edi
  0016d	5e		 pop	 esi
  0016e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00171	33 cd		 xor	 ecx, ebp
  00173	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataAttack::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataAttack::Save, COMDAT
; _this$ = ecx

; 212  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi

; 213  : 			PrintfTabs(File, iTabs, "DuringTime           %f\n", fDurationTime);

  00007	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000a	57		 push	 edi
  0000b	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR [ebx+16]
  00010	83 ec 08	 sub	 esp, 8
  00013	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  00016	0f 5a c0	 cvtps2pd xmm0, xmm0
  00019	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00023	57		 push	 edi
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 214  : 			PrintfTabs(File, iTabs, "EnableHitProcess     %d\n", isEnableHitProcess);

  0002a	ff 73 40	 push	 DWORD PTR [ebx+64]
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@
  00032	57		 push	 edi
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 215  : 			PrintfTabs(File, iTabs, "\n");

  00039	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0003e	57		 push	 edi
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 216  : 
; 217  : 			NRaceData::SaveAttackData(File, iTabs, AttackData);

  00045	8d 43 28	 lea	 eax, DWORD PTR [ebx+40]
  00048	50		 push	 eax
  00049	57		 push	 edi
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData

; 218  : 			NRaceData::SaveCollisionData(File, iTabs, CollisionData);

  00050	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  00053	50		 push	 eax
  00054	57		 push	 edi
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
  0005b	83 c4 48	 add	 esp, 72			; 00000048H
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx

; 219  : 		}

  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataAttack::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack, COMDAT
; _this$ = ecx

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  0000a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00011	8b 7e 1c	 mov	 edi, DWORD PTR [esi+28]
  00014	85 ff		 test	 edi, edi
  00016	74 3b		 je	 SHORT $LN13@SMotionEve

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00018	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0001b	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00020	2b cf		 sub	 ecx, edi
  00022	f7 e9		 imul	 ecx
  00024	c1 fa 03	 sar	 edx, 3
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00031	c1 e0 02	 shl	 eax, 2
  00034	50		 push	 eax
  00035	57		 push	 edi
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003b	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00045	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 1699 :             _Myend   = pointer();

  0004c	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
$LN13@SMotionEve:
  00053	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00054	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0005a	5e		 pop	 esi
  0005b	c3		 ret	 0
??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 170  : 		virtual ~SMotionEventDataFly() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 40	 push	 DWORD PTR [esi+64]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 54 0f 00
	00 00		 mov	 DWORD PTR [esi+84], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00033	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00036	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00039	72 0d		 jb	 SHORT $LN21@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0003b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	50		 push	 eax
  0003d	ff 76 18	 push	 DWORD PTR [esi+24]
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00045	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0004c	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00053	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005a	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 170  : 		virtual ~SMotionEventDataFly() {}

  0005e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00064	74 0b		 je	 SHORT $LN27@scalar
  00066	6a 58		 push	 88			; 00000058H
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006e	83 c4 08	 add	 esp, 8
$LN27@scalar:
  00071	8b c6		 mov	 eax, esi
  00073	5e		 pop	 esi
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
__New_ptr$2 = -76					; size = 4
_rTextFileLoader$GSCopy$1$ = -72			; size = 4
tv1460 = -65						; size = 1
tv1459 = -65						; size = 1
tv1457 = -65						; size = 1
tv1456 = -65						; size = 1
$T3 = -64						; size = 24
$T4 = -64						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataFly::Load, COMDAT
; _this$ = ecx

; 181  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002c	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+8
  00031	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 181  : 		{

  00039	8b 75 08	 mov	 esi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0003c	89 45 e0	 mov	 DWORD PTR $T6[ebp+8], eax
  0003f	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+12
  00045	66 89 45 e4	 mov	 WORD PTR $T6[ebp+12], ax
  00049	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HJAHPMOG@attachingenable@+14
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 181  : 		{

  0004e	89 75 b8	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00051	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00058	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0005f	66 0f d6 45 d8	 movq	 QWORD PTR $T6[ebp], xmm0
  00064	88 45 e6	 mov	 BYTE PTR $T6[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00067	c6 45 e7 00	 mov	 BYTE PTR $T6[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  0006b	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  0006e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00075	50		 push	 eax
  00076	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  00079	8b ce		 mov	 ecx, esi
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00081	85 c0		 test	 eax, eax
  00083	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008a	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  0008d	0f 94 45 bf	 sete	 BYTE PTR tv1460[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00091	83 f8 10	 cmp	 eax, 16			; 00000010H
  00094	72 0d		 jb	 SHORT $LN62@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00096	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00097	50		 push	 eax
  00098	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  0009b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a0	83 c4 08	 add	 esp, 8
$LN62@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  000a3	80 7d bf 00	 cmp	 BYTE PTR tv1460[ebp], 0
  000a7	0f 85 ba 01 00
	00		 jne	 $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ad	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000af	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b6	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000bd	c6 45 c0 00	 mov	 BYTE PTR $T4[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c1	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@FCIOLNPK@attachingbonename@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  000cd	c7 45 d0 11 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 17 ; 00000011H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  000d4	c7 45 d4 1f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000db	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000de	8a 0d 10 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0BC@FCIOLNPK@attachingbonename@+16
  000e4	88 48 10	 mov	 BYTE PTR [eax+16], cl

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000e7	89 45 b4	 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000ea	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000ee	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  000f1	50		 push	 eax
  000f2	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000fb	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  000fe	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  00101	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00108	50		 push	 eax
  00109	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  0010c	8b ce		 mov	 ecx, esi
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00114	85 c0		 test	 eax, eax
  00116	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0011d	8b 45 d4	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00120	0f 94 45 bf	 sete	 BYTE PTR tv1459[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00124	83 f8 10	 cmp	 eax, 16			; 00000010H
  00127	72 0d		 jb	 SHORT $LN118@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00129	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0012a	50		 push	 eax
  0012b	ff 75 c0	 push	 DWORD PTR $T4[ebp]
  0012e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00133	83 c4 08	 add	 esp, 8
$LN118@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00136	80 7d bf 00	 cmp	 BYTE PTR tv1459[ebp], 0
  0013a	0f 85 27 01 00
	00		 jne	 $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00140	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@BKDIDPMI@flyfilename@+8
  00146	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@BKDIDPMI@flyfilename@
  0014e	66 89 45 c8	 mov	 WORD PTR $T3[ebp+8], ax
  00152	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@BKDIDPMI@flyfilename@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00157	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0015e	c7 45 d0 0b 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00165	66 0f d6 45 c0	 movq	 QWORD PTR $T3[ebp], xmm0
  0016a	88 45 ca	 mov	 BYTE PTR $T3[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0016d	c6 45 cb 00	 mov	 BYTE PTR $T3[ebp+11], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  00171	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00174	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
  00177	56		 push	 esi
  00178	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  0017b	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00182	50		 push	 eax
  00183	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00188	85 c0		 test	 eax, eax
  0018a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00191	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  00194	0f 94 45 bf	 sete	 BYTE PTR tv1457[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00198	83 f8 10	 cmp	 eax, 16			; 00000010H
  0019b	72 0d		 jb	 SHORT $LN174@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0019d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0019e	50		 push	 eax
  0019f	ff 75 c0	 push	 DWORD PTR $T3[ebp]
  001a2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001a7	83 c4 08	 add	 esp, 8
$LN174@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  001aa	80 7d bf 00	 cmp	 BYTE PTR tv1457[ebp], 0
  001ae	0f 85 b3 00 00
	00		 jne	 $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001b4	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@OKENILIB@flyposition@+8
  001ba	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@OKENILIB@flyposition@
  001c2	66 89 45 e0	 mov	 WORD PTR $T5[ebp+8], ax
  001c6	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@OKENILIB@flyposition@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001cb	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  001d2	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001d9	66 0f d6 45 d8	 movq	 QWORD PTR $T5[ebp], xmm0
  001de	88 45 e2	 mov	 BYTE PTR $T5[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001e1	c6 45 e3 00	 mov	 BYTE PTR $T5[ebp+11], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  001e5	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  001e8	8d 47 30	 lea	 eax, DWORD PTR [edi+48]
  001eb	50		 push	 eax
  001ec	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  001ef	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  001fc	85 c0		 test	 eax, eax
  001fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00205	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  00208	0f 94 45 bf	 sete	 BYTE PTR tv1456[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0020c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0020f	72 0d		 jb	 SHORT $LN230@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00211	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00212	50		 push	 eax
  00213	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00216	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0021b	83 c4 08	 add	 esp, 8
$LN230@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  0021e	80 7d bf 00	 cmp	 BYTE PTR tv1456[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00222	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00229	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00230	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  00234	75 31		 jne	 SHORT $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00236	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  0023a	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  0023c	72 02		 jb	 SHORT $LN251@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0023e	8b 06		 mov	 eax, DWORD PTR [esi]
$LN251@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 190  : 			dwFlyIndex = GetCaseCRC32(strFlyFileName.c_str(), strFlyFileName.length());

  00240	ff 77 50	 push	 DWORD PTR [edi+80]
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00249	83 c4 08	 add	 esp, 8
  0024c	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0024f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00253	72 02		 jb	 SHORT $LN246@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00255	8b 36		 mov	 esi, DWORD PTR [esi]
$LN246@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 194  : 			CFlyingManager::Instance().RegisterFlyingData(strFlyFileName.c_str());

  00257	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A ; CSingleton<CFlyingManager>::ms_singleton
  0025d	56		 push	 esi
  0025e	e8 00 00 00 00	 call	 ?RegisterFlyingData@CFlyingManager@@QAE_NPBD@Z ; CFlyingManager::RegisterFlyingData

; 195  : #endif
; 196  : 
; 197  : 			return true;

  00263	b0 01		 mov	 al, 1
  00265	eb 02		 jmp	 SHORT $LN1@Load
$LN252@Load:

; 189  : 				return false;

  00267	32 c0		 xor	 al, al
$LN1@Load:

; 198  : 		}

  00269	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0026c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00273	59		 pop	 ecx
  00274	5f		 pop	 edi
  00275	5e		 pop	 esi
  00276	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00279	33 cd		 xor	 ecx, ebp
  0027b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00280	8b e5		 mov	 esp, ebp
  00282	5d		 pop	 ebp
  00283	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataFly::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataFly::Save, COMDAT
; _this$ = ecx

; 173  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 174  : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 175  : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0001a	ff 76 14	 push	 DWORD PTR [esi+20]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
  00022	57		 push	 edi
  00023	53		 push	 ebx
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00029	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 175  : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00033	72 02		 jb	 SHORT $LN6@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00035	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 176  : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  0003d	57		 push	 edi
  0003e	53		 push	 ebx
  0003f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00044	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 176  : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00047	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0004a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004e	72 02		 jb	 SHORT $LN13@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00050	8b 00		 mov	 eax, DWORD PTR [eax]
$LN13@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 177  : 			PrintfTabs(File, iTabs, "FlyFileName       \"%s\"\n", strFlyFileName.c_str());

  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  00058	57		 push	 edi
  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0005f	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]

; 178  : 			PrintfTabs(File, iTabs, "FlyPosition       %f %f %f\n", v3FlyPosition.x, v3FlyPosition.y, v3FlyPosition.z);

  00064	0f 5a c0	 cvtps2pd xmm0, xmm0
  00067	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0006d	f3 0f 10 46 34	 movss	 xmm0, DWORD PTR [esi+52]
  00072	0f 5a c0	 cvtps2pd xmm0, xmm0
  00075	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0007a	83 ec 08	 sub	 esp, 8
  0007d	f3 0f 10 46 30	 movss	 xmm0, DWORD PTR [esi+48]
  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  0008f	57		 push	 edi
  00090	53		 push	 ebx
  00091	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00096	83 c4 24	 add	 esp, 36			; 00000024H
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx

; 179  : 		}

  0009c	5d		 pop	 ebp
  0009d	c2 08 00	 ret	 8
?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataFly::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataFly@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataFly@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly, COMDAT
; _this$ = ecx

; 170  : 		virtual ~SMotionEventDataFly() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 40	 push	 DWORD PTR [esi+64]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 54 0f 00
	00 00		 mov	 DWORD PTR [esi+84], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00033	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00036	72 0d		 jb	 SHORT $LN17@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00038	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	50		 push	 eax
  0003a	ff 76 18	 push	 DWORD PTR [esi+24]
  0003d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00042	83 c4 08	 add	 esp, 8
$LN17@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00045	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004c	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00053	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 170  : 		virtual ~SMotionEventDataFly() {}

  00057	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0005d	5e		 pop	 esi
  0005e	c3		 ret	 0
??1SMotionEventDataFly@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 18	 push	 DWORD PTR [esi+24]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
  00021	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00025	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002c	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0003d	74 0b		 je	 SHORT $LN17@scalar
  0003f	6a 44		 push	 68			; 00000044H
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	83 c4 08	 add	 esp, 8
$LN17@scalar:
  0004a	8b c6		 mov	 eax, esi
  0004c	5e		 pop	 esi
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
__New_ptr$2 = -52					; size = 4
_rTextFileLoader$GSCopy$1$ = -48			; size = 4
tv1457 = -41						; size = 1
tv1456 = -41						; size = 1
tv1454 = -41						; size = 1
tv1452 = -41						; size = 1
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::Load, COMDAT
; _this$ = ecx

; 137  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002c	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@MBGGNLC@effectfilename@+8
  00031	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@MBGGNLC@effectfilename@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 137  : 		{

  00039	8b 4d 08	 mov	 ecx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0003c	89 45 e0	 mov	 DWORD PTR $T6[ebp+8], eax
  0003f	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@MBGGNLC@effectfilename@+12
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 137  : 		{

  00045	89 4d d0	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00048	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0004f	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00056	66 0f d6 45 d8	 movq	 QWORD PTR $T6[ebp], xmm0
  0005b	66 89 45 e4	 mov	 WORD PTR $T6[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0005f	c6 45 e6 00	 mov	 BYTE PTR $T6[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  00063	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	56		 push	 esi
  0006e	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00077	85 c0		 test	 eax, eax
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00080	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  00083	0f 94 45 d7	 sete	 BYTE PTR tv1457[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00087	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008a	72 0d		 jb	 SHORT $LN62@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008d	50		 push	 eax
  0008e	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  00091	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00096	83 c4 08	 add	 esp, 8
$LN62@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  00099	80 7d d7 00	 cmp	 BYTE PTR tv1457[ebp], 0
  0009d	0f 85 d1 01 00
	00		 jne	 $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000a3	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PMGDNJPL@effectposition@+8
  000a8	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PMGDNJPL@effectposition@
  000b0	89 45 e0	 mov	 DWORD PTR $T5[ebp+8], eax
  000b3	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PMGDNJPL@effectposition@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000c0	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000c7	66 0f d6 45 d8	 movq	 QWORD PTR $T5[ebp], xmm0
  000cc	66 89 45 e4	 mov	 WORD PTR $T5[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000d0	c6 45 e6 00	 mov	 BYTE PTR $T5[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  000d4	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  000d7	8d 47 30	 lea	 eax, DWORD PTR [edi+48]
  000da	50		 push	 eax
  000db	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  000de	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  000eb	85 c0		 test	 eax, eax
  000ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f4	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  000f7	0f 94 45 d7	 sete	 BYTE PTR tv1456[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000fb	83 f8 10	 cmp	 eax, 16			; 00000010H
  000fe	72 0d		 jb	 SHORT $LN118@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00100	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00101	50		 push	 eax
  00102	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00105	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0010a	83 c4 08	 add	 esp, 8
$LN118@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  0010d	80 7d d7 00	 cmp	 BYTE PTR tv1456[ebp], 0
  00111	0f 85 5d 01 00
	00		 jne	 $LN252@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00117	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@DEKLACIK@followingenable@+8
  0011c	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@DEKLACIK@followingenable@
  00124	89 45 e0	 mov	 DWORD PTR $T4[ebp+8], eax
  00127	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@DEKLACIK@followingenable@+12
  0012d	66 89 45 e4	 mov	 WORD PTR $T4[ebp+12], ax
  00131	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@DEKLACIK@followingenable@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00136	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0013d	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00144	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  00149	88 45 e6	 mov	 BYTE PTR $T4[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0014c	c6 45 e7 00	 mov	 BYTE PTR $T4[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00150	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00153	8d 47 3c	 lea	 eax, DWORD PTR [edi+60]
  00156	50		 push	 eax
  00157	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  0015a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00167	85 c0		 test	 eax, eax
  00169	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00170	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00173	0f 94 45 d7	 sete	 BYTE PTR tv1454[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00177	83 f8 10	 cmp	 eax, 16			; 00000010H
  0017a	72 0d		 jb	 SHORT $LN174@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0017c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0017d	50		 push	 eax
  0017e	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00181	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00186	83 c4 08	 add	 esp, 8
$LN174@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00189	80 7d d7 00	 cmp	 BYTE PTR tv1454[ebp], 0
  0018d	74 07		 je	 SHORT $LN4@Load

; 143  : 			{
; 144  : 				isFollowing = FALSE;

  0018f	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
$LN4@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00196	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00198	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0019f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001a6	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001aa	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  001af	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@PGIDKNAJ@fishingeffectflag@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  001b6	c7 45 e8 11 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 17 ; 00000011H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  001bd	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  001c4	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  001c7	8a 0d 10 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0BC@PGIDKNAJ@fishingeffectflag@+16
  001cd	88 48 10	 mov	 BYTE PTR [eax+16], cl

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  001d0	89 45 cc	 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  001d3	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  001d7	8d 45 cc	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  001da	50		 push	 eax
  001db	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  001e4	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  001e7	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  001ea	8d 47 40	 lea	 eax, DWORD PTR [edi+64]
  001ed	50		 push	 eax
  001ee	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  001f1	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  001fe	85 c0		 test	 eax, eax
  00200	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00207	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  0020a	0f 94 45 d7	 sete	 BYTE PTR tv1452[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0020e	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00211	72 0d		 jb	 SHORT $LN230@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00213	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00214	50		 push	 eax
  00215	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  00218	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0021d	83 c4 08	 add	 esp, 8
$LN230@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  00220	80 7d d7 00	 cmp	 BYTE PTR tv1452[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00224	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0022b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00232	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  00236	74 07		 je	 SHORT $LN5@Load

; 147  : 			{
; 148  : 				isFishingEffect = FALSE;

  00238	c7 47 40 00 00
	00 00		 mov	 DWORD PTR [edi+64], 0
$LN5@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0023f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00243	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  00245	72 02		 jb	 SHORT $LN251@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00247	8b 06		 mov	 eax, DWORD PTR [esi]
$LN251@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 150  : 			dwEffectIndex = GetCaseCRC32(strEffectFileName.c_str(), strEffectFileName.length());

  00249	ff 77 28	 push	 DWORD PTR [edi+40]
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00252	83 c4 08	 add	 esp, 8
  00255	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00258	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0025c	72 02		 jb	 SHORT $LN246@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0025e	8b 36		 mov	 esi, DWORD PTR [esi]
$LN246@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 152  : 			CEffectManager::Instance().RegisterEffect(strEffectFileName.c_str());

  00260	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00266	6a 00		 push	 0
  00268	6a 00		 push	 0
  0026a	56		 push	 esi
  0026b	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 153  : #endif
; 154  : 
; 155  : 			return true;

  00270	b0 01		 mov	 al, 1
  00272	eb 02		 jmp	 SHORT $LN1@Load
$LN252@Load:

; 141  : 				return false;

  00274	32 c0		 xor	 al, al
$LN1@Load:

; 156  : 		}

  00276	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00279	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00280	59		 pop	 ecx
  00281	5f		 pop	 edi
  00282	5e		 pop	 esi
  00283	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00286	33 cd		 xor	 ecx, ebp
  00288	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0028d	8b e5		 mov	 esp, ebp
  0028f	5d		 pop	 ebp
  00290	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::Save, COMDAT
; _this$ = ecx

; 129  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 130  : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  0001a	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 130  : 			PrintfTabs(File, iTabs, "\n");

  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00020	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00024	72 02		 jb	 SHORT $LN6@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00026	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 131  : 			PrintfTabs(File, iTabs, "EffectFileName       \"%s\"\n", strEffectFileName.c_str());

  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  0002e	57		 push	 edi
  0002f	53		 push	 ebx
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00035	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]

; 132  : 			PrintfTabs(File, iTabs, "EffectPosition       %f %f %f\n", v3EffectPosition.x, v3EffectPosition.y, v3EffectPosition.z);

  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00043	f3 0f 10 46 34	 movss	 xmm0, DWORD PTR [esi+52]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00050	83 ec 08	 sub	 esp, 8
  00053	f3 0f 10 46 30	 movss	 xmm0, DWORD PTR [esi+48]
  00058	0f 5a c0	 cvtps2pd xmm0, xmm0
  0005b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  00065	57		 push	 edi
  00066	53		 push	 ebx
  00067	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 133  : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  0006c	ff 76 3c	 push	 DWORD PTR [esi+60]
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
  00074	57		 push	 edi
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 134  : 			PrintfTabs(File, iTabs, "FishingEffectFlag    %d\n", isFishingEffect);

  0007b	ff 76 40	 push	 DWORD PTR [esi+64]
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@
  00083	57		 push	 edi
  00084	53		 push	 ebx
  00085	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0008a	83 c4 44	 add	 esp, 68			; 00000044H
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx

; 135  : 		}

  00090	5d		 pop	 ebp
  00091	c2 08 00	 ret	 8
?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget, COMDAT
; _this$ = ecx

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 18	 push	 DWORD PTR [esi+24]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00036	5e		 pop	 esi
  00037	c3		 ret	 0
??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN11@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 48	 push	 DWORD PTR [esi+72]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN11@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 5c 0f 00
	00 00		 mov	 DWORD PTR [esi+92], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 48 00	 mov	 BYTE PTR [esi+72], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00033	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00036	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00039	72 0d		 jb	 SHORT $LN21@scalar

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0003b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	50		 push	 eax
  0003d	ff 76 20	 push	 DWORD PTR [esi+32]
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00045	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0004c	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00053	c7 46 34 0f 00
	00 00		 mov	 DWORD PTR [esi+52], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005a	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 80   : 		virtual ~SMotionEventDataEffect() {}

  0005e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00064	74 0b		 je	 SHORT $LN27@scalar
  00066	6a 60		 push	 96			; 00000060H
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006e	83 c4 08	 add	 esp, 8
$LN27@scalar:
  00071	8b c6		 mov	 eax, esi
  00073	5e		 pop	 esi
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
__New_ptr$2 = -76					; size = 4
_rTextFileLoader$GSCopy$1$ = -72			; size = 4
tv2093 = -65						; size = 1
tv2092 = -65						; size = 1
tv2091 = -65						; size = 1
tv2089 = -65						; size = 1
tv2088 = -65						; size = 1
tv2086 = -65						; size = 1
$T3 = -64						; size = 24
$T4 = -64						; size = 24
$T5 = -64						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
$T8 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataEffect::Load, COMDAT
; _this$ = ecx

; 93   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002c	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@MCOMBMGO@independentflag@+8
  00031	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@MCOMBMGO@independentflag@
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 93   : 		{

  00039	8b 75 08	 mov	 esi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0003c	89 45 e0	 mov	 DWORD PTR $T8[ebp+8], eax
  0003f	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@MCOMBMGO@independentflag@+12
  00045	66 89 45 e4	 mov	 WORD PTR $T8[ebp+12], ax
  00049	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@MCOMBMGO@independentflag@+14
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 93   : 		{

  0004e	89 75 b8	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00051	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00058	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0005f	66 0f d6 45 d8	 movq	 QWORD PTR $T8[ebp], xmm0
  00064	88 45 e6	 mov	 BYTE PTR $T8[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00067	c6 45 e7 00	 mov	 BYTE PTR $T8[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  0006b	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  0006e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00075	50		 push	 eax
  00076	8d 45 d8	 lea	 eax, DWORD PTR $T8[ebp]
  00079	8b ce		 mov	 ecx, esi
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00081	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00083	8b 45 ec	 mov	 eax, DWORD PTR $T8[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  00086	0f 94 45 bf	 sete	 BYTE PTR tv2093[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008d	72 0d		 jb	 SHORT $LN66@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00090	50		 push	 eax
  00091	ff 75 d8	 push	 DWORD PTR $T8[ebp]
  00094	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00099	83 c4 08	 add	 esp, 8
$LN66@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  0009c	80 7d bf 00	 cmp	 BYTE PTR tv2093[ebp], 0
  000a0	74 07		 je	 SHORT $LN2@Load

; 95   : 				isIndependent = FALSE;

  000a2	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
$LN2@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000a9	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+8
  000ae	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@
  000b6	89 45 e0	 mov	 DWORD PTR $T7[ebp+8], eax
  000b9	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+12
  000bf	66 89 45 e4	 mov	 WORD PTR $T7[ebp+12], ax
  000c3	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HJAHPMOG@attachingenable@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000cf	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000d6	66 0f d6 45 d8	 movq	 QWORD PTR $T7[ebp], xmm0
  000db	88 45 e6	 mov	 BYTE PTR $T7[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000de	c6 45 e7 00	 mov	 BYTE PTR $T7[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  000e2	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  000e5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000ec	50		 push	 eax
  000ed	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  000f0	8b ce		 mov	 ecx, esi
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  000f8	85 c0		 test	 eax, eax
  000fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00101	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  00104	0f 94 45 bf	 sete	 BYTE PTR tv2092[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00108	83 f8 10	 cmp	 eax, 16			; 00000010H
  0010b	72 0d		 jb	 SHORT $LN122@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010e	50		 push	 eax
  0010f	ff 75 d8	 push	 DWORD PTR $T7[ebp]
  00112	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00117	83 c4 08	 add	 esp, 8
$LN122@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  0011a	80 7d bf 00	 cmp	 BYTE PTR tv2092[ebp], 0
  0011e	0f 85 41 02 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00124	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00126	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0012d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00134	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00138	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0013d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@FCIOLNPK@attachingbonename@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00144	c7 45 d0 11 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 17 ; 00000011H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0014b	c7 45 d4 1f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00152	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00155	8a 0d 10 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0BC@FCIOLNPK@attachingbonename@+16
  0015b	88 48 10	 mov	 BYTE PTR [eax+16], cl

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0015e	89 45 b4	 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00161	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00165	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  00168	50		 push	 eax
  00169	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00172	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00175	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00178	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0017f	50		 push	 eax
  00180	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  00183	8b ce		 mov	 ecx, esi
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0018b	85 c0		 test	 eax, eax
  0018d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00194	8b 45 d4	 mov	 eax, DWORD PTR $T5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00197	0f 94 45 bf	 sete	 BYTE PTR tv2091[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019b	83 f8 10	 cmp	 eax, 16			; 00000010H
  0019e	72 0d		 jb	 SHORT $LN178@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001a0	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a1	50		 push	 eax
  001a2	ff 75 c0	 push	 DWORD PTR $T5[ebp]
  001a5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001aa	83 c4 08	 add	 esp, 8
$LN178@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  001ad	80 7d bf 00	 cmp	 BYTE PTR tv2091[ebp], 0
  001b1	0f 85 ae 01 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001b7	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@MBGGNLC@effectfilename@+8
  001bc	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@MBGGNLC@effectfilename@
  001c4	89 45 c8	 mov	 DWORD PTR $T4[ebp+8], eax
  001c7	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@MBGGNLC@effectfilename@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001cd	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  001d4	c7 45 d0 0e 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001db	66 0f d6 45 c0	 movq	 QWORD PTR $T4[ebp], xmm0
  001e0	66 89 45 cc	 mov	 WORD PTR $T4[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001e4	c6 45 ce 00	 mov	 BYTE PTR $T4[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  001e8	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  001eb	8d 77 48	 lea	 esi, DWORD PTR [edi+72]
  001ee	56		 push	 esi
  001ef	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  001f2	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  001ff	85 c0		 test	 eax, eax
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00208	8b 45 d4	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  0020b	0f 94 45 bf	 sete	 BYTE PTR tv2089[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0020f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00212	72 0d		 jb	 SHORT $LN234@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00214	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00215	50		 push	 eax
  00216	ff 75 c0	 push	 DWORD PTR $T4[ebp]
  00219	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0021e	83 c4 08	 add	 esp, 8
$LN234@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  00221	80 7d bf 00	 cmp	 BYTE PTR tv2089[ebp], 0
  00225	0f 85 3a 01 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0022b	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PMGDNJPL@effectposition@+8
  00230	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PMGDNJPL@effectposition@
  00238	89 45 c8	 mov	 DWORD PTR $T3[ebp+8], eax
  0023b	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PMGDNJPL@effectposition@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00241	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00248	c7 45 d0 0e 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0024f	66 0f d6 45 c0	 movq	 QWORD PTR $T3[ebp], xmm0
  00254	66 89 45 cc	 mov	 WORD PTR $T3[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00258	c6 45 ce 00	 mov	 BYTE PTR $T3[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  0025c	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0025f	8d 47 38	 lea	 eax, DWORD PTR [edi+56]
  00262	50		 push	 eax
  00263	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  00266	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  00273	85 c0		 test	 eax, eax
  00275	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0027c	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  0027f	0f 94 45 bf	 sete	 BYTE PTR tv2088[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00283	83 f8 10	 cmp	 eax, 16			; 00000010H
  00286	72 0d		 jb	 SHORT $LN290@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00288	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00289	50		 push	 eax
  0028a	ff 75 c0	 push	 DWORD PTR $T3[ebp]
  0028d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00292	83 c4 08	 add	 esp, 8
$LN290@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  00295	80 7d bf 00	 cmp	 BYTE PTR tv2088[ebp], 0
  00299	0f 85 c6 00 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0029f	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@DEKLACIK@followingenable@+8
  002a4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@DEKLACIK@followingenable@
  002ac	89 45 e0	 mov	 DWORD PTR $T6[ebp+8], eax
  002af	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@DEKLACIK@followingenable@+12
  002b5	66 89 45 e4	 mov	 WORD PTR $T6[ebp+12], ax
  002b9	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@DEKLACIK@followingenable@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002be	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  002c5	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  002cc	66 0f d6 45 d8	 movq	 QWORD PTR $T6[ebp], xmm0
  002d1	88 45 e6	 mov	 BYTE PTR $T6[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  002d4	c6 45 e7 00	 mov	 BYTE PTR $T6[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  002d8	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  002db	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  002de	50		 push	 eax
  002df	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  002e2	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  002ef	85 c0		 test	 eax, eax
  002f1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  002f8	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  002fb	0f 94 45 bf	 sete	 BYTE PTR tv2086[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  002ff	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00302	72 0d		 jb	 SHORT $LN346@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00304	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00305	50		 push	 eax
  00306	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  00309	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0030e	83 c4 08	 add	 esp, 8
$LN346@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00311	80 7d bf 00	 cmp	 BYTE PTR tv2086[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00315	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0031c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00323	c6 45 d8 00	 mov	 BYTE PTR $T6[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00327	74 07		 je	 SHORT $LN7@Load

; 105  : 			{
; 106  : 				isFollowing = FALSE;

  00329	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN7@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00330	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00334	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  00336	72 02		 jb	 SHORT $LN367@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00338	8b 06		 mov	 eax, DWORD PTR [esi]
$LN367@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 108  : 			dwEffectIndex = GetCaseCRC32(strEffectFileName.c_str(), strEffectFileName.length());

  0033a	ff 77 58	 push	 DWORD PTR [edi+88]
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00343	83 c4 08	 add	 esp, 8
  00346	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00349	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0034d	72 02		 jb	 SHORT $LN362@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0034f	8b 36		 mov	 esi, DWORD PTR [esi]
$LN362@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 109  : 			CEffectManager::Instance().RegisterEffect(strEffectFileName.c_str());

  00351	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00357	6a 00		 push	 0
  00359	6a 00		 push	 0
  0035b	56		 push	 esi
  0035c	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 110  : 
; 111  : 			return true;

  00361	b0 01		 mov	 al, 1
  00363	eb 02		 jmp	 SHORT $LN1@Load
$LN368@Load:

; 103  : 				return false;

  00365	32 c0		 xor	 al, al
$LN1@Load:

; 112  : 		}

  00367	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0036a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00371	59		 pop	 ecx
  00372	5f		 pop	 edi
  00373	5e		 pop	 esi
  00374	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00377	33 cd		 xor	 ecx, ebp
  00379	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0037e	8b e5		 mov	 esp, ebp
  00380	5d		 pop	 ebp
  00381	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$4:
  00020	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataEffect::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataEffect::Save, COMDAT
; _this$ = ecx

; 83   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 84   : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 85   : 			PrintfTabs(File, iTabs, "IndependentFlag      %d\n", isIndependent);

  0001a	ff 76 1c	 push	 DWORD PTR [esi+28]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@
  00022	57		 push	 edi
  00023	53		 push	 ebx
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 86   : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  00029	ff 76 14	 push	 DWORD PTR [esi+20]
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
  00031	57		 push	 edi
  00032	53		 push	 ebx
  00033	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00038	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 86   : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0003b	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0003e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00042	72 02		 jb	 SHORT $LN6@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00044	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 87   : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00046	50		 push	 eax
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  0004c	57		 push	 edi
  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 88   : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  00053	ff 76 18	 push	 DWORD PTR [esi+24]
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
  0005b	57		 push	 edi
  0005c	53		 push	 ebx
  0005d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00062	8d 46 48	 lea	 eax, DWORD PTR [esi+72]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 88   : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  00065	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00068	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0006c	72 02		 jb	 SHORT $LN13@Save

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN13@Save:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 89   : 			PrintfTabs(File, iTabs, "EffectFileName       \"%s\"\n", strEffectFileName.c_str());

  00070	50		 push	 eax
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  00076	57		 push	 edi
  00077	53		 push	 ebx
  00078	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0007d	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]

; 90   : 			PrintfTabs(File, iTabs, "EffectPosition       %f %f %f\n", v3EffectPosition.x, v3EffectPosition.y, v3EffectPosition.z);

  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0008b	f3 0f 10 46 3c	 movss	 xmm0, DWORD PTR [esi+60]
  00090	0f 5a c0	 cvtps2pd xmm0, xmm0
  00093	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00098	83 ec 08	 sub	 esp, 8
  0009b	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]
  000a0	0f 5a c0	 cvtps2pd xmm0, xmm0
  000a3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  000ad	57		 push	 edi
  000ae	53		 push	 ebx
  000af	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000b4	83 c4 24	 add	 esp, 36			; 00000024H
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx

; 91   : 		}

  000ba	5d		 pop	 ebp
  000bb	c2 08 00	 ret	 8
?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataEffect::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect, COMDAT
; _this$ = ecx

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 48	 push	 DWORD PTR [esi+72]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0001e	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00025	c7 46 5c 0f 00
	00 00		 mov	 DWORD PTR [esi+92], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002c	c6 46 48 00	 mov	 BYTE PTR [esi+72], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00033	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00036	72 0d		 jb	 SHORT $LN17@SMotionEve

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00038	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	50		 push	 eax
  0003a	ff 76 20	 push	 DWORD PTR [esi+32]
  0003d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00042	83 c4 08	 add	 esp, 8
$LN17@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00045	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004c	c7 46 34 0f 00
	00 00		 mov	 DWORD PTR [esi+52], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00053	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00057	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0005d	5e		 pop	 esi
  0005e	c3		 ret	 0
??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 1c		 push	 28			; 0000001cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::Load, COMDAT
; _this$ = ecx

; 40   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@KJGFIEPL@duringtime@
  00035	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@KJGFIEPL@duringtime@+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 40   : 		{

  0003b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 0a 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 10 ; 0000000aH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0004c	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  00051	66 89 45 e0	 mov	 WORD PTR $T4[ebp+8], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00055	c6 45 e2 00	 mov	 BYTE PTR $T4[ebp+10], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	50		 push	 eax
  00064	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00067	8b cf		 mov	 ecx, edi
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0006f	85 c0		 test	 eax, eax
  00071	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00078	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  0007b	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00081	72 0d		 jb	 SHORT $LN60@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00083	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	50		 push	 eax
  00085	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00088	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008d	83 c4 08	 add	 esp, 8
$LN60@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00090	84 db		 test	 bl, bl
  00092	0f 85 ca 00 00
	00		 jne	 $LN178@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_05PLIADJJL@power@
  0009d	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  000a0	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_05PLIADJJL@power@+4

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a5	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000ac	c7 45 e8 05 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 5

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000b3	88 45 dc	 mov	 BYTE PTR $T3[ebp+4], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000b6	88 5d dd	 mov	 BYTE PTR $T3[ebp+5], bl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  000b9	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000bc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000c3	50		 push	 eax
  000c4	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  000c7	8b cf		 mov	 ecx, edi
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  000cf	85 c0		 test	 eax, eax
  000d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000d8	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  000db	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 0d		 jb	 SHORT $LN116@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000e3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e4	50		 push	 eax
  000e5	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000e8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ed	83 c4 08	 add	 esp, 8
$LN116@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  000f0	84 db		 test	 bl, bl
  000f2	75 6e		 jne	 SHORT $LN178@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000f4	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@JIGGKKJB@affectingrange@+8
  000f9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@JIGGKKJB@affectingrange@
  00101	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax
  00104	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@JIGGKKJB@affectingrange@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0010a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00111	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00118	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  0011d	66 89 45 e4	 mov	 WORD PTR $T2[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00121	88 5d e6	 mov	 BYTE PTR $T2[ebp+14], bl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  00124	83 c6 18	 add	 esi, 24			; 00000018H
  00127	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0012e	56		 push	 esi
  0012f	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00132	8b cf		 mov	 ecx, edi
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  0013a	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0013c	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  0013f	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00142	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00145	72 0d		 jb	 SHORT $LN172@Load

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00147	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00148	50		 push	 eax
  00149	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  0014c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00151	83 c4 08	 add	 esp, 8
$LN172@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  00154	84 db		 test	 bl, bl
  00156	74 06		 je	 SHORT $LN4@Load

; 46   : 				iAffectingRange = 0;

  00158	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@Load:

; 47   : 
; 48   : 			return true;

  0015e	b0 01		 mov	 al, 1
  00160	eb 02		 jmp	 SHORT $LN1@Load
$LN178@Load:

; 44   : 				return false;

  00162	32 c0		 xor	 al, al
$LN1@Load:

; 49   : 		}

  00164	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00167	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016e	59		 pop	 ecx
  0016f	5f		 pop	 edi
  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx
  00172	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00175	33 cd		 xor	 ecx, ebp
  00177	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017c	8b e5		 mov	 esp, ebp
  0017e	5d		 pop	 ebp
  0017f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::Save, COMDAT
; _this$ = ecx

; 33   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 34   : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabs$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000b	57		 push	 edi
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	8b f9		 mov	 edi, ecx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0001a	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]

; 35   : 			PrintfTabs(File, iTabs, "DuringTime           %f\n", fDurationTime);

  0001f	83 c4 04	 add	 esp, 4
  00022	0f 5a c0	 cvtps2pd xmm0, xmm0
  00025	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  0002f	53		 push	 ebx
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 36   : 			PrintfTabs(File, iTabs, "Power                %d\n", iPower);

  00036	ff 77 14	 push	 DWORD PTR [edi+20]
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  0003e	53		 push	 ebx
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 37   : 			PrintfTabs(File, iTabs, "AffectingRange       %d\n", iAffectingRange);

  00045	ff 77 18	 push	 DWORD PTR [edi+24]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@
  0004d	53		 push	 ebx
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00054	83 c4 34	 add	 esp, 52			; 00000034H
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx

; 38   : 		}

  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving, COMDAT
; _this$ = ecx

; 30   : 		virtual ~SMotionEventDataScreenWaving() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventData::Load, COMDAT
; _this$ = ecx

; 20   : 		virtual bool Load(CTextFileLoader & rTextFileLoader) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventData::Load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventData@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventData@NMotionEvent@@UAE@XZ PROC		; NMotionEvent::SMotionEventData::~SMotionEventData, COMDAT
; _this$ = ecx

; 17   : 		virtual ~SMotionEventData() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventData@NMotionEvent@@UAE@XZ ENDP		; NMotionEvent::SMotionEventData::~SMotionEventData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ PROC ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 4d		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USSoundInstance@NSound@@@std@@@std@@YAXPAUSSoundInstance@NSound@@QAU12@AAV?$allocator@USSoundInstance@NSound@@@0@@Z ; std::_Destroy_range<std::allocator<NSound::SSoundInstance> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	03 d1		 add	 edx, ecx
  00021	c1 fa 04	 sar	 edx, 4
  00024	8b ca		 mov	 ecx, edx
  00026	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00029	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00032	2b c1		 sub	 eax, ecx
  00034	c1 e0 02	 shl	 eax, 2
  00037	50		 push	 eax
  00038	ff 37		 push	 DWORD PTR [edi]
  0003a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00048	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0004f	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  00056	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00057	c3		 ret	 0
??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ENDP ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@YAXPAVCSphereCollisionInstance@@QAV1@AAV?$allocator@VCSphereCollisionInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??_GSCollisionData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z PROC		; NRaceData::SCollisionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000d	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00010	85 ff		 test	 edi, edi
  00012	74 3b		 je	 SHORT $LN10@scalar

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00017	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0001c	2b cf		 sub	 ecx, edi
  0001e	f7 e9		 imul	 ecx
  00020	c1 fa 03	 sar	 edx, 3
  00023	8b c2		 mov	 eax, edx
  00025	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00028	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002a	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0002d	c1 e0 02	 shl	 eax, 2
  00030	50		 push	 eax
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00041	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1699 :             _Myend   = pointer();

  00048	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN10@scalar:
  0004f	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00053	74 0b		 je	 SHORT $LN14@scalar
  00055	6a 14		 push	 20			; 00000014H
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005d	83 c4 08	 add	 esp, 8
$LN14@scalar:
  00060	5f		 pop	 edi
  00061	8b c6		 mov	 eax, esi
  00063	5e		 pop	 esi
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z ENDP		; NRaceData::SCollisionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h
;	COMDAT ??1SCollisionData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SCollisionData@NRaceData@@UAE@XZ PROC		; NRaceData::SCollisionData::~SCollisionData, COMDAT
; _this$ = ecx

; 120  : 		virtual ~SCollisionData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000a	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0000d	85 ff		 test	 edi, edi
  0000f	74 3b		 je	 SHORT $LN6@SCollision

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00014	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00019	2b cf		 sub	 ecx, edi
  0001b	f7 e9		 imul	 ecx
  0001d	c1 fa 03	 sar	 edx, 3
  00020	8b c2		 mov	 eax, edx
  00022	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00025	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00027	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0002a	c1 e0 02	 shl	 eax, 2
  0002d	50		 push	 eax
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00034	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0003e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 1699 :             _Myend   = pointer();

  00045	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN6@SCollision:
  0004c	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
??1SCollisionData@NRaceData@@UAE@XZ ENDP		; NRaceData::SCollisionData::~SCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 				m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 			}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1708 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx

; 1517 :     _NODISCARD _Ty& at(const size_type _Pos) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1518 :         auto& _My_data = _Mypair._Myval2;
; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00004	8b 31		 mov	 esi, DWORD PTR [ecx]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	2b ce		 sub	 ecx, esi
  00010	f7 e9		 imul	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
  0001f	3b c1		 cmp	 eax, ecx
  00021	76 0b		 jbe	 SHORT $LN6@at

; 1521 :         }
; 1522 : 
; 1523 :         return _My_data._Myfirst[_Pos];

  00023	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00026	8d 04 c6	 lea	 eax, DWORD PTR [esi+eax*8]
  00029	5e		 pop	 esi

; 1524 :     }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN6@at:

; 1520 :             _Xrange();

  0002e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN4@at:
  00033	cc		 int	 3
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z
_TEXT	SEGMENT
__Old_size$1$ = -16					; size = 4
__New_ptr$1 = -12					; size = 4
__Old$1$ = -8						; size = 4
tv441 = -4						; size = 4
tv438 = -4						; size = 4
$T2 = -4						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 2822 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b d9		 mov	 ebx, ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]

; 2822 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

  0000d	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000e	8b f9		 mov	 edi, ecx
  00010	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
$LL49@operator:
  00013	8a 07		 mov	 al, BYTE PTR [edi]
  00015	47		 inc	 edi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL49@operator

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0001a	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001d	2b fa		 sub	 edi, edx

; 2860 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0001f	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00022	8b c2		 mov	 eax, edx
  00024	2b c6		 sub	 eax, esi
  00026	89 75 f0	 mov	 DWORD PTR __Old_size$1$[ebp], esi
  00029	89 55 f8	 mov	 DWORD PTR __Old$1$[ebp], edx
  0002c	3b f8		 cmp	 edi, eax
  0002e	77 2b		 ja	 SHORT $LN8@operator

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00030	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00033	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  00036	8b c3		 mov	 eax, ebx

; 2153 :         return _BUF_SIZE <= _Myres;

  00038	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0003b	72 02		 jb	 SHORT $LN11@operator

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN11@operator:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0003f	57		 push	 edi

; 2863 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00040	03 f0		 add	 esi, eax

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00042	51		 push	 ecx
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _memmove
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0004c	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2823 :         return append(_Ptr);

  00050	8b c3		 mov	 eax, ebx
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx

; 2824 :     }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN8@operator:

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  0005b	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00060	2b c6		 sub	 eax, esi
  00062	3b c7		 cmp	 eax, edi
  00064	0f 82 d5 00 00
	00		 jb	 $LN54@operator

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0006d	83 c9 0f	 or	 ecx, 15			; 0000000fH
  00070	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00076	76 07		 jbe	 SHORT $LN25@operator

; 4203 :             return _Max;

  00078	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0007d	eb 24		 jmp	 SHORT $LN51@operator
$LN25@operator:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0007f	8b c2		 mov	 eax, edx
  00081	d1 e8		 shr	 eax, 1
  00083	89 45 fc	 mov	 DWORD PTR tv441[ebp], eax
  00086	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0008b	2b 45 fc	 sub	 eax, DWORD PTR tv441[ebp]
  0008e	3b d0		 cmp	 edx, eax
  00090	76 07		 jbe	 SHORT $LN26@operator

; 4207 :             return _Max;

  00092	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00097	eb 0a		 jmp	 SHORT $LN51@operator
$LN26@operator:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv441[ebp]
  0009c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0009e	3b c8		 cmp	 ecx, eax
  000a0	0f 42 c8	 cmovb	 ecx, eax
$LN51@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a3	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000a6	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4260 :         _My_data._Myres       = _New_capacity;

  000af	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  000b2	8b d0		 mov	 edx, eax
  000b4	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  000b7	89 55 f4	 mov	 DWORD PTR __New_ptr$1[ebp], edx
  000ba	89 43 10	 mov	 DWORD PTR [ebx+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  000c0	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000c4	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  000c7	89 4b 14	 mov	 DWORD PTR [ebx+20], ecx
  000ca	89 45 fc	 mov	 DWORD PTR tv438[ebp], eax
  000cd	72 3e		 jb	 SHORT $LN19@operator

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000cf	ff 75 f0	 push	 DWORD PTR __Old_size$1$[ebp]

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  000d2	8b 33		 mov	 esi, DWORD PTR [ebx]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000d4	56		 push	 esi
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000de	57		 push	 edi
  000df	50		 push	 eax
  000e0	ff 75 fc	 push	 DWORD PTR tv438[ebp]
  000e3	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  000e8	8b 45 fc	 mov	 eax, DWORD PTR tv438[ebp]
  000eb	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  000ef	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]
  000f2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f3	50		 push	 eax
  000f4	56		 push	 esi
  000f5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  000fa	8b 45 f4	 mov	 eax, DWORD PTR __New_ptr$1[ebp]

; 2823 :         return append(_Ptr);

  000fd	83 c4 20	 add	 esp, 32			; 00000020H

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  00100	89 03		 mov	 DWORD PTR [ebx], eax

; 2823 :         return append(_Ptr);

  00102	8b c3		 mov	 eax, ebx
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx

; 2824 :     }

  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c2 04 00	 ret	 4
$LN19@operator:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0010d	56		 push	 esi
  0010e	53		 push	 ebx
  0010f	52		 push	 edx
  00110	e8 00 00 00 00	 call	 _memcpy
  00115	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00118	8b 75 fc	 mov	 esi, DWORD PTR tv438[ebp]
  0011b	57		 push	 edi
  0011c	50		 push	 eax
  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 _memcpy

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00123	8d 45 f4	 lea	 eax, DWORD PTR __New_ptr$1[ebp]

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00126	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0012a	50		 push	 eax
  0012b	53		 push	 ebx
  0012c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2823 :         return append(_Ptr);

  00131	83 c4 20	 add	 esp, 32			; 00000020H
  00134	8b c3		 mov	 eax, ebx
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi
  00138	5b		 pop	 ebx

; 2824 :     }

  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 04 00	 ret	 4
$LN54@operator:

; 4250 :             _Xlen_string(); // result too long

  0013f	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN50@operator:
  00144	cc		 int	 3
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2335 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00006	8b c2		 mov	 eax, edx

; 2335 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0
$LL13@basic_stri:

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL13@basic_stri
  00027	2b c7		 sub	 eax, edi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00029	8b ce		 mov	 ecx, esi
  0002b	50		 push	 eax
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2336 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2337 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2338 :         _Tidy_init();
; 2339 :         assign(_Ptr);
; 2340 :         _Proxy._Release();
; 2341 :     }

  00032	5f		 pop	 edi
  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
