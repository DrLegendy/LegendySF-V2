; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CSingleton@VCItemManager@@@@UAE@XZ		; CSingleton<CItemManager>::~CSingleton<CItemManager>
PUBLIC	??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z	; CSingleton<CItemManager>::`scalar deleting destructor'
PUBLIC	??0CItemManager@@QAE@XZ				; CItemManager::CItemManager
PUBLIC	??1CItemManager@@UAE@XZ				; CItemManager::~CItemManager
PUBLIC	?Destroy@CItemManager@@QAEXXZ			; CItemManager::Destroy
PUBLIC	?SelectItemData@CItemManager@@QAEHK@Z		; CItemManager::SelectItemData
PUBLIC	?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ ; CItemManager::GetSelectedItemDataPointer
PUBLIC	?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
PUBLIC	?LoadItemDesc@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemDesc
PUBLIC	?LoadItemList@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemList
PUBLIC	?LoadItemTable@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemTable
PUBLIC	?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ; CItemManager::MakeItemData
PUBLIC	?LoadItemScale@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemScale
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
PUBLIC	?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
PUBLIC	??_GCItemManager@@UAEPAXI@Z			; CItemManager::`scalar deleting destructor'
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
PUBLIC	?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
PUBLIC	?GetHashCode@@YAKPBD@Z				; GetHashCode
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
PUBLIC	??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
PUBLIC	??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
PUBLIC	??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
PUBLIC	??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Refancy@PAD$0A@@std@@YAPADPAD@Z		; std::_Refancy<char *,0>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Destroy_range<std::allocator<CItemData *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lower_bound_duplicate<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
PUBLIC	??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z		; std::_Refancy<char const *,0>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>
PUBLIC	??$_Find_hint@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_hint_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_hint<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
PUBLIC	??$?0$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$Z$$V@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?0V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@AAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>,std::tuple<>,0>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A	; CSingleton<CLZO>::ms_singleton
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
PUBLIC	??_7?$CSingleton@VCItemManager@@@@6B@		; CSingleton<CItemManager>::`vftable'
PUBLIC	??_7CItemManager@@6B@				; CItemManager::`vftable'
PUBLIC	??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@ ; `string'
PUBLIC	??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@ ; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7@				; `string'
PUBLIC	??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@	; `string'
PUBLIC	??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@ ; `string'
PUBLIC	??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@ ; `string'
PUBLIC	??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@	; `string'
PUBLIC	??_C@_0CF@JIKMIDCO@LoadItemScale?3?5invalid?5line?5?$CFd?5@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M@				; `string'
PUBLIC	??_C@_0M@BIDPEPDP@JOB_WOLFMAN@			; `string'
PUBLIC	??_C@_0N@IAFGBDIL@JOB_ASSASSIN@			; `string'
PUBLIC	??_C@_01BIAFAFID@F@				; `string'
PUBLIC	??_C@_0L@FBDFJGPA@JOB_SHAMAN@			; `string'
PUBLIC	??_C@_08IJIBKCOK@JOB_SURA@			; `string'
PUBLIC	??_C@_03OICINGJI@0?43@				; `string'
PUBLIC	??_C@_0M@IHDHIBML@JOB_WARRIOR@			; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CItemManager@@6B@				; CItemManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCItemManager@@@8			; CItemManager `RTTI Type Descriptor'
PUBLIC	??_R3CItemManager@@8				; CItemManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItemManager@@8				; CItemManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItemManager@@8			; CItemManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8	; CSingleton<CItemManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCItemManager@@@@@8	; CSingleton<CItemManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCItemManager@@@@8		; CSingleton<CItemManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCItemManager@@@@8		; CSingleton<CItemManager>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCItemManager@@@@6B@		; CSingleton<CItemManager>::`RTTI Complete Object Locator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_toupper:PROC
EXTRN	_strncpy_s:PROC
EXTRN	__atoi64:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CMemoryTextFileLoader@@QAE@XZ:PROC		; CMemoryTextFileLoader::CMemoryTextFileLoader
EXTRN	??1CMemoryTextFileLoader@@UAE@XZ:PROC		; CMemoryTextFileLoader::~CMemoryTextFileLoader
EXTRN	?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z:PROC	; CMemoryTextFileLoader::Bind
EXTRN	?GetLineCount@CMemoryTextFileLoader@@QAEKXZ:PROC ; CMemoryTextFileLoader::GetLineCount
EXTRN	?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z:PROC ; CMemoryTextFileLoader::SplitLine
EXTRN	?SplitLineByTab@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:PROC ; CMemoryTextFileLoader::SplitLineByTab
EXTRN	??0CLZObject@@QAE@XZ:PROC			; CLZObject::CLZObject
EXTRN	??1CLZObject@@QAE@XZ:PROC			; CLZObject::~CLZObject
EXTRN	?Decompress@CLZO@@QAE_NAAVCLZObject@@PBEPAK@Z:PROC ; CLZO::Decompress
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?Read@CMappedFile@@QAEHPAXH@Z:PROC		; CMappedFile::Read
EXTRN	?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPackManager::Get
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CItemData::SetSummary
EXTRN	?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CItemData::SetDescription
EXTRN	?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ:PROC ; CItemData::GetTable
EXTRN	?SetDefaultItemData@CItemData@@QAEXPBD0@Z:PROC	; CItemData::SetDefaultItemData
EXTRN	?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z:PROC ; CItemData::SetItemTableData
EXTRN	?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z:PROC ; CItemData::SetItemScale
EXTRN	?New@CItemData@@SAPAV1@XZ:PROC			; CItemData::New
EXTRN	?Delete@CItemData@@SAXPAV1@@Z:PROC		; CItemData::Delete
EXTRN	??_E?$CSingleton@VCItemManager@@@@UAEPAXI@Z:PROC ; CSingleton<CItemManager>::`vector deleting destructor'
EXTRN	??_ECItemManager@@UAEPAXI@Z:PROC		; CItemManager::`vector deleting destructor'
EXTRN	?Vietnam_ConvertWeaponVnum@@YAKK@Z:PROC		; Vietnam_ConvertWeaponVnum
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA:DWORD	; USE_VIETNAM_CONVERT_WEAPON_VNUM
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A DD 01H DUP (?) ; CSingleton<CLZO>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A DD 01H DUP (?) ; CSingleton<CEterPackManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A DD 01H DUP (?) ; CSingleton<CItemManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
_BSS	SEGMENT
?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A DQ 01H DUP (?) ; `CItemManager::LoadItemScale'::`6'::scaleMap
_BSS	ENDS
;	COMDAT ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA
_BSS	SEGMENT
?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA DD 01H DUP (?) ; `CItemManager::LoadItemScale'::`6'::$TSS0
_BSS	ENDS
;	COMDAT ??_R4?$CSingleton@VCItemManager@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCItemManager@@@@6B@ DD 00H		; CSingleton<CItemManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCItemManager@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCItemManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8 ; CSingleton<CItemManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCItemManager@@@@8 DD 00H		; CSingleton<CItemManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCItemManager@@@@@8
data$r	SEGMENT
??_R0?AV?$CSingleton@VCItemManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CItemManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCItemManager@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCItemManager@@@@@8 ; CSingleton<CItemManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CItemManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CItemManager@@8 DD FLAT:??_R0?AVCItemManager@@@8 ; CItemManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CItemManager@@8
rdata$r	SEGMENT
??_R2CItemManager@@8 DD FLAT:??_R1A@?0A@EA@CItemManager@@8 ; CItemManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CItemManager@@8
rdata$r	SEGMENT
??_R3CItemManager@@8 DD 00H				; CItemManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItemManager@@@8
data$r	SEGMENT
??_R0?AVCItemManager@@@8 DD FLAT:??_7type_info@@6B@	; CItemManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItemManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CItemManager@@6B@
rdata$r	SEGMENT
??_R4CItemManager@@6B@ DD 00H				; CItemManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCItemManager@@@8
	DD	FLAT:??_R3CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHDHIBML@JOB_WARRIOR@
CONST	SEGMENT
??_C@_0M@IHDHIBML@JOB_WARRIOR@ DB 'JOB_WARRIOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03OICINGJI@0?43@
CONST	SEGMENT
??_C@_03OICINGJI@0?43@ DB '0.3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJIBKCOK@JOB_SURA@
CONST	SEGMENT
??_C@_08IJIBKCOK@JOB_SURA@ DB 'JOB_SURA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBDFJGPA@JOB_SHAMAN@
CONST	SEGMENT
??_C@_0L@FBDFJGPA@JOB_SHAMAN@ DB 'JOB_SHAMAN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01BIAFAFID@F@
CONST	SEGMENT
??_C@_01BIAFAFID@F@ DB 'F', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IAFGBDIL@JOB_ASSASSIN@
CONST	SEGMENT
??_C@_0N@IAFGBDIL@JOB_ASSASSIN@ DB 'JOB_ASSASSIN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BIDPEPDP@JOB_WOLFMAN@
CONST	SEGMENT
??_C@_0M@BIDPEPDP@JOB_WOLFMAN@ DB 'JOB_WOLFMAN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M@
CONST	SEGMENT
??_C@_01PLPBNMEI@M@ DB 'M', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JIKMIDCO@LoadItemScale?3?5invalid?5line?5?$CFd?5@
CONST	SEGMENT
??_C@_0CF@JIKMIDCO@LoadItemScale?3?5invalid?5line?5?$CFd?5@ DB 'LoadItemS'
	DB	'cale: invalid line %d (%s).', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
CONST	SEGMENT
??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@ DB 'icon/item/%05d.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::'
	DB	'LoadItemTable: invalid item proto type %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::'
	DB	'LoadItemTable: invalid item_proto[%s] STRIDE[%d] != sizeof(SI'
	DB	'temTable)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::L'
	DB	'oadItemTable: invalid item_proto[%s] VERSION[%d]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@
CONST	SEGMENT
??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@ DB 'CItemManager'
	DB	'::LoadItemDesc(c_szFileName=%s) - Load Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@
CONST	SEGMENT
??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@ DB 'd:/ymi'
	DB	'r work/item/weapon/%.5d.gr2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@
CONST	SEGMENT
??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@ DB 'icon/item/%.5d.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@ DB ' CIte'
	DB	'mManager::LoadItemList(%s) - StrangeLine in %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@
CONST	SEGMENT
??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@ DB ' CItemManager:'
	DB	':GetItemDataPointer - FIND ERROR [%d]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@
CONST	SEGMENT
??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@ DB ' CItemManage'
	DB	'r::SelectItemData - FIND ERROR [%d]', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?s_adwItemProtoKey@@3PAKA DD 02a4a1H			; s_adwItemProtoKey
	DD	045415aaH
	DD	0185a8be7H
	DD	01aad6abH
_DATA	ENDS
;	COMDAT ??_7CItemManager@@6B@
CONST	SEGMENT
??_7CItemManager@@6B@ DD FLAT:??_R4CItemManager@@6B@	; CItemManager::`vftable'
	DD	FLAT:??_ECItemManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCItemManager@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCItemManager@@@@6B@ DD FLAT:??_R4?$CSingleton@VCItemManager@@@@6B@ ; CSingleton<CItemManager>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCItemManager@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@ABU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@ABU31@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@ABU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@ABU31@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@ABU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@ABU31@@Z$0
__ehfuncinfo$??$construct@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@ABU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@ABU31@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$construct@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@ABU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@ABU31@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$2
__ehfuncinfo$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?0ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z$3
__ehfuncinfo$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Emplace_hint@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@QAU21@ABU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z$0
__ehfuncinfo$??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z$3
__ehfuncinfo$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$insert@PBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXPBU?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$V@?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$V@?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z$2
__ehfuncinfo$??$_Try_emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$V@?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$V@?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z$1
__ehfuncinfo$??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY03$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY03$$CBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@PBDPBD@std@@AAY03$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY03$$CBD@Z$0
__ehfuncinfo$??$?0U?$pair@PBDPBD@std@@AAY03$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY03$$CBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY03$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY03$$CBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY04$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY04$$CBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@PBDPBD@std@@AAY04$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY04$$CBD@Z$0
__ehfuncinfo$??$?0U?$pair@PBDPBD@std@@AAY04$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY04$$CBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY04$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY04$$CBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY01$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY01$$CBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@PBDPBD@std@@AAY01$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY01$$CBD@Z$0
__ehfuncinfo$??$?0U?$pair@PBDPBD@std@@AAY01$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY01$$CBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@PBDPBD@std@@AAY01$$CBD$0A@@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@$$QAU?$pair@PBDPBD@1@AAY01$$CBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z$0
__ehfuncinfo$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@ABU01@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAE@V?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z$2
__ehfuncinfo$??A?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z$3
__ehfuncinfo$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?insert@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAEXV?$initializer_list@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadItemScale@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	02bH
	DD	FLAT:__unwindtable$?LoadItemScale@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadItemScale@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$28
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$30
	DD	05H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$5
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$32
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$6
	DD	09H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$34
	DD	09H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$7
	DD	0bH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$36
	DD	0bH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$8
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$38
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$9
	DD	0fH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$40
	DD	0fH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$10
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$42
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$11
	DD	013H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$44
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$13
	DD	015H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$46
	DD	016H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$49
	DD	016H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$48
	DD	018H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$52
	DD	018H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$50
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$14
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$15
	DD	01cH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$16
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$17
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$57
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$18
	DD	020H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$61
	DD	020H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$19
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$19
	DD	023H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$20
	DD	024H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$21
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$22
	DD	026H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$23
	DD	027H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$24
	DD	028H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$25
	DD	029H
	DD	FLAT:__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$26
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadItemTable@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$6
__ehfuncinfo$?LoadItemTable@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadItemTable@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadItemList@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$2
__ehfuncinfo$?LoadItemList@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?LoadItemList@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadItemDesc@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadItemDesc@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CItemManager@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CItemManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItemManager@@QAE@XZ$0
__ehfuncinfo$??0CItemManager@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CItemManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@AAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@AAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000c	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00013	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0001a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0001d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00020	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00025	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002a	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00031	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 00 00	 mov	 BYTE PTR [eax], 0

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0003b	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0
  00042	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00049	0f 10 40 18	 movups	 xmm0, XMMWORD PTR [eax+24]
  0004d	0f 11 41 18	 movups	 XMMWORD PTR [ecx+24], xmm0
  00051	f3 0f 7e 40 28	 movq	 xmm0, QWORD PTR [eax+40]
  00056	66 0f d6 41 28	 movq	 QWORD PTR [ecx+40], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0005b	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00062	c7 40 2c 0f 00
	00 00		 mov	 DWORD PTR [eax+44], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00069	c6 40 18 00	 mov	 BYTE PTR [eax+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  0006d	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0006f	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00076	c7 41 44 0f 00
	00 00		 mov	 DWORD PTR [ecx+68], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0007d	c6 41 30 00	 mov	 BYTE PTR [ecx+48], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@AAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4502 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b c8		 mov	 ecx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN6@operator:
  00010	53		 push	 ebx
  00011	56		 push	 esi

; 2144 :         const value_type* _Result = _Bx._Buf;

  00012	8b 75 08	 mov	 esi, DWORD PTR __Left$[ebp]
  00015	8b d6		 mov	 edx, esi
  00017	57		 push	 edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001c	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001e	8b 16		 mov	 edx, DWORD PTR [esi]
$LN11@operator:

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00020	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00023	8b f3		 mov	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00025	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00028	3b fb		 cmp	 edi, ebx
  0002a	0f 42 f7	 cmovb	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0002d	83 ee 04	 sub	 esi, 4
  00030	72 11		 jb	 SHORT $LN26@operator
$LL27@operator:
  00032	8b 02		 mov	 eax, DWORD PTR [edx]
  00034	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00036	75 10		 jne	 SHORT $LN25@operator
  00038	83 c2 04	 add	 edx, 4
  0003b	83 c1 04	 add	 ecx, 4
  0003e	83 ee 04	 sub	 esi, 4
  00041	73 ef		 jae	 SHORT $LL27@operator
$LN26@operator:
  00043	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00046	74 34		 je	 SHORT $LN24@operator
$LN25@operator:
  00048	8a 02		 mov	 al, BYTE PTR [edx]
  0004a	3a 01		 cmp	 al, BYTE PTR [ecx]
  0004c	75 27		 jne	 SHORT $LN28@operator
  0004e	83 fe fd	 cmp	 esi, -3			; fffffffdH
  00051	74 29		 je	 SHORT $LN24@operator
  00053	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00056	3a 41 01	 cmp	 al, BYTE PTR [ecx+1]
  00059	75 1a		 jne	 SHORT $LN28@operator
  0005b	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0005e	74 1c		 je	 SHORT $LN24@operator
  00060	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00063	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00066	75 0d		 jne	 SHORT $LN28@operator
  00068	83 fe ff	 cmp	 esi, -1
  0006b	74 0f		 je	 SHORT $LN24@operator
  0006d	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  00070	3a 41 03	 cmp	 al, BYTE PTR [ecx+3]
  00073	74 07		 je	 SHORT $LN24@operator
$LN28@operator:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
  0007a	eb 02		 jmp	 SHORT $LN29@operator
$LN24@operator:
  0007c	33 c0		 xor	 eax, eax
$LN29@operator:

; 513  :     if (_Ans != 0) {

  0007e	85 c0		 test	 eax, eax
  00080	75 13		 jne	 SHORT $LN18@operator

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00082	3b fb		 cmp	 edi, ebx
  00084	76 0b		 jbe	 SHORT $LN30@operator

; 4503 :     return _Left.compare(_Right) < 0;

  00086	5f		 pop	 edi

; 518  :         return -1;

  00087	83 c8 ff	 or	 eax, -1

; 4503 :     return _Left.compare(_Right) < 0;

  0008a	5e		 pop	 esi
  0008b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008e	5b		 pop	 ebx

; 4504 : }

  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN30@operator:

; 521  :     if (_Left_size > _Right_size) {

  00091	1b c0		 sbb	 eax, eax
  00093	f7 d8		 neg	 eax
$LN18@operator:

; 4503 :     return _Left.compare(_Right) < 0;

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0009a	5b		 pop	 ebx

; 4504 : }

  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$Z$$V@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
_this$ = -8						; size = 4
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$Z$$V@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000c	89 75 f8	 mov	 DWORD PTR _this$[ebp], esi
  0000f	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  00013	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00016	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$?0V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@AAV?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>,std::tuple<>,0>
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$?0$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$Z$$V@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CItemData * *,CItemData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CItemData * *,CItemData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_hint@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_hint_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Hint$ = 12						; size = 4
__Keyval$ = 16						; size = 4
tv699 = 19						; size = 1
??$_Find_hint@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_hint_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_hint<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 1584 :     _Tree_find_hint_result<_Nodeptr> _Find_hint(const _Nodeptr _Hint, const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1585 :         const auto& _Comp = _Getcomp();
; 1586 :         const auto _Head  = _Get_scary()->_Myhead;

  00008	8b 31		 mov	 esi, DWORD PTR [ecx]
  0000a	57		 push	 edi

; 1587 :         if _CONSTEXPR_IF (_Multi) { // insert even if duplicate
; 1588 :             if (_Hint->_Isnil) {
; 1589 :                 // insert at end if greater than or equal to last element
; 1590 :                 if (_Head->_Parent->_Isnil || !_DEBUG_LT_PRED(_Comp, _Keyval, _Traits::_Kfn(_Head->_Right->_Myval))) {
; 1591 :                     return {{_Head->_Right, _Tree_child::_Right}, false};
; 1592 :                 }
; 1593 : 
; 1594 :                 // _Hint is end(); it must be closer to the end of equivalents
; 1595 :                 return {_Find_upper_bound(_Keyval)._Location, false};
; 1596 :             }
; 1597 : 
; 1598 :             if (_Hint == _Head->_Left) {
; 1599 :                 // insert at beginning if less than or equal to first element
; 1600 :                 if (!_DEBUG_LT_PRED(_Comp, _Traits::_Kfn(_Hint->_Myval), _Keyval)) {
; 1601 :                     return {{_Hint, _Tree_child::_Left}, false};
; 1602 :                 }
; 1603 : 
; 1604 :                 // _Hint is begin(); it must be closer to the beginning of equivalents
; 1605 :                 return {_Find_lower_bound(_Keyval)._Location, false};
; 1606 :             }
; 1607 : 
; 1608 :             if (!_DEBUG_LT_PRED(_Comp, _Traits::_Kfn(_Hint->_Myval), _Keyval)) {
; 1609 :                 // _Val <= *_Hint
; 1610 :                 const auto _Prev = (--(_Unchecked_const_iterator(_Hint, nullptr)))._Ptr;
; 1611 :                 if (!_DEBUG_LT_PRED(_Comp, _Keyval, _Traits::_Kfn(_Prev->_Myval))) {
; 1612 :                     // _Val <= *_Hint and _Val >= *prev(_Hint); insert here
; 1613 :                     if (_Prev->_Right->_Isnil) {
; 1614 :                         return {{_Prev, _Tree_child::_Right}, false};
; 1615 :                     } else {
; 1616 :                         return {{_Hint, _Tree_child::_Left}, false};
; 1617 :                     }
; 1618 :                 }
; 1619 : 
; 1620 :                 // _Val goes before *_Hint; _Hint must be closer to the end of equivalents
; 1621 :                 return {_Find_upper_bound(_Keyval)._Location, false};
; 1622 :             }
; 1623 : 
; 1624 :             // _Val goes after *_Hint; _Hint must be closer to the beginning of equivalents
; 1625 :             return {_Find_lower_bound(_Keyval)._Location, false};
; 1626 :         } else { // insert only if unique
; 1627 :             if (_Hint->_Isnil) { // insert at end if after last element

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Hint$[ebp]
  0000e	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00011	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00015	74 3d		 je	 SHORT $LN2@Find_hint

; 1628 :                 // insert at end if greater than last element
; 1629 :                 if (_Head->_Parent->_Isnil || _DEBUG_LT_PRED(_Comp, _Traits::_Kfn(_Head->_Right->_Myval), _Keyval)) {

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001e	75 18		 jne	 SHORT $LN65@Find_hint
  00020	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00023	8b 5d 10	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  00026	83 c0 10	 add	 eax, 16			; 00000010H
  00029	53		 push	 ebx
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
  00030	84 c0		 test	 al, al
  00032	0f 84 4d 01 00
	00		 je	 $LN16@Find_hint
$LN65@Find_hint:

; 1630 :                     return {{_Head->_Right, _Tree_child::_Right}, false};

  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0003e	5f		 pop	 edi

; 1670 :         }
; 1671 :     }

  0003f	5e		 pop	 esi
  00040	89 08		 mov	 DWORD PTR [eax], ecx
  00042	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0
  00046	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Find_hint:

; 1631 :                 }
; 1632 :             } else if (_Hint == _Head->_Left) {

  00054	8b 5d 10	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  00057	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0005a	50		 push	 eax
  0005b	53		 push	 ebx
  0005c	e8 00 00 00 00	 call	 ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
  00061	3b 3e		 cmp	 edi, DWORD PTR [esi]
  00063	75 21		 jne	 SHORT $LN6@Find_hint

; 1633 :                 // insert at beginning if less than first element
; 1634 :                 if (_DEBUG_LT_PRED(_Comp, _Keyval, _Traits::_Kfn(_Hint->_Myval))) {

  00065	84 c0		 test	 al, al
  00067	0f 84 18 01 00
	00		 je	 $LN16@Find_hint

; 1635 :                     return {{_Hint, _Tree_child::_Left}, false};

  0006d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00070	89 38		 mov	 DWORD PTR [eax], edi
  00072	5f		 pop	 edi

; 1670 :         }
; 1671 :     }

  00073	5e		 pop	 esi
  00074	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
  0007b	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 0c 00	 ret	 12			; 0000000cH
$LN6@Find_hint:

; 1636 :                 }
; 1637 :             } else if (_DEBUG_LT_PRED(_Comp, _Keyval, _Traits::_Kfn(_Hint->_Myval))) {

  00086	84 c0		 test	 al, al
  00088	0f 84 89 00 00
	00		 je	 $LN9@Find_hint

; 75   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

  0008e	8b 37		 mov	 esi, DWORD PTR [edi]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00090	8b c7		 mov	 eax, edi

; 75   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

  00092	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00096	74 21		 je	 SHORT $LN28@Find_hint

; 76   :             _Nodeptr _Pnode;
; 77   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

  00098	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0009b	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0009f	75 0f		 jne	 SHORT $LN66@Find_hint
$LL24@Find_hint:
  000a1	3b 06		 cmp	 eax, DWORD PTR [esi]
  000a3	75 0b		 jne	 SHORT $LN66@Find_hint

; 78   :                 _Ptr = _Pnode; // ==> parent while left subtree

  000a5	8b c6		 mov	 eax, esi
  000a7	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000aa	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  000ae	74 f1		 je	 SHORT $LL24@Find_hint
$LN66@Find_hint:

; 79   :             }
; 80   : 
; 81   :             if (!_Ptr->_Isnil) { // decrement non-begin()
; 82   :                 _Ptr = _Pnode; // ==> parent if not head
; 83   :             }
; 84   :         } else {

  000b0	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b4	0f 45 f0	 cmovne	 esi, eax
  000b7	eb 14		 jmp	 SHORT $LN34@Find_hint
$LN28@Find_hint:

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000b9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bc	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000c0	75 0b		 jne	 SHORT $LN34@Find_hint
$LL33@Find_hint:

; 444  :             _Pnode = _Pnode->_Right;

  000c2	8b f0		 mov	 esi, eax
  000c4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000c7	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000cb	74 f5		 je	 SHORT $LL33@Find_hint
$LN34@Find_hint:

; 1638 :                 // _Val < *_Hint
; 1639 :                 const auto _Prev = (--(_Unchecked_const_iterator(_Hint, nullptr)))._Ptr;
; 1640 :                 if (_DEBUG_LT_PRED(_Comp, _Traits::_Kfn(_Prev->_Myval), _Keyval)) {

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000d0	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  000d3	53		 push	 ebx
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
  000da	84 c0		 test	 al, al
  000dc	0f 84 a3 00 00
	00		 je	 $LN16@Find_hint

; 1641 :                     // _Val < *_Hint and _Val > *prev(_Hint); insert here
; 1642 :                     if (_Prev->_Right->_Isnil) {

  000e2	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000e5	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  000e8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000eb	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0
  000ef	84 c9		 test	 cl, cl
  000f1	74 12		 je	 SHORT $LN12@Find_hint

; 1643 :                         return {{_Prev, _Tree_child::_Right}, false};

  000f3	5f		 pop	 edi
  000f4	89 30		 mov	 DWORD PTR [eax], esi

; 1670 :         }
; 1671 :     }

  000f6	5e		 pop	 esi
  000f7	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  000fe	5b		 pop	 ebx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 0c 00	 ret	 12			; 0000000cH
$LN12@Find_hint:

; 1644 :                     } else {
; 1645 :                         return {{_Hint, _Tree_child::_Left}, false};

  00105	89 38		 mov	 DWORD PTR [eax], edi
  00107	5f		 pop	 edi

; 1670 :         }
; 1671 :     }

  00108	5e		 pop	 esi
  00109	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
  00110	5b		 pop	 ebx
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 0c 00	 ret	 12			; 0000000cH
$LN9@Find_hint:

; 1646 :                     }
; 1647 :                 }
; 1648 :             } else if (_DEBUG_LT_PRED(_Comp, _Traits::_Kfn(_Hint->_Myval), _Keyval)) {

  00117	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0011a	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0011d	53		 push	 ebx
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
  00124	84 c0		 test	 al, al
  00126	0f 84 cb 00 00
	00		 je	 $LN14@Find_hint

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0012c	8b 77 08	 mov	 esi, DWORD PTR [edi+8]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0012f	8b c7		 mov	 eax, edi

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00131	8a 4e 0d	 mov	 cl, BYTE PTR [esi+13]
  00134	88 4d 13	 mov	 BYTE PTR tv699[ebp], cl
  00137	84 c9		 test	 cl, cl
  00139	74 1f		 je	 SHORT $LN41@Find_hint

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0013b	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0013e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00142	0f 85 90 00 00
	00		 jne	 $LN17@Find_hint
$LL39@Find_hint:
  00148	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0014b	75 21		 jne	 SHORT $LN46@Find_hint

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0014d	8b c6		 mov	 eax, esi
  0014f	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00152	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00156	74 f0		 je	 SHORT $LL39@Find_hint

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {

  00158	eb 14		 jmp	 SHORT $LN46@Find_hint
$LN41@Find_hint:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  0015a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0015c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00160	75 0c		 jne	 SHORT $LN46@Find_hint
$LL45@Find_hint:
  00162	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00164	8b f1		 mov	 esi, ecx
  00166	8b c8		 mov	 ecx, eax
  00168	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0016c	74 f4		 je	 SHORT $LL45@Find_hint
$LN46@Find_hint:

; 1649 :                 // _Val > *_Hint
; 1650 :                 const auto _Next = (++(_Unchecked_const_iterator(_Hint, nullptr)))._Ptr;
; 1651 :                 if (_Next->_Isnil || _DEBUG_LT_PRED(_Comp, _Keyval, _Traits::_Kfn(_Next->_Myval))) {

  0016e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00172	75 64		 jne	 SHORT $LN17@Find_hint
  00174	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00177	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0017a	50		 push	 eax
  0017b	53		 push	 ebx
  0017c	e8 00 00 00 00	 call	 ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
  00181	84 c0		 test	 al, al
  00183	75 53		 jne	 SHORT $LN17@Find_hint
$LN16@Find_hint:

; 1662 :             }
; 1663 : 
; 1664 :             const auto _Loc = _Find_lower_bound(_Keyval);

  00185	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00188	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
  0018b	53		 push	 ebx
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1665 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00195	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00198	53		 push	 ebx
  00199	8b 5d f8	 mov	 ebx, DWORD PTR __Loc$1[ebp+8]
  0019c	53		 push	 ebx
  0019d	e8 00 00 00 00	 call	 ??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lower_bound_duplicate<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  001a2	84 c0		 test	 al, al
  001a4	74 18		 je	 SHORT $LN19@Find_hint

; 1666 :                 return {{_Loc._Bound, _Tree_child::_Unused}, true};

  001a6	5f		 pop	 edi
  001a7	89 1e		 mov	 DWORD PTR [esi], ebx
  001a9	8b c6		 mov	 eax, esi
  001ab	c7 46 04 02 00
	00 00		 mov	 DWORD PTR [esi+4], 2
  001b2	c6 46 08 01	 mov	 BYTE PTR [esi+8], 1

; 1670 :         }
; 1671 :     }

  001b6	5e		 pop	 esi
  001b7	5b		 pop	 ebx
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 0c 00	 ret	 12			; 0000000cH
$LN19@Find_hint:

; 1667 :             }
; 1668 : 
; 1669 :             return {_Loc._Location, false};

  001be	8b 45 f0	 mov	 eax, DWORD PTR __Loc$1[ebp]
  001c1	89 06		 mov	 DWORD PTR [esi], eax
  001c3	8b 45 f4	 mov	 eax, DWORD PTR __Loc$1[ebp+4]
  001c6	89 46 04	 mov	 DWORD PTR [esi+4], eax
  001c9	8b c6		 mov	 eax, esi
  001cb	5f		 pop	 edi
  001cc	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0

; 1670 :         }
; 1671 :     }

  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx
  001d2	8b e5		 mov	 esp, ebp
  001d4	5d		 pop	 ebp
  001d5	c2 0c 00	 ret	 12			; 0000000cH
$LN17@Find_hint:

; 1652 :                     // _Val > *_Hint and _Val < *next(_Hint); insert here
; 1653 :                     if (_Hint->_Right->_Isnil) {

  001d8	80 7d 13 00	 cmp	 BYTE PTR tv699[ebp], 0
  001dc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001df	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0
  001e3	75 19		 jne	 SHORT $LN70@Find_hint

; 1654 :                         return {{_Hint, _Tree_child::_Right}, false};
; 1655 :                     }
; 1656 : 
; 1657 :                     return {{_Next, _Tree_child::_Left}, false};

  001e5	5f		 pop	 edi
  001e6	89 30		 mov	 DWORD PTR [eax], esi

; 1670 :         }
; 1671 :     }

  001e8	5e		 pop	 esi
  001e9	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
  001f0	5b		 pop	 ebx
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c2 0c 00	 ret	 12			; 0000000cH
$LN14@Find_hint:

; 1658 :                 }
; 1659 :             } else {
; 1660 :                 // _Val is equivalent to *_Hint; don't insert
; 1661 :                 return {{_Hint, _Tree_child::_Right}, true};

  001f7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001fa	c6 40 08 01	 mov	 BYTE PTR [eax+8], 1
$LN70@Find_hint:

; 1670 :         }
; 1671 :     }

  001fe	89 38		 mov	 DWORD PTR [eax], edi
  00200	5f		 pop	 edi
  00201	5e		 pop	 esi
  00202	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00209	5b		 pop	 ebx
  0020a	8b e5		 mov	 esp, ebp
  0020c	5d		 pop	 ebp
  0020d	c2 0c 00	 ret	 12			; 0000000cH
??$_Find_hint@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_hint_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_hint<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z PROC		; std::_Refancy<char const *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PBD$0A@@std@@YAPBDPBD@Z ENDP		; std::_Refancy<char const *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00009	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000a	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000d	3b c2		 cmp	 eax, edx
  0000f	74 49		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00011	8b ce		 mov	 ecx, esi
  00013	2b c8		 sub	 ecx, eax
  00015	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00020	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00027	c7 44 01 14 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0002f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00032	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00035	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  0003a	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  0003f	83 c6 18	 add	 esi, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00042	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00049	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00050	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00053	83 c0 18	 add	 eax, 24			; 00000018H

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00056	3b c2		 cmp	 eax, edx
  00058	75 c6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0005a	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0005d	56		 push	 esi
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  00067	8b c6		 mov	 eax, esi
  00069	5e		 pop	 esi

; 1664 :     }
; 1665 : }

  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00011	75 32		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	57		 push	 edi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 76 08	 push	 DWORD PTR [esi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b fe		 mov	 edi, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 379  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00027	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0002a	e8 00 00 00 00	 call	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0002f	6a 58		 push	 88			; 00000058H
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0003d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00041	74 d5		 je	 SHORT $LL2@Erase_tree
  00043	5f		 pop	 edi
  00044	5b		 pop	 ebx
$LN3@Erase_tree:
  00045	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN4@Tree_temp_

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 58		 push	 88			; 00000058H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN4@Tree_temp_:
  00012	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 58		 push	 88			; 00000058H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
_TEXT	SEGMENT
__Bound$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lower_bound_duplicate<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 1694 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bound$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0000c	75 3e		 jne	 SHORT $LN3@Lower_boun
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0000e	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00011	8d 70 10	 lea	 esi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0001b	83 c4 08	 add	 esp, 8
  0001e	84 c0		 test	 al, al
  00020	75 2a		 jne	 SHORT $LN3@Lower_boun
  00022	57		 push	 edi
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00029	83 c4 08	 add	 esp, 8
  0002c	84 c0		 test	 al, al
  0002e	75 14		 jne	 SHORT $LN12@Lower_boun
  00030	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  00033	50		 push	 eax
  00034	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0003d	83 c4 08	 add	 esp, 8
  00040	84 c0		 test	 al, al
  00042	75 08		 jne	 SHORT $LN3@Lower_boun
$LN12@Lower_boun:
  00044	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00045	b0 01		 mov	 al, 1

; 1696 :     }

  00047	5e		 pop	 esi
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
$LN3@Lower_boun:
  0004c	5f		 pop	 edi

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004d	32 c0		 xor	 al, al

; 1696 :     }

  0004f	5e		 pop	 esi
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lower_bound_duplicate<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	89 37		 mov	 DWORD PTR [edi], esi

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0000f	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00013	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0001a	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0001d	75 5c		 jne	 SHORT $LN18@Find_lower
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00022	53		 push	 ebx
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00023	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00024	8d 5e 10	 lea	 ebx, DWORD PTR [esi+16]
  00027	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00029	53		 push	 ebx
  0002a	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0002f	83 c4 08	 add	 esp, 8
  00032	84 c0		 test	 al, al
  00034	75 33		 jne	 SHORT $LN12@Find_lower
  00036	53		 push	 ebx
  00037	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  0003a	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0003f	83 c4 08	 add	 esp, 8
  00042	84 c0		 test	 al, al
  00044	75 17		 jne	 SHORT $LN4@Find_lower
  00046	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00049	83 c0 18	 add	 eax, 24			; 00000018H
  0004c	50		 push	 eax
  0004d	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00056	83 c4 08	 add	 esp, 8
  00059	84 c0		 test	 al, al
  0005b	75 0c		 jne	 SHORT $LN12@Find_lower
$LN4@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1710 :                 _Result._Bound           = _Trynode;

  0005d	89 77 08	 mov	 DWORD PTR [edi+8], esi

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00060	b8 01 00 00 00	 mov	 eax, 1
  00065	8b 36		 mov	 esi, DWORD PTR [esi]
  00067	eb 05		 jmp	 SHORT $LN5@Find_lower
$LN12@Find_lower:

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00069	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  0006c	33 c0		 xor	 eax, eax
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0006e	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00071	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00075	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00078	74 a9		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  0007a	5b		 pop	 ebx
$LN18@Find_lower:

; 1716 :     }

  0007b	8b c7		 mov	 eax, edi
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CItemData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAD$0A@@std@@YAPADPAD@Z PROC		; std::_Refancy<char *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ENDP		; std::_Refancy<char *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z
_TEXT	SEGMENT
tv460 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
_this$1$ = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx
  00013	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00015	2b d3		 sub	 edx, ebx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cb		 sub	 ecx, ebx
  0001e	c1 fa 02	 sar	 edx, 2
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 02	 sar	 edx, 2
  00035	8b f2		 mov	 esi, edx
  00037	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0003a	03 f2		 add	 esi, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003c	81 fe aa aa aa
	0a		 cmp	 esi, 178956970		; 0aaaaaaaH
  00042	0f 84 20 01 00
	00		 je	 $LN56@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00048	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00050	2b cb		 sub	 ecx, ebx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00052	46		 inc	 esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00055	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0005a	89 75 f8	 mov	 DWORD PTR __Newsize$1$[ebp], esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005d	c1 fa 02	 sar	 edx, 2
  00060	8b ca		 mov	 ecx, edx
  00062	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00065	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00067	8b d1		 mov	 edx, ecx
  00069	d1 ea		 shr	 edx, 1
  0006b	2b c2		 sub	 eax, edx
  0006d	3b c8		 cmp	 ecx, eax
  0006f	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00071	8b c6		 mov	 eax, esi
  00073	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00075	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00078	3b c6		 cmp	 eax, esi
  0007a	0f 42 c6	 cmovb	 eax, esi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0007d	3d aa aa aa 0a	 cmp	 eax, 178956970		; 0aaaaaaaH
  00082	0f 87 e5 00 00
	00		 ja	 $LN57@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00088	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0008b	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008e	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0008f	89 45 f4	 mov	 DWORD PTR tv460[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00092	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00097	8b d8		 mov	 ebx, eax
  00099	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009c	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009f	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000a2	8d 0c c3	 lea	 ecx, DWORD PTR [ebx+eax*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a5	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  000a8	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  000af	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000b6	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000b9	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000bc	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  000bf	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  000c4	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000c9	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000d0	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d7	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000da	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000dd	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000e0	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000e2	3b c2		 cmp	 eax, edx
  000e4	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000e6	8b c3		 mov	 eax, ebx

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000e8	eb 18		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000ea	57		 push	 edi
  000eb	53		 push	 ebx
  000ec	50		 push	 eax
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000f3	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000f6	83 c4 10	 add	 esp, 16			; 00000010H
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000fc	83 c0 18	 add	 eax, 24			; 00000018H

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000ff	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00102	57		 push	 edi
  00103	50		 push	 eax
  00104	52		 push	 edx
  00105	51		 push	 ecx
  00106	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0010b	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0010d	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00110	85 c9		 test	 ecx, ecx
  00112	74 35		 je	 SHORT $LN48@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00114	57		 push	 edi
  00115	ff 77 04	 push	 DWORD PTR [edi+4]
  00118	51		 push	 ecx
  00119	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0011e	8b 37		 mov	 esi, DWORD PTR [edi]
  00120	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00125	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00128	2b ce		 sub	 ecx, esi
  0012a	f7 e9		 imul	 ecx
  0012c	c1 fa 02	 sar	 edx, 2
  0012f	8b c2		 mov	 eax, edx
  00131	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00134	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00136	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00139	c1 e0 03	 shl	 eax, 3
  0013c	50		 push	 eax
  0013d	56		 push	 esi
  0013e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00143	8b 75 f8	 mov	 esi, DWORD PTR __Newsize$1$[ebp]
  00146	83 c4 14	 add	 esp, 20			; 00000014H
$LN48@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  00149	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0014c	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  0014f	8d 0c cb	 lea	 ecx, DWORD PTR [ebx+ecx*8]
  00152	89 1f		 mov	 DWORD PTR [edi], ebx
  00154	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00157	8b 4d f4	 mov	 ecx, DWORD PTR tv460[ebp]
  0015a	03 cb		 add	 ecx, ebx
  0015c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 766  :         return _Newvec + _Whereoff;

  0015f	5f		 pop	 edi
  00160	5e		 pop	 esi
  00161	5b		 pop	 ebx

; 767  :     }

  00162	8b e5		 mov	 esp, ebp
  00164	5d		 pop	 ebp
  00165	c2 08 00	 ret	 8
$LN56@Emplace_re:

; 738  :             _Xlength();

  00168	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN57@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0016d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN54@Emplace_re:
  00172	cc		 int	 3
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??__FscaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@YAXXZ
text$yd	SEGMENT
??__FscaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@YAXXZ PROC ; `CItemManager::LoadItemScale'::`6'::`dynamic atexit destructor for 'scaleMap'', COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00005	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  0000a	56		 push	 esi
  0000b	ff 70 04	 push	 DWORD PTR [eax+4]
  0000e	68 00 00 00 00	 push	 OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00013	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >

; 753  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A

; 370  :         _Destroy_in_place(_Ptr->_Left);

  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>

; 371  :         _Destroy_in_place(_Ptr->_Parent);

  00024	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>

; 372  :         _Destroy_in_place(_Ptr->_Right);

  0002d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00036	6a 58		 push	 88			; 00000058H
  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
  00041	5e		 pop	 esi
  00042	c3		 ret	 0
??__FscaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@YAXXZ ENDP ; `CItemManager::LoadItemScale'::`6'::`dynamic atexit destructor for 'scaleMap''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
;	COMDAT ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>, COMDAT
; _this$ = ecx

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  0002e	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00030	8b d1		 mov	 edx, ecx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00043	8d 5a 01	 lea	 ebx, DWORD PTR [edx+1]
$LL29@allocator:
  00046	8a 02		 mov	 al, BYTE PTR [edx]
  00048	42		 inc	 edx
  00049	84 c0		 test	 al, al
  0004b	75 f9		 jne	 SHORT $LL29@allocator
  0004d	2b d3		 sub	 edx, ebx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0004f	52		 push	 edx
  00050	51		 push	 ecx
  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00058	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0005b	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0005e	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00067	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006e	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00075	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00078	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  0007b	0f 1f 44 00 00	 npad	 5
$LL30@allocator:
  00080	8a 10		 mov	 dl, BYTE PTR [eax]
  00082	40		 inc	 eax
  00083	84 d2		 test	 dl, dl
  00085	75 f9		 jne	 SHORT $LL30@allocator
  00087	2b c3		 sub	 eax, ebx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00089	50		 push	 eax
  0008a	57		 push	 edi
  0008b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 248  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00090	8b c6		 mov	 eax, esi
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ PROC ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 30	 push	 DWORD PTR [esi+48]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 44 0f 00
	00 00		 mov	 DWORD PTR [esi+68], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 30 00	 mov	 BYTE PTR [esi+48], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0002d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00030	72 0d		 jb	 SHORT $LN20@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00032	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	50		 push	 eax
  00034	ff 76 18	 push	 DWORD PTR [esi+24]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003c	83 c4 08	 add	 esp, 8
$LN20@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00057	72 0c		 jb	 SHORT $LN30@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00059	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005a	50		 push	 eax
  0005b	ff 36		 push	 DWORD PTR [esi]
  0005d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00062	83 c4 08	 add	 esp, 8
$LN30@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00065	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00073	c6 06 00	 mov	 BYTE PTR [esi], 0
  00076	5e		 pop	 esi
  00077	c3		 ret	 0
??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ ENDP ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 18	 push	 DWORD PTR [esi+24]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0002d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00030	72 0c		 jb	 SHORT $LN17@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00032	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00033	50		 push	 eax
  00034	ff 36		 push	 DWORD PTR [esi]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003b	83 c4 08	 add	 esp, 8
$LN17@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00045	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0004f	5e		 pop	 esi
  00050	c3		 ret	 0
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
;	COMDAT ??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z PROC ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator(), COMDAT
; _this$ = ecx

; 126  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 126  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00008	8b 7d 08	 mov	 edi, DWORD PTR __Left$[ebp]
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00012	83 c4 08	 add	 esp, 8
  00015	84 c0		 test	 al, al
  00017	75 2a		 jne	 SHORT $LN6@operator
  00019	57		 push	 edi
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00020	83 c4 08	 add	 esp, 8
  00023	84 c0		 test	 al, al
  00025	75 14		 jne	 SHORT $LN5@operator
  00027	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0002a	50		 push	 eax
  0002b	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00034	83 c4 08	 add	 esp, 8
  00037	84 c0		 test	 al, al
  00039	75 08		 jne	 SHORT $LN6@operator
$LN5@operator:
  0003b	5f		 pop	 edi
  0003c	32 c0		 xor	 al, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 128  :     }

  0003e	5e		 pop	 esi
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
$LN6@operator:
  00043	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00044	b0 01		 mov	 al, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 128  :     }

  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??R?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QBE_NABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@0@Z ENDP ; std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0000e	6a 58		 push	 88			; 00000058H
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0001b	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?GetHashCode@@YAKPBD@Z
_TEXT	SEGMENT
_pString$ = 8						; size = 4
?GetHashCode@@YAKPBD@Z PROC				; GetHashCode, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 240  : 	   unsigned long i,len;
; 241  : 	   unsigned long ch;
; 242  : 	   unsigned long result;
; 243  : 
; 244  : 	   len     = strlen( pString );

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pString$[ebp]
  00007	8b cb		 mov	 ecx, ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0000e	66 90		 npad	 2
$LL12@GetHashCod:
  00010	8a 01		 mov	 al, BYTE PTR [ecx]
  00012	41		 inc	 ecx
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL12@GetHashCod

; 245  : 	   result = 5381;

  00017	bf 05 15 00 00	 mov	 edi, 5381		; 00001505H
  0001c	be 00 00 00 00	 mov	 esi, 0
  00021	2b ca		 sub	 ecx, edx

; 246  : 	   for( i=0; i<len; i++ )

  00023	74 12		 je	 SHORT $LN13@GetHashCod
$LL8@GetHashCod:

; 247  : 	   {
; 248  : 	   	   ch = (unsigned long)pString[i];

  00025	0f be 14 1e	 movsx	 edx, BYTE PTR [esi+ebx]

; 249  : 	   	   result = ((result<< 5) + result) + ch; // hash * 33 + ch

  00029	8b c7		 mov	 eax, edi
  0002b	c1 e0 05	 shl	 eax, 5
  0002e	46		 inc	 esi
  0002f	03 f8		 add	 edi, eax
  00031	03 fa		 add	 edi, edx
  00033	3b f1		 cmp	 esi, ecx
  00035	72 ee		 jb	 SHORT $LL8@GetHashCod
$LN13@GetHashCod:

; 250  : 	   }
; 251  : 
; 252  : 	   return result;
; 253  : }

  00037	8b c7		 mov	 eax, edi
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?GetHashCode@@YAKPBD@Z ENDP				; GetHashCode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z
_TEXT	SEGMENT
tv598 = -29						; size = 1
$T1 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_c_rstSrc$ = 8						; size = 4
_rstTemp$ = 12						; size = 4
?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z PROC ; __SnapString, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _c_rstSrc$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _rstTemp$[ebp]
  00018	57		 push	 edi

; 180  : 	UINT uSrcLen=c_rstSrc.length();

  00019	8b 7a 10	 mov	 edi, DWORD PTR [edx+16]

; 181  : 	if (uSrcLen<2)

  0001c	83 ff 02	 cmp	 edi, 2
  0001f	0f 82 c8 00 00
	00		 jb	 $LN83@SnapString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00025	8b 5a 14	 mov	 ebx, DWORD PTR [edx+20]

; 2144 :         const value_type* _Result = _Bx._Buf;

  00028	8b c2		 mov	 eax, edx

; 2153 :         return _BUF_SIZE <= _Myres;

  0002a	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN81@SnapString

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 02		 mov	 eax, DWORD PTR [edx]
$LN81@SnapString:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 184  : 	if (c_rstSrc[0]!='"')

  00031	80 38 22	 cmp	 BYTE PTR [eax], 34	; 00000022H
  00034	0f 85 b3 00 00
	00		 jne	 $LN83@SnapString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+16], 0
  00041	c7 45 f8 0f 00
	00 00		 mov	 DWORD PTR $T1[ebp+20], 15 ; 0000000fH
  00048	c6 45 e4 00	 mov	 BYTE PTR $T1[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0004c	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004f	72 08		 jb	 SHORT $LN82@SnapString

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00051	8b 02		 mov	 eax, DWORD PTR [edx]
  00053	8a 44 38 ff	 mov	 al, BYTE PTR [eax+edi-1]
  00057	eb 04		 jmp	 SHORT $LN84@SnapString
$LN82@SnapString:
  00059	8a 44 3a ff	 mov	 al, BYTE PTR [edx+edi-1]
$LN84@SnapString:

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0005d	88 45 e3	 mov	 BYTE PTR tv598[ebp], al
  00060	8d 4f ff	 lea	 ecx, DWORD PTR [edi-1]
  00063	80 7d e3 22	 cmp	 BYTE PTR tv598[ebp], 34	; 00000022H
  00067	8b c1		 mov	 eax, ecx
  00069	0f 45 c7	 cmovne	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 193  : 	rstTemp=c_rstSrc.substr(uLeftCut, uRightCut-uLeftCut);

  0006c	48		 dec	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0006d	3b c8		 cmp	 ecx, eax
  0006f	0f 42 c1	 cmovb	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00072	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00075	72 02		 jb	 SHORT $LN44@SnapString

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00077	8b 12		 mov	 edx, DWORD PTR [edx]
$LN44@SnapString:

; 2946 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00079	50		 push	 eax
  0007a	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0007d	50		 push	 eax
  0007e	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00081	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2587 :         if (this != _STD addressof(_Right)) {

  00086	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00089	3b f0		 cmp	 esi, eax
  0008b	74 38		 je	 SHORT $LN68@SnapString

; 2153 :         return _BUF_SIZE <= _Myres;

  0008d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00090	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00093	72 0c		 jb	 SHORT $LN57@SnapString

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00095	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00096	50		 push	 eax
  00097	ff 36		 push	 DWORD PTR [esi]
  00099	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0009e	83 c4 08	 add	 esp, 8
$LN57@SnapString:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a1	0f 10 45 e4	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  000a5	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 194  : 	return rstTemp;

  000a6	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a8	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  000ab	f3 0f 7e 45 f4	 movq	 xmm0, QWORD PTR $T1[ebp+16]
  000b0	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 195  : }

  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN68@SnapString:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000c5	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp+20]
  000c8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cb	72 0d		 jb	 SHORT $LN73@SnapString

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000cd	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ce	51		 push	 ecx
  000cf	ff 75 e4	 push	 DWORD PTR $T1[ebp]
  000d2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000d7	83 c4 08	 add	 esp, 8
$LN73@SnapString:
  000da	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 194  : 	return rstTemp;

  000db	8b c6		 mov	 eax, esi

; 195  : }

  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
$LN83@SnapString:
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f0	8b c2		 mov	 eax, edx
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	33 cd		 xor	 ecx, ebp
  000f6	5b		 pop	 ebx
  000f7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ENDP ; __SnapString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
_TEXT	SEGMENT
__Loc$2 = -36						; size = 12
$T3 = -24						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Myhead$ = 12						; size = 4
__Val$ = 12						; size = 4
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>, COMDAT
; _this$ = ecx

; 1343 :     pair<iterator, bool> insert(value_type&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR __Val$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 0b		 jne	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	72 04		 jb	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00050	32 d2		 xor	 dl, dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1011 :                 return {_Loc._Bound, false};

  00052	eb 76		 jmp	 SHORT $LN55@insert
$LN4@insert:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00054	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  0005b	0f 84 85 00 00
	00		 je	 $LN69@insert

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00061	8b 07		 mov	 eax, DWORD PTR [edi]
  00063	89 45 0c	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00066	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00069	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00072	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00079	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0007e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00080	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00082	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00085	50		 push	 eax
  00086	56		 push	 esi
  00087	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0008a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0008d	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  00090	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00095	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00098	50		 push	 eax
  00099	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000a2	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000a5	50		 push	 eax
  000a6	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
  000af	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  000b2	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b8	8b cf		 mov	 ecx, edi
  000ba	56		 push	 esi
  000bb	ff 75 e0	 push	 DWORD PTR __Loc$2[ebp+4]
  000be	ff 75 dc	 push	 DWORD PTR __Loc$2[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c6	8b c8		 mov	 ecx, eax
  000c8	b2 01		 mov	 dl, 1
$LN55@insert:
  000ca	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000cd	89 08		 mov	 DWORD PTR [eax], ecx
  000cf	88 50 04	 mov	 BYTE PTR [eax+4], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1346 :     }

  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN69@insert:

; 1720 :             _Throw_tree_length_error();

  000e6	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN67@insert:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
; Function compile flags: /Ogtp
;	COMDAT ??_GCItemManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCItemManager@@UAEPAXI@Z PROC			; CItemManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CItemManager@@UAE@XZ	; CItemManager::~CItemManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCItemManager@@UAEPAXI@Z ENDP			; CItemManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\initializer_list
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\initializer_list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemScale@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
$T3 = -1436						; size = 12
$T4 = -1424						; size = 4
$T5 = -1420						; size = 4
$T6 = -1416						; size = 4
$T7 = -1412						; size = 4
$T8 = -1408						; size = 4
$T9 = -1404						; size = 4
$T10 = -1400						; size = 4
__Loc$11 = -1396					; size = 12
$T12 = -1384						; size = 8
$T13 = -1376						; size = 8
$T14 = -1368						; size = 8
$T15 = -1360						; size = 8
$T16 = -1352						; size = 8
_kTextFileLoader$ = -1344				; size = 16
$T17 = -1328						; size = 8
$T18 = -1320						; size = 8
$T19 = -1312						; size = 8
$T20 = -1304						; size = 8
$T21 = -1296						; size = 8
__Loc$22 = -1288					; size = 12
_strScaleY$1$ = -1276					; size = 4
$T23 = -1272						; size = 8
_strScaleZ$1$ = -1264					; size = 4
_this$GSCopy$1$ = -1260					; size = 4
tv7242 = -1256						; size = 4
_pvData$ = -1252					; size = 4
_strScaleX$1$ = -1248					; size = 4
_this$24 = -1248					; size = 4
_c_szFileName$GSCopy$1$ = -1244				; size = 4
_strPositionX$3$ = -1240				; size = 4
_strPositionY$3$ = -1236				; size = 4
_strPositionY$2$ = -1232				; size = 4
_strPositionZ$2$ = -1228				; size = 4
_strPositionZ$1$ = -1224				; size = 4
_j$1$ = -1220						; size = 4
$T25 = -1216						; size = 4
_pItemData$1$ = -1212					; size = 4
$T26 = -1212						; size = 4
$T27 = -1212						; size = 4
_i$1$ = -1208						; size = 4
_kTokenVector$ = -1204					; size = 12
_strPositionX$2$ = -1192				; size = 4
__ULast$1$ = -1192					; size = 4
__ULast$1$ = -1192					; size = 4
_strPositionX$1$ = -1188				; size = 4
__Pnode$28 = -1188					; size = 4
_strPositionY$1$ = -1184				; size = 4
__UFirst$1$ = -1184					; size = 4
$T29 = -1180						; size = 4
__New_array$30 = -1180					; size = 4
__New_array$31 = -1180					; size = 4
__New_array$32 = -1180					; size = 4
__New_array$33 = -1180					; size = 4
$T34 = -1173						; size = 1
_strPositionZ$3$ = -1172				; size = 4
__Myhead$35 = -1172					; size = 4
__Myhead$36 = -1172					; size = 4
__Right_size$1$ = -1168					; size = 4
__Right_size$1$ = -1168					; size = 4
__Right_size$1$ = -1168					; size = 4
$T37 = -1168						; size = 4
__New_array$38 = -1168					; size = 4
__New_array$39 = -1168					; size = 4
__New_array$40 = -1168					; size = 4
__New_array$41 = -1168					; size = 4
__Result$2$ = -1164					; size = 4
__Result$2$ = -1164					; size = 4
__Result$1$ = -1164					; size = 4
__Result$1$ = -1164					; size = 4
__Right_size$1$ = -1164					; size = 4
__Result$2$ = -1164					; size = 4
__Result$2$ = -1164					; size = 4
__Result$2$ = -1164					; size = 4
__Right_size$1$ = -1160					; size = 4
__Result$1$ = -1160					; size = 4
_this$1$ = -1160					; size = 4
$T42 = -1160						; size = 4
$T43 = -1160						; size = 4
$T44 = -1160						; size = 4
$T45 = -1160						; size = 4
$T46 = -1160						; size = 4
_kFile$ = -1156						; size = 324
$T47 = -832						; size = 648
$T48 = -184						; size = 48
_strPositionZ$49 = -136					; size = 24
_strPositionX$50 = -112					; size = 24
_strPositionY$51 = -88					; size = 24
_strJob$52 = -64					; size = 24
_strSex$53 = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemScale@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemScale, COMDAT
; _this$ = ecx

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemScale@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 90 05 00
	00		 sub	 esp, 1424		; 00000590H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d 14 fb ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00033	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]

; 389  : 	const VOID* pvData;
; 390  : 	CMappedFile kFile;

  00036	8d 8d 7c fb ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0003c	33 c0		 xor	 eax, eax
  0003e	89 bd 24 fb ff
	ff		 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], edi
  00044	89 85 40 fb ff
	ff		 mov	 DWORD PTR $T25[ebp], eax
  0004a	89 85 44 fb ff
	ff		 mov	 DWORD PTR $T26[ebp], eax
  00050	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 391  : 	if (!CEterPackManager::Instance().Get(kFile, c_szFileName, &pvData))

  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  0005b	8d 85 1c fb ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  00061	50		 push	 eax
  00062	57		 push	 edi
  00063	8d 85 7c fb ff
	ff		 lea	 eax, DWORD PTR _kFile$[ebp]
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00076	84 c0		 test	 al, al
  00078	75 0b		 jne	 SHORT $LN9@LoadItemSc
  0007a	88 85 6b fb ff
	ff		 mov	 BYTE PTR $T34[ebp], al
  00080	e9 6a 0b 00 00	 jmp	 $LN44@LoadItemSc
$LN9@LoadItemSc:

; 392  : 		return false;
; 393  : 
; 394  : 	CMemoryTextFileLoader kTextFileLoader;

  00085	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  0008b	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader

; 395  : 	kTextFileLoader.Bind(kFile.Size(), pvData);

  00090	ff b5 1c fb ff
	ff		 push	 DWORD PTR _pvData$[ebp]
  00096	8d 8d 7c fb ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0009c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a0	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  000a5	50		 push	 eax
  000a6	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000ac	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000b1	c7 85 4c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0
  000bb	c7 85 50 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0
  000c5	c7 85 54 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 398  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  000cf	33 f6		 xor	 esi, esi
  000d1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000d5	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000db	89 b5 48 fb ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  000e1	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  000e6	85 c0		 test	 eax, eax
  000e8	0f 84 85 0a 00
	00		 je	 $LN1202@LoadItemSc

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  000f4	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  000fa	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  000fd	89 85 18 fb ff
	ff		 mov	 DWORD PTR tv7242[ebp], eax
$LL4@LoadItemSc:

; 399  : 	{
; 400  : 		if (!kTextFileLoader.SplitLineByTab(i, &kTokenVector))

  00103	8d 85 4c fb ff
	ff		 lea	 eax, DWORD PTR _kTokenVector$[ebp]
  00109	50		 push	 eax
  0010a	56		 push	 esi
  0010b	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00111	e8 00 00 00 00	 call	 ?SplitLineByTab@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; CMemoryTextFileLoader::SplitLineByTab
  00116	84 c0		 test	 al, al
  00118	0f 84 3b 0a 00
	00		 je	 $LN2@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0011e	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00124	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00129	2b 8d 4c fb ff
	ff		 sub	 ecx, DWORD PTR _kTokenVector$[ebp]
  0012f	f7 e9		 imul	 ecx
  00131	c1 fa 02	 sar	 edx, 2
  00134	8b c2		 mov	 eax, edx
  00136	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00139	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 403  : 		if (kTokenVector.size() < ITEMSCALE_REQ)

  0013b	83 f8 06	 cmp	 eax, 6
  0013e	73 14		 jae	 SHORT $LN11@LoadItemSc

; 404  : 		{
; 405  : 			TraceError("LoadItemScale: invalid line %d (%s).", i, c_szFileName);

  00140	57		 push	 edi
  00141	56		 push	 esi
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JIKMIDCO@LoadItemScale?3?5invalid?5line?5?$CFd?5@
  00147	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0014c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 406  : 			continue;

  0014f	e9 05 0a 00 00	 jmp	 $LN2@LoadItemSc
$LN11@LoadItemSc:

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00154	8b 85 18 fb ff
	ff		 mov	 eax, DWORD PTR tv7242[ebp]
  0015a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA
  00161	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00167	0f 8f b5 0a 00
	00		 jg	 $LN1216@LoadItemSc
$LN1203@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0016d	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 420  : 		std::string strJob = kTokenVector[ITEMSCALE_JOB];

  00173	8d 4d c0	 lea	 ecx, DWORD PTR _strJob$52[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00176	83 c0 18	 add	 eax, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 420  : 		std::string strJob = kTokenVector[ITEMSCALE_JOB];

  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0017f	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 421  : 		std::string strSex = kTokenVector[ITEMSCALE_SEX];

  00185	8d 4d d8	 lea	 ecx, DWORD PTR _strSex$53[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00188	83 c0 30	 add	 eax, 48			; 00000030H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 420  : 		std::string strJob = kTokenVector[ITEMSCALE_JOB];

  0018b	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH

; 421  : 		std::string strSex = kTokenVector[ITEMSCALE_SEX];

  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  00195	83 7d d4 10	 cmp	 DWORD PTR _strJob$52[ebp+20], 16 ; 00000010H
  00199	8d 45 c0	 lea	 eax, DWORD PTR _strJob$52[ebp]
  0019c	8b 7d c0	 mov	 edi, DWORD PTR _strJob$52[ebp]
  0019f	0f 43 c7	 cmovae	 eax, edi

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>

; 2136 :         if (_Large_string_engaged()) {

  001a8	83 7d d4 10	 cmp	 DWORD PTR _strJob$52[ebp+20], 16 ; 00000010H

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  001ac	8b f0		 mov	 esi, eax

; 2135 :         value_type* _Result = _Bx._Buf;

  001ae	8d 45 c0	 lea	 eax, DWORD PTR _strJob$52[ebp]

; 2136 :         if (_Large_string_engaged()) {

  001b1	0f 43 c7	 cmovae	 eax, edi

; 3494 :         return iterator(

  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
  001ba	03 45 d0	 add	 eax, DWORD PTR _strJob$52[ebp+16]

; 2136 :         if (_Large_string_engaged()) {

  001bd	83 7d d4 10	 cmp	 DWORD PTR _strJob$52[ebp+20], 16 ; 00000010H

; 3494 :         return iterator(

  001c1	89 85 58 fb ff
	ff		 mov	 DWORD PTR __ULast$1$[ebp], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  001c7	8d 45 c0	 lea	 eax, DWORD PTR _strJob$52[ebp]

; 2136 :         if (_Large_string_engaged()) {

  001ca	0f 43 c7	 cmovae	 eax, edi

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
  001d3	8b f8		 mov	 edi, eax
  001d5	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 2215 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

  001d8	3b bd 58 fb ff
	ff		 cmp	 edi, DWORD PTR __ULast$1$[ebp]
  001de	74 1a		 je	 SHORT $LN682@LoadItemSc
  001e0	2b f7		 sub	 esi, edi
$LL683@LoadItemSc:

; 2216 :         *_UDest = _Func(*_UFirst);

  001e2	0f be 07	 movsx	 eax, BYTE PTR [edi]
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 _toupper
  001eb	88 04 37	 mov	 BYTE PTR [edi+esi], al
  001ee	83 c4 04	 add	 esp, 4
  001f1	47		 inc	 edi
  001f2	3b bd 58 fb ff
	ff		 cmp	 edi, DWORD PTR __ULast$1$[ebp]
  001f8	75 e8		 jne	 SHORT $LL683@LoadItemSc
$LN682@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2136 :         if (_Large_string_engaged()) {

  001fa	83 7d ec 10	 cmp	 DWORD PTR _strSex$53[ebp+20], 16 ; 00000010H
  001fe	8d 45 d8	 lea	 eax, DWORD PTR _strSex$53[ebp]
  00201	8b 7d d8	 mov	 edi, DWORD PTR _strSex$53[ebp]
  00204	0f 43 c7	 cmovae	 eax, edi

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  00207	50		 push	 eax
  00208	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>

; 2136 :         if (_Large_string_engaged()) {

  0020d	83 7d ec 10	 cmp	 DWORD PTR _strSex$53[ebp+20], 16 ; 00000010H

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  00211	8b f0		 mov	 esi, eax

; 2135 :         value_type* _Result = _Bx._Buf;

  00213	8d 45 d8	 lea	 eax, DWORD PTR _strSex$53[ebp]

; 2136 :         if (_Large_string_engaged()) {

  00216	0f 43 c7	 cmovae	 eax, edi

; 3494 :         return iterator(

  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
  0021f	03 45 e8	 add	 eax, DWORD PTR _strSex$53[ebp+16]

; 2136 :         if (_Large_string_engaged()) {

  00222	83 7d ec 10	 cmp	 DWORD PTR _strSex$53[ebp+20], 16 ; 00000010H

; 3494 :         return iterator(

  00226	89 85 58 fb ff
	ff		 mov	 DWORD PTR __ULast$1$[ebp], eax

; 2135 :         value_type* _Result = _Bx._Buf;

  0022c	8d 45 d8	 lea	 eax, DWORD PTR _strSex$53[ebp]

; 2136 :         if (_Large_string_engaged()) {

  0022f	0f 43 c7	 cmovae	 eax, edi

; 3486 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ??$_Refancy@PAD$0A@@std@@YAPADPAD@Z ; std::_Refancy<char *,0>
  00238	8b f8		 mov	 edi, eax
  0023a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 2215 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

  0023d	3b bd 58 fb ff
	ff		 cmp	 edi, DWORD PTR __ULast$1$[ebp]
  00243	74 1a		 je	 SHORT $LN726@LoadItemSc
  00245	2b f7		 sub	 esi, edi
$LL727@LoadItemSc:

; 2216 :         *_UDest = _Func(*_UFirst);

  00247	0f be 07	 movsx	 eax, BYTE PTR [edi]
  0024a	50		 push	 eax
  0024b	e8 00 00 00 00	 call	 _toupper
  00250	88 04 37	 mov	 BYTE PTR [edi+esi], al
  00253	83 c4 04	 add	 esp, 4
  00256	47		 inc	 edi
  00257	3b bd 58 fb ff
	ff		 cmp	 edi, DWORD PTR __ULast$1$[ebp]
  0025d	75 e8		 jne	 SHORT $LL727@LoadItemSc
$LN726@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0025f	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00265	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  0026a	89 bd 58 fb ff
	ff		 mov	 DWORD PTR _strPositionX$2$[ebp], edi
  00270	89 7d a4	 mov	 DWORD PTR _strPositionX$50[ebp+20], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00273	66 c7 45 90 30
	00		 mov	 WORD PTR _strPositionX$50[ebp], 48 ; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00279	8d 48 48	 lea	 ecx, DWORD PTR [eax+72]
  0027c	89 8d 20 fb ff
	ff		 mov	 DWORD PTR _strScaleX$1$[ebp], ecx
  00282	8d 48 60	 lea	 ecx, DWORD PTR [eax+96]
  00285	83 c0 78	 add	 eax, 120		; 00000078H
  00288	89 8d 04 fb ff
	ff		 mov	 DWORD PTR _strScaleY$1$[ebp], ecx
  0028e	89 85 10 fb ff
	ff		 mov	 DWORD PTR _strScaleZ$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00294	b8 01 00 00 00	 mov	 eax, 1
  00299	89 85 5c fb ff
	ff		 mov	 DWORD PTR _strPositionX$1$[ebp], eax
  0029f	89 45 a0	 mov	 DWORD PTR _strPositionX$50[ebp+16], eax

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  002a2	50		 push	 eax
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  002a8	8d 4d a8	 lea	 ecx, DWORD PTR _strPositionY$51[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 428  : 		std::string strPositionX = "0";

  002ab	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  002af	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strPositionY$51[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002b6	89 7d bc	 mov	 DWORD PTR _strPositionY$51[ebp+20], edi

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  002b9	c6 45 a8 00	 mov	 BYTE PTR _strPositionY$51[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  002bd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002c2	8d 45 c0	 lea	 eax, DWORD PTR _strJob$52[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 429  : 		std::string strPositionY = "0";

  002c5	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002c9	50		 push	 eax
  002ca	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T48[ebp]
  002d0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002d5	8d 45 d8	 lea	 eax, DWORD PTR _strSex$53[ebp]
  002d8	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  002dc	50		 push	 eax
  002dd	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T48[ebp+24]
  002e3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 392  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  002e8	83 8d 40 fb ff
	ff 01		 or	 DWORD PTR $T25[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  002ef	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T48[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 430  : 		std::string strPositionZ = scaleMap[std::make_pair(strJob, strSex)];

  002f5	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  002f9	50		 push	 eax
  002fa	8d 85 8c fa ff
	ff		 lea	 eax, DWORD PTR __Loc$11[ebp]
  00300	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ??$_Find_lower_bound@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 177  :         if (_Mybase::_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  0030b	8b b5 94 fa ff
	ff		 mov	 esi, DWORD PTR __Loc$11[ebp+8]
  00311	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T48[ebp]
  00317	50		 push	 eax
  00318	56		 push	 esi
  00319	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  0031e	e8 00 00 00 00	 call	 ??$_Lower_bound_duplicate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Lower_bound_duplicate<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00323	84 c0		 test	 al, al
  00325	0f 85 b4 00 00
	00		 jne	 $LN809@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  0032b	81 3d 04 00 00
	00 2e ba e8 02	 cmp	 DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A+4, 48806446 ; 02e8ba2eH
  00335	0f 84 e2 08 00
	00		 je	 $LN1175@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  0033b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00340	89 85 6c fb ff
	ff		 mov	 DWORD PTR __Myhead$35[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00346	c7 85 d8 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp], OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00350	6a 58		 push	 88			; 00000058H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00352	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00356	c7 85 dc fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00360	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00365	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  00367	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

  0036b	8d 95 48 ff ff
	ff		 lea	 edx, DWORD PTR $T48[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00371	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00374	51		 push	 ecx
  00375	8b c4		 mov	 eax, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

  00377	89 10		 mov	 DWORD PTR [eax], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00379	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  00380	50		 push	 eax
  00381	e8 00 00 00 00	 call	 ??$?0$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@$$Z$$V@?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &&>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00386	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$35[ebp]
  0038c	50		 push	 eax
  0038d	56		 push	 esi
  0038e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00393	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$35[ebp]
  00399	50		 push	 eax
  0039a	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0039d	50		 push	 eax
  0039e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  003a3	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$35[ebp]
  003a9	50		 push	 eax
  003aa	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  003ad	50		 push	 eax
  003ae	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
  003b3	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  003b6	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  003bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  003c1	c7 85 dc fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  003cb	56		 push	 esi
  003cc	ff b5 90 fa ff
	ff		 push	 DWORD PTR __Loc$11[ebp+4]
  003d2	ff b5 8c fa ff
	ff		 push	 DWORD PTR __Loc$11[ebp]
  003d8	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
  003dd	8b f0		 mov	 esi, eax
$LN809@LoadItemSc:

; 154  :         return _Try_emplace(_STD move(_Keyval)).first->_Myval.second;

  003df	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 430  : 		std::string strPositionZ = scaleMap[std::make_pair(strJob, strSex)];

  003e2	50		 push	 eax
  003e3	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPositionZ$49[ebp]
  003e9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003ee	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T48[ebp]
  003f4	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  003f8	e8 00 00 00 00	 call	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003fd	8b 8d 50 fb ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00403	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00408	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  0040e	2b ce		 sub	 ecx, esi
  00410	f7 e9		 imul	 ecx
  00412	c1 fa 02	 sar	 edx, 2
  00415	8b c2		 mov	 eax, edx
  00417	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0041a	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 431  : 		if (kTokenVector.size() == ITEMSCALE_NUM)

  0041c	83 f8 09	 cmp	 eax, 9
  0041f	75 6c		 jne	 SHORT $LN12@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00421	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00427	8d 4d 90	 lea	 ecx, DWORD PTR _strPositionX$50[ebp]
  0042a	3b c8		 cmp	 ecx, eax
  0042c	74 2e		 je	 SHORT $LN879@LoadItemSc

; 2145 :         if (_Large_string_engaged()) {

  0042e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00432	8b c8		 mov	 ecx, eax
  00434	72 02		 jb	 SHORT $LN884@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00436	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN884@LoadItemSc:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00438	ff 70 10	 push	 DWORD PTR [eax+16]
  0043b	51		 push	 ecx
  0043c	8d 4d 90	 lea	 ecx, DWORD PTR _strPositionX$50[ebp]
  0043f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00444	8b 45 a4	 mov	 eax, DWORD PTR _strPositionX$50[ebp+20]
  00447	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  0044d	89 85 58 fb ff
	ff		 mov	 DWORD PTR _strPositionX$2$[ebp], eax
  00453	8b 45 a0	 mov	 eax, DWORD PTR _strPositionX$50[ebp+16]
  00456	89 85 5c fb ff
	ff		 mov	 DWORD PTR _strPositionX$1$[ebp], eax
$LN879@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0045c	8d 86 a8 00 00
	00		 lea	 eax, DWORD PTR [esi+168]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00462	8d 4d a8	 lea	 ecx, DWORD PTR _strPositionY$51[ebp]
  00465	3b c8		 cmp	 ecx, eax
  00467	74 1c		 je	 SHORT $LN891@LoadItemSc

; 2145 :         if (_Large_string_engaged()) {

  00469	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0046d	8b c8		 mov	 ecx, eax
  0046f	72 02		 jb	 SHORT $LN896@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00471	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN896@LoadItemSc:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00473	ff 70 10	 push	 DWORD PTR [eax+16]
  00476	51		 push	 ecx
  00477	8d 4d a8	 lea	 ecx, DWORD PTR _strPositionY$51[ebp]
  0047a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0047f	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
$LN891@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00485	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 436  : 		}

  0048b	eb 0b		 jmp	 SHORT $LN1214@LoadItemSc
$LN12@LoadItemSc:

; 437  : 		else if (kTokenVector.size() == ITEMSCALE_AURA_NUM)

  0048d	83 f8 07	 cmp	 eax, 7
  00490	75 2f		 jne	 SHORT $LN917@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00492	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
$LN1214@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 443  : 		for (int j = 0; j < 5; ++j)

  00498	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPositionZ$49[ebp]
  0049e	3b c8		 cmp	 ecx, eax
  004a0	74 1f		 je	 SHORT $LN917@LoadItemSc
  004a2	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  004a6	8b c8		 mov	 ecx, eax
  004a8	72 02		 jb	 SHORT $LN922@LoadItemSc
  004aa	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN922@LoadItemSc:
  004ac	ff 70 10	 push	 DWORD PTR [eax+16]
  004af	51		 push	 ecx
  004b0	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPositionZ$49[ebp]
  004b6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  004bb	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
$LN917@LoadItemSc:
  004c1	8b 45 90	 mov	 eax, DWORD PTR _strPositionX$50[ebp]
  004c4	33 ff		 xor	 edi, edi
  004c6	89 85 28 fb ff
	ff		 mov	 DWORD PTR _strPositionX$3$[ebp], eax
  004cc	8b 45 bc	 mov	 eax, DWORD PTR _strPositionY$51[ebp+20]
  004cf	89 85 30 fb ff
	ff		 mov	 DWORD PTR _strPositionY$2$[ebp], eax
  004d5	8b 45 b8	 mov	 eax, DWORD PTR _strPositionY$51[ebp+16]
  004d8	89 85 60 fb ff
	ff		 mov	 DWORD PTR _strPositionY$1$[ebp], eax
  004de	8b 45 a8	 mov	 eax, DWORD PTR _strPositionY$51[ebp]
  004e1	89 85 2c fb ff
	ff		 mov	 DWORD PTR _strPositionY$3$[ebp], eax
  004e7	8b 45 8c	 mov	 eax, DWORD PTR _strPositionZ$49[ebp+20]
  004ea	89 85 38 fb ff
	ff		 mov	 DWORD PTR _strPositionZ$1$[ebp], eax
  004f0	8b 45 88	 mov	 eax, DWORD PTR _strPositionZ$49[ebp+16]
  004f3	89 85 6c fb ff
	ff		 mov	 DWORD PTR _strPositionZ$3$[ebp], eax
  004f9	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _strPositionZ$49[ebp]
  004ff	89 bd 3c fb ff
	ff		 mov	 DWORD PTR _j$1$[ebp], edi
  00505	89 85 34 fb ff
	ff		 mov	 DWORD PTR _strPositionZ$2$[ebp], eax
  0050b	0f 1f 44 00 00	 npad	 5
$LL8@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00510	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00514	72 02		 jb	 SHORT $LN931@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00516	8b 36		 mov	 esi, DWORD PTR [esi]
$LN931@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 445  : 			CItemData * pItemData = MakeItemData(atoi(kTokenVector[ITEMSCALE_VNUM].c_str()) + j);

  00518	56		 push	 esi
  00519	e8 00 00 00 00	 call	 __atoi64
  0051e	8b 8d 14 fb ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00524	83 c4 04	 add	 esp, 4
  00527	03 c7		 add	 eax, edi
  00529	50		 push	 eax
  0052a	e8 00 00 00 00	 call	 ?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ; CItemManager::MakeItemData
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  0052f	8b 8d 6c fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionZ$3$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00535	83 ec 18	 sub	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00538	83 bd 38 fb ff
	ff 10		 cmp	 DWORD PTR _strPositionZ$1$[ebp], 16 ; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  0053f	8b fc		 mov	 edi, esp
  00541	89 85 44 fb ff
	ff		 mov	 DWORD PTR _pItemData$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00547	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strPositionZ$49[ebp]

; 2145 :         if (_Large_string_engaged()) {

  0054d	0f 43 85 34 fb
	ff ff		 cmovae	 eax, DWORD PTR _strPositionZ$2$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00554	89 a5 70 fa ff
	ff		 mov	 DWORD PTR $T4[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0055a	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00561	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  00568	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  0056e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00571	73 0d		 jae	 SHORT $LN942@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00573	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00576	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0057b	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  0057e	eb 57		 jmp	 SHORT $LN941@LoadItemSc
$LN942@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00580	8b c1		 mov	 eax, ecx
  00582	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00587	83 c8 0f	 or	 eax, 15			; 0000000fH
  0058a	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  0058f	0f 47 c1	 cmova	 eax, ecx
  00592	89 85 78 fb ff
	ff		 mov	 DWORD PTR $T46[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00598	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00599	50		 push	 eax
  0059a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0059f	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  005a1	8d 85 70 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$41[ebp]
  005a7	50		 push	 eax
  005a8	57		 push	 edi
  005a9	89 b5 70 fb ff
	ff		 mov	 DWORD PTR __New_array$41[ebp], esi
  005af	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  005b4	8b 85 6c fb ff
	ff		 mov	 eax, DWORD PTR _strPositionZ$3$[ebp]
  005ba	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  005bb	50		 push	 eax
  005bc	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$2$[ebp]
  005c2	56		 push	 esi
  005c3	e8 00 00 00 00	 call	 _memcpy
  005c8	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR $T46[ebp]
  005ce	83 c4 18	 add	 esp, 24			; 00000018H
  005d1	8b 8d 6c fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionZ$3$[ebp]
$LN941@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  005d7	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  005da	83 ec 18	 sub	 esp, 24			; 00000018H
  005dd	89 47 14	 mov	 DWORD PTR [edi+20], eax
  005e0	8b fc		 mov	 edi, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  005e2	83 bd 30 fb ff
	ff 10		 cmp	 DWORD PTR _strPositionY$2$[ebp], 16 ; 00000010H
  005e9	8d 45 a8	 lea	 eax, DWORD PTR _strPositionY$51[ebp]

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  005ec	8b 8d 60 fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionY$1$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  005f2	0f 43 85 2c fb
	ff ff		 cmovae	 eax, DWORD PTR _strPositionY$3$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  005f9	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
  005fd	89 a5 80 fa ff
	ff		 mov	 DWORD PTR $T8[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00603	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  0060a	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  00611	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00617	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0061a	73 0d		 jae	 SHORT $LN964@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0061c	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  0061f	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00624	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  00627	eb 57		 jmp	 SHORT $LN963@LoadItemSc
$LN964@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00629	8b c1		 mov	 eax, ecx
  0062b	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00630	83 c8 0f	 or	 eax, 15			; 0000000fH
  00633	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00638	0f 47 c1	 cmova	 eax, ecx
  0063b	89 85 78 fb ff
	ff		 mov	 DWORD PTR $T42[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00641	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00642	50		 push	 eax
  00643	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00648	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  0064a	8d 85 70 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$40[ebp]
  00650	50		 push	 eax
  00651	57		 push	 edi
  00652	89 b5 70 fb ff
	ff		 mov	 DWORD PTR __New_array$40[ebp], esi
  00658	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0065d	8b 85 60 fb ff
	ff		 mov	 eax, DWORD PTR _strPositionY$1$[ebp]
  00663	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00664	50		 push	 eax
  00665	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$2$[ebp]
  0066b	56		 push	 esi
  0066c	e8 00 00 00 00	 call	 _memcpy
  00671	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR $T42[ebp]
  00677	83 c4 18	 add	 esp, 24			; 00000018H
  0067a	8b 8d 60 fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionY$1$[ebp]
$LN963@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00680	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  00683	83 ec 18	 sub	 esp, 24			; 00000018H
  00686	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00689	8b fc		 mov	 edi, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0068b	83 bd 58 fb ff
	ff 10		 cmp	 DWORD PTR _strPositionX$2$[ebp], 16 ; 00000010H
  00692	8d 45 90	 lea	 eax, DWORD PTR _strPositionX$50[ebp]

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00695	8b 8d 5c fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionX$1$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  0069b	0f 43 85 28 fb
	ff ff		 cmovae	 eax, DWORD PTR _strPositionX$3$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  006a2	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  006a6	89 a5 88 fa ff
	ff		 mov	 DWORD PTR $T10[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  006ac	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  006b3	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  006ba	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  006c0	83 f9 10	 cmp	 ecx, 16			; 00000010H
  006c3	73 0d		 jae	 SHORT $LN986@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  006c5	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  006c8	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  006cd	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  006d0	eb 57		 jmp	 SHORT $LN985@LoadItemSc
$LN986@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  006d2	8b c1		 mov	 eax, ecx
  006d4	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  006d9	83 c8 0f	 or	 eax, 15			; 0000000fH
  006dc	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  006e1	0f 47 c1	 cmova	 eax, ecx
  006e4	89 85 78 fb ff
	ff		 mov	 DWORD PTR $T45[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  006ea	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  006eb	50		 push	 eax
  006ec	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  006f1	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  006f3	8d 85 70 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$39[ebp]
  006f9	50		 push	 eax
  006fa	57		 push	 edi
  006fb	89 b5 70 fb ff
	ff		 mov	 DWORD PTR __New_array$39[ebp], esi
  00701	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00706	8b 85 5c fb ff
	ff		 mov	 eax, DWORD PTR _strPositionX$1$[ebp]
  0070c	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0070d	50		 push	 eax
  0070e	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$2$[ebp]
  00714	56		 push	 esi
  00715	e8 00 00 00 00	 call	 _memcpy
  0071a	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR $T45[ebp]
  00720	83 c4 18	 add	 esp, 24			; 00000018H
  00723	8b 8d 5c fb ff
	ff		 mov	 ecx, DWORD PTR _strPositionX$1$[ebp]
$LN985@LoadItemSc:

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00729	8b 95 10 fb ff
	ff		 mov	 edx, DWORD PTR _strScaleZ$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  0072f	83 ec 18	 sub	 esp, 24			; 00000018H
  00732	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  00735	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00738	8b fc		 mov	 edi, esp
  0073a	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0073e	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00740	89 a5 74 fa ff
	ff		 mov	 DWORD PTR $T5[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00746	89 95 78 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], edx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0074c	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00753	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  0075a	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0075e	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00761	89 8d 74 fb ff
	ff		 mov	 DWORD PTR __Right_size$1$[ebp], ecx

; 2145 :         if (_Large_string_engaged()) {

  00767	72 08		 jb	 SHORT $LN1011@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00769	8b 02		 mov	 eax, DWORD PTR [edx]
  0076b	89 85 78 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
$LN1011@LoadItemSc:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00771	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00774	73 0d		 jae	 SHORT $LN1008@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00776	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00779	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0077e	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  00781	eb 57		 jmp	 SHORT $LN1007@LoadItemSc
$LN1008@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00783	8b c1		 mov	 eax, ecx
  00785	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0078a	83 c8 0f	 or	 eax, 15			; 0000000fH
  0078d	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00792	0f 47 c1	 cmova	 eax, ecx
  00795	89 85 64 fb ff
	ff		 mov	 DWORD PTR $T29[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0079b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0079c	50		 push	 eax
  0079d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  007a2	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  007a4	8d 85 70 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$38[ebp]
  007aa	50		 push	 eax
  007ab	57		 push	 edi
  007ac	89 b5 70 fb ff
	ff		 mov	 DWORD PTR __New_array$38[ebp], esi
  007b2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  007b7	8b 85 74 fb ff
	ff		 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  007bd	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  007be	50		 push	 eax
  007bf	ff b5 78 fb ff
	ff		 push	 DWORD PTR __Result$1$[ebp]
  007c5	56		 push	 esi
  007c6	e8 00 00 00 00	 call	 _memcpy
  007cb	8b 85 64 fb ff
	ff		 mov	 eax, DWORD PTR $T29[ebp]
  007d1	83 c4 18	 add	 esp, 24			; 00000018H
  007d4	8b 8d 74 fb ff
	ff		 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
$LN1007@LoadItemSc:

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  007da	8b 95 04 fb ff
	ff		 mov	 edx, DWORD PTR _strScaleY$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  007e0	83 ec 18	 sub	 esp, 24			; 00000018H
  007e3	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  007e6	89 47 14	 mov	 DWORD PTR [edi+20], eax
  007e9	8b fc		 mov	 edi, esp
  007eb	c6 45 fc 27	 mov	 BYTE PTR __$EHRec$[ebp+8], 39 ; 00000027H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  007ef	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  007f1	89 a5 84 fa ff
	ff		 mov	 DWORD PTR $T9[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  007f7	89 95 74 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], edx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  007fd	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00804	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  0080b	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0080f	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00812	89 8d 78 fb ff
	ff		 mov	 DWORD PTR __Right_size$1$[ebp], ecx

; 2145 :         if (_Large_string_engaged()) {

  00818	72 08		 jb	 SHORT $LN1033@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0081a	8b 02		 mov	 eax, DWORD PTR [edx]
  0081c	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
$LN1033@LoadItemSc:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00822	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00825	73 0d		 jae	 SHORT $LN1030@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00827	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  0082a	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0082f	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  00832	eb 57		 jmp	 SHORT $LN1029@LoadItemSc
$LN1030@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00834	8b c1		 mov	 eax, ecx
  00836	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0083b	83 c8 0f	 or	 eax, 15			; 0000000fH
  0083e	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00843	0f 47 c1	 cmova	 eax, ecx
  00846	89 85 70 fb ff
	ff		 mov	 DWORD PTR $T37[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0084c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0084d	50		 push	 eax
  0084e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00853	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00855	8d 85 64 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$33[ebp]
  0085b	50		 push	 eax
  0085c	57		 push	 edi
  0085d	89 b5 64 fb ff
	ff		 mov	 DWORD PTR __New_array$33[ebp], esi
  00863	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00868	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  0086e	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0086f	50		 push	 eax
  00870	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$1$[ebp]
  00876	56		 push	 esi
  00877	e8 00 00 00 00	 call	 _memcpy
  0087c	8b 85 70 fb ff
	ff		 mov	 eax, DWORD PTR $T37[ebp]
  00882	83 c4 18	 add	 esp, 24			; 00000018H
  00885	8b 8d 78 fb ff
	ff		 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
$LN1029@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  0088b	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0088e	83 ec 18	 sub	 esp, 24			; 00000018H
  00891	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00894	8b c4		 mov	 eax, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00896	8b b5 20 fb ff
	ff		 mov	 esi, DWORD PTR _strScaleX$1$[ebp]

; 2144 :         const value_type* _Result = _Bx._Buf;

  0089c	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  0089e	c6 45 fc 28	 mov	 BYTE PTR __$EHRec$[ebp+8], 40 ; 00000028H
  008a2	89 a5 78 fa ff
	ff		 mov	 DWORD PTR $T6[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  008a8	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  008af	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2145 :         if (_Large_string_engaged()) {

  008b6	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  008ba	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  008bd	89 85 78 fb ff
	ff		 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  008c3	89 95 70 fb ff
	ff		 mov	 DWORD PTR __Right_size$1$[ebp], edx

; 2144 :         const value_type* _Result = _Bx._Buf;

  008c9	89 b5 74 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], esi

; 2145 :         if (_Large_string_engaged()) {

  008cf	72 08		 jb	 SHORT $LN1055@LoadItemSc

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  008d1	8b 0e		 mov	 ecx, DWORD PTR [esi]
  008d3	89 8d 74 fb ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], ecx
$LN1055@LoadItemSc:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  008d9	83 fa 10	 cmp	 edx, 16			; 00000010H
  008dc	73 0d		 jae	 SHORT $LN1052@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  008de	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  008e1	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  008e6	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 2663 :             return;

  008e9	eb 59		 jmp	 SHORT $LN1051@LoadItemSc
$LN1052@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  008eb	8b fa		 mov	 edi, edx
  008ed	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  008f2	83 cf 0f	 or	 edi, 15			; 0000000fH
  008f5	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  008fb	0f 47 f8	 cmova	 edi, eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  008fe	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00901	50		 push	 eax
  00902	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00907	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00909	8d 85 64 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$32[ebp]
  0090f	50		 push	 eax
  00910	ff b5 78 fb ff
	ff		 push	 DWORD PTR _this$1$[ebp]
  00916	89 b5 64 fb ff
	ff		 mov	 DWORD PTR __New_array$32[ebp], esi
  0091c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00921	8b 85 70 fb ff
	ff		 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  00927	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00928	50		 push	 eax
  00929	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$1$[ebp]
  0092f	56		 push	 esi
  00930	e8 00 00 00 00	 call	 _memcpy
  00935	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR _this$1$[ebp]
  0093b	83 c4 18	 add	 esp, 24			; 00000018H
  0093e	8b 95 70 fb ff
	ff		 mov	 edx, DWORD PTR __Right_size$1$[ebp]
$LN1051@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00944	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00947	83 ec 18	 sub	 esp, 24			; 00000018H
  0094a	89 78 14	 mov	 DWORD PTR [eax+20], edi
  0094d	8b fc		 mov	 edi, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0094f	8d 45 d8	 lea	 eax, DWORD PTR _strSex$53[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00952	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  00956	89 a5 7c fa ff
	ff		 mov	 DWORD PTR $T7[ebp], esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0095c	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00963	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  0096a	83 7d ec 10	 cmp	 DWORD PTR _strSex$53[ebp+20], 16 ; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0096e	8b 4d e8	 mov	 ecx, DWORD PTR _strSex$53[ebp+16]

; 2145 :         if (_Large_string_engaged()) {

  00971	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strSex$53[ebp]

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00975	89 8d 70 fb ff
	ff		 mov	 DWORD PTR __Right_size$1$[ebp], ecx

; 2145 :         if (_Large_string_engaged()) {

  0097b	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00981	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00984	73 0d		 jae	 SHORT $LN1074@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00986	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00989	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0098e	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  00991	eb 57		 jmp	 SHORT $LN1073@LoadItemSc
$LN1074@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00993	8b c1		 mov	 eax, ecx
  00995	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0099a	83 c8 0f	 or	 eax, 15			; 0000000fH
  0099d	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  009a2	0f 47 c1	 cmova	 eax, ecx
  009a5	89 85 78 fb ff
	ff		 mov	 DWORD PTR $T44[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  009ab	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  009ac	50		 push	 eax
  009ad	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  009b2	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  009b4	8d 85 64 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$31[ebp]
  009ba	50		 push	 eax
  009bb	57		 push	 edi
  009bc	89 b5 64 fb ff
	ff		 mov	 DWORD PTR __New_array$31[ebp], esi
  009c2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  009c7	8b 85 70 fb ff
	ff		 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  009cd	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  009ce	50		 push	 eax
  009cf	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$2$[ebp]
  009d5	56		 push	 esi
  009d6	e8 00 00 00 00	 call	 _memcpy
  009db	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR $T44[ebp]
  009e1	83 c4 18	 add	 esp, 24			; 00000018H
  009e4	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
$LN1073@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  009ea	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  009ed	83 ec 18	 sub	 esp, 24			; 00000018H
  009f0	89 47 14	 mov	 DWORD PTR [edi+20], eax
  009f3	8b fc		 mov	 edi, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  009f5	8d 45 c0	 lea	 eax, DWORD PTR _strJob$52[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  009f8	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  009fc	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00a03	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2145 :         if (_Large_string_engaged()) {

  00a0a	83 7d d4 10	 cmp	 DWORD PTR _strJob$52[ebp+20], 16 ; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00a0e	8b 4d d0	 mov	 ecx, DWORD PTR _strJob$52[ebp+16]

; 2145 :         if (_Large_string_engaged()) {

  00a11	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strJob$52[ebp]

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00a15	89 8d 70 fb ff
	ff		 mov	 DWORD PTR __Right_size$1$[ebp], ecx

; 2145 :         if (_Large_string_engaged()) {

  00a1b	89 85 74 fb ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00a21	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00a24	73 0d		 jae	 SHORT $LN1096@LoadItemSc

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00a26	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00a29	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00a2e	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2663 :             return;

  00a31	eb 57		 jmp	 SHORT $LN1095@LoadItemSc
$LN1096@LoadItemSc:

; 2664 :         }
; 2665 : 
; 2666 :         auto& _Al                     = _Getal();
; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00a33	8b c1		 mov	 eax, ecx
  00a35	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00a3a	83 c8 0f	 or	 eax, 15			; 0000000fH
  00a3d	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00a42	0f 47 c1	 cmova	 eax, ecx
  00a45	89 85 78 fb ff
	ff		 mov	 DWORD PTR $T43[ebp], eax

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00a4b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00a4c	50		 push	 eax
  00a4d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00a52	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00a54	8d 85 64 fb ff
	ff		 lea	 eax, DWORD PTR __New_array$30[ebp]
  00a5a	50		 push	 eax
  00a5b	57		 push	 edi
  00a5c	89 b5 64 fb ff
	ff		 mov	 DWORD PTR __New_array$30[ebp], esi
  00a62	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00a67	8b 85 70 fb ff
	ff		 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  00a6d	40		 inc	 eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00a6e	50		 push	 eax
  00a6f	ff b5 74 fb ff
	ff		 push	 DWORD PTR __Result$2$[ebp]
  00a75	56		 push	 esi
  00a76	e8 00 00 00 00	 call	 _memcpy
  00a7b	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR $T43[ebp]
  00a81	83 c4 18	 add	 esp, 24			; 00000018H
  00a84	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
$LN1095@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 446  : 			pItemData->SetItemScale(strJob, strSex, strScaleX, strScaleY, strScaleZ, strPositionX, strPositionY, strPositionZ);

  00a8a	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  00a8d	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00a90	8b 8d 44 fb ff
	ff		 mov	 ecx, DWORD PTR _pItemData$1$[ebp]
  00a96	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  00a9a	e8 00 00 00 00	 call	 ?SetItemScale@CItemData@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000000@Z ; CItemData::SetItemScale
  00a9f	8b bd 3c fb ff
	ff		 mov	 edi, DWORD PTR _j$1$[ebp]
  00aa5	47		 inc	 edi
  00aa6	89 bd 3c fb ff
	ff		 mov	 DWORD PTR _j$1$[ebp], edi
  00aac	83 ff 05	 cmp	 edi, 5
  00aaf	7d 0b		 jge	 SHORT $LN1207@LoadItemSc

; 443  : 		for (int j = 0; j < 5; ++j)

  00ab1	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  00ab7	e9 54 fa ff ff	 jmp	 $LL8@LoadItemSc
$LN1207@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00abc	8b 85 38 fb ff
	ff		 mov	 eax, DWORD PTR _strPositionZ$1$[ebp]
  00ac2	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ac5	72 10		 jb	 SHORT $LN1115@LoadItemSc

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ac7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ac8	50		 push	 eax
  00ac9	ff b5 34 fb ff
	ff		 push	 DWORD PTR _strPositionZ$2$[ebp]
  00acf	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00ad4	83 c4 08	 add	 esp, 8
$LN1115@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ad7	8b 85 30 fb ff
	ff		 mov	 eax, DWORD PTR _strPositionY$2$[ebp]
  00add	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ae0	72 10		 jb	 SHORT $LN1125@LoadItemSc

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ae2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ae3	50		 push	 eax
  00ae4	ff b5 2c fb ff
	ff		 push	 DWORD PTR _strPositionY$3$[ebp]
  00aea	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00aef	83 c4 08	 add	 esp, 8
$LN1125@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00af2	8b 85 58 fb ff
	ff		 mov	 eax, DWORD PTR _strPositionX$2$[ebp]
  00af8	83 f8 10	 cmp	 eax, 16			; 00000010H
  00afb	72 10		 jb	 SHORT $LN1135@LoadItemSc

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00afd	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00afe	50		 push	 eax
  00aff	ff b5 28 fb ff
	ff		 push	 DWORD PTR _strPositionX$3$[ebp]
  00b05	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b0a	83 c4 08	 add	 esp, 8
$LN1135@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b0d	8b 45 ec	 mov	 eax, DWORD PTR _strSex$53[ebp+20]
  00b10	83 f8 10	 cmp	 eax, 16			; 00000010H
  00b13	72 0d		 jb	 SHORT $LN1145@LoadItemSc

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b15	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b16	50		 push	 eax
  00b17	ff 75 d8	 push	 DWORD PTR _strSex$53[ebp]
  00b1a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b1f	83 c4 08	 add	 esp, 8
$LN1145@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00b22	8b 45 d4	 mov	 eax, DWORD PTR _strJob$52[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00b25	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strSex$53[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b2c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strSex$53[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00b33	c6 45 d8 00	 mov	 BYTE PTR _strSex$53[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 448  : 	}

  00b37	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00b3b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b3e	72 0d		 jb	 SHORT $LN1208@LoadItemSc

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b40	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b41	50		 push	 eax
  00b42	ff 75 c0	 push	 DWORD PTR _strJob$52[ebp]
  00b45	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b4a	83 c4 08	 add	 esp, 8
$LN1208@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 398  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  00b4d	8b bd 24 fb ff
	ff		 mov	 edi, DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  00b53	8b b5 48 fb ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN2@LoadItemSc:
  00b59	46		 inc	 esi
  00b5a	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00b60	89 b5 48 fb ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  00b66	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00b6b	3b f0		 cmp	 esi, eax
  00b6d	0f 82 90 f5 ff
	ff		 jb	 $LL4@LoadItemSc
$LN1202@LoadItemSc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b73	8b 85 4c fb ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 450  : 	return true;

  00b79	c6 85 6b fb ff
	ff 01		 mov	 BYTE PTR $T34[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b80	85 c0		 test	 eax, eax
  00b82	74 60		 je	 SHORT $LN1164@LoadItemSc

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00b84	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  00b8a	51		 push	 ecx
  00b8b	ff b5 50 fb ff
	ff		 push	 DWORD PTR _kTokenVector$[ebp+4]
  00b91	50		 push	 eax
  00b92	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00b97	8b 8d 54 fb ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+8]
  00b9d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00ba2	8b b5 4c fb ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  00ba8	2b ce		 sub	 ecx, esi
  00baa	f7 e9		 imul	 ecx
  00bac	c1 fa 02	 sar	 edx, 2
  00baf	8b c2		 mov	 eax, edx
  00bb1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00bb4	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bb6	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00bb9	c1 e0 03	 shl	 eax, 3
  00bbc	50		 push	 eax
  00bbd	56		 push	 esi
  00bbe	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bc3	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00bc6	c7 85 4c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0

; 1698 :             _Mylast  = pointer();

  00bd0	c7 85 50 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0

; 1699 :             _Myend   = pointer();

  00bda	c7 85 54 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
$LN1164@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 450  : 	return true;

  00be4	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00bea	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN44@LoadItemSc:
  00bef	8d 8d 7c fb ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00bf5	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00bfa	8a 85 6b fb ff
	ff		 mov	 al, BYTE PTR $T34[ebp]

; 451  : }

  00c00	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c03	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c0a	59		 pop	 ecx
  00c0b	5f		 pop	 edi
  00c0c	5e		 pop	 esi
  00c0d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c10	33 cd		 xor	 ecx, ebp
  00c12	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c17	8b e5		 mov	 esp, ebp
  00c19	5d		 pop	 ebp
  00c1a	c2 04 00	 ret	 4
$LN1175@LoadItemSc:
  00c1d	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN1216@LoadItemSc:

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00c22	68 00 00 00 00	 push	 OFFSET ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA
  00c27	e8 00 00 00 00	 call	 __Init_thread_header
  00c2c	83 c4 04	 add	 esp, 4
  00c2f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA, -1
  00c36	0f 85 31 f5 ff
	ff		 jne	 $LN1203@LoadItemSc
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c3c	8d 85 a8 fa ff
	ff		 lea	 eax, DWORD PTR $T14[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00c42	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c46	50		 push	 eax
  00c47	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp]

; 166  :         : first(_Val1), second(_Val2) {}

  00c4d	c7 85 a8 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T14[ebp], OFFSET ??_C@_0M@BIDPEPDP@JOB_WOLFMAN@
  00c57	c7 85 ac fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T14[ebp+4], OFFSET ??_C@_01PLPBNMEI@M@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c61	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00c66	c7 85 04 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+68], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00c70	c7 85 00 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR $T47[ebp+64], 1

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00c7a	66 c7 85 f0 fc
	ff ff 30 00	 mov	 WORD PTR $T47[ebp+48], 48 ; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c83	8d 85 b0 fa ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00c89	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00c8d	50		 push	 eax
  00c8e	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+72]

; 166  :         : first(_Val1), second(_Val2) {}

  00c94	c7 85 b0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp], OFFSET ??_C@_0N@IAFGBDIL@JOB_ASSASSIN@
  00c9e	c7 85 b4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp+4], OFFSET ??_C@_01PLPBNMEI@M@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00ca8	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00cad	c7 85 4c fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+140], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00cb7	c7 85 48 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+136], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00cc1	c7 85 38 fd ff
	ff 30 2e 32 36	 mov	 DWORD PTR $T47[ebp+120], 909258288 ; 36322e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00ccb	c6 85 3c fd ff
	ff 00		 mov	 BYTE PTR $T47[ebp+124], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00cd2	8d 85 b8 fa ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00cd8	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00cdc	50		 push	 eax
  00cdd	8d 8d 50 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+144]

; 166  :         : first(_Val1), second(_Val2) {}

  00ce3	c7 85 b8 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp], OFFSET ??_C@_0N@IAFGBDIL@JOB_ASSASSIN@
  00ced	c7 85 bc fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp+4], OFFSET ??_C@_01BIAFAFID@F@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00cf7	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00cfc	c7 85 94 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+212], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00d06	c7 85 90 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+208], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00d10	c7 85 80 fd ff
	ff 30 2e 33 38	 mov	 DWORD PTR $T47[ebp+192], 942878256 ; 38332e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00d1a	c6 85 84 fd ff
	ff 00		 mov	 BYTE PTR $T47[ebp+196], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d21	8d 85 98 fa ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00d27	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d2b	50		 push	 eax
  00d2c	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+216]

; 166  :         : first(_Val1), second(_Val2) {}

  00d32	c7 85 98 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp], OFFSET ??_C@_0L@FBDFJGPA@JOB_SHAMAN@
  00d3c	c7 85 9c fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp+4], OFFSET ??_C@_01PLPBNMEI@M@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d46	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00d4b	c7 85 dc fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+284], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00d55	c7 85 d8 fd ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+280], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00d5f	c7 85 c8 fd ff
	ff 30 2e 31 38	 mov	 DWORD PTR $T47[ebp+264], 942747184 ; 38312e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00d69	c6 85 cc fd ff
	ff 00		 mov	 BYTE PTR $T47[ebp+268], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d70	8d 85 f0 fa ff
	ff		 lea	 eax, DWORD PTR $T21[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00d76	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d7a	50		 push	 eax
  00d7b	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+288]

; 166  :         : first(_Val1), second(_Val2) {}

  00d81	c7 85 f0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp], OFFSET ??_C@_0L@FBDFJGPA@JOB_SHAMAN@
  00d8b	c7 85 f4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp+4], OFFSET ??_C@_01BIAFAFID@F@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00d95	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00d9a	c7 85 24 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+356], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00da4	c7 85 20 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+352], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00dae	c7 85 10 fe ff
	ff 30 2e 32 36	 mov	 DWORD PTR $T47[ebp+336], 909258288 ; 36322e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00db8	c6 85 14 fe ff
	ff 00		 mov	 BYTE PTR $T47[ebp+340], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00dbf	8d 85 e8 fa ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00dc5	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00dc9	50		 push	 eax
  00dca	8d 8d 28 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+360]

; 166  :         : first(_Val1), second(_Val2) {}

  00dd0	c7 85 e8 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp], OFFSET ??_C@_08IJIBKCOK@JOB_SURA@
  00dda	c7 85 ec fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+4], OFFSET ??_C@_01PLPBNMEI@M@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00de4	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00de9	c7 85 6c fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+428], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00df3	c7 85 68 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+424], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00dfd	c7 85 58 fe ff
	ff 30 2e 32 31	 mov	 DWORD PTR $T47[ebp+408], 825372208 ; 31322e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00e07	c6 85 5c fe ff
	ff 00		 mov	 BYTE PTR $T47[ebp+412], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00e0e	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 166  :         : first(_Val1), second(_Val2) {}

  00e12	c7 85 a0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T13[ebp], OFFSET ??_C@_08IJIBKCOK@JOB_SURA@
  00e1c	c7 85 a4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T13[ebp+4], OFFSET ??_C@_01BIAFAFID@F@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00e26	8d 85 a0 fa ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  00e2c	50		 push	 eax
  00e2d	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+432]
  00e33	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00e38	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_03OICINGJI@0?43@
  00e3e	66 89 85 a0 fe
	ff ff		 mov	 WORD PTR $T47[ebp+480], ax
  00e45	a0 02 00 00 00	 mov	 al, BYTE PTR ??_C@_03OICINGJI@0?43@+2

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00e4a	c7 85 b4 fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+500], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00e54	c7 85 b0 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR $T47[ebp+496], 3

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00e5e	88 85 a2 fe ff
	ff		 mov	 BYTE PTR $T47[ebp+482], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00e64	c6 85 a3 fe ff
	ff 00		 mov	 BYTE PTR $T47[ebp+483], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00e6b	8d 85 e0 fa ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00e71	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00e75	50		 push	 eax
  00e76	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+504]

; 166  :         : first(_Val1), second(_Val2) {}

  00e7c	c7 85 e0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp], OFFSET ??_C@_0M@IHDHIBML@JOB_WARRIOR@
  00e86	c7 85 e4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp+4], OFFSET ??_C@_01PLPBNMEI@M@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00e90	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00e95	c7 85 fc fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+572], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00e9f	c7 85 f8 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+568], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00ea9	c7 85 e8 fe ff
	ff 30 2e 31 35	 mov	 DWORD PTR $T47[ebp+552], 892415536 ; 35312e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00eb3	c6 85 ec fe ff
	ff 00		 mov	 BYTE PTR $T47[ebp+556], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00eba	8d 85 d0 fa ff
	ff		 lea	 eax, DWORD PTR $T17[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00ec0	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00ec4	50		 push	 eax
  00ec5	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+576]

; 166  :         : first(_Val1), second(_Val2) {}

  00ecb	c7 85 d0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp], OFFSET ??_C@_0M@IHDHIBML@JOB_WARRIOR@
  00ed5	c7 85 d4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp+4], OFFSET ??_C@_01BIAFAFID@F@

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00edf	e8 00 00 00 00	 call	 ??$?0PBDPBD$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@$$QAU?$pair@PBDPBD@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><char const *,char const *,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ee4	c7 85 44 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T47[ebp+644], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00eee	c7 85 40 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR $T47[ebp+640], 4

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00ef8	c7 85 30 ff ff
	ff 30 2e 32 36	 mov	 DWORD PTR $T47[ebp+624], 909258288 ; 36322e30H

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00f02	c6 85 34 ff ff
	ff 00		 mov	 BYTE PTR $T47[ebp+628], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\initializer_list

; 36   :         : _First(_First_arg), _Last(_Last_arg) {}

  00f09	8d b5 c0 fc ff
	ff		 lea	 esi, DWORD PTR $T47[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  00f0f	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00f13	6a 58		 push	 88			; 00000058H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\initializer_list

; 36   :         : _First(_First_arg), _Last(_Last_arg) {}

  00f15	89 b5 60 fb ff
	ff		 mov	 DWORD PTR __UFirst$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00f1b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A, 0
  00f25	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A+4, 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00f2f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00f34	8b f8		 mov	 edi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00f36	8d 85 5c fb ff
	ff		 lea	 eax, DWORD PTR __Pnode$28[ebp]
  00f3c	50		 push	 eax
  00f3d	57		 push	 edi
  00f3e	89 bd 5c fb ff
	ff		 mov	 DWORD PTR __Pnode$28[ebp], edi
  00f44	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00f49	8d 85 5c fb ff
	ff		 lea	 eax, DWORD PTR __Pnode$28[ebp]
  00f4f	50		 push	 eax
  00f50	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00f53	50		 push	 eax
  00f54	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00f59	8d 85 5c fb ff
	ff		 lea	 eax, DWORD PTR __Pnode$28[ebp]
  00f5f	50		 push	 eax
  00f60	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00f63	50		 push	 eax
  00f64	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00f69	66 c7 47 0c 01
	01		 mov	 WORD PTR [edi+12], 257	; 00000101H
  00f6f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00f72	89 3d 00 00 00
	00		 mov	 DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A, edi

; 1375 :         for (; _UFirst != _ULast; ++_UFirst) {

  00f78	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T47[ebp+648]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 301  :     map(initializer_list<value_type> _Ilist) : _Mybase(key_compare()) {

  00f7e	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1375 :         for (; _UFirst != _ULast; ++_UFirst) {

  00f82	3b f0		 cmp	 esi, eax
  00f84	0f 84 49 01 00
	00		 je	 $LN580@LoadItemSc
  00f8a	eb 04		 jmp	 SHORT $LL581@LoadItemSc
  00f8c	0f 1f 40 00	 npad	 4
$LL581@LoadItemSc:

; 1108 :             _Loc = _Find_hint(_Hint, _In_place_key_extractor::_Extract(_Vals...));

  00f90	56		 push	 esi
  00f91	57		 push	 edi
  00f92	8d 85 64 fa ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00f98	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00f9d	50		 push	 eax
  00f9e	e8 00 00 00 00	 call	 ??$_Find_hint@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_hint_result@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@1@QAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@1@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_hint<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00fa3	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00fa7	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00faa	66 0f d6 85 f8
	fa ff ff	 movq	 QWORD PTR __Loc$22[ebp], xmm0
  00fb2	89 85 00 fb ff
	ff		 mov	 DWORD PTR __Loc$22[ebp+8], eax

; 1109 :             if (_Loc._Duplicate) {

  00fb8	84 c0		 test	 al, al
  00fba	0f 85 fa 00 00
	00		 jne	 $LN579@LoadItemSc

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00fc0	81 3d 04 00 00
	00 2e ba e8 02	 cmp	 DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A+4, 48806446 ; 02e8ba2eH
  00fca	0f 84 4d fc ff
	ff		 je	 $LN1175@LoadItemSc

; 1114 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00fd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  00fd5	89 85 6c fb ff
	ff		 mov	 DWORD PTR __Myhead$36[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00fdb	c7 85 08 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp], OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00fe5	6a 58		 push	 88			; 00000058H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00fe7	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00feb	c7 85 0c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00ff5	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00ffa	8b f8		 mov	 edi, eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00ffc	83 c4 04	 add	 esp, 4

; 1048 :         _Ptr = _Al.allocate(1);

  00fff	89 bd 0c fb ff
	ff		 mov	 DWORD PTR $T23[ebp+4], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

  01005	ff b5 60 fb ff
	ff		 push	 DWORD PTR __UFirst$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0100b	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  0100e	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

  01012	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  01014	89 b5 44 fb ff
	ff		 mov	 DWORD PTR $T27[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

  0101a	89 b5 20 fb ff
	ff		 mov	 DWORD PTR _this$24[ebp], esi
  01020	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01025	8b 85 60 fb ff
	ff		 mov	 eax, DWORD PTR __UFirst$1$[ebp]
  0102b	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  0102e	83 c0 18	 add	 eax, 24			; 00000018H
  01031	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  01035	50		 push	 eax
  01036	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0103b	8b 85 60 fb ff
	ff		 mov	 eax, DWORD PTR __UFirst$1$[ebp]
  01041	8d 4e 30	 lea	 ecx, DWORD PTR [esi+48]
  01044	83 c0 30	 add	 eax, 48			; 00000030H
  01047	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  0104b	50		 push	 eax
  0104c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  01051	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$36[ebp]
  01057	50		 push	 eax
  01058	57		 push	 edi
  01059	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0105e	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$36[ebp]
  01064	50		 push	 eax
  01065	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  01068	50		 push	 eax
  01069	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0106e	8d 85 6c fb ff
	ff		 lea	 eax, DWORD PTR __Myhead$36[ebp]
  01074	50		 push	 eax
  01075	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  01078	50		 push	 eax
  01079	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
  0107e	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  01081	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0

; 1130 :         return _Scary->_Insert_node(_Loc._Location, _Inserted);

  01087	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A

; 812  :     }

  0108c	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  01090	c7 85 0c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1130 :         return _Scary->_Insert_node(_Loc._Location, _Inserted);

  0109a	57		 push	 edi
  0109b	ff b5 fc fa ff
	ff		 push	 DWORD PTR __Loc$22[ebp+4]
  010a1	ff b5 f8 fa ff
	ff		 push	 DWORD PTR __Loc$22[ebp]
  010a7	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
  010ac	8b b5 60 fb ff
	ff		 mov	 esi, DWORD PTR __UFirst$1$[ebp]
  010b2	8b bd 5c fb ff
	ff		 mov	 edi, DWORD PTR __Pnode$28[ebp]
  010b8	eb 00		 jmp	 SHORT $LN579@LoadItemSc
$LN579@LoadItemSc:

; 1375 :         for (; _UFirst != _ULast; ++_UFirst) {

  010ba	83 c6 48	 add	 esi, 72			; 00000048H
  010bd	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T47[ebp+648]
  010c3	89 b5 60 fb ff
	ff		 mov	 DWORD PTR __UFirst$1$[ebp], esi
  010c9	3b f0		 cmp	 esi, eax
  010cb	0f 85 bf fe ff
	ff		 jne	 $LL581@LoadItemSc
  010d1	eb 00		 jmp	 SHORT $LN580@LoadItemSc
$LN580@LoadItemSc:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 409  : 		static std::map<std::pair<std::string, std::string>, std::string> scaleMap = {

  010d3	68 00 00 00 00	 push	 OFFSET ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
  010d8	6a 09		 push	 9
  010da	6a 48		 push	 72			; 00000048H
  010dc	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR $T47[ebp]
  010e2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  010e6	50		 push	 eax
  010e7	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  010ec	68 00 00 00 00	 push	 OFFSET ??__FscaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@YAXXZ ; `CItemManager::LoadItemScale'::`6'::`dynamic atexit destructor for 'scaleMap''
  010f1	e8 00 00 00 00	 call	 _atexit
  010f6	68 00 00 00 00	 push	 OFFSET ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA
  010fb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  010ff	e8 00 00 00 00	 call	 __Init_thread_footer
  01104	83 c4 08	 add	 esp, 8
  01107	e9 61 f0 ff ff	 jmp	 $LN1203@LoadItemSc
$LN1210@LoadItemSc:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d 7c fb ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 8d 4c fb ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$14:
  00021	8d 4d c0	 lea	 ecx, DWORD PTR _strJob$52[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$15:
  00029	8d 4d d8	 lea	 ecx, DWORD PTR _strSex$53[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$16:
  00031	8d 4d 90	 lea	 ecx, DWORD PTR _strPositionX$50[ebp]
  00034	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$17:
  00039	8d 4d a8	 lea	 ecx, DWORD PTR _strPositionY$51[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$57:
  00041	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T48[ebp]
  00047	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$18:
  0004c	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T48[ebp]
  00052	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$61:
  00057	8d 8d d8 fa ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  0005d	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$19:
  00062	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strPositionZ$49[ebp]
  00068	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$20:
  0006d	8b 8d 70 fa ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00073	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$21:
  00078	8b 8d 80 fa ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$22:
  00083	8b 8d 88 fa ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  00089	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$23:
  0008e	8b 8d 74 fa ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
  00094	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$24:
  00099	8b 8d 84 fa ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
  0009f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$25:
  000a4	8b 8d 78 fa ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  000aa	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$26:
  000af	8b 8d 7c fa ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
  000b5	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$3:
  000ba	68 00 00 00 00	 push	 OFFSET ?$TSS0@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4HA
  000bf	e8 00 00 00 00	 call	 __Init_thread_abort
  000c4	59		 pop	 ecx
  000c5	c3		 ret	 0
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$28:
  000c6	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp]
  000cc	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$4:
  000d1	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp]
  000d7	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$30:
  000dc	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+72]
  000e2	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$5:
  000e7	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+72]
  000ed	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$32:
  000f2	8d 8d 50 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+144]
  000f8	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$6:
  000fd	8d 8d 50 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+144]
  00103	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$34:
  00108	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+216]
  0010e	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$7:
  00113	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+216]
  00119	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$36:
  0011e	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+288]
  00124	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$8:
  00129	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+288]
  0012f	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$38:
  00134	8d 8d 28 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+360]
  0013a	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$9:
  0013f	8d 8d 28 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+360]
  00145	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$40:
  0014a	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+432]
  00150	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$10:
  00155	8d 8d 70 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+432]
  0015b	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$42:
  00160	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+504]
  00166	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$11:
  0016b	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+504]
  00171	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$44:
  00176	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR $T47[ebp+576]
  0017c	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$13:
  00181	68 00 00 00 00	 push	 OFFSET ??1?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QAE@XZ
  00186	6a 09		 push	 9
  00188	6a 48		 push	 72			; 00000048H
  0018a	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR $T47[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00196	c3		 ret	 0
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$46:
  00197	b9 00 00 00 00	 mov	 ecx, OFFSET ?scaleMap@?5??LoadItemScale@CItemManager@@QAE_NPBD@Z@4V?$map@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@A
  0019c	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@U?$less@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$49:
  001a1	8d 8d 08 fb ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  001a7	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$48:
  001ac	8d 8d 08 fb ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  001b2	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@PAX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$52:
  001b7	8b 8d 20 fb ff
	ff		 mov	 ecx, DWORD PTR _this$24[ebp]
  001bd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemScale@CItemManager@@QAE_NPBD@Z$50:
  001c2	8b 8d 44 fb ff
	ff		 mov	 ecx, DWORD PTR $T27[ebp]
  001c8	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QAE@XZ
  001cd	cc		 int	 3
  001ce	cc		 int	 3
  001cf	cc		 int	 3
  001d0	cc		 int	 3
  001d1	cc		 int	 3
__ehhandler$?LoadItemScale@CItemManager@@QAE_NPBD@Z:
  001d2	90		 npad	 1
  001d3	90		 npad	 1
  001d4	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  001d8	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  001db	8b 8a 64 fa ff
	ff		 mov	 ecx, DWORD PTR [edx-1436]
  001e1	33 c8		 xor	 ecx, eax
  001e3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e8	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  001eb	33 c8		 xor	 ecx, eax
  001ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f2	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemScale@CItemManager@@QAE_NPBD@Z
  001f7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemScale@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemScale
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z
_TEXT	SEGMENT
__Loc$1 = -20						; size = 12
$T2 = -16						; size = 8
$T3 = -8						; size = 8
_dwIndex$ = 8						; size = 4
?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z PROC	; CItemManager::MakeItemData, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00008	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  0000b	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 79   : 	TItemMap::iterator f = m_ItemMap.find(dwIndex);

  0000c	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000f	8d 45 ec	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00012	8b cf		 mov	 ecx, edi
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001a	8b 45 f4	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0001d	8b 5d 08	 mov	 ebx, DWORD PTR _dwIndex$[ebp]
  00020	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00024	75 14		 jne	 SHORT $LN40@MakeItemDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00026	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00029	72 0f		 jb	 SHORT $LN40@MakeItemDa

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0002b	39 07		 cmp	 DWORD PTR [edi], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 81   : 	if (m_ItemMap.end() == f)

  0002d	74 0b		 je	 SHORT $LN40@MakeItemDa

; 88   : 	}
; 89   : 
; 90   : 	return f->second;

  0002f	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00032	5f		 pop	 edi

; 91   : }

  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN40@MakeItemDa:
  0003a	56		 push	 esi

; 82   : 	{
; 83   : 		CItemData * pItemData = CItemData::New();

  0003b	e8 00 00 00 00	 call	 ?New@CItemData@@SAPAV1@XZ ; CItemData::New
  00040	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00042	89 5d f8	 mov	 DWORD PTR $T3[ebp], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 85   : 		m_ItemMap.insert(TItemMap::value_type(dwIndex, pItemData));

  00045	8d 45 f8	 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00048	89 75 fc	 mov	 DWORD PTR $T3[ebp+4], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 85   : 		m_ItemMap.insert(TItemMap::value_type(dwIndex, pItemData));

  0004b	50		 push	 eax
  0004c	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  0004f	8b cf		 mov	 ecx, edi
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>

; 86   : 
; 87   : 		return pItemData;

  00057	8b c6		 mov	 eax, esi
  00059	5e		 pop	 esi
  0005a	5f		 pop	 edi

; 91   : }

  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ENDP	; CItemManager::MakeItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemTable@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
$T2 = -744						; size = 12
$T3 = -732						; size = 8
__Loc$4 = -724						; size = 12
__Loc$5 = -712						; size = 12
__Loc$6 = -700						; size = 12
__Loc$7 = -688						; size = 12
_pvData$ = -676						; size = 4
_zObj$ = -672						; size = 20
$T8 = -652						; size = 8
$T9 = -644						; size = 8
$T10 = -636						; size = 8
_pbData$1$ = -628					; size = 4
_dwFourCC$ = -624					; size = 4
_this$1$ = -620						; size = 4
_dwElements$ = -616					; size = 4
tv3064 = -612						; size = 4
tv3063 = -608						; size = 4
_i$1$ = -604						; size = 4
_this$GSCopy$1$ = -600					; size = 4
_dwDataSize$ = -596					; size = 4
_dwVersion$ = -592					; size = 4
tv3062 = -588						; size = 4
_dwStride$ = -584					; size = 4
_itemNameMap$ = -580					; size = 8
_pItemData$11 = -572					; size = 4
$T12 = -572						; size = 4
_dwVnum$13 = -572					; size = 4
__Myhead$14 = -568					; size = 4
__Pnode$15 = -568					; size = 4
$T16 = -568						; size = 4
_file$ = -564						; size = 324
_t$17 = -240						; size = 156
_szName$ = -84						; size = 65
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemTable@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemTable, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemTable@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 02 00
	00		 sub	 esp, 732		; 000002dcH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b d9		 mov	 ebx, ecx
  00030	89 9d a8 fd ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx
  00036	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 257  : 	CMappedFile file;

  00039	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 258  : 	LPCVOID pvData;
; 259  : 
; 260  : 	if (!CEterPackManager::Instance().Get(file, c_szFileName, &pvData))

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  0004a	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  00050	50		 push	 eax
  00051	56		 push	 esi
  00052	8d 85 cc fd ff
	ff		 lea	 eax, DWORD PTR _file$[ebp]
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00065	84 c0		 test	 al, al
  00067	74 7b		 je	 SHORT $LN26@LoadItemTa

; 261  : 		return false;
; 262  : 
; 263  : 	DWORD dwFourCC, dwElements, dwDataSize;
; 264  : 	DWORD dwVersion=0;
; 265  : 	DWORD dwStride=0;
; 266  : 
; 267  : 	file.Read(&dwFourCC, sizeof(DWORD));

  00069	6a 04		 push	 4
  0006b	8d 85 90 fd ff
	ff		 lea	 eax, DWORD PTR _dwFourCC$[ebp]
  00071	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwVersion$[ebp], 0
  0007b	50		 push	 eax
  0007c	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00082	c7 85 b8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwStride$[ebp], 0
  0008c	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 268  : 
; 269  : 	if (dwFourCC == MAKEFOURCC('M', 'I', 'P', 'X'))

  00091	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR _dwFourCC$[ebp]
  00097	3d 4d 49 50 58	 cmp	 eax, 1481656653		; 5850494dH
  0009c	0f 85 9e 00 00
	00		 jne	 $LN6@LoadItemTa

; 270  : 	{
; 271  : 		file.Read(&dwVersion, sizeof(DWORD));

  000a2	6a 04		 push	 4
  000a4	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _dwVersion$[ebp]
  000aa	50		 push	 eax
  000ab	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000b1	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 272  : 		file.Read(&dwStride, sizeof(DWORD));

  000b6	6a 04		 push	 4
  000b8	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _dwStride$[ebp]
  000be	50		 push	 eax
  000bf	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000c5	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 273  : 
; 274  : 		if (dwVersion != 1)

  000ca	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR _dwVersion$[ebp]
  000d0	83 f8 01	 cmp	 eax, 1
  000d3	74 3c		 je	 SHORT $LN8@LoadItemTa

; 275  : 		{
; 276  : 			TraceError("CPythonItem::LoadItemTable: invalid item_proto[%s] VERSION[%d]", c_szFileName, dwVersion);

  000d5	50		 push	 eax
  000d6	56		 push	 esi
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@
  000dc	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@LoadItemTa:
  000e4	32 db		 xor	 bl, bl
$LN27@LoadItemTa:

; 374  : 	return true;

  000e6	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000ec	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  000f1	8a c3		 mov	 al, bl

; 375  : }

  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 04 00	 ret	 4
$LN8@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h

; 645  : 				switch (structSize)

  00111	8b 8d b8 fd ff
	ff		 mov	 ecx, DWORD PTR _dwStride$[ebp]
  00117	8b c1		 mov	 eax, ecx
  00119	2d 98 00 00 00	 sub	 eax, 152		; 00000098H
  0011e	74 37		 je	 SHORT $LN10@LoadItemTa
  00120	83 e8 04	 sub	 eax, 4
  00123	74 32		 je	 SHORT $LN10@LoadItemTa
  00125	83 e8 02	 sub	 eax, 2
  00128	74 2d		 je	 SHORT $LN10@LoadItemTa
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 286  : 			TraceError("CPythonItem::LoadItemTable: invalid item_proto[%s] STRIDE[%d] != sizeof(SItemTable)",

  0012a	68 9c 00 00 00	 push	 156			; 0000009cH
  0012f	51		 push	 ecx
  00130	56		 push	 esi
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@
  00136	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0013b	83 c4 10	 add	 esp, 16			; 00000010H
  0013e	eb a4		 jmp	 SHORT $LN26@LoadItemTa
$LN6@LoadItemTa:

; 287  : 				c_szFileName, dwStride, sizeof(CItemData::TItemTable));
; 288  : 			return false;
; 289  : 		}
; 290  : 	}
; 291  : 	else if (dwFourCC != MAKEFOURCC('M', 'I', 'P', 'T'))

  00140	3d 4d 49 50 54	 cmp	 eax, 1414547789		; 5450494dH
  00145	74 10		 je	 SHORT $LN10@LoadItemTa

; 292  : 	{
; 293  : 		TraceError("CPythonItem::LoadItemTable: invalid item proto type %s", c_szFileName);

  00147	56		 push	 esi
  00148	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@
  0014d	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00152	83 c4 08	 add	 esp, 8
  00155	eb 8d		 jmp	 SHORT $LN26@LoadItemTa
$LN10@LoadItemTa:

; 294  : 		return false;
; 295  : 	}
; 296  : 
; 297  : 	file.Read(&dwElements, sizeof(DWORD));

  00157	6a 04		 push	 4
  00159	8d 85 98 fd ff
	ff		 lea	 eax, DWORD PTR _dwElements$[ebp]
  0015f	50		 push	 eax
  00160	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00166	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 298  : 	file.Read(&dwDataSize, sizeof(DWORD));

  0016b	6a 04		 push	 4
  0016d	8d 85 ac fd ff
	ff		 lea	 eax, DWORD PTR _dwDataSize$[ebp]
  00173	50		 push	 eax
  00174	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  0017a	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 299  : 
; 300  : 	BYTE * pbData = new BYTE[dwDataSize];

  0017f	ff b5 ac fd ff
	ff		 push	 DWORD PTR _dwDataSize$[ebp]
  00185	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0018a	83 c4 04	 add	 esp, 4

; 301  : 	file.Read(pbData, dwDataSize);

  0018d	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00193	8b f0		 mov	 esi, eax
  00195	89 b5 8c fd ff
	ff		 mov	 DWORD PTR _pbData$1$[ebp], esi
  0019b	ff b5 ac fd ff
	ff		 push	 DWORD PTR _dwDataSize$[ebp]
  001a1	56		 push	 esi
  001a2	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 302  : 
; 303  : 	/////
; 304  : 
; 305  : 	CLZObject zObj;

  001a7	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  001ad	e8 00 00 00 00	 call	 ??0CLZObject@@QAE@XZ	; CLZObject::CLZObject

; 306  : 
; 307  : 	if (!CLZO::Instance().Decompress(zObj, pbData, s_adwItemProtoKey))

  001b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A ; CSingleton<CLZO>::ms_singleton
  001b8	8d 85 60 fd ff
	ff		 lea	 eax, DWORD PTR _zObj$[ebp]
  001be	68 00 00 00 00	 push	 OFFSET ?s_adwItemProtoKey@@3PAKA
  001c3	56		 push	 esi
  001c4	50		 push	 eax
  001c5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001c9	e8 00 00 00 00	 call	 ?Decompress@CLZO@@QAE_NAAVCLZObject@@PBEPAK@Z ; CLZO::Decompress
  001ce	84 c0		 test	 al, al
  001d0	75 1b		 jne	 SHORT $LN11@LoadItemTa

; 308  : 	{
; 309  : 		delete [] pbData;

  001d2	56		 push	 esi
  001d3	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  001d8	83 c4 04	 add	 esp, 4

; 374  : 	return true;

  001db	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  001e1	32 db		 xor	 bl, bl
  001e3	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  001e8	e9 f9 fe ff ff	 jmp	 $LN27@LoadItemTa
$LN11@LoadItemTa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001ed	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  001ef	c7 85 bc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _itemNameMap$[ebp], 0
  001f9	c7 85 c0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _itemNameMap$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00203	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00208	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0020a	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Pnode$15[ebp]
  00210	50		 push	 eax
  00211	56		 push	 esi
  00212	89 b5 c8 fd ff
	ff		 mov	 DWORD PTR __Pnode$15[ebp], esi
  00218	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0021d	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Pnode$15[ebp]
  00223	50		 push	 eax
  00224	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00227	51		 push	 ecx
  00228	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0022d	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Pnode$15[ebp]
  00233	50		 push	 eax
  00234	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0023d	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00243	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00246	89 b5 bc fd ff
	ff		 mov	 DWORD PTR _itemNameMap$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 318  : 	for (DWORD i = 0; i < dwElements; ++i)

  0024c	83 bd 98 fd ff
	ff 00		 cmp	 DWORD PTR _dwElements$[ebp], 0
  00253	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00257	c7 85 a4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00261	0f 86 6e 06 00
	00		 jbe	 $LN3@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00267	33 f6		 xor	 esi, esi
  00269	83 c3 04	 add	 ebx, 4
  0026c	33 ff		 xor	 edi, edi
  0026e	89 9d 94 fd ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ebx
  00274	89 b5 9c fd ff
	ff		 mov	 DWORD PTR tv3064[ebp], esi
  0027a	89 bd a0 fd ff
	ff		 mov	 DWORD PTR tv3063[ebp], edi
  00280	89 b5 b4 fd ff
	ff		 mov	 DWORD PTR tv3062[ebp], esi
  00286	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL4@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 321  : 		CItemData::TItemTable t = {0};

  00290	68 9c 00 00 00	 push	 156			; 0000009cH
  00295	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp]
  0029b	6a 00		 push	 0
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 _memset
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h

; 702  : 				switch (structSize)

  002a3	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _dwStride$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 321  : 		CItemData::TItemTable t = {0};

  002a9	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h

; 702  : 				switch (structSize)

  002ac	2d 98 00 00 00	 sub	 eax, 152		; 00000098H
  002b1	0f 84 8d 01 00
	00		 je	 $LN99@LoadItemTa
  002b7	83 e8 04	 sub	 eax, 4
  002ba	74 17		 je	 SHORT $LN100@LoadItemTa
  002bc	83 e8 02	 sub	 eax, 2
  002bf	0f 85 e7 02 00
	00		 jne	 $LN61@LoadItemTa

; 713  : 							ITABLE_COPY_INT(dwVnumRange);
; 714  : 						}
; 715  : 						break;
; 716  : 					case sizeof(TItemTable_r158):
; 717  : 						{
; 718  : 							ITABLE_PROCESS(158);

  002c5	8b b5 60 fd ff
	ff		 mov	 esi, DWORD PTR _zObj$[ebp]
  002cb	03 b5 b4 fd ff
	ff		 add	 esi, DWORD PTR tv3062[ebp]

; 719  : 							ITABLE_COPY_INT(dwVnumRange);

  002d1	eb 08		 jmp	 SHORT $LN384@LoadItemTa
$LN100@LoadItemTa:

; 708  : 						}
; 709  : 						break;
; 710  : 					case sizeof(TItemTable_r156):
; 711  : 						{
; 712  : 							ITABLE_PROCESS(156);

  002d3	8b b5 60 fd ff
	ff		 mov	 esi, DWORD PTR _zObj$[ebp]
  002d9	03 f7		 add	 esi, edi
$LN384@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 329  : 		DWORD dwVnum = table->dwVnum;

  002db	8b 06		 mov	 eax, DWORD PTR [esi]
  002dd	89 85 10 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp], eax
  002e3	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  002e6	6a ff		 push	 -1
  002e8	50		 push	 eax
  002e9	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+8]
  002ef	6a 19		 push	 25			; 00000019H
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 _strncpy_s
  002f7	6a ff		 push	 -1
  002f9	8d 46 21	 lea	 eax, DWORD PTR [esi+33]
  002fc	50		 push	 eax
  002fd	8d 85 31 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+33]
  00303	6a 19		 push	 25			; 00000019H
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 _strncpy_s
  0030b	8a 46 3a	 mov	 al, BYTE PTR [esi+58]
  0030e	83 c4 20	 add	 esp, 32			; 00000020H
  00311	88 85 4a ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+58], al
  00317	8a 46 3b	 mov	 al, BYTE PTR [esi+59]
  0031a	88 85 4b ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+59], al
  00320	8a 46 3c	 mov	 al, BYTE PTR [esi+60]
  00323	88 85 4c ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+60], al
  00329	8a 46 3d	 mov	 al, BYTE PTR [esi+61]
  0032c	88 85 4d ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+61], al
  00332	8b 46 3e	 mov	 eax, DWORD PTR [esi+62]
  00335	89 85 4e ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+62], eax
  0033b	8b 46 42	 mov	 eax, DWORD PTR [esi+66]
  0033e	89 85 52 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+66], eax
  00344	8b 46 46	 mov	 eax, DWORD PTR [esi+70]
  00347	89 85 56 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+70], eax
  0034d	8b 46 4a	 mov	 eax, DWORD PTR [esi+74]
  00350	89 85 5a ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+74], eax
  00356	8b 46 4e	 mov	 eax, DWORD PTR [esi+78]
  00359	89 85 5e ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+78], eax
  0035f	8b 46 52	 mov	 eax, DWORD PTR [esi+82]
  00362	89 85 62 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+82], eax
  00368	8a 46 56	 mov	 al, BYTE PTR [esi+86]
  0036b	88 85 66 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+86], al
  00371	8b 46 57	 mov	 eax, DWORD PTR [esi+87]
  00374	89 85 67 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+87], eax
  0037a	8a 46 5b	 mov	 al, BYTE PTR [esi+91]
  0037d	88 85 6b ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+91], al
  00383	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00386	89 85 6c ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+92], eax
  0038c	8a 46 60	 mov	 al, BYTE PTR [esi+96]
  0038f	88 85 70 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+96], al
  00395	8b 46 61	 mov	 eax, DWORD PTR [esi+97]
  00398	89 85 71 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+97], eax
  0039e	8a 46 65	 mov	 al, BYTE PTR [esi+101]
  003a1	88 85 75 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+101], al
  003a7	8b 46 66	 mov	 eax, DWORD PTR [esi+102]
  003aa	89 85 76 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+102], eax
  003b0	8a 46 6a	 mov	 al, BYTE PTR [esi+106]
  003b3	88 85 7a ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+106], al
  003b9	8b 46 6b	 mov	 eax, DWORD PTR [esi+107]
  003bc	89 85 7b ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+107], eax
  003c2	8b 46 6f	 mov	 eax, DWORD PTR [esi+111]
  003c5	89 85 7f ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+111], eax
  003cb	8b 46 73	 mov	 eax, DWORD PTR [esi+115]
  003ce	89 45 83	 mov	 DWORD PTR _t$17[ebp+115], eax
  003d1	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  003d4	89 45 87	 mov	 DWORD PTR _t$17[ebp+119], eax
  003d7	8b 46 7b	 mov	 eax, DWORD PTR [esi+123]
  003da	89 45 8b	 mov	 DWORD PTR _t$17[ebp+123], eax
  003dd	8b 46 7f	 mov	 eax, DWORD PTR [esi+127]
  003e0	89 45 8f	 mov	 DWORD PTR _t$17[ebp+127], eax
  003e3	8b 86 83 00 00
	00		 mov	 eax, DWORD PTR [esi+131]
  003e9	89 45 93	 mov	 DWORD PTR _t$17[ebp+131], eax
  003ec	8b 86 87 00 00
	00		 mov	 eax, DWORD PTR [esi+135]
  003f2	89 45 97	 mov	 DWORD PTR _t$17[ebp+135], eax
  003f5	8b 86 8b 00 00
	00		 mov	 eax, DWORD PTR [esi+139]
  003fb	89 45 9b	 mov	 DWORD PTR _t$17[ebp+139], eax
  003fe	8b 86 8f 00 00
	00		 mov	 eax, DWORD PTR [esi+143]
  00404	89 45 9f	 mov	 DWORD PTR _t$17[ebp+143], eax
  00407	8b 86 93 00 00
	00		 mov	 eax, DWORD PTR [esi+147]
  0040d	89 45 a3	 mov	 DWORD PTR _t$17[ebp+147], eax
  00410	66 8b 86 97 00
	00 00		 mov	 ax, WORD PTR [esi+151]
  00417	66 89 45 a7	 mov	 WORD PTR _t$17[ebp+151], ax
  0041b	8a 86 99 00 00
	00		 mov	 al, BYTE PTR [esi+153]
  00421	88 45 a9	 mov	 BYTE PTR _t$17[ebp+153], al
  00424	8a 86 9a 00 00
	00		 mov	 al, BYTE PTR [esi+154]
  0042a	88 45 aa	 mov	 BYTE PTR _t$17[ebp+154], al
  0042d	8a 86 9b 00 00
	00		 mov	 al, BYTE PTR [esi+155]
  00433	88 45 ab	 mov	 BYTE PTR _t$17[ebp+155], al
  00436	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00439	89 85 14 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+4], eax
  0043f	e9 68 01 00 00	 jmp	 $LN61@LoadItemTa
$LN99@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemData.h

; 706  : 							ITABLE_PROCESS(152);

  00444	03 b5 60 fd ff
	ff		 add	 esi, DWORD PTR _zObj$[ebp]
  0044a	6a ff		 push	 -1
  0044c	8b 06		 mov	 eax, DWORD PTR [esi]
  0044e	89 85 10 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp], eax
  00454	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00457	50		 push	 eax
  00458	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+8]
  0045e	6a 19		 push	 25			; 00000019H
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 _strncpy_s
  00466	6a ff		 push	 -1
  00468	8d 46 1d	 lea	 eax, DWORD PTR [esi+29]
  0046b	50		 push	 eax
  0046c	8d 85 31 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+33]
  00472	6a 19		 push	 25			; 00000019H
  00474	50		 push	 eax
  00475	e8 00 00 00 00	 call	 _strncpy_s
  0047a	8a 46 36	 mov	 al, BYTE PTR [esi+54]
  0047d	83 c4 20	 add	 esp, 32			; 00000020H
  00480	88 85 4a ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+58], al
  00486	8a 46 37	 mov	 al, BYTE PTR [esi+55]
  00489	88 85 4b ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+59], al
  0048f	8a 46 38	 mov	 al, BYTE PTR [esi+56]
  00492	88 85 4c ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+60], al
  00498	8a 46 39	 mov	 al, BYTE PTR [esi+57]
  0049b	88 85 4d ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+61], al
  004a1	8b 46 3a	 mov	 eax, DWORD PTR [esi+58]
  004a4	89 85 4e ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+62], eax
  004aa	8b 46 3e	 mov	 eax, DWORD PTR [esi+62]
  004ad	89 85 52 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+66], eax
  004b3	8b 46 42	 mov	 eax, DWORD PTR [esi+66]
  004b6	89 85 56 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+70], eax
  004bc	8b 46 46	 mov	 eax, DWORD PTR [esi+70]
  004bf	89 85 5a ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+74], eax
  004c5	8b 46 4a	 mov	 eax, DWORD PTR [esi+74]
  004c8	89 85 5e ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+78], eax
  004ce	8b 46 4e	 mov	 eax, DWORD PTR [esi+78]
  004d1	89 85 62 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+82], eax
  004d7	8a 46 52	 mov	 al, BYTE PTR [esi+82]
  004da	88 85 66 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+86], al
  004e0	8b 46 53	 mov	 eax, DWORD PTR [esi+83]
  004e3	89 85 67 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+87], eax
  004e9	8a 46 57	 mov	 al, BYTE PTR [esi+87]
  004ec	88 85 6b ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+91], al
  004f2	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  004f5	89 85 6c ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+92], eax
  004fb	8a 46 5c	 mov	 al, BYTE PTR [esi+92]
  004fe	88 85 70 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+96], al
  00504	8b 46 5d	 mov	 eax, DWORD PTR [esi+93]
  00507	89 85 71 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+97], eax
  0050d	8a 46 61	 mov	 al, BYTE PTR [esi+97]
  00510	88 85 75 ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+101], al
  00516	8b 46 62	 mov	 eax, DWORD PTR [esi+98]
  00519	89 85 76 ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+102], eax
  0051f	8a 46 66	 mov	 al, BYTE PTR [esi+102]
  00522	88 85 7a ff ff
	ff		 mov	 BYTE PTR _t$17[ebp+106], al
  00528	8b 46 67	 mov	 eax, DWORD PTR [esi+103]
  0052b	89 85 7b ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+107], eax
  00531	8b 46 6b	 mov	 eax, DWORD PTR [esi+107]
  00534	89 85 7f ff ff
	ff		 mov	 DWORD PTR _t$17[ebp+111], eax
  0053a	8b 46 6f	 mov	 eax, DWORD PTR [esi+111]
  0053d	89 45 83	 mov	 DWORD PTR _t$17[ebp+115], eax
  00540	8b 46 73	 mov	 eax, DWORD PTR [esi+115]
  00543	89 45 87	 mov	 DWORD PTR _t$17[ebp+119], eax
  00546	8b 46 77	 mov	 eax, DWORD PTR [esi+119]
  00549	89 45 8b	 mov	 DWORD PTR _t$17[ebp+123], eax
  0054c	8b 46 7b	 mov	 eax, DWORD PTR [esi+123]
  0054f	89 45 8f	 mov	 DWORD PTR _t$17[ebp+127], eax
  00552	8b 46 7f	 mov	 eax, DWORD PTR [esi+127]
  00555	89 45 93	 mov	 DWORD PTR _t$17[ebp+131], eax
  00558	8b 86 83 00 00
	00		 mov	 eax, DWORD PTR [esi+131]
  0055e	89 45 97	 mov	 DWORD PTR _t$17[ebp+135], eax
  00561	8b 86 87 00 00
	00		 mov	 eax, DWORD PTR [esi+135]
  00567	89 45 9b	 mov	 DWORD PTR _t$17[ebp+139], eax
  0056a	8b 86 8b 00 00
	00		 mov	 eax, DWORD PTR [esi+139]
  00570	89 45 9f	 mov	 DWORD PTR _t$17[ebp+143], eax
  00573	8b 86 8f 00 00
	00		 mov	 eax, DWORD PTR [esi+143]
  00579	89 45 a3	 mov	 DWORD PTR _t$17[ebp+147], eax
  0057c	66 8b 86 93 00
	00 00		 mov	 ax, WORD PTR [esi+147]
  00583	66 89 45 a7	 mov	 WORD PTR _t$17[ebp+151], ax
  00587	8a 86 95 00 00
	00		 mov	 al, BYTE PTR [esi+149]
  0058d	88 45 a9	 mov	 BYTE PTR _t$17[ebp+153], al
  00590	8a 86 96 00 00
	00		 mov	 al, BYTE PTR [esi+150]
  00596	88 45 aa	 mov	 BYTE PTR _t$17[ebp+154], al
  00599	8a 86 97 00 00
	00		 mov	 al, BYTE PTR [esi+151]
  0059f	88 45 ab	 mov	 BYTE PTR _t$17[ebp+155], al

; 707  : 							ITABLE_ZERO_INT(dwVnumRange);

  005a2	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _t$17[ebp+4], 0
$LN61@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 329  : 		DWORD dwVnum = table->dwVnum;

  005ac	8b bd 10 ff ff
	ff		 mov	 edi, DWORD PTR _t$17[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  005b2	8d 85 c4 fd ff
	ff		 lea	 eax, DWORD PTR _dwVnum$13[ebp]
  005b8	50		 push	 eax
  005b9	8d 85 44 fd ff
	ff		 lea	 eax, DWORD PTR __Loc$6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 329  : 		DWORD dwVnum = table->dwVnum;

  005bf	89 bd c4 fd ff
	ff		 mov	 DWORD PTR _dwVnum$13[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  005c5	50		 push	 eax
  005c6	8b cb		 mov	 ecx, ebx
  005c8	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  005cd	8b 9d 4c fd ff
	ff		 mov	 ebx, DWORD PTR __Loc$6[ebp+8]
  005d3	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  005d7	75 1e		 jne	 SHORT $LN377@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  005d9	3b 7b 10	 cmp	 edi, DWORD PTR [ebx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  005dc	72 19		 jb	 SHORT $LN377@LoadItemTa

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  005de	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  005e4	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 332  : 		if (m_ItemMap.end() == f)

  005e7	74 0e		 je	 SHORT $LN377@LoadItemTa

; 359  : 		}
; 360  : 		else
; 361  : 		{
; 362  : 			pItemData = f->second;

  005e9	8b 5b 14	 mov	 ebx, DWORD PTR [ebx+20]
  005ec	89 9d c4 fd ff
	ff		 mov	 DWORD PTR _pItemData$11[ebp], ebx
  005f2	e9 0c 01 00 00	 jmp	 $LN13@LoadItemTa
$LN377@LoadItemTa:

; 333  : 		{
; 334  : 			_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", dwVnum);

  005f7	57		 push	 edi
  005f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  005fd	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  00600	6a 41		 push	 65			; 00000041H
  00602	50		 push	 eax
  00603	e8 00 00 00 00	 call	 __snprintf

; 335  : 
; 336  : 			if (CResourceManager::Instance().IsFileExist(szName) == false)

  00608	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0060e	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  00611	83 c4 10	 add	 esp, 16			; 00000010H
  00614	50		 push	 eax
  00615	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  0061a	84 c0		 test	 al, al
  0061c	0f 85 9c 00 00
	00		 jne	 $LN17@LoadItemTa

; 338  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  00622	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+8]
  00628	50		 push	 eax
  00629	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  0062e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00631	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 338  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  00637	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00639	8d 85 c4 fd ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 338  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  0063f	89 b5 c4 fd ff
	ff		 mov	 DWORD PTR $T12[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00645	50		 push	 eax
  00646	8d 85 38 fd ff
	ff		 lea	 eax, DWORD PTR __Loc$5[ebp]
  0064c	50		 push	 eax
  0064d	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00652	8b 8d 40 fd ff
	ff		 mov	 ecx, DWORD PTR __Loc$5[ebp+8]
  00658	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0065c	75 12		 jne	 SHORT $LN15@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0065e	3b 71 10	 cmp	 esi, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00661	72 0d		 jb	 SHORT $LN15@LoadItemTa

; 232  :         return this->_Ptr == _Right._Ptr;

  00663	3b 8d bc fd ff
	ff		 cmp	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 340  : 				if (itVnum != itemNameMap.end())

  00669	74 05		 je	 SHORT $LN15@LoadItemTa

; 341  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", itVnum->second);

  0066b	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0066e	eb 0f		 jmp	 SHORT $LN16@LoadItemTa
$LN15@LoadItemTa:

; 342  : 				else
; 343  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", dwVnum-dwVnum % 10);

  00670	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  00675	f7 e7		 mul	 edi
  00677	c1 ea 03	 shr	 edx, 3
  0067a	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  0067d	03 c0		 add	 eax, eax
$LN16@LoadItemTa:

; 344  : 
; 345  : 				if (CResourceManager::Instance().IsFileExist(szName) == false)

  0067f	50		 push	 eax
  00680	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  00685	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  00688	6a 41		 push	 65			; 00000041H
  0068a	50		 push	 eax
  0068b	e8 00 00 00 00	 call	 __snprintf
  00690	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00696	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  00699	83 c4 10	 add	 esp, 16			; 00000010H
  0069c	50		 push	 eax
  0069d	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  006a2	84 c0		 test	 al, al
  006a4	75 18		 jne	 SHORT $LN17@LoadItemTa

; 346  : 				{
; 347  : 					#ifdef _DEBUG
; 348  : 					TraceError("%16s(#%-5d) cannot find icon file. setting to default.", table->szName, dwVnum);
; 349  : 					#endif
; 350  : 					const DWORD EmptyBowl = 27995;
; 351  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", EmptyBowl);

  006a6	68 5b 6d 00 00	 push	 27995			; 00006d5bH
  006ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  006b0	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  006b3	6a 41		 push	 65			; 00000041H
  006b5	50		 push	 eax
  006b6	e8 00 00 00 00	 call	 __snprintf
  006bb	83 c4 10	 add	 esp, 16			; 00000010H
$LN17@LoadItemTa:

; 352  : 				}
; 353  : 			}
; 354  : 
; 355  : 			pItemData = CItemData::New();

  006be	e8 00 00 00 00	 call	 ?New@CItemData@@SAPAV1@XZ ; CItemData::New
  006c3	8b d8		 mov	 ebx, eax

; 356  : 
; 357  : 			pItemData->SetDefaultItemData(szName);

  006c5	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  006c8	6a 00		 push	 0
  006ca	50		 push	 eax
  006cb	8b cb		 mov	 ecx, ebx
  006cd	89 9d c4 fd ff
	ff		 mov	 DWORD PTR _pItemData$11[ebp], ebx
  006d3	e8 00 00 00 00	 call	 ?SetDefaultItemData@CItemData@@QAEXPBD0@Z ; CItemData::SetDefaultItemData

; 358  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  006d8	8b 8d 94 fd ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]
  006de	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  006e4	50		 push	 eax
  006e5	8d 85 24 fd ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  006eb	89 bd 7c fd ff
	ff		 mov	 DWORD PTR $T9[ebp], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 358  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  006f1	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  006f2	89 9d 80 fd ff
	ff		 mov	 DWORD PTR $T9[ebp+4], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 358  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  006f8	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
  006fd	8b bd 10 ff ff
	ff		 mov	 edi, DWORD PTR _t$17[ebp]
$LN13@LoadItemTa:

; 364  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  00703	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+8]
  00709	50		 push	 eax
  0070a	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  0070f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00712	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 364  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  00718	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0071a	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 364  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  00720	89 b5 c8 fd ff
	ff		 mov	 DWORD PTR $T16[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00726	50		 push	 eax
  00727	8d 85 2c fd ff
	ff		 lea	 eax, DWORD PTR __Loc$4[ebp]
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00733	8b 8d 34 fd ff
	ff		 mov	 ecx, DWORD PTR __Loc$4[ebp+8]
  00739	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0073d	75 11		 jne	 SHORT $LN375@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0073f	3b 71 10	 cmp	 esi, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00742	72 0c		 jb	 SHORT $LN375@LoadItemTa

; 232  :         return this->_Ptr == _Right._Ptr;

  00744	3b 8d bc fd ff
	ff		 cmp	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 364  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  0074a	0f 85 fb 00 00
	00		 jne	 $LN256@LoadItemTa
$LN375@LoadItemTa:

; 365  : 			itemNameMap.insert(std::map<DWORD,DWORD>::value_type(GetHashCode(table->szName),table->dwVnum));

  00750	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp+8]
  00756	50		 push	 eax
  00757	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  0075c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0075f	89 bd 88 fd ff
	ff		 mov	 DWORD PTR $T10[ebp+4], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 365  : 			itemNameMap.insert(std::map<DWORD,DWORD>::value_type(GetHashCode(table->szName),table->dwVnum));

  00765	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00767	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
  0076d	8d 85 84 fd ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00773	89 b5 84 fd ff
	ff		 mov	 DWORD PTR $T10[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00779	50		 push	 eax
  0077a	8d 85 18 fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00780	50		 push	 eax
  00781	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
  00786	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0078a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0078d	66 0f d6 85 50
	fd ff ff	 movq	 QWORD PTR __Loc$7[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00795	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00799	75 09		 jne	 SHORT $LN210@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0079b	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0079e	0f 83 a7 00 00
	00		 jae	 $LN256@LoadItemTa
$LN210@LoadItemTa:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  007a4	81 bd c0 fd ff
	ff aa aa aa 0a	 cmp	 DWORD PTR _itemNameMap$[ebp+4], 178956970 ; 0aaaaaaaH
  007ae	0f 84 4c 01 00
	00		 je	 $LN289@LoadItemTa

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  007b4	8b 85 bc fd ff
	ff		 mov	 eax, DWORD PTR _itemNameMap$[ebp]
  007ba	89 85 c8 fd ff
	ff		 mov	 DWORD PTR __Myhead$14[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  007c0	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _itemNameMap$[ebp]
  007c6	89 85 74 fd ff
	ff		 mov	 DWORD PTR $T8[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  007cc	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  007ce	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  007d2	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  007dc	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  007e1	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 786  :     }

  007e3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  007e7	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  007ed	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  007f0	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  007f6	50		 push	 eax
  007f7	56		 push	 esi
  007f8	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  007fb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00800	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  00806	50		 push	 eax
  00807	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0080a	50		 push	 eax
  0080b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00810	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR __Myhead$14[ebp]
  00816	50		 push	 eax
  00817	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0081a	50		 push	 eax
  0081b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
  00820	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  00823	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00829	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0082f	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00839	56		 push	 esi
  0083a	ff b5 54 fd ff
	ff		 push	 DWORD PTR __Loc$7[ebp+4]
  00840	ff b5 50 fd ff
	ff		 push	 DWORD PTR __Loc$7[ebp]
  00846	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
$LN256@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 366  : 		pItemData->SetItemTableData(table);

  0084b	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _t$17[ebp]
  00851	8b cb		 mov	 ecx, ebx
  00853	50		 push	 eax
  00854	e8 00 00 00 00	 call	 ?SetItemTableData@CItemData@@QAEXPAUSItemTable_r156@1@@Z ; CItemData::SetItemTableData

; 367  : 		if (0 != table->dwVnumRange)

  00859	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR _t$17[ebp+4], 0
  00860	74 26		 je	 SHORT $LN2@LoadItemTa

; 368  : 		{
; 369  : 			m_vec_ItemRange.push_back(pItemData);

  00862	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00868	83 c1 0c	 add	 ecx, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0086b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0086e	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00871	74 08		 je	 SHORT $LN269@LoadItemTa

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00873	89 18		 mov	 DWORD PTR [eax], ebx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00875	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00879	eb 0d		 jmp	 SHORT $LN2@LoadItemTa
$LN269@LoadItemTa:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0087b	8d 95 c4 fd ff
	ff		 lea	 edx, DWORD PTR _pItemData$11[ebp]
  00881	52		 push	 edx
  00882	50		 push	 eax
  00883	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
$LN2@LoadItemTa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 318  : 	for (DWORD i = 0; i < dwElements; ++i)

  00888	8b 9d a4 fd ff
	ff		 mov	 ebx, DWORD PTR _i$1$[ebp]
  0088e	8b bd a0 fd ff
	ff		 mov	 edi, DWORD PTR tv3063[ebp]
  00894	43		 inc	 ebx
  00895	8b b5 9c fd ff
	ff		 mov	 esi, DWORD PTR tv3064[ebp]
  0089b	81 c7 9c 00 00
	00		 add	 edi, 156		; 0000009cH
  008a1	81 85 b4 fd ff
	ff 9e 00 00 00	 add	 DWORD PTR tv3062[ebp], 158 ; 0000009eH
  008ab	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  008b1	3b 9d 98 fd ff
	ff		 cmp	 ebx, DWORD PTR _dwElements$[ebp]
  008b7	89 9d a4 fd ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ebx
  008bd	8b 9d 94 fd ff
	ff		 mov	 ebx, DWORD PTR _this$1$[ebp]
  008c3	89 bd a0 fd ff
	ff		 mov	 DWORD PTR tv3063[ebp], edi
  008c9	89 b5 9c fd ff
	ff		 mov	 DWORD PTR tv3064[ebp], esi
  008cf	0f 82 bb f9 ff
	ff		 jb	 $LL4@LoadItemTa
$LN3@LoadItemTa:

; 370  : 		}
; 371  : 	}
; 372  : 
; 373  : 	delete [] pbData;

  008d5	ff b5 8c fd ff
	ff		 push	 DWORD PTR _pbData$1$[ebp]
  008db	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  008e0	83 c4 04	 add	 esp, 4
  008e3	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]

; 374  : 	return true;

  008e9	b3 01		 mov	 bl, 1
  008eb	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
  008f0	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  008f6	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  008fb	e9 e6 f7 ff ff	 jmp	 $LN27@LoadItemTa
$LN289@LoadItemTa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  00900	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN383@LoadItemTa:
  00905	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d 60 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$6:
  00021	8d 8d 74 fd ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?LoadItemTable@CItemManager@@QAE_NPBD@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 8a 14 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-748]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemTable@CItemManager@@QAE_NPBD@Z
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemTable@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemTable
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemList@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
_textFileLoader$ = -904					; size = 16
_pData$ = -888						; size = 4
_dwItemVNum$1$ = -884					; size = 4
_this$GSCopy$1$ = -880					; size = 4
_c_szFileName$GSCopy$1$ = -876				; size = 4
_TokenVector$ = -872					; size = 12
_File$ = -860						; size = 324
_szMildModelPath$2 = -536				; size = 260
_szMildIconPath$3 = -276				; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemList@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemList, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemList@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 7c 03 00
	00		 sub	 esp, 892		; 0000037cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	89 bd 90 fc ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00036	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 98   : 	CMappedFile File;

  00039	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  0003f	89 b5 94 fc ff
	ff		 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], esi
  00045	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 99   : 	LPCVOID pData;
; 100  : 
; 101  : 	if (!CEterPackManager::Instance().Get(File, c_szFileName, &pData))

  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00050	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  00056	50		 push	 eax
  00057	56		 push	 esi
  00058	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _File$[ebp]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  0006b	84 c0		 test	 al, al
  0006d	75 07		 jne	 SHORT $LN5@LoadItemLi
  0006f	32 db		 xor	 bl, bl
  00071	e9 81 02 00 00	 jmp	 $LN22@LoadItemLi
$LN5@LoadItemLi:

; 102  : 		return false;
; 103  : 
; 104  : 	CMemoryTextFileLoader textFileLoader;

  00076	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  0007c	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader

; 105  : 	textFileLoader.Bind(File.Size(), pData);

  00081	ff b5 88 fc ff
	ff		 push	 DWORD PTR _pData$[ebp]
  00087	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  0008d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00091	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00096	50		 push	 eax
  00097	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  0009d	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a2	c7 85 98 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp], 0
  000ac	c7 85 9c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+4], 0
  000b6	c7 85 a0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 108  :     for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  000c0	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  000c6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000ca	33 db		 xor	 ebx, ebx
  000cc	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 a7 01 00
	00		 je	 $LN3@LoadItemLi
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@LoadItemLi:

; 109  : 	{
; 110  : 		if (!textFileLoader.SplitLine(i, &TokenVector, "\t"))

  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_01GPOEFGEJ@?7@
  000e5	8d 85 98 fc ff
	ff		 lea	 eax, DWORD PTR _TokenVector$[ebp]
  000eb	50		 push	 eax
  000ec	53		 push	 ebx
  000ed	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  000f3	e8 00 00 00 00	 call	 ?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z ; CMemoryTextFileLoader::SplitLine
  000f8	84 c0		 test	 al, al
  000fa	0f 84 6c 01 00
	00		 je	 $LN2@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00100	8b 95 9c fc ff
	ff		 mov	 edx, DWORD PTR _TokenVector$[ebp+4]
  00106	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  0010c	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 113  : 		if (!(TokenVector.size() == 3 || TokenVector.size() == 4))

  0010e	8d 42 b8	 lea	 eax, DWORD PTR [edx-72]
  00111	83 f8 18	 cmp	 eax, 24			; 00000018H
  00114	72 1c		 jb	 SHORT $LN7@LoadItemLi
  00116	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00119	83 f8 18	 cmp	 eax, 24			; 00000018H
  0011c	72 14		 jb	 SHORT $LN7@LoadItemLi

; 114  : 		{
; 115  : 			TraceError(" CItemManager::LoadItemList(%s) - StrangeLine in %d\n", c_szFileName, i);

  0011e	53		 push	 ebx
  0011f	56		 push	 esi
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@
  00125	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0012a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 116  : 			continue;

  0012d	e9 3a 01 00 00	 jmp	 $LN2@LoadItemLi
$LN7@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00132	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00136	8d 71 30	 lea	 esi, DWORD PTR [ecx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00139	72 02		 jb	 SHORT $LN40@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0013b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN40@LoadItemLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 123  : 		DWORD dwItemVNum=atoi(c_rstrID.c_str());

  0013d	51		 push	 ecx
  0013e	e8 00 00 00 00	 call	 __atoi64
  00143	83 c4 04	 add	 esp, 4
  00146	89 85 8c fc ff
	ff		 mov	 DWORD PTR _dwItemVNum$1$[ebp], eax

; 124  : 
; 125  : 		CItemData * pItemData = MakeItemData(dwItemVNum);

  0014c	8b cf		 mov	 ecx, edi
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ; CItemManager::MakeItemData

; 126  : 
; 127  : 		extern BOOL USE_VIETNAM_CONVERT_WEAPON_VNUM;
; 128  : 		if (USE_VIETNAM_CONVERT_WEAPON_VNUM)

  00154	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA, 0 ; USE_VIETNAM_CONVERT_WEAPON_VNUM
  0015b	8b f8		 mov	 edi, eax
  0015d	0f 84 bf 00 00
	00		 je	 $LN8@LoadItemLi

; 129  : 		{
; 130  : 			extern DWORD Vietnam_ConvertWeaponVnum(DWORD vnum);
; 131  : 			DWORD dwMildItemVnum = Vietnam_ConvertWeaponVnum(dwItemVNum);

  00163	ff b5 8c fc ff
	ff		 push	 DWORD PTR _dwItemVNum$1$[ebp]
  00169	e8 00 00 00 00	 call	 ?Vietnam_ConvertWeaponVnum@@YAKK@Z ; Vietnam_ConvertWeaponVnum
  0016e	8b c8		 mov	 ecx, eax
  00170	83 c4 04	 add	 esp, 4

; 132  : 			if (dwMildItemVnum == dwItemVNum)

  00173	3b 8d 8c fc ff
	ff		 cmp	 ecx, DWORD PTR _dwItemVNum$1$[ebp]
  00179	75 3f		 jne	 SHORT $LN10@LoadItemLi

; 133  : 			{
; 134  : 				if (4 == TokenVector.size())

  0017b	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  00181	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  00187	2b c1		 sub	 eax, ecx
  00189	83 e8 60	 sub	 eax, 96			; 00000060H
  0018c	83 f8 18	 cmp	 eax, 24			; 00000018H
  0018f	73 19		 jae	 SHORT $LN12@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00191	83 79 5c 10	 cmp	 DWORD PTR [ecx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00195	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00198	72 02		 jb	 SHORT $LN51@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
$LN51@LoadItemLi:

; 2153 :         return _BUF_SIZE <= _Myres;

  0019c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  001a0	72 12		 jb	 SHORT $LN13@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  001a2	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 143  : 			}

  001a4	50		 push	 eax
  001a5	e9 ae 00 00 00	 jmp	 $LN110@LoadItemLi
$LN12@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001aa	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  001ae	72 02		 jb	 SHORT $LN65@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  001b0	8b 36		 mov	 esi, DWORD PTR [esi]
$LN65@LoadItemLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 141  : 					pItemData->SetDefaultItemData(c_rstrIcon.c_str());

  001b2	33 c0		 xor	 eax, eax
$LN13@LoadItemLi:

; 143  : 			}

  001b4	50		 push	 eax
  001b5	e9 9e 00 00 00	 jmp	 $LN110@LoadItemLi
$LN10@LoadItemLi:

; 144  : 			else
; 145  : 			{
; 146  : 				DWORD dwMildBaseVnum = dwMildItemVnum / 10 * 10;

  001ba	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  001bf	f7 e1		 mul	 ecx

; 147  : 				char szMildIconPath[MAX_PATH];
; 148  : 				sprintf(szMildIconPath, "icon/item/%.5d.tga", dwMildBaseVnum);

  001c1	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  001c7	c1 ea 03	 shr	 edx, 3
  001ca	8d 34 92	 lea	 esi, DWORD PTR [edx+edx*4]
  001cd	03 f6		 add	 esi, esi
  001cf	56		 push	 esi
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 _sprintf

; 149  : 				if (4 == TokenVector.size())

  001db	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  001e1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e4	2b 85 98 fc ff
	ff		 sub	 eax, DWORD PTR _TokenVector$[ebp]
  001ea	83 e8 60	 sub	 eax, 96			; 00000060H
  001ed	83 f8 18	 cmp	 eax, 24			; 00000018H
  001f0	73 25		 jae	 SHORT $LN14@LoadItemLi

; 150  : 				{
; 151  : 					char szMildModelPath[MAX_PATH];
; 152  : 					sprintf(szMildModelPath, "d:/ymir work/item/weapon/%.5d.gr2", dwMildBaseVnum);

  001f2	56		 push	 esi
  001f3	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _szMildModelPath$2[ebp]
  001f9	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 _sprintf
  00204	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 					pItemData->SetDefaultItemData(szMildIconPath, szMildModelPath);

  00207	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _szMildModelPath$2[ebp]
  0020d	50		 push	 eax
  0020e	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  00214	50		 push	 eax

; 154  : 				}

  00215	eb 42		 jmp	 SHORT $LN111@LoadItemLi
$LN14@LoadItemLi:

; 155  : 				else
; 156  : 				{
; 157  : 					pItemData->SetDefaultItemData(szMildIconPath);

  00217	6a 00		 push	 0
  00219	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  0021f	50		 push	 eax

; 158  : 				}
; 159  : 			}
; 160  : 		}

  00220	eb 37		 jmp	 SHORT $LN111@LoadItemLi
$LN8@LoadItemLi:

; 161  : 		else
; 162  : 		{
; 163  : 			if (4 == TokenVector.size())

  00222	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  00228	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  0022e	2b c1		 sub	 eax, ecx
  00230	83 e8 60	 sub	 eax, 96			; 00000060H
  00233	83 f8 18	 cmp	 eax, 24			; 00000018H
  00236	73 16		 jae	 SHORT $LN16@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00238	83 79 5c 10	 cmp	 DWORD PTR [ecx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0023c	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0023f	72 02		 jb	 SHORT $LN78@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00241	8b 00		 mov	 eax, DWORD PTR [eax]
$LN78@LoadItemLi:

; 2153 :         return _BUF_SIZE <= _Myres;

  00243	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00247	72 02		 jb	 SHORT $LN85@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00249	8b 36		 mov	 esi, DWORD PTR [esi]
$LN85@LoadItemLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 166  : 				pItemData->SetDefaultItemData(c_rstrIcon.c_str(), c_rstrModelFileName.c_str());

  0024b	50		 push	 eax

; 167  : 			}

  0024c	eb 0a		 jmp	 SHORT $LN110@LoadItemLi
$LN16@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0024e	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00252	72 02		 jb	 SHORT $LN92@LoadItemLi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00254	8b 36		 mov	 esi, DWORD PTR [esi]
$LN92@LoadItemLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 170  : 				pItemData->SetDefaultItemData(c_rstrIcon.c_str());

  00256	6a 00		 push	 0
$LN110@LoadItemLi:

; 108  :     for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  00258	56		 push	 esi
$LN111@LoadItemLi:
  00259	8b cf		 mov	 ecx, edi
  0025b	e8 00 00 00 00	 call	 ?SetDefaultItemData@CItemData@@QAEXPBD0@Z ; CItemData::SetDefaultItemData
  00260	8b b5 94 fc ff
	ff		 mov	 esi, DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  00266	8b bd 90 fc ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@LoadItemLi:
  0026c	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  00272	43		 inc	 ebx
  00273	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00278	3b d8		 cmp	 ebx, eax
  0027a	0f 82 60 fe ff
	ff		 jb	 $LL4@LoadItemLi
$LN3@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00280	8b 85 98 fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 175  : 	return true;

  00286	b3 01		 mov	 bl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00288	85 c0		 test	 eax, eax
  0028a	74 60		 je	 SHORT $LN99@LoadItemLi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0028c	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR _TokenVector$[ebp]
  00292	51		 push	 ecx
  00293	ff b5 9c fc ff
	ff		 push	 DWORD PTR _TokenVector$[ebp+4]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0029f	8b 8d a0 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp+8]
  002a5	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002aa	8b b5 98 fc ff
	ff		 mov	 esi, DWORD PTR _TokenVector$[ebp]
  002b0	2b ce		 sub	 ecx, esi
  002b2	f7 e9		 imul	 ecx
  002b4	c1 fa 02	 sar	 edx, 2
  002b7	8b c2		 mov	 eax, edx
  002b9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002bc	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002be	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002c1	c1 e0 03	 shl	 eax, 3
  002c4	50		 push	 eax
  002c5	56		 push	 esi
  002c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002cb	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  002ce	c7 85 98 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp], 0

; 1698 :             _Mylast  = pointer();

  002d8	c7 85 9c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+4], 0

; 1699 :             _Myend   = pointer();

  002e2	c7 85 a0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+8], 0
$LN99@LoadItemLi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 175  : 	return true;

  002ec	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  002f2	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN22@LoadItemLi:
  002f7	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  002fd	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00302	8a c3		 mov	 al, bl

; 176  : }

  00304	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00307	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0030e	59		 pop	 ecx
  0030f	5f		 pop	 edi
  00310	5e		 pop	 esi
  00311	5b		 pop	 ebx
  00312	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00315	33 cd		 xor	 ecx, ebp
  00317	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031c	8b e5		 mov	 esp, ebp
  0031e	5d		 pop	 ebp
  0031f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR _TokenVector$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$?LoadItemList@CItemManager@@QAE_NPBD@Z:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 8a 74 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-908]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003f	33 c8		 xor	 ecx, eax
  00041	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00046	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemList@CItemManager@@QAE_NPBD@Z
  0004b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemList@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemList
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemDesc@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
__Loc$2 = -452						; size = 12
_kTextFileLoader$ = -440				; size = 16
_c_rstSumm$1$ = -424					; size = 4
_c_rstDesc$1$ = -420					; size = 4
_pvData$ = -416						; size = 4
_this$1$ = -412						; size = 4
_dwVnum$3 = -408					; size = 4
_kTokenVector$ = -404					; size = 12
$T4 = -389						; size = 1
_kFile$ = -388						; size = 324
$T5 = -64						; size = 24
_stTemp$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemDesc@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemDesc, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec b8 01 00
	00		 sub	 esp, 440		; 000001b8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d 64 fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ecx
  00033	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 199  : 	const VOID* pvData;
; 200  : 	CMappedFile kFile;

  00036	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 201  : 	if (!CEterPackManager::Instance().Get(kFile, c_szFileName, &pvData))

  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00047	8d 85 60 fe ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  0004d	50		 push	 eax
  0004e	56		 push	 esi
  0004f	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _kFile$[ebp]
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00062	84 c0		 test	 al, al
  00064	75 1a		 jne	 SHORT $LN7@LoadItemDe

; 202  : 	{
; 203  : 		Tracenf("CItemManager::LoadItemDesc(c_szFileName=%s) - Load Error", c_szFileName);

  00066	56		 push	 esi
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@
  0006c	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00071	83 c4 08	 add	 esp, 8
  00074	c6 85 7b fe ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  0007b	e9 c4 02 00 00	 jmp	 $LN16@LoadItemDe
$LN7@LoadItemDe:

; 204  : 		return false;
; 205  : 	}
; 206  : 
; 207  : 	CMemoryTextFileLoader kTextFileLoader;

  00080	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00086	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader

; 208  : 	kTextFileLoader.Bind(kFile.Size(), pvData);

  0008b	ff b5 60 fe ff
	ff		 push	 DWORD PTR _pvData$[ebp]
  00091	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00097	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0009b	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  000a0	50		 push	 eax
  000a1	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000a7	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000ac	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ba	c6 45 d8 00	 mov	 BYTE PTR _stTemp$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000be	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0
  000c8	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0
  000d2	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 213  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  000dc	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000e2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e6	33 ff		 xor	 edi, edi
  000e8	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  000ed	85 c0		 test	 eax, eax
  000ef	0f 84 ac 01 00
	00		 je	 $LN3@LoadItemDe
$LL4@LoadItemDe:

; 214  : 	{
; 215  : 		if (!kTextFileLoader.SplitLineByTab(i, &kTokenVector))

  000f5	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _kTokenVector$[ebp]
  000fb	50		 push	 eax
  000fc	57		 push	 edi
  000fd	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00103	e8 00 00 00 00	 call	 ?SplitLineByTab@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; CMemoryTextFileLoader::SplitLineByTab
  00108	84 c0		 test	 al, al
  0010a	0f 84 7d 01 00
	00		 je	 $LN2@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00110	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00116	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0011b	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  00121	8b d1		 mov	 edx, ecx
  00123	2b d6		 sub	 edx, esi
  00125	f7 ea		 imul	 edx
  00127	c1 fa 02	 sar	 edx, 2
  0012a	8b c2		 mov	 eax, edx
  0012c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012f	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 218  : 		while (kTokenVector.size()<ITEMDESC_COL_NUM)

  00131	83 f8 04	 cmp	 eax, 4
  00134	0f 83 af 00 00
	00		 jae	 $LN6@LoadItemDe
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL5@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00140	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00147	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0014e	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 219  : 			kTokenVector.push_back("");

  00152	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00156	3b 8d 74 fe ff
	ff		 cmp	 ecx, DWORD PTR _kTokenVector$[ebp+8]
  0015c	74 32		 je	 SHORT $LN84@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0015e	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T5[ebp]

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00162	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00169	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0016e	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00172	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00175	f3 0f 7e 45 d0	 movq	 xmm0, QWORD PTR $T5[ebp+16]
  0017a	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0017f	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00185	83 c1 18	 add	 ecx, 24			; 00000018H
  00188	89 8d 70 fe ff
	ff		 mov	 DWORD PTR _kTokenVector$[ebp+4], ecx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0018e	eb 19		 jmp	 SHORT $LN83@LoadItemDe
$LN84@LoadItemDe:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00190	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  00193	50		 push	 eax
  00194	51		 push	 ecx
  00195	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  0019b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  001a0	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  001a6	8b 45 d4	 mov	 eax, DWORD PTR $T5[ebp+20]
$LN83@LoadItemDe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 219  : 			kTokenVector.push_back("");

  001a9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001ad	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b0	72 13		 jb	 SHORT $LN107@LoadItemDe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001b2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b3	50		 push	 eax
  001b4	ff 75 c0	 push	 DWORD PTR $T5[ebp]
  001b7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001bc	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  001c2	83 c4 08	 add	 esp, 8
$LN107@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c5	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  001cb	8b d1		 mov	 edx, ecx
  001cd	2b d6		 sub	 edx, esi
  001cf	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001d4	f7 ea		 imul	 edx
  001d6	c1 fa 02	 sar	 edx, 2
  001d9	8b c2		 mov	 eax, edx
  001db	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001de	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 218  : 		while (kTokenVector.size()<ITEMDESC_COL_NUM)

  001e0	83 f8 04	 cmp	 eax, 4
  001e3	0f 82 57 ff ff
	ff		 jb	 $LL5@LoadItemDe
$LN6@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  001e9	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  001ed	72 02		 jb	 SHORT $LN118@LoadItemDe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  001ef	8b 36		 mov	 esi, DWORD PTR [esi]
$LN118@LoadItemDe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 223  : 		DWORD dwVnum=atoi(kTokenVector[ITEMDESC_COL_VNUM].c_str());

  001f1	56		 push	 esi
  001f2	e8 00 00 00 00	 call	 __atoi64
  001f7	89 85 68 fe ff
	ff		 mov	 DWORD PTR _dwVnum$3[ebp], eax
  001fd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00200	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
  00206	8d 48 30	 lea	 ecx, DWORD PTR [eax+48]
  00209	83 c0 48	 add	 eax, 72			; 00000048H
  0020c	89 8d 5c fe ff
	ff		 mov	 DWORD PTR _c_rstDesc$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00212	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _dwVnum$3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00218	89 85 58 fe ff
	ff		 mov	 DWORD PTR _c_rstSumm$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 226  : 		TItemMap::iterator f = m_ItemMap.find(dwVnum);

  0021e	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00224	51		 push	 ecx
  00225	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR __Loc$2[ebp]
  0022b	51		 push	 ecx
  0022c	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  0022f	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00234	8b b5 44 fe ff
	ff		 mov	 esi, DWORD PTR __Loc$2[ebp+8]
  0023a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0023e	75 4d		 jne	 SHORT $LN2@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00240	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _dwVnum$3[ebp]
  00246	3b 46 10	 cmp	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00249	72 42		 jb	 SHORT $LN2@LoadItemDe

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0024b	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _this$1$[ebp]
  00251	39 70 04	 cmp	 DWORD PTR [eax+4], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 227  : 		if (m_ItemMap.end() == f)

  00254	74 37		 je	 SHORT $LN2@LoadItemDe

; 228  : 			continue;
; 229  : 
; 230  : 		CItemData* pkItemDataFind = f->second;

  00256	8b 76 14	 mov	 esi, DWORD PTR [esi+20]

; 231  : 
; 232  : 		pkItemDataFind->SetDescription(__SnapString(c_rstDesc, stTemp));

  00259	8d 45 d8	 lea	 eax, DWORD PTR _stTemp$[ebp]
  0025c	50		 push	 eax
  0025d	ff b5 5c fe ff
	ff		 push	 DWORD PTR _c_rstDesc$1$[ebp]
  00263	e8 00 00 00 00	 call	 ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
  00268	83 c4 08	 add	 esp, 8
  0026b	8b ce		 mov	 ecx, esi
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetDescription

; 233  : 		pkItemDataFind->SetSummary(__SnapString(c_rstSumm, stTemp));

  00273	8d 45 d8	 lea	 eax, DWORD PTR _stTemp$[ebp]
  00276	50		 push	 eax
  00277	ff b5 58 fe ff
	ff		 push	 DWORD PTR _c_rstSumm$1$[ebp]
  0027d	e8 00 00 00 00	 call	 ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
  00282	83 c4 08	 add	 esp, 8
  00285	8b ce		 mov	 ecx, esi
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetSummary
$LN2@LoadItemDe:

; 213  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  0028d	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00293	47		 inc	 edi
  00294	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00299	3b f8		 cmp	 edi, eax
  0029b	0f 82 54 fe ff
	ff		 jb	 $LL4@LoadItemDe
$LN3@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  002a1	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  002a7	c6 85 7b fe ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  002ae	85 c0		 test	 eax, eax
  002b0	74 60		 je	 SHORT $LN162@LoadItemDe

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  002b2	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  002b8	51		 push	 ecx
  002b9	ff b5 70 fe ff
	ff		 push	 DWORD PTR _kTokenVector$[ebp+4]
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002c5	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+8]
  002cb	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002d0	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  002d6	2b ce		 sub	 ecx, esi
  002d8	f7 e9		 imul	 ecx
  002da	c1 fa 02	 sar	 edx, 2
  002dd	8b c2		 mov	 eax, edx
  002df	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002e2	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e4	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002e7	c1 e0 03	 shl	 eax, 3
  002ea	50		 push	 eax
  002eb	56		 push	 esi
  002ec	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002f1	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  002f4	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0

; 1698 :             _Mylast  = pointer();

  002fe	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0

; 1699 :             _Myend   = pointer();

  00308	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
$LN162@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00312	8b 45 ec	 mov	 eax, DWORD PTR _stTemp$[ebp+20]
  00315	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00318	72 0d		 jb	 SHORT $LN172@LoadItemDe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0031a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0031b	50		 push	 eax
  0031c	ff 75 d8	 push	 DWORD PTR _stTemp$[ebp]
  0031f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00324	83 c4 08	 add	 esp, 8
$LN172@LoadItemDe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  00327	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0032d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00334	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0033b	c6 45 d8 00	 mov	 BYTE PTR _stTemp$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  0033f	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN16@LoadItemDe:
  00344	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0034a	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0034f	8a 85 7b fe ff
	ff		 mov	 al, BYTE PTR $T4[ebp]

; 236  : }

  00355	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00358	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035f	59		 pop	 ecx
  00360	5f		 pop	 edi
  00361	5e		 pop	 esi
  00362	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00365	33 cd		 xor	 ecx, ebp
  00367	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036c	8b e5		 mov	 esp, ebp
  0036e	5d		 pop	 ebp
  0036f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 4d d8	 lea	 ecx, DWORD PTR _stTemp$[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$3:
  0001e	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$4:
  00029	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
__ehhandler$?LoadItemDesc@CItemManager@@QAE_NPBD@Z:
  00036	90		 npad	 1
  00037	90		 npad	 1
  00038	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003f	8b 8a 3c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-452]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004f	33 c8		 xor	 ecx, eax
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
  0005b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemDesc@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemDesc
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_p$1$ = 8						; size = 4
_dwItemID$ = 8						; size = 4
_ppItemData$ = 12					; size = 4
?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z PROC ; CItemManager::GetItemDataPointer, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	57		 push	 edi

; 49   : 	if (0 == dwItemID)

  00007	8b 7d 08	 mov	 edi, DWORD PTR _dwItemID$[ebp]
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	85 ff		 test	 edi, edi
  0000f	75 09		 jne	 SHORT $LN5@GetItemDat

; 50   : 		return FALSE;

  00011	33 c0		 xor	 eax, eax
  00013	5f		 pop	 edi

; 75   : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN5@GetItemDat:
  0001a	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001b	8d 45 08	 lea	 eax, DWORD PTR _dwItemID$[ebp]
  0001e	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 52   : 	TItemMap::iterator f = m_ItemMap.find(dwItemID);

  0001f	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00022	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00025	8b ce		 mov	 ecx, esi
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  00030	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00034	75 1e		 jne	 SHORT $LN53@GetItemDat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00036	3b 79 10	 cmp	 edi, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00039	72 19		 jb	 SHORT $LN53@GetItemDat

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0003b	39 0e		 cmp	 DWORD PTR [esi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 54   : 	if (m_ItemMap.end() == f)

  0003d	74 15		 je	 SHORT $LN53@GetItemDat

; 70   : 	}
; 71   : 
; 72   : 	*ppItemData = f->second;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _ppItemData$[ebp]
  00042	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00045	5e		 pop	 esi
  00046	5f		 pop	 edi
  00047	89 08		 mov	 DWORD PTR [eax], ecx

; 73   : 
; 74   : 	return TRUE;

  00049	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
$LN53@GetItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 57   : 		for (int i = 0; i < n; i++)

  00057	33 f6		 xor	 esi, esi
  00059	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005a	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  0005d	2b 58 0c	 sub	 ebx, DWORD PTR [eax+12]
  00060	c1 fb 02	 sar	 ebx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 57   : 		for (int i = 0; i < n; i++)

  00063	85 db		 test	 ebx, ebx
  00065	7e 3f		 jle	 SHORT $LN54@GetItemDat
$LL4@GetItemDat:

; 58   : 		{
; 59   : 			CItemData * p = m_vec_ItemRange[i];

  00067	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0006a	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 60   : 			const CItemData::TItemTable * pTable = p->GetTable();

  0006d	8b c8		 mov	 ecx, eax
  0006f	89 45 08	 mov	 DWORD PTR _p$1$[ebp], eax
  00072	e8 00 00 00 00	 call	 ?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ ; CItemData::GetTable

; 61   : 			if ((pTable->dwVnum < dwItemID) &&

  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	3b cf		 cmp	 ecx, edi
  0007b	73 09		 jae	 SHORT $LN2@GetItemDat
  0007d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00080	03 c1		 add	 eax, ecx
  00082	3b f8		 cmp	 edi, eax
  00084	72 0a		 jb	 SHORT $LN47@GetItemDat
$LN2@GetItemDat:

; 57   : 		for (int i = 0; i < n; i++)

  00086	46		 inc	 esi
  00087	3b f3		 cmp	 esi, ebx
  00089	7d 1b		 jge	 SHORT $LN54@GetItemDat
  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0008e	eb d7		 jmp	 SHORT $LL4@GetItemDat
$LN47@GetItemDat:

; 62   : 				dwItemID < (pTable->dwVnum + pTable->dwVnumRange))
; 63   : 			{
; 64   : 				*ppItemData = p;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _ppItemData$[ebp]
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _p$1$[ebp]
  00096	5b		 pop	 ebx
  00097	5e		 pop	 esi
  00098	89 08		 mov	 DWORD PTR [eax], ecx

; 65   : 				return TRUE;

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	5f		 pop	 edi

; 75   : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
$LN54@GetItemDat:

; 66   : 			}
; 67   : 		}
; 68   : 		Tracef(" CItemManager::GetItemDataPointer - FIND ERROR [%d]\n", dwItemID);

  000a6	57		 push	 edi
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@
  000ac	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  000b1	83 c4 08	 add	 esp, 8

; 69   : 		return FALSE;

  000b4	33 c0		 xor	 eax, eax
  000b6	5b		 pop	 ebx
  000b7	5e		 pop	 esi
  000b8	5f		 pop	 edi

; 75   : }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ENDP ; CItemManager::GetItemDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ
_TEXT	SEGMENT
?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ PROC ; CItemManager::GetSelectedItemDataPointer, COMDAT
; _this$ = ecx

; 44   : 	return m_pSelectedItemData;

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 45   : }

  00003	c3		 ret	 0
?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ ENDP ; CItemManager::GetSelectedItemDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?SelectItemData@CItemManager@@QAEHK@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_p$1$ = 8						; size = 4
_dwIndex$ = 8						; size = 4
?SelectItemData@CItemManager@@QAEHK@Z PROC		; CItemManager::SelectItemData, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000b	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  0000e	50		 push	 eax
  0000f	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 16   : {

  00012	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00015	50		 push	 eax
  00016	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00019	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  00021	8b 5d 08	 mov	 ebx, DWORD PTR _dwIndex$[ebp]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	75 1e		 jne	 SHORT $LN52@SelectItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0002a	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002d	72 19		 jb	 SHORT $LN52@SelectItem

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0002f	39 46 04	 cmp	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 19   : 	if (m_ItemMap.end() == f)

  00032	74 14		 je	 SHORT $LN52@SelectItem

; 35   : 	}
; 36   : 
; 37   : 	m_pSelectedItemData = f->second;

  00034	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00037	5f		 pop	 edi
  00038	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 38   : 
; 39   : 	return TRUE;

  0003b	b8 01 00 00 00	 mov	 eax, 1

; 40   : }

  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
$LN52@SelectItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00048	8b c6		 mov	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 22   : 		for (int i = 0; i < n; i++)

  0004a	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  0004f	2b 78 0c	 sub	 edi, DWORD PTR [eax+12]
  00052	c1 ff 02	 sar	 edi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 22   : 		for (int i = 0; i < n; i++)

  00055	85 ff		 test	 edi, edi
  00057	7e 47		 jle	 SHORT $LN53@SelectItem
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SelectItem:

; 23   : 		{
; 24   : 			CItemData * p = m_vec_ItemRange[i];

  00060	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00063	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 25   : 			const CItemData::TItemTable * pTable = p->GetTable();

  00066	8b c8		 mov	 ecx, eax
  00068	89 45 08	 mov	 DWORD PTR _p$1$[ebp], eax
  0006b	e8 00 00 00 00	 call	 ?GetTable@CItemData@@QBEPBUSItemTable_r156@1@XZ ; CItemData::GetTable

; 26   : 			if ((pTable->dwVnum < dwIndex) &&

  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	3b cb		 cmp	 ecx, ebx
  00074	73 09		 jae	 SHORT $LN2@SelectItem
  00076	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00079	03 c1		 add	 eax, ecx
  0007b	3b d8		 cmp	 ebx, eax
  0007d	72 0a		 jb	 SHORT $LN46@SelectItem
$LN2@SelectItem:

; 22   : 		for (int i = 0; i < n; i++)

  0007f	46		 inc	 esi
  00080	3b f7		 cmp	 esi, edi
  00082	7d 1c		 jge	 SHORT $LN53@SelectItem
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00087	eb d7		 jmp	 SHORT $LL4@SelectItem
$LN46@SelectItem:

; 27   : 				dwIndex < (pTable->dwVnum + pTable->dwVnumRange))
; 28   : 			{
; 29   : 				m_pSelectedItemData = p;

  00089	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  0008c	8b 45 08	 mov	 eax, DWORD PTR _p$1$[ebp]
  0008f	5f		 pop	 edi
  00090	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 30   : 				return TRUE;

  00093	b8 01 00 00 00	 mov	 eax, 1

; 40   : }

  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
$LN53@SelectItem:

; 31   : 			}
; 32   : 		}
; 33   : 		Tracef(" CItemManager::SelectItemData - FIND ERROR [%d]\n", dwIndex);

  000a0	53		 push	 ebx
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@
  000a6	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  000ab	83 c4 08	 add	 esp, 8

; 34   : 		return FALSE;

  000ae	33 c0		 xor	 eax, eax
  000b0	5f		 pop	 edi

; 40   : }

  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
?SelectItemData@CItemManager@@QAEHK@Z ENDP		; CItemManager::SelectItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ?Destroy@CItemManager@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CItemManager@@QAEXXZ PROC			; CItemManager::Destroy, COMDAT
; _this$ = ecx

; 378  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00002	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 378  : {

  00005	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00006	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 37		 mov	 esi, DWORD PTR [edi]
  0000a	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 380  : 	for (i=m_ItemMap.begin(); i!=m_ItemMap.end(); ++i)

  0000c	74 54		 je	 SHORT $LN3@Destroy
  0000e	66 90		 npad	 2
$LL28@Destroy:

; 381  : 		CItemData::Delete(i->second);

  00010	ff 76 14	 push	 DWORD PTR [esi+20]
  00013	e8 00 00 00 00	 call	 ?Delete@CItemData@@SAXPAV1@@Z ; CItemData::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00018	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 381  : 		CItemData::Delete(i->second);

  0001b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0001e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00022	74 20		 je	 SHORT $LN27@Destroy

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0002b	75 13		 jne	 SHORT $LN82@Destroy
  0002d	0f 1f 00	 npad	 3
$LL25@Destroy:
  00030	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00033	75 0b		 jne	 SHORT $LN82@Destroy

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00035	8b f0		 mov	 esi, eax
  00037	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003e	74 f0		 je	 SHORT $LL25@Destroy
$LN82@Destroy:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00040	8b f0		 mov	 esi, eax

; 59   :         } else {

  00042	eb 18		 jmp	 SHORT $LN32@Destroy
$LN27@Destroy:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00044	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00046	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00048	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0004c	75 0e		 jne	 SHORT $LN32@Destroy
  0004e	66 90		 npad	 2
$LL31@Destroy:
  00050	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00052	8b f1		 mov	 esi, ecx
  00054	8b c8		 mov	 ecx, eax
  00056	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0005a	74 f4		 je	 SHORT $LL31@Destroy
$LN32@Destroy:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0005c	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 232  :         return this->_Ptr == _Right._Ptr;

  0005e	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 380  : 	for (i=m_ItemMap.begin(); i!=m_ItemMap.end(); ++i)

  00060	75 ae		 jne	 SHORT $LL28@Destroy
$LN3@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00062	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00065	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00069	75 25		 jne	 SHORT $LN56@Destroy
  0006b	0f 1f 44 00 00	 npad	 5
$LL55@Destroy:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00070	ff 76 08	 push	 DWORD PTR [esi+8]
  00073	8b cb		 mov	 ecx, ebx
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0007b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0007d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0007f	6a 18		 push	 24			; 00000018H
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00087	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0008a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0008e	74 e0		 je	 SHORT $LL55@Destroy
$LN56@Destroy:

; 1449 :         _Head->_Parent  = _Head;

  00090	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00093	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00095	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  000a1	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 384  : }

  000a2	c3		 ret	 0
?Destroy@CItemManager@@QAEXXZ ENDP			; CItemManager::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ??1CItemManager@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CItemManager@@UAE@XZ PROC				; CItemManager::~CItemManager, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CItemManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CItemManager@@6B@

; 460  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CItemManager@@QAEXXZ ; CItemManager::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00033	85 c9		 test	 ecx, ecx
  00035	74 27		 je	 SHORT $LN6@CItemManag

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00037	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0003a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00046	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00050	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 1699 :             _Myend   = pointer();

  00057	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@CItemManag:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 461  : }

  0005e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00061	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h

; 19   : 	{

  00066	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  0006c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 461  : }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
  00086	cc		 int	 3
  00087	cc		 int	 3
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CItemManager@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CItemManager@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CItemManager@@UAE@XZ ENDP				; CItemManager::~CItemManager
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp
;	COMDAT ??0CItemManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CItemManager@@QAE@XZ PROC				; CItemManager::CItemManager, COMDAT
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CItemManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  0002d	89 1d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, ebx ; CSingleton<CItemManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 456  : {

  00033	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00036	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CItemManager@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003c	6a 18		 push	 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 456  : {

  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00048	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0004e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0005a	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0005c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  00064	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00069	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0006c	50		 push	 eax
  0006d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00076	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00079	50		 push	 eax
  0007a	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00083	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00089	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0008c	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 457  : }

  0008e	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00090	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  00097	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  0009e	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\ItemManager.cpp

; 455  : CItemManager::CItemManager() : m_pSelectedItemData(NULL)

  000a5	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0

; 457  : }

  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItemManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCItemManager@@@@UAE@XZ ; CSingleton<CItemManager>::~CSingleton<CItemManager>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CItemManager@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CItemManager@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CItemManager@@QAE@XZ ENDP				; CItemManager::CItemManager
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z PROC	; CSingleton<CItemManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z ENDP	; CSingleton<CItemManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCItemManager@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCItemManager@@@@UAE@XZ PROC		; CSingleton<CItemManager>::~CSingleton<CItemManager>, COMDAT
; _this$ = ecx

; 19   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0;

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCItemManager@@@@UAE@XZ ENDP		; CSingleton<CItemManager>::~CSingleton<CItemManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN11@basic_stri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@basic_stri:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN8@basic_stri

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN8@basic_stri:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00090	5e		 pop	 esi

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
