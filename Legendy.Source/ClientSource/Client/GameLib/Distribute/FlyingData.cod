; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCFlyingData@@@@6B@		; CDynamicPool<CFlyingData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z	; CDynamicPool<CFlyingData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCFlyingData@@@@6B@		; CDynamicPool<CFlyingData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCFlyingData@@@@@8	; CDynamicPool<CFlyingData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCFlyingData@@@@8		; CDynamicPool<CFlyingData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCFlyingData@@@@8		; CDynamicPool<CFlyingData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCFlyingData@@@@8	; CDynamicPool<CFlyingData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z:PROC ; CDynamicPool<CFlyingData>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCFlyingData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCFlyingData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCFlyingData@@@@@8 ; CDynamicPool<CFlyingData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCFlyingData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCFlyingData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCFlyingData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCFlyingData@@@@8 ; CDynamicPool<CFlyingData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCFlyingData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCFlyingData@@@@8 DD 00H		; CDynamicPool<CFlyingData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCFlyingData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCFlyingData@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCFlyingData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CFlyingData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCFlyingData@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCFlyingData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCFlyingData@@@@6B@ DD 00H		; CDynamicPool<CFlyingData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCFlyingData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCFlyingData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCFlyingData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCFlyingData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCFlyingData@@@@6B@ ; CDynamicPool<CFlyingData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1TFlyingAttachData@CFlyingData@@QAE@XZ	; CFlyingData::TFlyingAttachData::~TFlyingAttachData
PUBLIC	??0CFlyingData@@QAE@XZ				; CFlyingData::CFlyingData
PUBLIC	??1CFlyingData@@UAE@XZ				; CFlyingData::~CFlyingData
PUBLIC	?Destroy@CFlyingData@@QAEXXZ			; CFlyingData::Destroy
PUBLIC	?LoadScriptFile@CFlyingData@@QAE_NPBD@Z		; CFlyingData::LoadScriptFile
PUBLIC	?SaveScriptFile@CFlyingData@@QAE_NPBD@Z		; CFlyingData::SaveScriptFile
PUBLIC	?SetBombEffect@CFlyingData@@QAEXPBD@Z		; CFlyingData::SetBombEffect
PUBLIC	?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z ; CFlyingData::AttachFlyEffect
PUBLIC	?GetAttachDataReference@CFlyingData@@QAEAAUTFlyingAttachData@1@H@Z ; CFlyingData::GetAttachDataReference
PUBLIC	?DuplicateAttach@CFlyingData@@QAEXH@Z		; CFlyingData::DuplicateAttach
PUBLIC	?RemoveAttach@CFlyingData@@QAEXH@Z		; CFlyingData::RemoveAttach
PUBLIC	?RemoveAllAttach@CFlyingData@@QAEXXZ		; CFlyingData::RemoveAllAttach
PUBLIC	?__Initialize@CFlyingData@@IAEXXZ		; CFlyingData::__Initialize
PUBLIC	?deallocate@?$allocator@UTFlyingAttachData@CFlyingData@@@std@@QAEXQAUTFlyingAttachData@CFlyingData@@I@Z ; std::allocator<CFlyingData::TFlyingAttachData>::deallocate
PUBLIC	??1?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAE@XZ ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::~vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >
PUBLIC	?_Destroy@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@AAEXPAUTFlyingAttachData@CFlyingData@@0@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Destroy
PUBLIC	?_Xlength@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@CAXXZ ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Xlength
PUBLIC	??_GCFlyingData@@UAEPAXI@Z			; CFlyingData::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ	; CDynamicPool<CFlyingData>::~CDynamicPool<CFlyingData>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Const_cast@$$CBUTFlyingAttachData@CFlyingData@@@std@@YAPAUTFlyingAttachData@CFlyingData@@PBU12@@Z ; std::_Const_cast<CFlyingData::TFlyingAttachData const >
PUBLIC	??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>
PUBLIC	??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCFlyingData@@@std@@@std@@YAXPAPAVCFlyingData@@QAPAV1@AAV?$allocator@PAVCFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Uninitialized_move<CFlyingData::TFlyingAttachData *,std::allocator<CFlyingData::TFlyingAttachData> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A ; CFlyingData::ms_kPool
PUBLIC	??_7CFlyingData@@6B@				; CFlyingData::`vftable'
PUBLIC	??_C@_0O@NBBBNDDO@spreadingflag@		; `string'
PUBLIC	??_C@_0BF@IJDOJCHL@maintainparallelflag@	; `string'
PUBLIC	??_C@_0BA@HEDAMPDI@initialvelocity@		; `string'
PUBLIC	??_C@_09KDIMMAIL@coneangle@			; `string'
PUBLIC	??_C@_09LMFNGIPD@rollangle@			; `string'
PUBLIC	??_C@_0BA@LAOKBKDJ@angularvelocity@		; `string'
PUBLIC	??_C@_07GFBFDLBM@gravity@			; `string'
PUBLIC	??_C@_0BA@KECLBPOM@hitonbackground@		; `string'
PUBLIC	??_C@_0BE@CFEKODPK@hitonanothermonster@		; `string'
PUBLIC	??_C@_0M@CFHBGHLK@piercecount@			; `string'
PUBLIC	??_C@_09HBCJNFFH@bombrange@			; `string'
PUBLIC	??_C@_0L@JPKFDMHA@bombeffect@			; `string'
PUBLIC	??_C@_0L@PGFICFIL@homingflag@			; `string'
PUBLIC	??_C@_0BA@BAKAIINA@homingstarttime@		; `string'
PUBLIC	??_C@_0P@MGJJCPHI@homingmaxangle@		; `string'
PUBLIC	??_C@_05CCGOGOBM@range@				; `string'
PUBLIC	??_C@_0N@OKFAMOHD@acceleration@			; `string'
PUBLIC	??_C@_0L@NFEBBADL@attachdata@			; `string'
PUBLIC	??_C@_04GPMDFGEJ@type@				; `string'
PUBLIC	??_C@_07LKHMKNJJ@flytype@			; `string'
PUBLIC	??_C@_0L@BMGMFMHI@attachfile@			; `string'
PUBLIC	??_C@_08MNMLIJJL@tailflag@			; `string'
PUBLIC	??_C@_09JBANPIDH@tailcolor@			; `string'
PUBLIC	??_C@_0L@PJCCBNOK@taillength@			; `string'
PUBLIC	??_C@_08HAFAEPEI@tailsize@			; `string'
PUBLIC	??_C@_0O@DNCKGFAO@tailshaperect@		; `string'
PUBLIC	??_C@_04FBAPEKPH@roll@				; `string'
PUBLIC	??_C@_08LHFODBFO@distance@			; `string'
PUBLIC	??_C@_06FBOEEHNL@period@			; `string'
PUBLIC	??_C@_09EHCGJNBI@amplitude@			; `string'
PUBLIC	??_C@_0CM@NJMDEMJE@CFlyingData?3?3LoadScriptFile?5Wro@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_0BM@EKJFFBKN@SpreadingFlag?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@NGIIEBBO@MaintainParallelFlag?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@HFDPOBJA@InitialVelocity?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@GGIANCOJ@ConeAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@OAKALGPC@RollAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0CC@LMNGANIH@AngularVelocity?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@ ; `string'
PUBLIC	??_C@_0BM@GMCHDOFC@Gravity?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@MIBEIPGM@HitOnBackground?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@DIMAIAMO@HitOnAnotherMonster?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@KJEBPHJO@PierceCount?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@BLFFPBNI@CollisionSphereRadius?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@PKMAPKGM@BombRange?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BO@BNDAHANN@BombEffect?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BM@BPPBPLIE@HomingFlag?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BM@DFAFEFEK@HomingStartTime?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@DJOJIKLN@HomingMaxAngle?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BM@JPLBDGMP@Range?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0CC@KJGNOCOO@Acceleration?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@ ; `string'
PUBLIC	??_C@_0BC@HICIMFMI@Group?5AttachData?6@		; `string'
PUBLIC	??_C@_02KCPFEJNG@?$HL?6@			; `string'
PUBLIC	??_C@_0BC@FDNPIKOA@Type?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BC@BLGHHPCB@FlyType?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BE@KGOGOAGA@AttachFile?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BC@OICNGABA@TailFlag?5?5?5?5?5?5?$CFd?6@	; `string'
PUBLIC	??_C@_0BD@GDEIOKGL@TailColor?5?5?5?5?5?$CFud?6@	; `string'
PUBLIC	??_C@_0BC@BJCKHMFB@TailLength?5?5?5?5?$CFf?6@	; `string'
PUBLIC	??_C@_0BC@DBHBKFFP@TailSize?5?5?5?5?5?5?$CFf?6@	; `string'
PUBLIC	??_C@_0BC@GIAPEHPE@TailShapeRect?5?$CFd?6@	; `string'
PUBLIC	??_C@_0BC@NJDFDGEH@Roll?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BC@MGMHDAIP@Distance?5?5?5?5?5?5?$CFf?6@	; `string'
PUBLIC	??_C@_0BC@HBPGEMBJ@Period?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BC@BECPBEGP@Amplitude?5?5?5?5?5?$CFf?6@	; `string'
PUBLIC	??_C@_02KGHIDFGE@?$HN?6@			; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CFlyingData@@6B@				; CFlyingData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFlyingData@@@8				; CFlyingData `RTTI Type Descriptor'
PUBLIC	??_R3CFlyingData@@8				; CFlyingData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFlyingData@@8				; CFlyingData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFlyingData@@8			; CFlyingData::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetOnlyPathName@@YAPBDPBD@Z:PROC		; GetOnlyPathName
EXTRN	?GetLocalFileName@@YA_NPBD0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; GetLocalFileName
EXTRN	?StringPath@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; StringPath
EXTRN	?StringPath@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; StringPath
EXTRN	?IsGlobalFileName@@YA_NPBD@Z:PROC		; IsGlobalFileName
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ:PROC		; PrintfTabs
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?GetFileName@CTextFileLoader@@QAEPBDXZ:PROC	; CTextFileLoader::GetFileName
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?GetChildNodeCount@CTextFileLoader@@QAEKXZ:PROC	; CTextFileLoader::GetChildNodeCount
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CTextFileLoader::GetCurrentNodeName
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenVector3
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z:PROC ; CEffectManager::RegisterEffect2
EXTRN	??_ECFlyingData@@UAEPAXI@Z:PROC			; CFlyingData::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CFlyingData@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CFlyingData@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CFlyingData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFlyingData@@8 DD FLAT:??_R0?AVCFlyingData@@@8 ; CFlyingData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFlyingData@@8
rdata$r	ENDS
;	COMDAT ??_R2CFlyingData@@8
rdata$r	SEGMENT
??_R2CFlyingData@@8 DD FLAT:??_R1A@?0A@EA@CFlyingData@@8 ; CFlyingData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFlyingData@@8
rdata$r	SEGMENT
??_R3CFlyingData@@8 DD 00H				; CFlyingData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFlyingData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFlyingData@@@8
data$r	SEGMENT
??_R0?AVCFlyingData@@@8 DD FLAT:??_7type_info@@6B@	; CFlyingData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFlyingData@@', 00H
data$r	ENDS
;	COMDAT ??_R4CFlyingData@@6B@
rdata$r	SEGMENT
??_R4CFlyingData@@6B@ DD 00H				; CFlyingData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFlyingData@@@8
	DD	FLAT:??_R3CFlyingData@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KGHIDFGE@?$HN?6@
CONST	SEGMENT
??_C@_02KGHIDFGE@?$HN?6@ DB '}', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BECPBEGP@Amplitude?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@BECPBEGP@Amplitude?5?5?5?5?5?$CFf?6@ DB 'Amplitude     %f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HBPGEMBJ@Period?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@HBPGEMBJ@Period?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Period        %f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MGMHDAIP@Distance?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@MGMHDAIP@Distance?5?5?5?5?5?5?$CFf?6@ DB 'Distance      %f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NJDFDGEH@Roll?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@NJDFDGEH@Roll?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Roll          %f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GIAPEHPE@TailShapeRect?5?$CFd?6@
CONST	SEGMENT
??_C@_0BC@GIAPEHPE@TailShapeRect?5?$CFd?6@ DB 'TailShapeRect %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DBHBKFFP@TailSize?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@DBHBKFFP@TailSize?5?5?5?5?5?5?$CFf?6@ DB 'TailSize      %f', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BJCKHMFB@TailLength?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BC@BJCKHMFB@TailLength?5?5?5?5?$CFf?6@ DB 'TailLength    %f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDEIOKGL@TailColor?5?5?5?5?5?$CFud?6@
CONST	SEGMENT
??_C@_0BD@GDEIOKGL@TailColor?5?5?5?5?5?$CFud?6@ DB 'TailColor     %ud', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OICNGABA@TailFlag?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BC@OICNGABA@TailFlag?5?5?5?5?5?5?$CFd?6@ DB 'TailFlag      %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KGOGOAGA@AttachFile?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BE@KGOGOAGA@AttachFile?5?5?5?5?$CC?$CFs?$CC?6@ DB 'AttachFile    "'
	DB	'%s"', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLGHHPCB@FlyType?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BC@BLGHHPCB@FlyType?5?5?5?5?5?5?5?$CFd?6@ DB 'FlyType       %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FDNPIKOA@Type?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BC@FDNPIKOA@Type?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Type          %d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCPFEJNG@?$HL?6@
CONST	SEGMENT
??_C@_02KCPFEJNG@?$HL?6@ DB '{', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HICIMFMI@Group?5AttachData?6@
CONST	SEGMENT
??_C@_0BC@HICIMFMI@Group?5AttachData?6@ DB 'Group AttachData', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KJGNOCOO@Acceleration?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@
CONST	SEGMENT
??_C@_0CC@KJGNOCOO@Acceleration?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@ DB 'A'
	DB	'cceleration            %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JPLBDGMP@Range?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@JPLBDGMP@Range?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'R'
	DB	'ange                   %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DJOJIKLN@HomingMaxAngle?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@DJOJIKLN@HomingMaxAngle?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'HomingM'
	DB	'axAngle          %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DFAFEFEK@HomingStartTime?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@DFAFEFEK@HomingStartTime?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'HomingSt'
	DB	'artTime         %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BPPBPLIE@HomingFlag?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@BPPBPLIE@HomingFlag?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Hom'
	DB	'ingFlag              %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BNDAHANN@BombEffect?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BO@BNDAHANN@BombEffect?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'B'
	DB	'ombEffect              "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PKMAPKGM@BombRange?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@PKMAPKGM@BombRange?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Bo'
	DB	'mbRange               %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BLFFPBNI@CollisionSphereRadius?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@BLFFPBNI@CollisionSphereRadius?5?5?5?$CFf?6@ DB 'CollisionSpher'
	DB	'eRadius   %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KJEBPHJO@PierceCount?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@KJEBPHJO@PierceCount?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Pier'
	DB	'ceCount             %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DIMAIAMO@HitOnAnotherMonster?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@DIMAIAMO@HitOnAnotherMonster?5?5?5?5?5?$CFd?6@ DB 'HitOnAnother'
	DB	'Monster     %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MIBEIPGM@HitOnBackground?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@MIBEIPGM@HitOnBackground?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HitOnBac'
	DB	'kground         %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMCHDOFC@Gravity?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@GMCHDOFC@Gravity?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'G'
	DB	'ravity                 %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LMNGANIH@AngularVelocity?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@
CONST	SEGMENT
??_C@_0CC@LMNGANIH@AngularVelocity?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@ DB 'A'
	DB	'ngularVelocity         %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAKALGPC@RollAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@OAKALGPC@RollAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Ro'
	DB	'llAngle               %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GGIANCOJ@ConeAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@GGIANCOJ@ConeAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Co'
	DB	'neAngle               %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HFDPOBJA@InitialVelocity?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@HFDPOBJA@InitialVelocity?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'InitialV'
	DB	'elocity         %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NGIIEBBO@MaintainParallelFlag?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@NGIIEBBO@MaintainParallelFlag?5?5?5?5?$CFd?6@ DB 'MaintainParal'
	DB	'lelFlag    %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EKJFFBKN@SpreadingFlag?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BM@EKJFFBKN@SpreadingFlag?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Spread'
	DB	'ingFlag           %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@NJMDEMJE@CFlyingData?3?3LoadScriptFile?5Wro@
CONST	SEGMENT
??_C@_0CM@NJMDEMJE@CFlyingData?3?3LoadScriptFile?5Wro@ DB 'CFlyingData::L'
	DB	'oadScriptFile Wrong Data : %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EHCGJNBI@amplitude@
CONST	SEGMENT
??_C@_09EHCGJNBI@amplitude@ DB 'amplitude', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBOEEHNL@period@
CONST	SEGMENT
??_C@_06FBOEEHNL@period@ DB 'period', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LHFODBFO@distance@
CONST	SEGMENT
??_C@_08LHFODBFO@distance@ DB 'distance', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FBAPEKPH@roll@
CONST	SEGMENT
??_C@_04FBAPEKPH@roll@ DB 'roll', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DNCKGFAO@tailshaperect@
CONST	SEGMENT
??_C@_0O@DNCKGFAO@tailshaperect@ DB 'tailshaperect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HAFAEPEI@tailsize@
CONST	SEGMENT
??_C@_08HAFAEPEI@tailsize@ DB 'tailsize', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJCCBNOK@taillength@
CONST	SEGMENT
??_C@_0L@PJCCBNOK@taillength@ DB 'taillength', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JBANPIDH@tailcolor@
CONST	SEGMENT
??_C@_09JBANPIDH@tailcolor@ DB 'tailcolor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MNMLIJJL@tailflag@
CONST	SEGMENT
??_C@_08MNMLIJJL@tailflag@ DB 'tailflag', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMGMFMHI@attachfile@
CONST	SEGMENT
??_C@_0L@BMGMFMHI@attachfile@ DB 'attachfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKHMKNJJ@flytype@
CONST	SEGMENT
??_C@_07LKHMKNJJ@flytype@ DB 'flytype', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type@ DB 'type', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NFEBBADL@attachdata@
CONST	SEGMENT
??_C@_0L@NFEBBADL@attachdata@ DB 'attachdata', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKFAMOHD@acceleration@
CONST	SEGMENT
??_C@_0N@OKFAMOHD@acceleration@ DB 'acceleration', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCGOGOBM@range@
CONST	SEGMENT
??_C@_05CCGOGOBM@range@ DB 'range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGJJCPHI@homingmaxangle@
CONST	SEGMENT
??_C@_0P@MGJJCPHI@homingmaxangle@ DB 'homingmaxangle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BAKAIINA@homingstarttime@
CONST	SEGMENT
??_C@_0BA@BAKAIINA@homingstarttime@ DB 'homingstarttime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PGFICFIL@homingflag@
CONST	SEGMENT
??_C@_0L@PGFICFIL@homingflag@ DB 'homingflag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JPKFDMHA@bombeffect@
CONST	SEGMENT
??_C@_0L@JPKFDMHA@bombeffect@ DB 'bombeffect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBCJNFFH@bombrange@
CONST	SEGMENT
??_C@_09HBCJNFFH@bombrange@ DB 'bombrange', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFHBGHLK@piercecount@
CONST	SEGMENT
??_C@_0M@CFHBGHLK@piercecount@ DB 'piercecount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CFEKODPK@hitonanothermonster@
CONST	SEGMENT
??_C@_0BE@CFEKODPK@hitonanothermonster@ DB 'hitonanothermonster', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KECLBPOM@hitonbackground@
CONST	SEGMENT
??_C@_0BA@KECLBPOM@hitonbackground@ DB 'hitonbackground', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GFBFDLBM@gravity@
CONST	SEGMENT
??_C@_07GFBFDLBM@gravity@ DB 'gravity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAOKBKDJ@angularvelocity@
CONST	SEGMENT
??_C@_0BA@LAOKBKDJ@angularvelocity@ DB 'angularvelocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LMFNGIPD@rollangle@
CONST	SEGMENT
??_C@_09LMFNGIPD@rollangle@ DB 'rollangle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KDIMMAIL@coneangle@
CONST	SEGMENT
??_C@_09KDIMMAIL@coneangle@ DB 'coneangle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HEDAMPDI@initialvelocity@
CONST	SEGMENT
??_C@_0BA@HEDAMPDI@initialvelocity@ DB 'initialvelocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IJDOJCHL@maintainparallelflag@
CONST	SEGMENT
??_C@_0BF@IJDOJCHL@maintainparallelflag@ DB 'maintainparallelflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NBBBNDDO@spreadingflag@
CONST	SEGMENT
??_C@_0O@NBBBNDDO@spreadingflag@ DB 'spreadingflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CFlyingData@@6B@
CONST	SEGMENT
??_7CFlyingData@@6B@ DD FLAT:??_R4CFlyingData@@6B@	; CFlyingData::`vftable'
	DD	FLAT:??_ECFlyingData@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A DD FLAT:??_7?$CDynamicPool@VCFlyingData@@@@6B@ ; CFlyingData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z$0
__unwindtable$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z$0
__ehfuncinfo$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z$1
__ehfuncinfo$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z DD 019930522H
	DD	023H
	DD	FLAT:__unwindtable$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$16
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$19
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$20
	DD	013H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$21
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$22
	DD	00H
	DD	FLAT:___std_terminate
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$23
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$24
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$26
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$27
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$28
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$29
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$30
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$31
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$32
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$33
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$34
	DD	00H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CFlyingData@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFlyingData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFlyingData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CFlyingData@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CFlyingData@@QAE@XZ$2
__ehfuncinfo$??0CFlyingData@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CFlyingData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z PROC ; std::_Uninitialized_move<CFlyingData::TFlyingAttachData *,std::allocator<CFlyingData::TFlyingAttachData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  0000a	57		 push	 edi

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	3b c7		 cmp	 eax, edi
  00010	0f 84 91 00 00
	00		 je	 $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00016	8b d6		 mov	 edx, esi
  00018	8d 48 1c	 lea	 ecx, DWORD PTR [eax+28]
  0001b	2b d0		 sub	 edx, eax
  0001d	0f 1f 00	 npad	 3
$LL4@Uninitiali:
  00020	8b 41 e4	 mov	 eax, DWORD PTR [ecx-28]

; 1509 :         ++_Last;

  00023	8d 49 44	 lea	 ecx, DWORD PTR [ecx+68]
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	8b 41 a4	 mov	 eax, DWORD PTR [ecx-92]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0002b	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00032	c7 44 0a bc 00
	00 00 00	 mov	 DWORD PTR [edx+ecx-68], 0
  0003a	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0003d	0f 10 41 a8	 movups	 xmm0, XMMWORD PTR [ecx-88]
  00041	0f 11 46 08	 movups	 XMMWORD PTR [esi+8], xmm0
  00045	f3 0f 7e 41 b8	 movq	 xmm0, QWORD PTR [ecx-72]
  0004a	66 0f d6 46 18	 movq	 QWORD PTR [esi+24], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0004f	c7 41 b8 00 00
	00 00		 mov	 DWORD PTR [ecx-72], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00056	c7 41 bc 0f 00
	00 00		 mov	 DWORD PTR [ecx-68], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005d	c6 41 a8 00	 mov	 BYTE PTR [ecx-88], 0
  00061	0f b6 41 c0	 movzx	 eax, BYTE PTR [ecx-64]
  00065	88 46 20	 mov	 BYTE PTR [esi+32], al
  00068	8b 41 c4	 mov	 eax, DWORD PTR [ecx-60]
  0006b	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0006e	8b 41 c8	 mov	 eax, DWORD PTR [ecx-56]
  00071	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00074	8b 41 cc	 mov	 eax, DWORD PTR [ecx-52]
  00077	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  0007a	0f b6 41 d0	 movzx	 eax, BYTE PTR [ecx-48]
  0007e	88 46 30	 mov	 BYTE PTR [esi+48], al
  00081	8b 41 d4	 mov	 eax, DWORD PTR [ecx-44]
  00084	89 46 34	 mov	 DWORD PTR [esi+52], eax
  00087	8b 41 d8	 mov	 eax, DWORD PTR [ecx-40]
  0008a	89 46 38	 mov	 DWORD PTR [esi+56], eax
  0008d	8b 41 dc	 mov	 eax, DWORD PTR [ecx-36]
  00090	89 46 3c	 mov	 DWORD PTR [esi+60], eax
  00093	8b 41 e0	 mov	 eax, DWORD PTR [ecx-32]
  00096	89 46 40	 mov	 DWORD PTR [esi+64], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00099	8d 41 e4	 lea	 eax, DWORD PTR [ecx-28]

; 1509 :         ++_Last;

  0009c	83 c6 44	 add	 esi, 68			; 00000044H

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0009f	3b c7		 cmp	 eax, edi
  000a1	0f 85 79 ff ff
	ff		 jne	 $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  000a7	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  000aa	56		 push	 esi
  000ab	56		 push	 esi
  000ac	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  000b4	8b c6		 mov	 eax, esi
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi

; 1664 :     }
; 1665 : }

  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ENDP ; std::_Uninitialized_move<CFlyingData::TFlyingAttachData *,std::allocator<CFlyingData::TFlyingAttachData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCFlyingData@@@std@@@std@@YAXPAPAVCFlyingData@@QAPAV1@AAV?$allocator@PAVCFlyingData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCFlyingData@@@std@@@std@@YAXPAPAVCFlyingData@@QAPAV1@AAV?$allocator@PAVCFlyingData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CFlyingData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCFlyingData@@@std@@@std@@YAXPAPAVCFlyingData@@QAPAV1@AAV?$allocator@PAVCFlyingData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CFlyingData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 1c	 add	 esi, 28			; 0000001cH
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 44	 add	 esi, 68			; 00000044H
  0003a	8d 46 e4	 lea	 eax, DWORD PTR [esi-28]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Newvec$ = -44						; size = 4
_this$ = -40						; size = 4
tv383 = -36						; size = 4
tv384 = -32						; size = 4
__Newsize$1$ = -28					; size = 4
__Newcapacity$ = -24					; size = 4
__Whereoff$1$ = -20					; size = 4
__Constructed_last$ = -20				; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z PROC ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d d8	 mov	 DWORD PTR _this$[ebp], edi

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00032	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  00037	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003d	2b d3		 sub	 edx, ebx
  0003f	f7 ea		 imul	 edx
  00041	2b cb		 sub	 ecx, ebx
  00043	c1 fa 05	 sar	 edx, 5
  00046	8b c2		 mov	 eax, edx
  00048	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004b	03 c2		 add	 eax, edx
  0004d	89 45 ec	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  00050	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  00055	f7 e9		 imul	 ecx
  00057	c1 fa 05	 sar	 edx, 5
  0005a	8b f2		 mov	 esi, edx
  0005c	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0005f	03 f2		 add	 esi, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  00061	81 fe c3 c3 c3
	03		 cmp	 esi, 63161283		; 03c3c3c3H
  00067	0f 84 49 01 00
	00		 je	 $LN42@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0006d	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00070	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  00075	2b cb		 sub	 ecx, ebx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00077	46		 inc	 esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00078	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0007a	b8 c3 c3 c3 03	 mov	 eax, 63161283		; 03c3c3c3H

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0007f	89 75 e4	 mov	 DWORD PTR __Newsize$1$[ebp], esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00082	c1 fa 05	 sar	 edx, 5
  00085	8b ca		 mov	 ecx, edx
  00087	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0008a	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0008c	8b d1		 mov	 edx, ecx
  0008e	d1 ea		 shr	 edx, 1
  00090	2b c2		 sub	 eax, edx
  00092	3b c8		 cmp	 ecx, eax
  00094	76 07		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00096	8b c6		 mov	 eax, esi
  00098	89 75 e8	 mov	 DWORD PTR __Newcapacity$[ebp], esi
  0009b	eb 0b		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0009d	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  000a0	3b c6		 cmp	 eax, esi
  000a2	0f 42 c6	 cmovb	 eax, esi
  000a5	89 45 e8	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000a8	3d c3 c3 c3 03	 cmp	 eax, 63161283		; 03c3c3c3H
  000ad	0f 87 08 01 00
	00		 ja	 $LN43@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b3	8b c8		 mov	 ecx, eax
  000b5	c1 e1 04	 shl	 ecx, 4
  000b8	03 c8		 add	 ecx, eax
  000ba	c1 e1 02	 shl	 ecx, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	51		 push	 ecx

; 65   :     return _Count * _Ty_size;

  000be	89 4d e0	 mov	 DWORD PTR tv384[ebp], ecx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c1	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000c6	ff 75 0c	 push	 DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c9	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 748  :         _TRY_BEGIN

  000cb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000d2	8b 45 ec	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000d5	c1 e0 04	 shl	 eax, 4
  000d8	03 45 ec	 add	 eax, DWORD PTR __Whereoff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000db	89 5d d4	 mov	 DWORD PTR __Newvec$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000de	8d 0c 83	 lea	 ecx, DWORD PTR [ebx+eax*4]

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000e1	51		 push	 ecx
  000e2	8d 41 44	 lea	 eax, DWORD PTR [ecx+68]
  000e5	89 4d dc	 mov	 DWORD PTR tv383[ebp], ecx
  000e8	57		 push	 edi
  000e9	89 45 ec	 mov	 DWORD PTR __Constructed_last$[ebp], eax
  000ec	e8 00 00 00 00	 call	 ??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>

; 750  :         _Constructed_first = _Newvec + _Whereoff;
; 751  : 
; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000f1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
  000f7	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  000fa	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000fc	3b d0		 cmp	 edx, eax
  000fe	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00100	8b d3		 mov	 edx, ebx

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00102	eb 15		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00104	57		 push	 edi
  00105	53		 push	 ebx
  00106	52		 push	 edx
  00107	51		 push	 ecx
  00108	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Uninitialized_move<CFlyingData::TFlyingAttachData *,std::allocator<CFlyingData::TFlyingAttachData> >
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00110	83 c4 10	 add	 esp, 16			; 00000010H
  00113	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00116	8b 55 ec	 mov	 edx, DWORD PTR __Constructed_last$[ebp]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00119	57		 push	 edi
  0011a	52		 push	 edx
  0011b	50		 push	 eax
  0011c	51		 push	 ecx
  0011d	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAPAUTFlyingAttachData@CFlyingData@@QAU12@0PAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Uninitialized_move<CFlyingData::TFlyingAttachData *,std::allocator<CFlyingData::TFlyingAttachData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00122	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00124	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00127	85 c9		 test	 ecx, ecx
  00129	74 39		 je	 SHORT $LN33@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0012b	57		 push	 edi
  0012c	ff 77 04	 push	 DWORD PTR [edi+4]
  0012f	51		 push	 ecx
  00130	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00135	8b 37		 mov	 esi, DWORD PTR [edi]
  00137	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  0013c	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0013f	2b ce		 sub	 ecx, esi
  00141	f7 e9		 imul	 ecx
  00143	c1 fa 05	 sar	 edx, 5
  00146	8b ca		 mov	 ecx, edx
  00148	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0014b	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0014d	8b c1		 mov	 eax, ecx
  0014f	c1 e0 04	 shl	 eax, 4
  00152	03 c1		 add	 eax, ecx
  00154	c1 e0 02	 shl	 eax, 2
  00157	50		 push	 eax
  00158	56		 push	 esi
  00159	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0015e	8b 75 e4	 mov	 esi, DWORD PTR __Newsize$1$[ebp]
  00161	83 c4 14	 add	 esp, 20			; 00000014H
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  00164	8b 45 dc	 mov	 eax, DWORD PTR tv383[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00167	8b ce		 mov	 ecx, esi
  00169	c1 e1 04	 shl	 ecx, 4
  0016c	03 ce		 add	 ecx, esi
  0016e	89 1f		 mov	 DWORD PTR [edi], ebx
  00170	8d 0c 8b	 lea	 ecx, DWORD PTR [ebx+ecx*4]
  00173	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00176	8b 4d e0	 mov	 ecx, DWORD PTR tv384[ebp]
  00179	03 cb		 add	 ecx, ebx
  0017b	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 767  :     }

  0017e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00181	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00188	59		 pop	 ecx
  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z$0:

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  00192	8b 45 ec	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  00195	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	50		 push	 eax
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@AAEXPAUTFlyingAttachData@CFlyingData@@0@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  0019f	ff 75 e8	 push	 DWORD PTR __Newcapacity$[ebp]
  001a2	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	ff 75 d4	 push	 DWORD PTR __Newvec$[ebp]
  001a8	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UTFlyingAttachData@CFlyingData@@@std@@QAEXQAUTFlyingAttachData@CFlyingData@@I@Z ; std::allocator<CFlyingData::TFlyingAttachData>::deallocate

; 762  :         _RERAISE;

  001ad	6a 00		 push	 0
  001af	6a 00		 push	 0
  001b1	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN42@Emplace_re:

; 738  :             _Xlength();

  001b6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@CAXXZ ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Xlength
$LN43@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001bb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN40@Emplace_re:
  001c0	cc		 int	 3
  001c1	cc		 int	 3
  001c2	cc		 int	 3
  001c3	cc		 int	 3
  001c4	cc		 int	 3
  001c5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z ENDP ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
___formal$ = 8						; size = 4
__Right_size$1$ = 12					; size = 4
__Ptr$ = 12						; size = 4
__Result$1$ = 16					; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>, COMDAT

; 693  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Ptr$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 10	 mov	 edi, DWORD PTR _<_Args_0>$[ebp]
  0000e	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00011	8b 07		 mov	 eax, DWORD PTR [edi]
  00013	89 03		 mov	 DWORD PTR [ebx], eax
  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2655 :         auto& _Right_data             = _Right._Mypair._Myval2;

  0001b	8d 47 08	 lea	 eax, DWORD PTR [edi+8]

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0001e	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00025	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0002c	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00030	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00033	89 45 10	 mov	 DWORD PTR __Result$1$[ebp], eax
  00036	89 55 0c	 mov	 DWORD PTR __Right_size$1$[ebp], edx

; 2145 :         if (_Large_string_engaged()) {

  00039	72 05		 jb	 SHORT $LN16@construct

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	89 45 10	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN16@construct:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00040	83 fa 10	 cmp	 edx, 16			; 00000010H
  00043	73 0d		 jae	 SHORT $LN13@construct

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00045	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00048	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0004d	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0

; 2663 :             return;

  00050	eb 47		 jmp	 SHORT $LN12@construct
$LN13@construct:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00052	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00054	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00059	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0005c	3b c1		 cmp	 eax, ecx
  0005e	56		 push	 esi
  0005f	0f 47 c1	 cmova	 eax, ecx
  00062	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00065	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0006c	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  0006e	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00071	50		 push	 eax
  00072	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00075	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0007e	8b 4d 0c	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00081	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00082	51		 push	 ecx
  00083	ff 75 10	 push	 DWORD PTR __Result$1$[ebp]
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 _memcpy
  0008c	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 2672 :         _My_data._Myres  = _New_capacity;

  0008f	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  00092	8b 55 0c	 mov	 edx, DWORD PTR __Right_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00095	83 c4 18	 add	 esp, 24			; 00000018H

; 2672 :         _My_data._Myres  = _New_capacity;

  00098	5e		 pop	 esi
$LN12@construct:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 695  :     }

  00099	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0009c	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0009f	0f b6 47 20	 movzx	 eax, BYTE PTR [edi+32]
  000a3	88 43 20	 mov	 BYTE PTR [ebx+32], al
  000a6	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  000a9	89 43 24	 mov	 DWORD PTR [ebx+36], eax
  000ac	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  000af	89 43 28	 mov	 DWORD PTR [ebx+40], eax
  000b2	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  000b5	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
  000b8	0f b6 47 30	 movzx	 eax, BYTE PTR [edi+48]
  000bc	88 43 30	 mov	 BYTE PTR [ebx+48], al
  000bf	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  000c2	89 43 34	 mov	 DWORD PTR [ebx+52], eax
  000c5	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  000c8	89 43 38	 mov	 DWORD PTR [ebx+56], eax
  000cb	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  000ce	89 43 3c	 mov	 DWORD PTR [ebx+60], eax
  000d1	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  000d4	5f		 pop	 edi
  000d5	89 43 40	 mov	 DWORD PTR [ebx+64], eax
  000d8	5b		 pop	 ebx
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Const_cast@$$CBUTFlyingAttachData@CFlyingData@@@std@@YAPAUTFlyingAttachData@CFlyingData@@PBU12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Const_cast@$$CBUTFlyingAttachData@CFlyingData@@@std@@YAPAUTFlyingAttachData@CFlyingData@@PBU12@@Z PROC ; std::_Const_cast<CFlyingData::TFlyingAttachData const >, COMDAT

; 282  : auto _Const_cast(_Ty* _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 283  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 284  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Const_cast@$$CBUTFlyingAttachData@CFlyingData@@@std@@YAPAUTFlyingAttachData@CFlyingData@@PBU12@@Z ENDP ; std::_Const_cast<CFlyingData::TFlyingAttachData const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4480 : _NODISCARD bool operator==(const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]

; 4480 : _NODISCARD bool operator==(const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

  00007	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00008	8b fe		 mov	 edi, esi
  0000a	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0000d	0f 1f 00	 npad	 3
$LL18@operator:
  00010	8a 07		 mov	 al, BYTE PTR [edi]
  00012	47		 inc	 edi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL18@operator

; 2144 :         const value_type* _Result = _Bx._Buf;

  00017	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b f9		 sub	 edi, ecx

; 2144 :         const value_type* _Result = _Bx._Buf;

  0001c	8b ca		 mov	 ecx, edx

; 2153 :         return _BUF_SIZE <= _Myres;

  0001e	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00022	72 02		 jb	 SHORT $LN8@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00024	8b 0a		 mov	 ecx, DWORD PTR [edx]
$LN8@operator:

; 4096 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00026	8b 52 10	 mov	 edx, DWORD PTR [edx+16]

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00029	3b d7		 cmp	 edx, edi
  0002b	75 5b		 jne	 SHORT $LN14@operator

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0002d	83 ea 04	 sub	 edx, 4
  00030	72 11		 jb	 SHORT $LN21@operator
$LL22@operator:
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	3b 06		 cmp	 eax, DWORD PTR [esi]
  00036	75 10		 jne	 SHORT $LN20@operator
  00038	83 c1 04	 add	 ecx, 4
  0003b	83 c6 04	 add	 esi, 4
  0003e	83 ea 04	 sub	 edx, 4
  00041	73 ef		 jae	 SHORT $LL22@operator
$LN21@operator:
  00043	83 fa fc	 cmp	 edx, -4			; fffffffcH
  00046	74 34		 je	 SHORT $LN19@operator
$LN20@operator:
  00048	8a 01		 mov	 al, BYTE PTR [ecx]
  0004a	3a 06		 cmp	 al, BYTE PTR [esi]
  0004c	75 27		 jne	 SHORT $LN23@operator
  0004e	83 fa fd	 cmp	 edx, -3			; fffffffdH
  00051	74 29		 je	 SHORT $LN19@operator
  00053	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00056	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00059	75 1a		 jne	 SHORT $LN23@operator
  0005b	83 fa fe	 cmp	 edx, -2			; fffffffeH
  0005e	74 1c		 je	 SHORT $LN19@operator
  00060	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00063	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00066	75 0d		 jne	 SHORT $LN23@operator
  00068	83 fa ff	 cmp	 edx, -1
  0006b	74 0f		 je	 SHORT $LN19@operator
  0006d	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  00070	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00073	74 07		 je	 SHORT $LN19@operator
$LN23@operator:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
  0007a	eb 02		 jmp	 SHORT $LN24@operator
$LN19@operator:
  0007c	33 c0		 xor	 eax, eax
$LN24@operator:

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0007e	85 c0		 test	 eax, eax
  00080	75 06		 jne	 SHORT $LN14@operator
  00082	5f		 pop	 edi
  00083	b0 01		 mov	 al, 1

; 4481 :     return _Left._Equal(_Right);
; 4482 : }

  00085	5e		 pop	 esi
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN14@operator:
  00088	5f		 pop	 edi

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00089	32 c0		 xor	 al, al

; 4481 :     return _Left._Equal(_Right);
; 4482 : }

  0008b	5e		 pop	 esi
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z
_TEXT	SEGMENT
__Right_size$1$ = -12					; size = 4
__Fancyptr$1 = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Ptr$1$ = 16						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4372 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Left$[ebp]

; 4372 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  0000b	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0000f	90		 npad	 1
$LL34@operator:
  00010	8a 06		 mov	 al, BYTE PTR [esi]
  00012	46		 inc	 esi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL34@operator

; 4373 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4374 :     const auto _Left_size  = _Convert_size<_Size_type>(_Traits::length(_Left));
; 4375 :     const auto _Right_size = _Right.size();

  00017	8b 5d 10	 mov	 ebx, DWORD PTR __Right$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b f1		 sub	 esi, ecx

; 4376 :     if (_Right.max_size() - _Right_size < _Left_size) {

  0001c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00021	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00024	2b c1		 sub	 eax, ecx
  00026	89 4d f4	 mov	 DWORD PTR __Right_size$1$[ebp], ecx
  00029	3b c6		 cmp	 eax, esi
  0002b	0f 82 a0 00 00
	00		 jb	 $LN37@operator

; 2153 :         return _BUF_SIZE <= _Myres;

  00031	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00035	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00037	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@operator:

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2447 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003c	03 ce		 add	 ecx, esi

; 2448 :         size_type _New_capacity = _BUF_SIZE - 1;

  0003e	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00043	89 4d fc	 mov	 DWORD PTR __New_size$1$[ebp], ecx

; 2449 :         auto& _My_data          = _Mypair._Myval2;
; 2450 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00046	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00049	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  00050	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2453 :         if (_New_capacity < _New_size) {

  00057	3b cf		 cmp	 ecx, edi
  00059	76 42		 jbe	 SHORT $LN16@operator

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0005b	8b f9		 mov	 edi, ecx
  0005d	83 cf 0f	 or	 edi, 15			; 0000000fH
  00060	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00066	76 07		 jbe	 SHORT $LN23@operator

; 4203 :             return _Max;

  00068	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
  0006d	eb 0a		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0006f	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00074	3b f8		 cmp	 edi, eax
  00076	0f 42 f8	 cmovb	 edi, eax
$LN22@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00079	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00082	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  00085	89 45 f8	 mov	 DWORD PTR __Fancyptr$1[ebp], eax

; 2456 :             _Ptr                    = _Unfancy(_Fancyptr);
; 2457 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  00088	8d 45 f8	 lea	 eax, DWORD PTR __Fancyptr$1[ebp]
  0008b	50		 push	 eax
  0008c	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0008f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
$LN16@operator:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009d	56		 push	 esi
  0009e	ff 75 0c	 push	 DWORD PTR __Left$[ebp]

; 2461 :         _My_data._Myres  = _New_capacity;

  000a1	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a4	8b 7d 10	 mov	 edi, DWORD PTR __Ptr$1$[ebp]
  000a7	57		 push	 edi

; 2460 :         _My_data._Mysize = _New_size;

  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000ab	e8 00 00 00 00	 call	 _memcpy
  000b0	ff 75 f4	 push	 DWORD PTR __Right_size$1$[ebp]

; 2463 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000b3	8d 0c 37	 lea	 ecx, DWORD PTR [edi+esi]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000b6	53		 push	 ebx
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 _memcpy

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000bd	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c0	83 c4 18	 add	 esp, 24			; 00000018H

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000c3	c6 04 07 00	 mov	 BYTE PTR [edi+eax], 0

; 4378 :     }
; 4379 : 
; 4380 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

  000c7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 4381 : }

  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN37@operator:

; 4377 :         _Xlen_string();

  000d1	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN35@operator:
  000d6	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CFlyingData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A ; CFlyingData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ ; CDynamicPool<CFlyingData>::~CDynamicPool<CFlyingData>
??__F?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CFlyingData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ??__E?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CFlyingData::ms_kPool'', COMDAT

; 6    : CDynamicPool<CFlyingData> CFlyingData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CFlyingData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CFlyingData@@2V?$CDynamicPool@VCFlyingData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CFlyingData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z PROC	; CDynamicPool<CFlyingData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ ; CDynamicPool<CFlyingData>::~CDynamicPool<CFlyingData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCFlyingData@@@@UAEPAXI@Z ENDP	; CDynamicPool<CFlyingData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ PROC		; CDynamicPool<CFlyingData>::~CDynamicPool<CFlyingData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCFlyingData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCFlyingData@@@@UAE@XZ ENDP		; CDynamicPool<CFlyingData>::~CDynamicPool<CFlyingData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCFlyingData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFlyingData@@UAEPAXI@Z PROC				; CFlyingData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CFlyingData@@UAE@XZ	; CFlyingData::~CFlyingData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 90 00 00 00	 push	 144			; 00000090H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCFlyingData@@UAEPAXI@Z ENDP				; CFlyingData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@CAXXZ PROC ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@CAXXZ ENDP ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@AAEXPAUTFlyingAttachData@CFlyingData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@AAEXPAUTFlyingAttachData@CFlyingData@@0@Z PROC ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@AAEXPAUTFlyingAttachData@CFlyingData@@0@Z ENDP ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAE@XZ PROC ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::~vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 49		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 05	 sar	 edx, 5
  00022	8b ca		 mov	 ecx, edx
  00024	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00027	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8b c1		 mov	 eax, ecx
  0002b	c1 e0 04	 shl	 eax, 4
  0002e	03 c1		 add	 eax, ecx
  00030	c1 e0 02	 shl	 eax, 2
  00033	50		 push	 eax
  00034	ff 37		 push	 DWORD PTR [edi]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00041	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00044	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0004b	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  00052	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00053	c3		 ret	 0
??1?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAE@XZ ENDP ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::~vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@UTFlyingAttachData@CFlyingData@@@std@@QAEXQAUTFlyingAttachData@CFlyingData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UTFlyingAttachData@CFlyingData@@@std@@QAEXQAUTFlyingAttachData@CFlyingData@@I@Z PROC ; std::allocator<CFlyingData::TFlyingAttachData>::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	c1 e1 04	 shl	 ecx, 4
  00009	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  0000c	c1 e1 02	 shl	 ecx, 2
  0000f	51		 push	 ecx
  00010	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00018	83 c4 08	 add	 esp, 8

; 804  :     }

  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?deallocate@?$allocator@UTFlyingAttachData@CFlyingData@@@std@@QAEXQAUTFlyingAttachData@CFlyingData@@I@Z ENDP ; std::allocator<CFlyingData::TFlyingAttachData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?__Initialize@CFlyingData@@IAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
?__Initialize@CFlyingData@@IAEXXZ PROC			; CFlyingData::__Initialize, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 15   : 	m_v3AngVel = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00010	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp+8]
  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	0f 14 c1	 unpcklps xmm0, xmm1
  00019	66 0f d6 41 2c	 movq	 QWORD PTR [ecx+44], xmm0

; 21   : 	m_v3Accel = D3DXVECTOR3(0,0,0.0f);// gravity direction :-z

  0001e	0f 14 c9	 unpcklps xmm1, xmm1
  00021	89 41 34	 mov	 DWORD PTR [ecx+52], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 21   : 	m_v3Accel = D3DXVECTOR3(0,0,0.0f);// gravity direction :-z

  0002b	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp+8]
  0002e	66 0f d6 49 78	 movq	 QWORD PTR [ecx+120], xmm1

; 22   : 	m_fHomingMaxAngle = 3.0f;
; 23   : 	m_fHomingStartTime = 0.0f;
; 24   : 	m_fGravity = 0;
; 25   : 	m_bSpreading = false;
; 26   : 	m_bMaintainParallel = false;
; 27   : 
; 28   : 	m_bHitOnBackground = false;
; 29   : 	m_bHitOnAnotherMonster = false;
; 30   : 	m_iPierceCount = 0;
; 31   : 	m_fCollisionSphereRadius = 0.0f;
; 32   : 
; 33   : 	m_fBombRange = 10.0f;
; 34   : 	SetBombEffect("");

  00033	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00038	c6 41 5c 00	 mov	 BYTE PTR [ecx+92], 0
  0003c	c7 41 20 00 00
	48 43		 mov	 DWORD PTR [ecx+32], 1128792064 ; 43480000H
  00043	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
  0004a	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0
  00051	c7 41 74 00 00
	fa 43		 mov	 DWORD PTR [ecx+116], 1140457472 ; 43fa0000H
  00058	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax
  0005e	c7 41 60 00 00
	40 40		 mov	 DWORD PTR [ecx+96], 1077936128 ; 40400000H
  00065	c7 41 64 00 00
	00 00		 mov	 DWORD PTR [ecx+100], 0
  0006c	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0
  00073	66 c7 41 1c 00
	00		 mov	 WORD PTR [ecx+28], 0
  00079	66 c7 41 68 00
	00		 mov	 WORD PTR [ecx+104], 0
  0007f	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0
  00086	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  0008d	c7 41 3c 00 00
	20 41		 mov	 DWORD PTR [ecx+60], 1092616192 ; 41200000H
  00094	e8 00 00 00 00	 call	 ?SetBombEffect@CFlyingData@@QAEXPBD@Z ; CFlyingData::SetBombEffect

; 35   : }

  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
?__Initialize@CFlyingData@@IAEXXZ ENDP			; CFlyingData::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?RemoveAllAttach@CFlyingData@@QAEXXZ
_TEXT	SEGMENT
?RemoveAllAttach@CFlyingData@@QAEXXZ PROC		; CFlyingData::RemoveAllAttach, COMDAT
; _this$ = ecx

; 115  : {

  00000	56		 push	 esi

; 116  : 	m_AttachDataVector.clear();

  00001	8d b1 84 00 00
	00		 lea	 esi, DWORD PTR [ecx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00007	56		 push	 esi
  00008	ff 76 04	 push	 DWORD PTR [esi+4]
  0000b	ff 36		 push	 DWORD PTR [esi]
  0000d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >

; 1390 :         _Mylast = _Myfirst;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00017	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0001a	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 117  : }

  0001b	c3		 ret	 0
?RemoveAllAttach@CFlyingData@@QAEXXZ ENDP		; CFlyingData::RemoveAllAttach
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?RemoveAttach@CFlyingData@@QAEXH@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
$T1 = 8							; size = 4
_iIndex$ = 8						; size = 4
?RemoveAttach@CFlyingData@@QAEXH@Z PROC			; CFlyingData::RemoveAttach, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 120  :         _Ptr += _Off;

  00004	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 109  : {

  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 120  :         _Ptr += _Off;

  0000b	c1 e2 04	 shl	 edx, 4
  0000e	03 55 08	 add	 edx, DWORD PTR _iIndex$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 109  : {

  00011	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 120  :         _Ptr += _Off;

  00014	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]

; 1353 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  0001a	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  00020	89 4d 08	 mov	 DWORD PTR $T1[ebp], ecx
  00023	8d 58 44	 lea	 ebx, DWORD PTR [eax+68]
  00026	8d 1c 93	 lea	 ebx, DWORD PTR [ebx+edx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00029	3b d9		 cmp	 ebx, ecx
  0002b	0f 84 b5 00 00
	00		 je	 $LN19@RemoveAtta
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00031	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  00034	8d 34 96	 lea	 esi, DWORD PTR [esi+edx*4]
  00037	57		 push	 edi
$LL20@RemoveAtta:
  00038	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  0003a	8d 7e 44	 lea	 edi, DWORD PTR [esi+68]
  0003d	89 46 f8	 mov	 DWORD PTR [esi-8], eax
  00040	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00043	89 46 fc	 mov	 DWORD PTR [esi-4], eax
  00046	3b f7		 cmp	 esi, edi
  00048	74 49		 je	 SHORT $LN41@RemoveAtta

; 2153 :         return _BUF_SIZE <= _Myres;

  0004a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0004d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00050	72 0f		 jb	 SHORT $LN30@RemoveAtta

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00052	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00053	50		 push	 eax
  00054	ff 36		 push	 DWORD PTR [esi]
  00056	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	83 c4 08	 add	 esp, 8
$LN30@RemoveAtta:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00061	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00068	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0006f	c6 06 00	 mov	 BYTE PTR [esi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00072	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00075	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00078	f3 0f 7e 47 10	 movq	 xmm0, QWORD PTR [edi+16]
  0007d	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00082	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00089	c7 46 58 0f 00
	00 00		 mov	 DWORD PTR [esi+88], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00090	c6 07 00	 mov	 BYTE PTR [edi], 0
$LN41@RemoveAtta:
  00093	0f b6 46 5c	 movzx	 eax, BYTE PTR [esi+92]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00097	83 c3 44	 add	 ebx, 68			; 00000044H
  0009a	88 46 18	 mov	 BYTE PTR [esi+24], al
  0009d	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  000a0	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000a3	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  000a6	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000a9	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  000ac	89 46 24	 mov	 DWORD PTR [esi+36], eax
  000af	0f b6 46 6c	 movzx	 eax, BYTE PTR [esi+108]
  000b3	88 46 28	 mov	 BYTE PTR [esi+40], al
  000b6	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  000b9	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  000bc	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  000bf	89 46 30	 mov	 DWORD PTR [esi+48], eax
  000c2	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
  000c5	89 46 34	 mov	 DWORD PTR [esi+52], eax
  000c8	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  000cb	89 46 38	 mov	 DWORD PTR [esi+56], eax
  000ce	83 c6 44	 add	 esi, 68			; 00000044H
  000d1	3b d9		 cmp	 ebx, ecx
  000d3	0f 85 5f ff ff
	ff		 jne	 $LL20@RemoveAtta
  000d9	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  000dc	5f		 pop	 edi
  000dd	8b 8e 88 00 00
	00		 mov	 ecx, DWORD PTR [esi+136]
  000e3	89 4d 08	 mov	 DWORD PTR $T1[ebp], ecx
$LN19@RemoveAtta:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e6	8b 41 d8	 mov	 eax, DWORD PTR [ecx-40]
  000e9	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ec	72 10		 jb	 SHORT $LN54@RemoveAtta

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ee	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ef	50		 push	 eax
  000f0	ff 71 c4	 push	 DWORD PTR [ecx-60]
  000f3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR $T1[ebp]
  000fb	83 c4 08	 add	 esp, 8
$LN54@RemoveAtta:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000fe	c7 41 d4 00 00
	00 00		 mov	 DWORD PTR [ecx-44], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00105	c7 41 d8 0f 00
	00 00		 mov	 DWORD PTR [ecx-40], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0010c	c6 41 c4 00	 mov	 BYTE PTR [ecx-60], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00110	83 86 88 00 00
	00 bc		 add	 DWORD PTR [esi+136], -68 ; ffffffbcH
  00117	5e		 pop	 esi
  00118	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 112  : }

  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 04 00	 ret	 4
?RemoveAttach@CFlyingData@@QAEXH@Z ENDP			; CFlyingData::RemoveAttach
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?DuplicateAttach@CFlyingData@@QAEXH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?DuplicateAttach@CFlyingData@@QAEXH@Z PROC		; CFlyingData::DuplicateAttach, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00003	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 120  : {

  00009	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0000a	8d b1 84 00 00
	00		 lea	 esi, DWORD PTR [ecx+132]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _iIndex$[ebp]
  00013	c1 e1 04	 shl	 ecx, 4
  00016	03 4d 08	 add	 ecx, DWORD PTR _iIndex$[ebp]
  00019	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]

; 704  :         if (_Mylast != _My_data._Myend) {

  0001c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001f	51		 push	 ecx
  00020	50		 push	 eax
  00021	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00024	74 12		 je	 SHORT $LN8@DuplicateA

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0002f	83 46 04 44	 add	 DWORD PTR [esi+4], 68	; 00000044H
  00033	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 123  : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN8@DuplicateA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00038	8b ce		 mov	 ecx, esi
  0003a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>
  0003f	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 123  : }

  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?DuplicateAttach@CFlyingData@@QAEXH@Z ENDP		; CFlyingData::DuplicateAttach
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?GetAttachDataReference@CFlyingData@@QAEAAUTFlyingAttachData@1@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetAttachDataReference@CFlyingData@@QAEAAUTFlyingAttachData@1@H@Z PROC ; CFlyingData::GetAttachDataReference, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00003	8b 55 08	 mov	 edx, DWORD PTR _iIndex$[ebp]
  00006	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0000c	c1 e2 04	 shl	 edx, 4
  0000f	03 55 08	 add	 edx, DWORD PTR _iIndex$[ebp]
  00012	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 72   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?GetAttachDataReference@CFlyingData@@QAEAAUTFlyingAttachData@1@H@Z ENDP ; CFlyingData::GetAttachDataReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z
_TEXT	SEGMENT
_fad$ = -84						; size = 68
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iType$ = 8						; size = 4
_strFilename$ = 12					; size = 4
_fRoll$ = 16						; size = 4
_fArg1$ = 20						; size = 4
_fArg2$ = 24						; size = 4
?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z PROC ; CFlyingData::AttachFlyEffect, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	8b 75 0c	 mov	 esi, DWORD PTR _strFilename$[ebp]

; 77   : 	memset(&fad,0, sizeof(fad));

  00030	6a 44		 push	 68			; 00000044H
  00032	8d 45 ac	 lea	 eax, DWORD PTR _fad$[ebp]
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	6a 00		 push	 0
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _memset

; 79   : 	fad.iFlyType = iType;

  00044	8b 7d 08	 mov	 edi, DWORD PTR _iType$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00047	8d 45 b4	 lea	 eax, DWORD PTR _fad$[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 77   : 	memset(&fad,0, sizeof(fad));

  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 	fad.iType = FLY_ATTACH_EFFECT;

  0004d	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR _fad$[ebp], 1

; 79   : 	fad.iFlyType = iType;

  00054	89 7d b0	 mov	 DWORD PTR _fad$[ebp+4], edi

; 80   : 	fad.fPeriod = 1.0f;

  00057	c7 45 e8 00 00
	80 3f		 mov	 DWORD PTR _fad$[ebp+60], 1065353216 ; 3f800000H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  0005e	3b c6		 cmp	 eax, esi
  00060	74 16		 je	 SHORT $LN22@AttachFlyE

; 2153 :         return _BUF_SIZE <= _Myres;

  00062	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00066	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  00068	72 02		 jb	 SHORT $LN27@AttachFlyE

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0006a	8b 06		 mov	 eax, DWORD PTR [esi]
$LN27@AttachFlyE:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0006c	ff 76 10	 push	 DWORD PTR [esi+16]
  0006f	8d 4d b4	 lea	 ecx, DWORD PTR _fad$[ebp+8]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN22@AttachFlyE:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 82   : 	fad.fRoll = fRoll;

  00078	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fRoll$[ebp]
  0007d	f3 0f 11 45 e0	 movss	 DWORD PTR _fad$[ebp+52], xmm0

; 83   : 	fad.dwTailColor = 0xffffffff;

  00082	c7 45 d0 ff ff
	ff ff		 mov	 DWORD PTR _fad$[ebp+36], -1

; 84   : 	fad.fTailLength = 1.0f;

  00089	c7 45 d4 00 00
	80 3f		 mov	 DWORD PTR _fad$[ebp+40], 1065353216 ; 3f800000H

; 85   : 	fad.fTailSize = 10.0f;

  00090	c7 45 d8 00 00
	20 41		 mov	 DWORD PTR _fad$[ebp+44], 1092616192 ; 41200000H

; 86   : 
; 87   : 	switch(iType)

  00097	83 ff 02	 cmp	 edi, 2
  0009a	74 1e		 je	 SHORT $LN4@AttachFlyE
  0009c	8d 47 fd	 lea	 eax, DWORD PTR [edi-3]
  0009f	83 f8 01	 cmp	 eax, 1
  000a2	77 20		 ja	 SHORT $LN6@AttachFlyE

; 91   : 		break;
; 92   : 	case FLY_ATTACH_TYPE_SINE:
; 93   : 	case FLY_ATTACH_TYPE_EXP:
; 94   : 		fad.fPeriod=fArg1;

  000a4	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fArg1$[ebp]
  000a9	f3 0f 11 45 e8	 movss	 DWORD PTR _fad$[ebp+60], xmm0

; 95   : 		fad.fAmplitude=fArg2;

  000ae	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fArg2$[ebp]
  000b3	f3 0f 11 45 ec	 movss	 DWORD PTR _fad$[ebp+64], xmm0

; 96   : 		break;

  000b8	eb 0a		 jmp	 SHORT $LN6@AttachFlyE
$LN4@AttachFlyE:

; 88   : 	{
; 89   : 	case FLY_ATTACH_TYPE_MULTI_LINE:
; 90   : 		fad.fDistance = fArg1;

  000ba	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fArg1$[ebp]
  000bf	f3 0f 11 45 e4	 movss	 DWORD PTR _fad$[ebp+56], xmm0
$LN6@AttachFlyE:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000c4	8b 83 88 00 00
	00		 mov	 eax, DWORD PTR [ebx+136]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 104  : 	m_AttachDataVector.push_back(fad);

  000ca	8d b3 84 00 00
	00		 lea	 esi, DWORD PTR [ebx+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000d0	8d 4d ac	 lea	 ecx, DWORD PTR _fad$[ebp]
  000d3	51		 push	 ecx
  000d4	50		 push	 eax
  000d5	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  000d8	74 0f		 je	 SHORT $LN34@AttachFlyE

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000da	56		 push	 esi
  000db	e8 00 00 00 00	 call	 ??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000e3	83 46 04 44	 add	 DWORD PTR [esi+4], 68	; 00000044H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000e7	eb 07		 jmp	 SHORT $LN55@AttachFlyE
$LN34@AttachFlyE:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000e9	8b ce		 mov	 ecx, esi
  000eb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>
$LN55@AttachFlyE:

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000f0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000f3	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  000f8	2b 0e		 sub	 ecx, DWORD PTR [esi]
  000fa	f7 e9		 imul	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000fc	8b 4d c8	 mov	 ecx, DWORD PTR _fad$[ebp+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ff	c1 fa 05	 sar	 edx, 5
  00102	8b f2		 mov	 esi, edx
  00104	c1 ee 1f	 shr	 esi, 31			; 0000001fH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 105  : 	return m_AttachDataVector.size()-1;

  00107	03 f2		 add	 esi, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00109	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010c	72 0d		 jb	 SHORT $LN53@AttachFlyE

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010e	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010f	51		 push	 ecx
  00110	ff 75 b4	 push	 DWORD PTR _fad$[ebp+8]
  00113	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00118	83 c4 08	 add	 esp, 8
$LN53@AttachFlyE:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 106  : }

  0011b	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  0011e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00128	59		 pop	 ecx
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012f	33 cd		 xor	 ecx, ebp
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z$0:
  00000	8d 4d ac	 lea	 ecx, DWORD PTR _fad$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1TFlyingAttachData@CFlyingData@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AttachFlyEffect@CFlyingData@@QAEKHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MMM@Z ENDP ; CFlyingData::AttachFlyEffect
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?SetBombEffect@CFlyingData@@QAEXPBD@Z
_TEXT	SEGMENT
_szEffectName$ = 8					; size = 4
?SetBombEffect@CFlyingData@@QAEXPBD@Z PROC		; CFlyingData::SetBombEffect, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00007	8b 4d 08	 mov	 ecx, DWORD PTR _szEffectName$[ebp]
  0000a	8b d1		 mov	 edx, ecx
  0000c	8d 72 01	 lea	 esi, DWORD PTR [edx+1]
  0000f	90		 npad	 1
$LL30@SetBombEff:
  00010	8a 02		 mov	 al, BYTE PTR [edx]
  00012	42		 inc	 edx
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL30@SetBombEff
  00017	2b d6		 sub	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 51   : 	m_strBombEffectName = szEffectName;

  00019	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	52		 push	 edx
  0001d	51		 push	 ecx
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3764 :         return size() == 0;

  00025	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 52   : 	if (m_strBombEffectName.empty())

  00029	75 0d		 jne	 SHORT $LN2@SetBombEff

; 61   : 	}
; 62   : 	else
; 63   : 	{
; 64   : 		m_dwBombEffectID = 0;
; 65   : 	}
; 66   : 
; 67   : }

  0002b	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN2@SetBombEff:

; 53   : 	{
; 54   : 		m_dwBombEffectID = 0;
; 55   : 		return;
; 56   : 	}
; 57   : 	StringPath(m_strBombEffectName);

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 ?StringPath@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; StringPath
  0003e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00041	8b c6		 mov	 eax, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00043	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00047	72 02		 jb	 SHORT $LN29@SetBombEff

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00049	8b 06		 mov	 eax, DWORD PTR [esi]
$LN29@SetBombEff:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 58   : 	if (CEffectManager::Instance().RegisterEffect(m_strBombEffectName.c_str()),true)

  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0005b	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0005f	72 02		 jb	 SHORT $LN24@SetBombEff

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00061	8b 36		 mov	 esi, DWORD PTR [esi]
$LN24@SetBombEff:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 60   : 		m_dwBombEffectID = GetCaseCRC32(m_strBombEffectName.c_str(),m_strBombEffectName.size());

  00063	ff 77 50	 push	 DWORD PTR [edi+80]
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  0006c	83 c4 08	 add	 esp, 8

; 61   : 	}
; 62   : 	else
; 63   : 	{
; 64   : 		m_dwBombEffectID = 0;
; 65   : 	}
; 66   : 
; 67   : }

  0006f	89 47 58	 mov	 DWORD PTR [edi+88], eax
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?SetBombEffect@CFlyingData@@QAEXPBD@Z ENDP		; CFlyingData::SetBombEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?SaveScriptFile@CFlyingData@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -72					; size = 4
$T2 = -68						; size = 4
_strGlobalPathName$ = -64				; size = 24
_strLocalFileName$ = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFilename$ = 8					; size = 4
?SaveScriptFile@CFlyingData@@QAE_NPBD@Z PROC		; CFlyingData::SaveScriptFile, COMDAT
; _this$ = ecx

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d b8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx
  00030	8b 75 08	 mov	 esi, DWORD PTR _c_szFilename$[ebp]

; 287  : 	FILE* fp = fopen(c_szFilename,"w");

  00033	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _fopen
  0003e	8b f8		 mov	 edi, eax
  00040	83 c4 08	 add	 esp, 8

; 288  : 	if (!fp) return false;

  00043	85 ff		 test	 edi, edi
  00045	75 07		 jne	 SHORT $LN5@SaveScript
  00047	32 c0		 xor	 al, al
  00049	e9 98 04 00 00	 jmp	 $LN1@SaveScript
$LN5@SaveScript:

; 289  : 
; 290  : 	PrintfTabs(fp, 0, "SpreadingFlag           %d\n", m_bSpreading?1:0);

  0004e	33 c0		 xor	 eax, eax
  00050	38 43 1c	 cmp	 BYTE PTR [ebx+28], al
  00053	0f 95 c0	 setne	 al
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EKJFFBKN@SpreadingFlag?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  0005c	6a 00		 push	 0
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 291  : 	PrintfTabs(fp, 0, "MaintainParallelFlag    %d\n", m_bMaintainParallel?1:0);

  00064	33 c0		 xor	 eax, eax
  00066	38 43 1d	 cmp	 BYTE PTR [ebx+29], al
  00069	0f 95 c0	 setne	 al
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NGIIEBBO@MaintainParallelFlag?5?5?5?5?$CFd?6@
  00072	6a 00		 push	 0
  00074	57		 push	 edi
  00075	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0007a	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]

; 292  : 
; 293  : 	PrintfTabs(fp, 0, "InitialVelocity         %f\n", m_fInitVel);

  0007f	83 c4 18	 add	 esp, 24			; 00000018H
  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HFDPOBJA@InitialVelocity?5?5?5?5?5?5?5?5?5?$CFf?6@
  0008f	6a 00		 push	 0
  00091	57		 push	 edi
  00092	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00097	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]

; 294  : 	PrintfTabs(fp, 0, "ConeAngle               %f\n", m_fConeAngle);

  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	0f 5a c0	 cvtps2pd xmm0, xmm0
  000a2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GGIANCOJ@ConeAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  000ac	6a 00		 push	 0
  000ae	57		 push	 edi
  000af	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000b4	f3 0f 10 43 28	 movss	 xmm0, DWORD PTR [ebx+40]

; 295  : 	PrintfTabs(fp, 0, "RollAngle               %f\n", m_fRollAngle);

  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	0f 5a c0	 cvtps2pd xmm0, xmm0
  000bf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OAKALGPC@RollAngle?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  000c9	6a 00		 push	 0
  000cb	57		 push	 edi
  000cc	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000d1	f3 0f 10 43 34	 movss	 xmm0, DWORD PTR [ebx+52]

; 296  : 	PrintfTabs(fp, 0, "AngularVelocity         %f %f %f\n", m_v3AngVel.x, m_v3AngVel.y, m_v3AngVel.z);

  000d6	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d9	51		 push	 ecx
  000da	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  000e0	f3 0f 10 43 30	 movss	 xmm0, DWORD PTR [ebx+48]
  000e5	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e8	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  000ee	f3 0f 10 43 2c	 movss	 xmm0, DWORD PTR [ebx+44]
  000f3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000f6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LMNGANIH@AngularVelocity?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@
  00100	6a 00		 push	 0
  00102	57		 push	 edi
  00103	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00108	f3 0f 10 43 38	 movss	 xmm0, DWORD PTR [ebx+56]

; 297  : 	PrintfTabs(fp, 0, "Gravity                 %f\n", m_fGravity);

  0010d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00110	0f 5a c0	 cvtps2pd xmm0, xmm0
  00113	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GMCHDOFC@Gravity?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  0011d	6a 00		 push	 0
  0011f	57		 push	 edi
  00120	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 298  : 
; 299  : 	PrintfTabs(fp, 0, "HitOnBackground         %d\n",m_bHitOnBackground?1:0);

  00125	33 c0		 xor	 eax, eax
  00127	38 43 68	 cmp	 BYTE PTR [ebx+104], al
  0012a	0f 95 c0	 setne	 al
  0012d	50		 push	 eax
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MIBEIPGM@HitOnBackground?5?5?5?5?5?5?5?5?5?$CFd?6@
  00133	6a 00		 push	 0
  00135	57		 push	 edi
  00136	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 300  : 	PrintfTabs(fp, 0, "HitOnAnotherMonster     %d\n",m_bHitOnAnotherMonster?1:0);

  0013b	33 c0		 xor	 eax, eax
  0013d	38 43 69	 cmp	 BYTE PTR [ebx+105], al
  00140	0f 95 c0	 setne	 al
  00143	50		 push	 eax
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DIMAIAMO@HitOnAnotherMonster?5?5?5?5?5?$CFd?6@
  00149	6a 00		 push	 0
  0014b	57		 push	 edi
  0014c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 301  : 	PrintfTabs(fp, 0, "PierceCount             %d\n",m_iPierceCount);

  00151	ff 73 6c	 push	 DWORD PTR [ebx+108]
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KJEBPHJO@PierceCount?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00159	6a 00		 push	 0
  0015b	57		 push	 edi
  0015c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00161	f3 0f 10 43 70	 movss	 xmm0, DWORD PTR [ebx+112]
  00166	83 c4 44	 add	 esp, 68			; 00000044H

; 302  : 	PrintfTabs(fp, 0, "CollisionSphereRadius   %f\n",m_fCollisionSphereRadius);

  00169	0f 5a c0	 cvtps2pd xmm0, xmm0
  0016c	83 ec 08	 sub	 esp, 8
  0016f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BLFFPBNI@CollisionSphereRadius?5?5?5?$CFf?6@
  00179	6a 00		 push	 0
  0017b	57		 push	 edi
  0017c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00181	f3 0f 10 43 3c	 movss	 xmm0, DWORD PTR [ebx+60]

; 303  : 
; 304  : 	PrintfTabs(fp, 0, "BombRange               %f\n", m_fBombRange);

  00186	83 c4 0c	 add	 esp, 12			; 0000000cH
  00189	0f 5a c0	 cvtps2pd xmm0, xmm0
  0018c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PKMAPKGM@BombRange?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00196	6a 00		 push	 0
  00198	57		 push	 edi
  00199	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0019e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001a1	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strGlobalPathName$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001a8	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strGlobalPathName$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001af	c6 45 c0 00	 mov	 BYTE PTR _strGlobalPathName$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 307  : 	StringPath(GetOnlyPathName(c_szFilename), strGlobalPathName);

  001b3	8d 45 c0	 lea	 eax, DWORD PTR _strGlobalPathName$[ebp]
  001b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001bd	50		 push	 eax
  001be	56		 push	 esi
  001bf	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
  001c4	83 c4 04	 add	 esp, 4
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?StringPath@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; StringPath
  001cd	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001d0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strLocalFileName$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001d7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strLocalFileName$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001de	c6 45 d8 00	 mov	 BYTE PTR _strLocalFileName$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  001e2	83 7b 54 10	 cmp	 DWORD PTR [ebx+84], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  001e6	8d 73 40	 lea	 esi, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 309  : 	std::string strLocalFileName;

  001e9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  001ed	8b ce		 mov	 ecx, esi

; 2145 :         if (_Large_string_engaged()) {

  001ef	72 02		 jb	 SHORT $LN167@SaveScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  001f1	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN167@SaveScript:

; 2153 :         return _BUF_SIZE <= _Myres;

  001f3	83 7d d4 10	 cmp	 DWORD PTR _strGlobalPathName$[ebp+20], 16 ; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 310  : 	if (GetLocalFileName(strGlobalPathName.c_str(), m_strBombEffectName.c_str(), &strLocalFileName))

  001f7	8d 55 d8	 lea	 edx, DWORD PTR _strLocalFileName$[ebp]
  001fa	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  001fb	8d 45 c0	 lea	 eax, DWORD PTR _strGlobalPathName$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  001fe	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strGlobalPathName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 310  : 	if (GetLocalFileName(strGlobalPathName.c_str(), m_strBombEffectName.c_str(), &strLocalFileName))

  00202	51		 push	 ecx
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?GetLocalFileName@@YA_NPBD0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetLocalFileName
  00209	83 c4 0c	 add	 esp, 12			; 0000000cH
  0020c	84 c0		 test	 al, al
  0020e	74 0d		 je	 SHORT $LN6@SaveScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00210	83 7d ec 10	 cmp	 DWORD PTR _strLocalFileName$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00214	8d 75 d8	 lea	 esi, DWORD PTR _strLocalFileName$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  00217	0f 43 75 d8	 cmovae	 esi, DWORD PTR _strLocalFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 311  : 		PrintfTabs(fp, 0, "BombEffect              \"%s\"\n", strLocalFileName.c_str());

  0021b	eb 08		 jmp	 SHORT $LN56@SaveScript
$LN6@SaveScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0021d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00221	72 02		 jb	 SHORT $LN56@SaveScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00223	8b 36		 mov	 esi, DWORD PTR [esi]
$LN56@SaveScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 315  : 	PrintfTabs(fp, 0, "HomingFlag              %d\n", m_bIsHoming?1:0);

  00225	56		 push	 esi
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BNDAHANN@BombEffect?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  0022b	6a 00		 push	 0
  0022d	57		 push	 edi
  0022e	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00233	33 c0		 xor	 eax, eax
  00235	38 43 5c	 cmp	 BYTE PTR [ebx+92], al
  00238	0f 95 c0	 setne	 al
  0023b	50		 push	 eax
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BPPBPLIE@HomingFlag?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00241	6a 00		 push	 0
  00243	57		 push	 edi
  00244	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00249	f3 0f 10 43 64	 movss	 xmm0, DWORD PTR [ebx+100]

; 316  : 	PrintfTabs(fp, 0, "HomingStartTime         %f\n", m_fHomingStartTime);

  0024e	83 c4 18	 add	 esp, 24			; 00000018H
  00251	0f 5a c0	 cvtps2pd xmm0, xmm0
  00254	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DFAFEFEK@HomingStartTime?5?5?5?5?5?5?5?5?5?$CFf?6@
  0025e	6a 00		 push	 0
  00260	57		 push	 edi
  00261	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00266	f3 0f 10 43 60	 movss	 xmm0, DWORD PTR [ebx+96]

; 317  : 	PrintfTabs(fp, 0, "HomingMaxAngle          %f\n", m_fHomingMaxAngle);

  0026b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0026e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00271	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00276	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DJOJIKLN@HomingMaxAngle?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  0027b	6a 00		 push	 0
  0027d	57		 push	 edi
  0027e	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00283	f3 0f 10 43 74	 movss	 xmm0, DWORD PTR [ebx+116]

; 318  : 	PrintfTabs(fp, 0, "Range                   %f\n", m_fRange);

  00288	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0028e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00293	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JPLBDGMP@Range?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00298	6a 00		 push	 0
  0029a	57		 push	 edi
  0029b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  002a0	f3 0f 10 83 80
	00 00 00	 movss	 xmm0, DWORD PTR [ebx+128]

; 319  : 	PrintfTabs(fp, 0, "Acceleration            %f %f %f\n", m_v3Accel.x, m_v3Accel.y, m_v3Accel.z);

  002a8	0f 5a c0	 cvtps2pd xmm0, xmm0
  002ab	51		 push	 ecx
  002ac	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  002b2	f3 0f 10 43 7c	 movss	 xmm0, DWORD PTR [ebx+124]
  002b7	0f 5a c0	 cvtps2pd xmm0, xmm0
  002ba	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  002c0	f3 0f 10 43 78	 movss	 xmm0, DWORD PTR [ebx+120]
  002c5	0f 5a c0	 cvtps2pd xmm0, xmm0
  002c8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002cd	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KJGNOCOO@Acceleration?5?5?5?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CF@
  002d2	6a 00		 push	 0
  002d4	57		 push	 edi
  002d5	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002da	8b b3 84 00 00
	00		 mov	 esi, DWORD PTR [ebx+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 319  : 	PrintfTabs(fp, 0, "Acceleration            %f %f %f\n", m_v3Accel.x, m_v3Accel.y, m_v3Accel.z);

  002e0	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  002e3	3b b3 88 00 00
	00		 cmp	 esi, DWORD PTR [ebx+136]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 322  : 	for(it = m_AttachDataVector.begin();it!=m_AttachDataVector.end();++it)

  002e9	0f 84 b0 01 00
	00		 je	 $LN3@SaveScript
  002ef	90		 npad	 1
$LL4@SaveScript:

; 323  : 	{
; 324  : 		PrintfTabs(fp, 0, "Group AttachData\n");

  002f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HICIMFMI@Group?5AttachData?6@
  002f5	6a 00		 push	 0
  002f7	57		 push	 edi
  002f8	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 325  : 		PrintfTabs(fp, 0, "{\n");

  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  00302	6a 00		 push	 0
  00304	57		 push	 edi
  00305	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  0030a	56		 push	 esi
  0030b	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBUTFlyingAttachData@CFlyingData@@@std@@YAPAUTFlyingAttachData@CFlyingData@@PBU12@@Z ; std::_Const_cast<CFlyingData::TFlyingAttachData const >
  00310	8b d8		 mov	 ebx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 326  : 		PrintfTabs(fp, 1, "Type          %d\n", it->iType);

  00312	ff 33		 push	 DWORD PTR [ebx]
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FDNPIKOA@Type?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00319	6a 01		 push	 1
  0031b	57		 push	 edi
  0031c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 327  : 		PrintfTabs(fp, 1, "FlyType       %d\n", it->iFlyType);

  00321	ff 73 04	 push	 DWORD PTR [ebx+4]
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BLGHHPCB@FlyType?5?5?5?5?5?5?5?$CFd?6@
  00329	6a 01		 push	 1
  0032b	57		 push	 edi
  0032c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00331	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 327  : 		PrintfTabs(fp, 1, "FlyType       %d\n", it->iFlyType);

  00334	83 c4 3c	 add	 esp, 60			; 0000003cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00337	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  0033b	8b c8		 mov	 ecx, eax

; 3668 :         return _Mypair._Myval2._Myptr();

  0033d	89 45 bc	 mov	 DWORD PTR $T2[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00340	72 02		 jb	 SHORT $LN169@SaveScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00342	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN169@SaveScript:

; 2153 :         return _BUF_SIZE <= _Myres;

  00344	83 7d d4 10	 cmp	 DWORD PTR _strGlobalPathName$[ebp+20], 16 ; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 328  : 		if (GetLocalFileName(strGlobalPathName.c_str(), it->strFilename.c_str(), &strLocalFileName))

  00348	8d 55 d8	 lea	 edx, DWORD PTR _strLocalFileName$[ebp]
  0034b	52		 push	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0034c	8d 45 c0	 lea	 eax, DWORD PTR _strGlobalPathName$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  0034f	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strGlobalPathName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 328  : 		if (GetLocalFileName(strGlobalPathName.c_str(), it->strFilename.c_str(), &strLocalFileName))

  00353	51		 push	 ecx
  00354	50		 push	 eax
  00355	e8 00 00 00 00	 call	 ?GetLocalFileName@@YA_NPBD0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetLocalFileName
  0035a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0035d	84 c0		 test	 al, al
  0035f	74 0d		 je	 SHORT $LN8@SaveScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00361	83 7d ec 10	 cmp	 DWORD PTR _strLocalFileName$[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00365	8d 45 d8	 lea	 eax, DWORD PTR _strLocalFileName$[ebp]

; 2145 :         if (_Large_string_engaged()) {

  00368	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strLocalFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 329  : 			PrintfTabs(fp, 1, "AttachFile    \"%s\"\n", strLocalFileName.c_str());

  0036c	eb 0b		 jmp	 SHORT $LN168@SaveScript
$LN8@SaveScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0036e	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp]
  00371	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00375	72 02		 jb	 SHORT $LN168@SaveScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00377	8b 00		 mov	 eax, DWORD PTR [eax]
$LN168@SaveScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00379	50		 push	 eax
  0037a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KGOGOAGA@AttachFile?5?5?5?5?$CC?$CFs?$CC?6@
  0037f	6a 01		 push	 1
  00381	57		 push	 edi
  00382	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 334  : 		PrintfTabs(fp, 1, "TailFlag      %d\n", it->bHasTail?1:0);

  00387	33 c0		 xor	 eax, eax
  00389	38 43 20	 cmp	 BYTE PTR [ebx+32], al
  0038c	0f 95 c0	 setne	 al
  0038f	50		 push	 eax
  00390	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OICNGABA@TailFlag?5?5?5?5?5?5?$CFd?6@
  00395	6a 01		 push	 1
  00397	57		 push	 edi
  00398	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0039d	83 c4 20	 add	 esp, 32			; 00000020H

; 335  : 		if (it->bHasTail)

  003a0	80 7b 20 00	 cmp	 BYTE PTR [ebx+32], 0
  003a4	74 63		 je	 SHORT $LN10@SaveScript

; 336  : 		{
; 337  : 			PrintfTabs(fp, 1, "TailColor     %ud\n", it->dwTailColor);

  003a6	ff 73 24	 push	 DWORD PTR [ebx+36]
  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GDEIOKGL@TailColor?5?5?5?5?5?$CFud?6@
  003ae	6a 01		 push	 1
  003b0	57		 push	 edi
  003b1	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  003b6	f3 0f 10 43 28	 movss	 xmm0, DWORD PTR [ebx+40]

; 338  : 			PrintfTabs(fp, 1, "TailLength    %f\n", it->fTailLength);

  003bb	83 c4 08	 add	 esp, 8
  003be	0f 5a c0	 cvtps2pd xmm0, xmm0
  003c1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BJCKHMFB@TailLength?5?5?5?5?$CFf?6@
  003cb	6a 01		 push	 1
  003cd	57		 push	 edi
  003ce	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  003d3	f3 0f 10 43 2c	 movss	 xmm0, DWORD PTR [ebx+44]

; 339  : 			PrintfTabs(fp, 1, "TailSize      %f\n", it->fTailSize);

  003d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  003db	0f 5a c0	 cvtps2pd xmm0, xmm0
  003de	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DBHBKFFP@TailSize?5?5?5?5?5?5?$CFf?6@
  003e8	6a 01		 push	 1
  003ea	57		 push	 edi
  003eb	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 340  : 			PrintfTabs(fp, 1, "TailShapeRect %d\n", it->bRectShape?1:0);

  003f0	33 c0		 xor	 eax, eax
  003f2	38 43 30	 cmp	 BYTE PTR [ebx+48], al
  003f5	0f 95 c0	 setne	 al
  003f8	50		 push	 eax
  003f9	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GIAPEHPE@TailShapeRect?5?$CFd?6@
  003fe	6a 01		 push	 1
  00400	57		 push	 edi
  00401	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00406	83 c4 24	 add	 esp, 36			; 00000024H
$LN10@SaveScript:

; 341  : 		}
; 342  : 
; 343  : 		PrintfTabs(fp, 1, "Roll          %f\n",it->fRoll );

  00409	f3 0f 10 43 34	 movss	 xmm0, DWORD PTR [ebx+52]
  0040e	83 ec 08	 sub	 esp, 8
  00411	0f 5a c0	 cvtps2pd xmm0, xmm0
  00414	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NJDFDGEH@Roll?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  0041e	6a 01		 push	 1
  00420	57		 push	 edi
  00421	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00426	f3 0f 10 43 38	 movss	 xmm0, DWORD PTR [ebx+56]

; 344  : 		PrintfTabs(fp, 1, "Distance      %f\n",it->fDistance );

  0042b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0042e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00431	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00436	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MGMHDAIP@Distance?5?5?5?5?5?5?$CFf?6@
  0043b	6a 01		 push	 1
  0043d	57		 push	 edi
  0043e	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00443	f3 0f 10 43 3c	 movss	 xmm0, DWORD PTR [ebx+60]

; 345  : 		PrintfTabs(fp, 1, "Period        %f\n",it->fPeriod );

  00448	83 c4 0c	 add	 esp, 12			; 0000000cH
  0044b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0044e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00453	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HBPGEMBJ@Period?5?5?5?5?5?5?5?5?$CFf?6@
  00458	6a 01		 push	 1
  0045a	57		 push	 edi
  0045b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00460	f3 0f 10 43 40	 movss	 xmm0, DWORD PTR [ebx+64]

; 346  : 		PrintfTabs(fp, 1, "Amplitude     %f\n",it->fAmplitude );

  00465	83 c4 0c	 add	 esp, 12			; 0000000cH
  00468	0f 5a c0	 cvtps2pd xmm0, xmm0
  0046b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00470	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BECPBEGP@Amplitude?5?5?5?5?5?$CFf?6@
  00475	6a 01		 push	 1
  00477	57		 push	 edi
  00478	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 348  : 		PrintfTabs(fp, 0, "}\n");

  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  00482	6a 00		 push	 0
  00484	57		 push	 edi
  00485	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0048a	8b 45 b8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]

; 75   :         ++_Ptr;

  0048d	83 c6 44	 add	 esi, 68			; 00000044H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 348  : 		PrintfTabs(fp, 0, "}\n");

  00490	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00493	3b b0 88 00 00
	00		 cmp	 esi, DWORD PTR [eax+136]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 322  : 	for(it = m_AttachDataVector.begin();it!=m_AttachDataVector.end();++it)

  00499	0f 85 51 fe ff
	ff		 jne	 $LL4@SaveScript
$LN3@SaveScript:

; 351  : 	fclose(fp);

  0049f	57		 push	 edi
  004a0	e8 00 00 00 00	 call	 _fclose
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004a5	8b 45 ec	 mov	 eax, DWORD PTR _strLocalFileName$[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 351  : 	fclose(fp);

  004a8	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004ab	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004ae	72 0d		 jb	 SHORT $LN144@SaveScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004b0	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004b1	50		 push	 eax
  004b2	ff 75 d8	 push	 DWORD PTR _strLocalFileName$[ebp]
  004b5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004ba	83 c4 08	 add	 esp, 8
$LN144@SaveScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  004bd	8b 45 d4	 mov	 eax, DWORD PTR _strGlobalPathName$[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  004c0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strLocalFileName$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  004c7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strLocalFileName$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  004ce	c6 45 d8 00	 mov	 BYTE PTR _strLocalFileName$[ebp], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  004d2	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004d5	72 0d		 jb	 SHORT $LN154@SaveScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004d7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d8	50		 push	 eax
  004d9	ff 75 c0	 push	 DWORD PTR _strGlobalPathName$[ebp]
  004dc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004e1	83 c4 08	 add	 esp, 8
$LN154@SaveScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 352  : 	return true;

  004e4	b0 01		 mov	 al, 1
$LN1@SaveScript:

; 353  : }

  004e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004f0	59		 pop	 ecx
  004f1	5f		 pop	 edi
  004f2	5e		 pop	 esi
  004f3	5b		 pop	 ebx
  004f4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004f7	33 cd		 xor	 ecx, ebp
  004f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004fe	8b e5		 mov	 esp, ebp
  00500	5d		 pop	 ebp
  00501	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR _strGlobalPathName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR _strLocalFileName$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveScriptFile@CFlyingData@@QAE_NPBD@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveScriptFile@CFlyingData@@QAE_NPBD@Z ENDP		; CFlyingData::SaveScriptFile
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?LoadScriptFile@CFlyingData@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$1$ = -308						; size = 4
_this$1$ = -304						; size = 4
__New_ptr$2 = -300					; size = 4
__New_ptr$3 = -300					; size = 4
_GotoChild$4 = -300					; size = 4
_temp$ = -296						; size = 4
$T5 = -289						; size = 1
$T6 = -289						; size = 1
$T7 = -289						; size = 1
$T8 = -289						; size = 1
$T9 = -289						; size = 1
$T10 = -289						; size = 1
$T11 = -289						; size = 1
$T12 = -289						; size = 1
$T13 = -289						; size = 1
$T14 = -289						; size = 1
$T15 = -289						; size = 1
$T16 = -289						; size = 1
$T17 = -289						; size = 1
_TextFileLoader$ = -288					; size = 128
_fad$18 = -160						; size = 68
$T19 = -88						; size = 24
$T20 = -88						; size = 24
$T21 = -88						; size = 24
$T22 = -88						; size = 24
$T23 = -88						; size = 24
$T24 = -88						; size = 24
$T25 = -88						; size = 24
$T26 = -88						; size = 24
$T27 = -88						; size = 24
$T28 = -88						; size = 24
$T29 = -88						; size = 24
$T30 = -88						; size = 24
$T31 = -88						; size = 24
$T32 = -88						; size = 24
$T33 = -88						; size = 24
$T34 = -88						; size = 24
$T35 = -76						; size = 12
tv7367 = -64						; size = 16
_strNodeName$36 = -64					; size = 24
$T37 = -64						; size = 24
$T38 = -64						; size = 24
$T39 = -64						; size = 24
$T40 = -64						; size = 24
$T41 = -64						; size = 24
$T42 = -64						; size = 24
$T43 = -64						; size = 24
$T44 = -64						; size = 24
$T45 = -64						; size = 24
$T46 = -64						; size = 24
$T47 = -64						; size = 24
$T48 = -64						; size = 24
$T49 = -64						; size = 24
$T50 = -64						; size = 24
$T51 = -64						; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFilename$ = 8					; size = 4
?LoadScriptFile@CFlyingData@@QAE_NPBD@Z PROC		; CFlyingData::LoadScriptFile, COMDAT
; _this$ = ecx

; 126  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 8d d0 fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ecx

; 127  : 	NANOBEGIN

  00047	eb		 DB	 -21			; ffffffebH
  00048	03		 DB	 3
  00049	d6		 DB	 -42			; ffffffd6H
  0004a	d7		 DB	 -41			; ffffffd7H
  0004b	01		 DB	 1
  0004c	8b bd d0 fe ff
	ff		 mov	 edi, DWORD PTR _this$1$[ebp]
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ?Destroy@CFlyingData@@QAEXXZ ; CFlyingData::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00059	8b 4b 08	 mov	 ecx, DWORD PTR _c_szFilename$[ebx]
  0005c	8b d1		 mov	 edx, ecx
  0005e	8d 72 01	 lea	 esi, DWORD PTR [edx+1]
$LL1337@LoadScript:
  00061	8a 02		 mov	 al, BYTE PTR [edx]
  00063	42		 inc	 edx
  00064	84 c0		 test	 al, al
  00066	75 f9		 jne	 SHORT $LL1337@LoadScript
  00068	2b d6		 sub	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 130  : 	m_strFilename = c_szFilename;

  0006a	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0006d	52		 push	 edx
  0006e	51		 push	 ecx
  0006f	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 130  : 	m_strFilename = c_szFilename;

  00071	89 b5 cc fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00077	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 131  : 	StringPath(m_strFilename);

  0007c	56		 push	 esi
  0007d	e8 00 00 00 00	 call	 ?StringPath@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; StringPath
  00082	83 c4 04	 add	 esp, 4

; 132  : 	CTextFileLoader TextFileLoader;

  00085	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0008b	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00090	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00094	8b c6		 mov	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 132  : 	CTextFileLoader TextFileLoader;

  00096	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0009d	72 02		 jb	 SHORT $LN83@LoadScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0009f	8b 06		 mov	 eax, DWORD PTR [esi]
$LN83@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 133  : 	if (!TextFileLoader.Load(m_strFilename.c_str()))

  000a1	50		 push	 eax
  000a2	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  000a8	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  000ad	84 c0		 test	 al, al
  000af	0f 84 17 0f 00
	00		 je	 $LN72@LoadScript

; 134  : 		return false;
; 135  : 
; 136  : 	TextFileLoader.SetTop();

  000b5	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  000bb	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000c0	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@NBBBNDDO@spreadingflag@+8
  000c5	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@NBBBNDDO@spreadingflag@
  000cd	89 45 c8	 mov	 DWORD PTR $T51[ebp+8], eax
  000d0	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@NBBBNDDO@spreadingflag@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000d5	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T51[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  000dc	c7 45 d0 0d 00
	00 00		 mov	 DWORD PTR $T51[ebp+16], 13 ; 0000000dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  000e3	66 0f d6 45 c0	 movq	 QWORD PTR $T51[ebp], xmm0
  000e8	88 45 cc	 mov	 BYTE PTR $T51[ebp+12], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000eb	c6 45 cd 00	 mov	 BYTE PTR $T51[ebp+13], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 139  : 	if (!TextFileLoader.GetTokenInteger("spreadingflag",&temp))

  000ef	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  000f5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000f9	50		 push	 eax
  000fa	8d 45 c0	 lea	 eax, DWORD PTR $T51[ebp]
  000fd	50		 push	 eax
  000fe	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00104	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00109	85 c0		 test	 eax, eax
  0010b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010f	8b 45 d4	 mov	 eax, DWORD PTR $T51[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 139  : 	if (!TextFileLoader.GetTokenInteger("spreadingflag",&temp))

  00112	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T17[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00119	83 f8 10	 cmp	 eax, 16			; 00000010H
  0011c	72 0d		 jb	 SHORT $LN138@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0011e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0011f	50		 push	 eax
  00120	ff 75 c0	 push	 DWORD PTR $T51[ebp]
  00123	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00128	83 c4 08	 add	 esp, 8
$LN138@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 139  : 	if (!TextFileLoader.GetTokenInteger("spreadingflag",&temp))

  0012b	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T17[ebp], 0
  00132	74 04		 je	 SHORT $LN6@LoadScript

; 140  : 	{
; 141  : 		m_bSpreading = false;

  00134	32 c0		 xor	 al, al

; 142  : 	}

  00136	eb 0a		 jmp	 SHORT $LN7@LoadScript
$LN6@LoadScript:

; 143  : 	else
; 144  : 	{
; 145  : 		m_bSpreading = temp?true:false;

  00138	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  0013f	0f 95 c0	 setne	 al
$LN7@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00142	88 47 1c	 mov	 BYTE PTR [edi+28], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00145	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00147	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T50[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0014e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T50[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00155	c6 45 c0 00	 mov	 BYTE PTR $T50[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00159	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0015e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@IJDOJCHL@maintainparallelflag@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00165	c7 45 d0 14 00
	00 00		 mov	 DWORD PTR $T50[ebp+16], 20 ; 00000014H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0016c	c7 45 d4 1f 00
	00 00		 mov	 DWORD PTR $T50[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00173	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00176	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BF@IJDOJCHL@maintainparallelflag@+16
  0017c	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0017f	89 85 d4 fe ff
	ff		 mov	 DWORD PTR __New_ptr$3[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00185	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00189	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$3[ebp]
  0018f	50		 push	 eax
  00190	8d 45 c0	 lea	 eax, DWORD PTR $T50[ebp]
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00199	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 148  : 	if (!TextFileLoader.GetTokenInteger("maintainparallelflag", &temp))

  0019c	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  001a2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001a6	50		 push	 eax
  001a7	8d 45 c0	 lea	 eax, DWORD PTR $T50[ebp]
  001aa	50		 push	 eax
  001ab	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  001b1	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  001b6	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b8	8b 45 d4	 mov	 eax, DWORD PTR $T50[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 148  : 	if (!TextFileLoader.GetTokenInteger("maintainparallelflag", &temp))

  001bb	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T16[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c2	83 f8 10	 cmp	 eax, 16			; 00000010H
  001c5	72 0d		 jb	 SHORT $LN194@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001c7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c8	50		 push	 eax
  001c9	ff 75 c0	 push	 DWORD PTR $T50[ebp]
  001cc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001d1	83 c4 08	 add	 esp, 8
$LN194@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 148  : 	if (!TextFileLoader.GetTokenInteger("maintainparallelflag", &temp))

  001d4	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T16[ebp], 0
  001db	74 04		 je	 SHORT $LN8@LoadScript

; 149  : 	{
; 150  : 		m_bMaintainParallel = false;

  001dd	32 c0		 xor	 al, al

; 151  : 	}

  001df	eb 0a		 jmp	 SHORT $LN9@LoadScript
$LN8@LoadScript:

; 152  : 	else
; 153  : 	{
; 154  : 		m_bMaintainParallel = temp?true:false;

  001e1	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  001e8	0f 95 c0	 setne	 al
$LN9@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  001eb	88 47 1d	 mov	 BYTE PTR [edi+29], al

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  001ee	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HEDAMPDI@initialvelocity@+8
  001f3	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HEDAMPDI@initialvelocity@
  001fb	89 45 c8	 mov	 DWORD PTR $T49[ebp+8], eax
  001fe	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HEDAMPDI@initialvelocity@+12
  00204	66 89 45 cc	 mov	 WORD PTR $T49[ebp+12], ax
  00208	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HEDAMPDI@initialvelocity@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0020d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T49[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00214	c7 45 d0 0f 00
	00 00		 mov	 DWORD PTR $T49[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0021b	66 0f d6 45 c0	 movq	 QWORD PTR $T49[ebp], xmm0
  00220	88 45 ce	 mov	 BYTE PTR $T49[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00223	c6 45 cf 00	 mov	 BYTE PTR $T49[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 157  : 	if (!TextFileLoader.GetTokenFloat("initialvelocity",&m_fInitVel))

  00227	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  0022a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0022e	50		 push	 eax
  0022f	8d 45 c0	 lea	 eax, DWORD PTR $T49[ebp]
  00232	50		 push	 eax
  00233	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00239	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0023e	85 c0		 test	 eax, eax
  00240	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00244	8b 45 d4	 mov	 eax, DWORD PTR $T49[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 157  : 	if (!TextFileLoader.GetTokenFloat("initialvelocity",&m_fInitVel))

  00247	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T15[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0024e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00251	72 0d		 jb	 SHORT $LN250@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00253	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00254	50		 push	 eax
  00255	ff 75 c0	 push	 DWORD PTR $T49[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0025d	83 c4 08	 add	 esp, 8
$LN250@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 157  : 	if (!TextFileLoader.GetTokenFloat("initialvelocity",&m_fInitVel))

  00260	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T15[ebp], 0
  00267	0f 85 5f 0d 00
	00		 jne	 $LN72@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0026d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09KDIMMAIL@coneangle@
  00275	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09KDIMMAIL@coneangle@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0027a	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T48[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00281	c7 45 d0 09 00
	00 00		 mov	 DWORD PTR $T48[ebp+16], 9

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00288	66 0f d6 45 c0	 movq	 QWORD PTR $T48[ebp], xmm0
  0028d	88 45 c8	 mov	 BYTE PTR $T48[ebp+8], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00290	c6 45 c9 00	 mov	 BYTE PTR $T48[ebp+9], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 162  : 	TextFileLoader.GetTokenFloat("coneangle", &m_fConeAngle);

  00294	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  00297	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0029b	50		 push	 eax
  0029c	8d 45 c0	 lea	 eax, DWORD PTR $T48[ebp]
  0029f	50		 push	 eax
  002a0	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  002a6	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002ab	8b 45 d4	 mov	 eax, DWORD PTR $T48[ebp+20]
  002ae	83 f8 10	 cmp	 eax, 16			; 00000010H
  002b1	72 0d		 jb	 SHORT $LN306@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002b3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002b4	50		 push	 eax
  002b5	ff 75 c0	 push	 DWORD PTR $T48[ebp]
  002b8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002bd	83 c4 08	 add	 esp, 8
$LN306@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  002c0	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09LMFNGIPD@rollangle@
  002c8	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09LMFNGIPD@rollangle@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  002cd	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  002d4	c7 45 d0 09 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 9

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  002db	66 0f d6 45 c0	 movq	 QWORD PTR $T47[ebp], xmm0
  002e0	88 45 c8	 mov	 BYTE PTR $T47[ebp+8], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  002e3	c6 45 c9 00	 mov	 BYTE PTR $T47[ebp+9], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 166  : 	TextFileLoader.GetTokenFloat("rollangle", &m_fRollAngle);

  002e7	8d 47 28	 lea	 eax, DWORD PTR [edi+40]
  002ea	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  002ee	50		 push	 eax
  002ef	8d 45 c0	 lea	 eax, DWORD PTR $T47[ebp]
  002f2	50		 push	 eax
  002f3	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  002f9	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002fe	8b 45 d4	 mov	 eax, DWORD PTR $T47[ebp+20]
  00301	83 f8 10	 cmp	 eax, 16			; 00000010H
  00304	72 0d		 jb	 SHORT $LN362@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00306	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00307	50		 push	 eax
  00308	ff 75 c0	 push	 DWORD PTR $T47[ebp]
  0030b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00310	83 c4 08	 add	 esp, 8
$LN362@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00313	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@LAOKBKDJ@angularvelocity@+8
  00318	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@LAOKBKDJ@angularvelocity@
  00320	89 45 c8	 mov	 DWORD PTR $T46[ebp+8], eax
  00323	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@LAOKBKDJ@angularvelocity@+12
  00329	66 89 45 cc	 mov	 WORD PTR $T46[ebp+12], ax
  0032d	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@LAOKBKDJ@angularvelocity@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00332	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00339	c7 45 d0 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00340	66 0f d6 45 c0	 movq	 QWORD PTR $T46[ebp], xmm0
  00345	88 45 ce	 mov	 BYTE PTR $T46[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00348	c6 45 cf 00	 mov	 BYTE PTR $T46[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 170  : 	TextFileLoader.GetTokenVector3("angularvelocity",&m_v3AngVel);

  0034c	8d 47 2c	 lea	 eax, DWORD PTR [edi+44]
  0034f	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00353	50		 push	 eax
  00354	8d 45 c0	 lea	 eax, DWORD PTR $T46[ebp]
  00357	50		 push	 eax
  00358	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0035e	e8 00 00 00 00	 call	 ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00363	8b 45 d4	 mov	 eax, DWORD PTR $T46[ebp+20]
  00366	83 f8 10	 cmp	 eax, 16			; 00000010H
  00369	72 0d		 jb	 SHORT $LN418@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0036b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0036c	50		 push	 eax
  0036d	ff 75 c0	 push	 DWORD PTR $T46[ebp]
  00370	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00375	83 c4 08	 add	 esp, 8
$LN418@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00378	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_07GFBFDLBM@gravity@
  0037d	89 45 c0	 mov	 DWORD PTR $T45[ebp], eax
  00380	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_07GFBFDLBM@gravity@+4
  00386	66 89 45 c4	 mov	 WORD PTR $T45[ebp+4], ax
  0038a	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_07GFBFDLBM@gravity@+6

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0038f	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00396	c7 45 d0 07 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 7

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0039d	88 45 c6	 mov	 BYTE PTR $T45[ebp+6], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  003a0	c6 45 c7 00	 mov	 BYTE PTR $T45[ebp+7], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 174  : 	TextFileLoader.GetTokenFloat("gravity",&m_fGravity);

  003a4	8d 47 38	 lea	 eax, DWORD PTR [edi+56]
  003a7	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  003ab	50		 push	 eax
  003ac	8d 45 c0	 lea	 eax, DWORD PTR $T45[ebp]
  003af	50		 push	 eax
  003b0	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  003b6	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003bb	8b 45 d4	 mov	 eax, DWORD PTR $T45[ebp+20]
  003be	83 f8 10	 cmp	 eax, 16			; 00000010H
  003c1	72 0d		 jb	 SHORT $LN474@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003c3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003c4	50		 push	 eax
  003c5	ff 75 c0	 push	 DWORD PTR $T45[ebp]
  003c8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003cd	83 c4 08	 add	 esp, 8
$LN474@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  003d0	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@KECLBPOM@hitonbackground@+8
  003d5	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@KECLBPOM@hitonbackground@
  003dd	89 45 c8	 mov	 DWORD PTR $T44[ebp+8], eax
  003e0	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@KECLBPOM@hitonbackground@+12
  003e6	66 89 45 cc	 mov	 WORD PTR $T44[ebp+12], ax
  003ea	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@KECLBPOM@hitonbackground@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003ef	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  003f6	c7 45 d0 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  003fd	66 0f d6 45 c0	 movq	 QWORD PTR $T44[ebp], xmm0
  00402	88 45 ce	 mov	 BYTE PTR $T44[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00405	c6 45 cf 00	 mov	 BYTE PTR $T44[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 178  : 	if (TextFileLoader.GetTokenInteger("hitonbackground",&temp))

  00409	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0040f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00413	50		 push	 eax
  00414	8d 45 c0	 lea	 eax, DWORD PTR $T44[ebp]
  00417	50		 push	 eax
  00418	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0041e	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00423	8b 4d d4	 mov	 ecx, DWORD PTR $T44[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 178  : 	if (TextFileLoader.GetTokenInteger("hitonbackground",&temp))

  00426	8b f0		 mov	 esi, eax
  00428	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0042c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0042f	72 0d		 jb	 SHORT $LN530@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00431	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00432	51		 push	 ecx
  00433	ff 75 c0	 push	 DWORD PTR $T44[ebp]
  00436	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0043b	83 c4 08	 add	 esp, 8
$LN530@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 178  : 	if (TextFileLoader.GetTokenInteger("hitonbackground",&temp))

  0043e	85 f6		 test	 esi, esi
  00440	74 0c		 je	 SHORT $LN11@LoadScript

; 179  : 		m_bHitOnBackground = temp?true:false;

  00442	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  00449	0f 95 c0	 setne	 al
  0044c	eb 02		 jmp	 SHORT $LN12@LoadScript
$LN11@LoadScript:

; 180  : 	else
; 181  : 		m_bHitOnBackground = false;

  0044e	32 c0		 xor	 al, al
$LN12@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00450	88 47 68	 mov	 BYTE PTR [edi+104], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00453	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00455	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0045c	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00463	c6 45 c0 00	 mov	 BYTE PTR $T43[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00467	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0046c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@CFEKODPK@hitonanothermonster@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00473	c7 45 d0 13 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 19 ; 00000013H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0047a	c7 45 d4 1f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00481	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00484	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BE@CFEKODPK@hitonanothermonster@+16
  0048b	66 89 48 10	 mov	 WORD PTR [eax+16], cx
  0048f	8a 0d 12 00 00
	00		 mov	 cl, BYTE PTR ??_C@_0BE@CFEKODPK@hitonanothermonster@+18
  00495	88 48 12	 mov	 BYTE PTR [eax+18], cl

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00498	89 85 d4 fe ff
	ff		 mov	 DWORD PTR __New_ptr$2[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0049e	c6 40 13 00	 mov	 BYTE PTR [eax+19], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  004a2	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  004a8	50		 push	 eax
  004a9	8d 45 c0	 lea	 eax, DWORD PTR $T43[ebp]
  004ac	50		 push	 eax
  004ad	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  004b2	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 183  : 	if (TextFileLoader.GetTokenInteger("hitonanothermonster",&temp))

  004b5	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  004bb	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  004bf	50		 push	 eax
  004c0	8d 45 c0	 lea	 eax, DWORD PTR $T43[ebp]
  004c3	50		 push	 eax
  004c4	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  004ca	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004cf	8b 4d d4	 mov	 ecx, DWORD PTR $T43[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 183  : 	if (TextFileLoader.GetTokenInteger("hitonanothermonster",&temp))

  004d2	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004d4	83 f9 10	 cmp	 ecx, 16			; 00000010H
  004d7	72 0d		 jb	 SHORT $LN586@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004d9	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004da	51		 push	 ecx
  004db	ff 75 c0	 push	 DWORD PTR $T43[ebp]
  004de	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004e3	83 c4 08	 add	 esp, 8
$LN586@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 183  : 	if (TextFileLoader.GetTokenInteger("hitonanothermonster",&temp))

  004e6	85 f6		 test	 esi, esi
  004e8	74 0c		 je	 SHORT $LN13@LoadScript

; 184  : 		m_bHitOnAnotherMonster = temp?true:false;

  004ea	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  004f1	0f 95 c0	 setne	 al
  004f4	eb 02		 jmp	 SHORT $LN14@LoadScript
$LN13@LoadScript:

; 185  : 	else
; 186  : 		m_bHitOnAnotherMonster = false;

  004f6	32 c0		 xor	 al, al
$LN14@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  004f8	88 47 69	 mov	 BYTE PTR [edi+105], al

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  004fb	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@CFHBGHLK@piercecount@+8
  00501	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@CFHBGHLK@piercecount@
  00509	66 89 45 c8	 mov	 WORD PTR $T42[ebp+8], ax
  0050d	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@CFHBGHLK@piercecount@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00512	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00519	c7 45 d0 0b 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00520	66 0f d6 45 c0	 movq	 QWORD PTR $T42[ebp], xmm0
  00525	88 45 ca	 mov	 BYTE PTR $T42[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00528	c6 45 cb 00	 mov	 BYTE PTR $T42[ebp+11], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 188  : 	if (!TextFileLoader.GetTokenInteger("piercecount",&m_iPierceCount))

  0052c	8d 77 6c	 lea	 esi, DWORD PTR [edi+108]
  0052f	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00533	56		 push	 esi
  00534	8d 45 c0	 lea	 eax, DWORD PTR $T42[ebp]
  00537	50		 push	 eax
  00538	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0053e	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00543	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00545	8b 45 d4	 mov	 eax, DWORD PTR $T42[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 188  : 	if (!TextFileLoader.GetTokenInteger("piercecount",&m_iPierceCount))

  00548	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T14[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0054f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00552	72 0d		 jb	 SHORT $LN642@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00554	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00555	50		 push	 eax
  00556	ff 75 c0	 push	 DWORD PTR $T42[ebp]
  00559	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0055e	83 c4 08	 add	 esp, 8
$LN642@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 188  : 	if (!TextFileLoader.GetTokenInteger("piercecount",&m_iPierceCount))

  00561	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T14[ebp], 0
  00568	74 06		 je	 SHORT $LN15@LoadScript

; 189  : 		m_iPierceCount = 0;

  0056a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN15@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00570	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09HBCJNFFH@bombrange@
  00578	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09HBCJNFFH@bombrange@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0057d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00584	c7 45 d0 09 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 9

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0058b	66 0f d6 45 c0	 movq	 QWORD PTR $T41[ebp], xmm0
  00590	88 45 c8	 mov	 BYTE PTR $T41[ebp+8], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00593	c6 45 c9 00	 mov	 BYTE PTR $T41[ebp+9], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 194  : 	TextFileLoader.GetTokenFloat("bombrange",&m_fBombRange);

  00597	8d 47 3c	 lea	 eax, DWORD PTR [edi+60]
  0059a	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0059e	50		 push	 eax
  0059f	8d 45 c0	 lea	 eax, DWORD PTR $T41[ebp]
  005a2	50		 push	 eax
  005a3	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  005a9	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005ae	8b 45 d4	 mov	 eax, DWORD PTR $T41[ebp+20]
  005b1	83 f8 10	 cmp	 eax, 16			; 00000010H
  005b4	72 0d		 jb	 SHORT $LN698@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  005b6	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005b7	50		 push	 eax
  005b8	ff 75 c0	 push	 DWORD PTR $T41[ebp]
  005bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  005c0	83 c4 08	 add	 esp, 8
$LN698@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  005c3	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@JPKFDMHA@bombeffect@
  005cb	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@JPKFDMHA@bombeffect@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005d1	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  005d8	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR $T40[ebp+16], 10 ; 0000000aH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  005df	66 0f d6 45 c0	 movq	 QWORD PTR $T40[ebp], xmm0
  005e4	66 89 45 c8	 mov	 WORD PTR $T40[ebp+8], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  005e8	c6 45 ca 00	 mov	 BYTE PTR $T40[ebp+10], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 198  : 	if (!TextFileLoader.GetTokenString("bombeffect",&m_strBombEffectName))

  005ec	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
  005ef	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  005f3	56		 push	 esi
  005f4	8d 45 c0	 lea	 eax, DWORD PTR $T40[ebp]
  005f7	50		 push	 eax
  005f8	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  005fe	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00603	85 c0		 test	 eax, eax
  00605	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00609	8b 45 d4	 mov	 eax, DWORD PTR $T40[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 198  : 	if (!TextFileLoader.GetTokenString("bombeffect",&m_strBombEffectName))

  0060c	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T13[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00613	83 f8 10	 cmp	 eax, 16			; 00000010H
  00616	72 0d		 jb	 SHORT $LN754@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00618	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00619	50		 push	 eax
  0061a	ff 75 c0	 push	 DWORD PTR $T40[ebp]
  0061d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00622	83 c4 08	 add	 esp, 8
$LN754@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 198  : 	if (!TextFileLoader.GetTokenString("bombeffect",&m_strBombEffectName))

  00625	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T13[ebp], 0
  0062c	74 10		 je	 SHORT $LN16@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0062e	6a 00		 push	 0
  00630	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00635	8b ce		 mov	 ecx, esi
  00637	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 201  : 	}

  0063c	eb 69		 jmp	 SHORT $LN18@LoadScript
$LN16@LoadScript:

; 202  : 	else if (!m_strBombEffectName.empty())

  0063e	83 7f 50 00	 cmp	 DWORD PTR [edi+80], 0
  00642	74 63		 je	 SHORT $LN18@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00644	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00648	8b c6		 mov	 eax, esi
  0064a	72 02		 jb	 SHORT $LN1336@LoadScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0064c	8b 06		 mov	 eax, DWORD PTR [esi]
$LN1336@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 204  : 		if (!IsGlobalFileName(m_strBombEffectName.c_str()))

  0064e	50		 push	 eax
  0064f	e8 00 00 00 00	 call	 ?IsGlobalFileName@@YA_NPBD@Z ; IsGlobalFileName
  00654	83 c4 04	 add	 esp, 4
  00657	84 c0		 test	 al, al
  00659	75 32		 jne	 SHORT $LN19@LoadScript

; 205  : 			m_strBombEffectName = GetOnlyPathName(TextFileLoader.GetFileName()) + m_strBombEffectName;

  0065b	56		 push	 esi
  0065c	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00662	e8 00 00 00 00	 call	 ?GetFileName@CTextFileLoader@@QAEPBDXZ ; CTextFileLoader::GetFileName
  00667	50		 push	 eax
  00668	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
  0066d	83 c4 04	 add	 esp, 4
  00670	50		 push	 eax
  00671	8d 45 c0	 lea	 eax, DWORD PTR $T39[ebp]
  00674	50		 push	 eax
  00675	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0067a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0067d	8b ce		 mov	 ecx, esi
  0067f	50		 push	 eax
  00680	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00685	8d 4d c0	 lea	 ecx, DWORD PTR $T39[ebp]
  00688	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN19@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  0068d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00691	72 02		 jb	 SHORT $LN778@LoadScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00693	8b 36		 mov	 esi, DWORD PTR [esi]
$LN778@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 206  : 		CEffectManager::Instance().RegisterEffect2(m_strBombEffectName.c_str(),&m_dwBombEffectID);

  00695	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0069b	8d 47 58	 lea	 eax, DWORD PTR [edi+88]
  0069e	6a 00		 push	 0
  006a0	50		 push	 eax
  006a1	56		 push	 esi
  006a2	e8 00 00 00 00	 call	 ?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z ; CEffectManager::RegisterEffect2
$LN18@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  006a7	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@PGFICFIL@homingflag@
  006af	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@PGFICFIL@homingflag@+8

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  006b5	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  006bc	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 10 ; 0000000aH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  006c3	66 0f d6 45 c0	 movq	 QWORD PTR $T38[ebp], xmm0
  006c8	66 89 45 c8	 mov	 WORD PTR $T38[ebp+8], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  006cc	c6 45 ca 00	 mov	 BYTE PTR $T38[ebp+10], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 209  : 	if (!TextFileLoader.GetTokenInteger("homingflag", &temp))

  006d0	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  006d6	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  006da	50		 push	 eax
  006db	8d 45 c0	 lea	 eax, DWORD PTR $T38[ebp]
  006de	50		 push	 eax
  006df	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  006e5	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  006ea	85 c0		 test	 eax, eax
  006ec	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006f0	8b 45 d4	 mov	 eax, DWORD PTR $T38[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 209  : 	if (!TextFileLoader.GetTokenInteger("homingflag", &temp))

  006f3	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T12[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006fa	83 f8 10	 cmp	 eax, 16			; 00000010H
  006fd	72 0d		 jb	 SHORT $LN832@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  006ff	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00700	50		 push	 eax
  00701	ff 75 c0	 push	 DWORD PTR $T38[ebp]
  00704	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00709	83 c4 08	 add	 esp, 8
$LN832@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 209  : 	if (!TextFileLoader.GetTokenInteger("homingflag", &temp))

  0070c	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T12[ebp], 0
  00713	74 04		 je	 SHORT $LN20@LoadScript

; 210  : 		m_bIsHoming = false;

  00715	32 c0		 xor	 al, al
  00717	eb 0a		 jmp	 SHORT $LN21@LoadScript
$LN20@LoadScript:

; 211  : 	else
; 212  : 		m_bIsHoming = temp?true:false;

  00719	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  00720	0f 95 c0	 setne	 al
$LN21@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00723	88 47 5c	 mov	 BYTE PTR [edi+92], al

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00726	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  00729	6a 0f		 push	 15			; 0000000fH
  0072b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BAKAIINA@homingstarttime@

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00730	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00737	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0073e	c6 45 c0 00	 mov	 BYTE PTR $T37[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00742	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 214  : 	if (!TextFileLoader.GetTokenFloat("homingstarttime",&m_fHomingStartTime))

  00747	8d 77 64	 lea	 esi, DWORD PTR [edi+100]
  0074a	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  0074e	56		 push	 esi
  0074f	8d 45 c0	 lea	 eax, DWORD PTR $T37[ebp]
  00752	50		 push	 eax
  00753	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00759	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0075e	85 c0		 test	 eax, eax
  00760	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00764	8b 45 d4	 mov	 eax, DWORD PTR $T37[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 214  : 	if (!TextFileLoader.GetTokenFloat("homingstarttime",&m_fHomingStartTime))

  00767	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0076e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00771	72 0d		 jb	 SHORT $LN854@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00773	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00774	50		 push	 eax
  00775	ff 75 c0	 push	 DWORD PTR $T37[ebp]
  00778	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0077d	83 c4 08	 add	 esp, 8
$LN854@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 214  : 	if (!TextFileLoader.GetTokenFloat("homingstarttime",&m_fHomingStartTime))

  00780	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T11[ebp], 0
  00787	0f 57 c0	 xorps	 xmm0, xmm0
  0078a	0f 29 45 c0	 movaps	 XMMWORD PTR tv7367[ebp], xmm0
  0078e	74 06		 je	 SHORT $LN22@LoadScript

; 215  : 		m_fHomingStartTime = 0.0f;

  00790	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN22@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00796	6a 0e		 push	 14			; 0000000eH
  00798	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MGJJCPHI@homingmaxangle@
  0079d	8d 4d a8	 lea	 ecx, DWORD PTR $T34[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  007a0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T34[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  007a7	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T34[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  007ae	c6 45 a8 00	 mov	 BYTE PTR $T34[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  007b2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 217  : 	if (!TextFileLoader.GetTokenFloat("homingmaxangle",&m_fHomingMaxAngle))

  007b7	8d 77 60	 lea	 esi, DWORD PTR [edi+96]
  007ba	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  007be	56		 push	 esi
  007bf	8d 45 a8	 lea	 eax, DWORD PTR $T34[ebp]
  007c2	50		 push	 eax
  007c3	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  007c9	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  007ce	85 c0		 test	 eax, eax
  007d0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007d4	8b 45 bc	 mov	 eax, DWORD PTR $T34[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 217  : 	if (!TextFileLoader.GetTokenFloat("homingmaxangle",&m_fHomingMaxAngle))

  007d7	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007de	83 f8 10	 cmp	 eax, 16			; 00000010H
  007e1	72 0d		 jb	 SHORT $LN876@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007e3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007e4	50		 push	 eax
  007e5	ff 75 a8	 push	 DWORD PTR $T34[ebp]
  007e8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  007ed	83 c4 08	 add	 esp, 8
$LN876@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 217  : 	if (!TextFileLoader.GetTokenFloat("homingmaxangle",&m_fHomingMaxAngle))

  007f0	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T10[ebp], 0
  007f7	74 06		 je	 SHORT $LN23@LoadScript

; 218  : 		m_fHomingMaxAngle = 0.0f;

  007f9	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN23@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  007ff	6a 05		 push	 5
  00801	68 00 00 00 00	 push	 OFFSET ??_C@_05CCGOGOBM@range@
  00806	8d 4d a8	 lea	 ecx, DWORD PTR $T33[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00809	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00810	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00817	c6 45 a8 00	 mov	 BYTE PTR $T33[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0081b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 220  : 	if (!TextFileLoader.GetTokenFloat("range",&m_fRange))

  00820	8d 47 74	 lea	 eax, DWORD PTR [edi+116]
  00823	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00827	50		 push	 eax
  00828	8d 45 a8	 lea	 eax, DWORD PTR $T33[ebp]
  0082b	50		 push	 eax
  0082c	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00832	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00837	85 c0		 test	 eax, eax
  00839	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0083d	8b 45 bc	 mov	 eax, DWORD PTR $T33[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 220  : 	if (!TextFileLoader.GetTokenFloat("range",&m_fRange))

  00840	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T9[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00847	83 f8 10	 cmp	 eax, 16			; 00000010H
  0084a	72 0d		 jb	 SHORT $LN898@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0084c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0084d	50		 push	 eax
  0084e	ff 75 a8	 push	 DWORD PTR $T33[ebp]
  00851	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00856	83 c4 08	 add	 esp, 8
$LN898@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 220  : 	if (!TextFileLoader.GetTokenFloat("range",&m_fRange))

  00859	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T9[ebp], 0
  00860	0f 85 66 07 00
	00		 jne	 $LN72@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00866	6a 0c		 push	 12			; 0000000cH
  00868	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OKFAMOHD@acceleration@
  0086d	8d 4d a8	 lea	 ecx, DWORD PTR $T32[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00870	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00877	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0087e	c6 45 a8 00	 mov	 BYTE PTR $T32[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00882	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 223  : 	if (!TextFileLoader.GetTokenVector3("acceleration",&m_v3Accel))

  00887	83 c7 78	 add	 edi, 120		; 00000078H
  0088a	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  0088e	57		 push	 edi
  0088f	8d 45 a8	 lea	 eax, DWORD PTR $T32[ebp]
  00892	50		 push	 eax
  00893	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00899	e8 00 00 00 00	 call	 ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
  0089e	85 c0		 test	 eax, eax
  008a0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008a4	8b 45 bc	 mov	 eax, DWORD PTR $T32[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 223  : 	if (!TextFileLoader.GetTokenVector3("acceleration",&m_v3Accel))

  008a7	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T8[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  008ae	83 f8 10	 cmp	 eax, 16			; 00000010H
  008b1	72 0d		 jb	 SHORT $LN920@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  008b3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008b4	50		 push	 eax
  008b5	ff 75 a8	 push	 DWORD PTR $T32[ebp]
  008b8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  008bd	83 c4 08	 add	 esp, 8
$LN920@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 223  : 	if (!TextFileLoader.GetTokenVector3("acceleration",&m_v3Accel))

  008c0	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T8[ebp], 0
  008c7	74 18		 je	 SHORT $LN25@LoadScript

; 224  : 		m_v3Accel = D3DXVECTOR3(0.0f,0.0f,0.0f);

  008c9	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR tv7367[ebp]
  008cd	0f 14 c0	 unpcklps xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  008d0	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 224  : 		m_v3Accel = D3DXVECTOR3(0.0f,0.0f,0.0f);

  008d7	8b 45 bc	 mov	 eax, DWORD PTR $T35[ebp+8]
  008da	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  008de	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN25@LoadScript:

; 227  : 	for(i=0;i<TextFileLoader.GetChildNodeCount();i++)

  008e1	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  008e7	33 ff		 xor	 edi, edi
  008e9	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  008ee	85 c0		 test	 eax, eax
  008f0	0f 84 c8 06 00
	00		 je	 $LN3@LoadScript
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 49   : 			CGotoChild(CTextFileLoader * pOwner, DWORD dwIndex) : m_pOwner(pOwner)

  008f6	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _TextFileLoader$[ebp]
  008fc	89 85 d4 fe ff
	ff		 mov	 DWORD PTR _GotoChild$4[ebp], eax
$LL4@LoadScript:

; 50   : 			{
; 51   : 				m_pOwner->SetChildNode(dwIndex);

  00902	57		 push	 edi
  00903	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00909	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0090e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00915	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0091c	c6 45 c0 00	 mov	 BYTE PTR _strNodeName$36[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 233  : 		TextFileLoader.GetCurrentNodeName(&strNodeName);

  00920	8d 45 c0	 lea	 eax, DWORD PTR _strNodeName$36[ebp]
  00923	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00927	50		 push	 eax
  00928	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0092e	e8 00 00 00 00	 call	 ?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::GetCurrentNodeName

; 234  : 
; 235  : 		if (strNodeName=="attachdata")

  00933	8d 45 c0	 lea	 eax, DWORD PTR _strNodeName$36[ebp]
  00936	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NFEBBADL@attachdata@
  0093b	50		 push	 eax
  0093c	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00941	83 c4 08	 add	 esp, 8
  00944	84 c0		 test	 al, al
  00946	0f 84 06 06 00
	00		 je	 $LN26@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0094c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fad$18[ebp+24], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00956	c7 85 7c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _fad$18[ebp+28], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00960	c6 85 68 ff ff
	ff 00		 mov	 BYTE PTR _fad$18[ebp+8], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00967	6a 04		 push	 4
  00969	68 00 00 00 00	 push	 OFFSET ??_C@_04GPMDFGEJ@type@
  0096e	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 237  : 			TFlyingAttachData fad;

  00971	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00975	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0097c	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00983	c6 45 a8 00	 mov	 BYTE PTR $T31[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00987	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 239  : 			if (!TextFileLoader.GetTokenInteger("type",&fad.iType))

  0098c	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp]
  00992	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00996	50		 push	 eax
  00997	8d 45 a8	 lea	 eax, DWORD PTR $T31[ebp]
  0099a	50		 push	 eax
  0099b	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  009a1	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  009a6	85 c0		 test	 eax, eax
  009a8	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009ac	8b 45 bc	 mov	 eax, DWORD PTR $T31[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 239  : 			if (!TextFileLoader.GetTokenInteger("type",&fad.iType))

  009af	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009b6	83 f8 10	 cmp	 eax, 16			; 00000010H
  009b9	72 0d		 jb	 SHORT $LN967@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009bb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009bc	50		 push	 eax
  009bd	ff 75 a8	 push	 DWORD PTR $T31[ebp]
  009c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  009c5	83 c4 08	 add	 esp, 8
$LN967@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 239  : 			if (!TextFileLoader.GetTokenInteger("type",&fad.iType))

  009c8	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T7[ebp], 0
  009cf	74 66		 je	 SHORT $LN28@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009d1	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _fad$18[ebp+28]
  009d7	83 f8 10	 cmp	 eax, 16			; 00000010H
  009da	72 10		 jb	 SHORT $LN980@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009dc	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009dd	50		 push	 eax
  009de	ff b5 68 ff ff
	ff		 push	 DWORD PTR _fad$18[ebp+8]
  009e4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  009e9	83 c4 08	 add	 esp, 8
$LN980@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009ec	8b 45 d4	 mov	 eax, DWORD PTR _strNodeName$36[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  009ef	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fad$18[ebp+24], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  009f9	c7 85 7c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _fad$18[ebp+28], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a03	c6 85 68 ff ff
	ff 00		 mov	 BYTE PTR _fad$18[ebp+8], 0

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a0a	83 f8 10	 cmp	 eax, 16			; 00000010H
  00a0d	72 0d		 jb	 SHORT $LN990@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a0f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a10	50		 push	 eax
  00a11	ff 75 c0	 push	 DWORD PTR _strNodeName$36[ebp]
  00a14	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00a19	83 c4 08	 add	 esp, 8
$LN990@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00a1c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a23	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a2a	c6 45 c0 00	 mov	 BYTE PTR _strNodeName$36[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00a2e	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 240  : 				continue;

  00a32	e9 64 05 00 00	 jmp	 $LN1339@LoadScript
$LN28@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a37	6a 07		 push	 7
  00a39	68 00 00 00 00	 push	 OFFSET ??_C@_07LKHMKNJJ@flytype@
  00a3e	8d 4d a8	 lea	 ecx, DWORD PTR $T30[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00a41	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a48	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a4f	c6 45 a8 00	 mov	 BYTE PTR $T30[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a53	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 241  : 			TextFileLoader.GetTokenInteger("flytype",&fad.iFlyType);

  00a58	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+4]
  00a5e	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00a62	50		 push	 eax
  00a63	8d 45 a8	 lea	 eax, DWORD PTR $T30[ebp]
  00a66	50		 push	 eax
  00a67	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00a6d	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a72	8b 45 bc	 mov	 eax, DWORD PTR $T30[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 241  : 			TextFileLoader.GetTokenInteger("flytype",&fad.iFlyType);

  00a75	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a79	83 f8 10	 cmp	 eax, 16			; 00000010H
  00a7c	72 0d		 jb	 SHORT $LN1015@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a7e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a7f	50		 push	 eax
  00a80	ff 75 a8	 push	 DWORD PTR $T30[ebp]
  00a83	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00a88	83 c4 08	 add	 esp, 8
$LN1015@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a8b	6a 0a		 push	 10			; 0000000aH
  00a8d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BMGMFMHI@attachfile@
  00a92	8d 4d a8	 lea	 ecx, DWORD PTR $T29[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00a95	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T29[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a9c	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00aa3	c6 45 a8 00	 mov	 BYTE PTR $T29[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00aa7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 242  : 			if (!TextFileLoader.GetTokenString("attachfile",&fad.strFilename))

  00aac	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+8]
  00ab2	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  00ab6	50		 push	 eax
  00ab7	8d 45 a8	 lea	 eax, DWORD PTR $T29[ebp]
  00aba	50		 push	 eax
  00abb	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00ac1	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00ac6	85 c0		 test	 eax, eax
  00ac8	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00acc	8b 45 bc	 mov	 eax, DWORD PTR $T29[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 242  : 			if (!TextFileLoader.GetTokenString("attachfile",&fad.strFilename))

  00acf	0f 94 85 df fe
	ff ff		 sete	 BYTE PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ad6	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ad9	72 0d		 jb	 SHORT $LN1037@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00adb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00adc	50		 push	 eax
  00add	ff 75 a8	 push	 DWORD PTR $T29[ebp]
  00ae0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00ae5	83 c4 08	 add	 esp, 8
$LN1037@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 242  : 			if (!TextFileLoader.GetTokenString("attachfile",&fad.strFilename))

  00ae8	80 bd df fe ff
	ff 00		 cmp	 BYTE PTR $T6[ebp], 0
  00aef	74 17		 je	 SHORT $LN29@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00af1	6a 00		 push	 0
  00af3	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00af8	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _fad$18[ebp+8]
  00afe	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 245  : 			}

  00b03	e9 fd 00 00 00	 jmp	 $LN31@LoadScript
$LN29@LoadScript:

; 246  : 			else if (!fad.strFilename.empty())

  00b08	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR _fad$18[ebp+24], 0
  00b0f	0f 84 f0 00 00
	00		 je	 $LN31@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00b15	83 bd 7c ff ff
	ff 10		 cmp	 DWORD PTR _fad$18[ebp+28], 16 ; 00000010H
  00b1c	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+8]
  00b22	0f 43 85 68 ff
	ff ff		 cmovae	 eax, DWORD PTR _fad$18[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 248  : 				if (!IsGlobalFileName(fad.strFilename.c_str()))

  00b29	50		 push	 eax
  00b2a	e8 00 00 00 00	 call	 ?IsGlobalFileName@@YA_NPBD@Z ; IsGlobalFileName
  00b2f	83 c4 04	 add	 esp, 4
  00b32	84 c0		 test	 al, al
  00b34	0f 85 a7 00 00
	00		 jne	 $LN1080@LoadScript

; 249  : 					fad.strFilename = GetOnlyPathName(TextFileLoader.GetFileName()) + fad.strFilename;

  00b3a	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+8]
  00b40	50		 push	 eax
  00b41	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00b47	e8 00 00 00 00	 call	 ?GetFileName@CTextFileLoader@@QAEPBDXZ ; CTextFileLoader::GetFileName
  00b4c	50		 push	 eax
  00b4d	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
  00b52	83 c4 04	 add	 esp, 4
  00b55	50		 push	 eax
  00b56	8d 45 a8	 lea	 eax, DWORD PTR $T28[ebp]
  00b59	50		 push	 eax
  00b5a	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00b5f	8b f0		 mov	 esi, eax
  00b61	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00b64	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+8]
  00b6a	3b c6		 cmp	 eax, esi
  00b6c	74 5e		 je	 SHORT $LN1075@LoadScript

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b6e	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _fad$18[ebp+28]
  00b74	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00b77	72 10		 jb	 SHORT $LN1064@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b79	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b7a	51		 push	 ecx
  00b7b	ff b5 68 ff ff
	ff		 push	 DWORD PTR _fad$18[ebp+8]
  00b81	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b86	83 c4 08	 add	 esp, 8
$LN1064@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00b89	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fad$18[ebp+24], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b93	c7 85 7c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _fad$18[ebp+28], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00b9d	c6 85 68 ff ff
	ff 00		 mov	 BYTE PTR _fad$18[ebp+8], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00ba4	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00ba7	0f 11 85 68 ff
	ff ff		 movups	 XMMWORD PTR _fad$18[ebp+8], xmm0
  00bae	f3 0f 7e 46 10	 movq	 xmm0, QWORD PTR [esi+16]
  00bb3	66 0f d6 85 78
	ff ff ff	 movq	 QWORD PTR _fad$18[ebp+24], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00bbb	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00bc2	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00bc9	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN1075@LoadScript:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00bcc	8b 45 bc	 mov	 eax, DWORD PTR $T28[ebp+20]
  00bcf	83 f8 10	 cmp	 eax, 16			; 00000010H
  00bd2	72 0d		 jb	 SHORT $LN1080@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00bd4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bd5	50		 push	 eax
  00bd6	ff 75 a8	 push	 DWORD PTR $T28[ebp]
  00bd9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bde	83 c4 08	 add	 esp, 8
$LN1080@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00be1	83 bd 7c ff ff
	ff 10		 cmp	 DWORD PTR _fad$18[ebp+28], 16 ; 00000010H
  00be8	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _fad$18[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 250  : 				CEffectManager::Instance().RegisterEffect(fad.strFilename.c_str());

  00bee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00bf4	0f 43 85 68 ff
	ff ff		 cmovae	 eax, DWORD PTR _fad$18[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 250  : 				CEffectManager::Instance().RegisterEffect(fad.strFilename.c_str());

  00bfb	6a 00		 push	 0
  00bfd	6a 00		 push	 0
  00bff	50		 push	 eax
  00c00	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect
$LN31@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c05	6a 08		 push	 8
  00c07	68 00 00 00 00	 push	 OFFSET ??_C@_08MNMLIJJL@tailflag@
  00c0c	8d 4d a8	 lea	 ecx, DWORD PTR $T27[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00c0f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00c16	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T27[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00c1d	c6 45 a8 00	 mov	 BYTE PTR $T27[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c21	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 253  : 			TextFileLoader.GetTokenInteger("tailflag",&temp);

  00c26	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00c2c	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00c30	50		 push	 eax
  00c31	8d 45 a8	 lea	 eax, DWORD PTR $T27[ebp]
  00c34	50		 push	 eax
  00c35	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c3b	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00c40	8b 45 bc	 mov	 eax, DWORD PTR $T27[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 253  : 			TextFileLoader.GetTokenInteger("tailflag",&temp);

  00c43	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00c47	83 f8 10	 cmp	 eax, 16			; 00000010H
  00c4a	72 0d		 jb	 SHORT $LN1109@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00c4c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c4d	50		 push	 eax
  00c4e	ff 75 a8	 push	 DWORD PTR $T27[ebp]
  00c51	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00c56	83 c4 08	 add	 esp, 8
$LN1109@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 254  : 			if (temp)

  00c59	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  00c60	0f 84 58 01 00
	00		 je	 $LN33@LoadScript
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c66	6a 09		 push	 9
  00c68	68 00 00 00 00	 push	 OFFSET ??_C@_09JBANPIDH@tailcolor@
  00c6d	8d 4d a8	 lea	 ecx, DWORD PTR $T26[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 256  : 				fad.bHasTail = true;

  00c70	c6 45 80 01	 mov	 BYTE PTR _fad$18[ebp+32], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00c74	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T26[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00c7b	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T26[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00c82	c6 45 a8 00	 mov	 BYTE PTR $T26[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c86	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 257  : 				TextFileLoader.GetTokenDoubleWord("tailcolor",&fad.dwTailColor);

  00c8b	8d 45 84	 lea	 eax, DWORD PTR _fad$18[ebp+36]
  00c8e	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00c92	50		 push	 eax
  00c93	8d 45 a8	 lea	 eax, DWORD PTR $T26[ebp]
  00c96	50		 push	 eax
  00c97	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c9d	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ca2	8b 45 bc	 mov	 eax, DWORD PTR $T26[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 257  : 				TextFileLoader.GetTokenDoubleWord("tailcolor",&fad.dwTailColor);

  00ca5	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ca9	83 f8 10	 cmp	 eax, 16			; 00000010H
  00cac	72 0d		 jb	 SHORT $LN1131@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00cae	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00caf	50		 push	 eax
  00cb0	ff 75 a8	 push	 DWORD PTR $T26[ebp]
  00cb3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00cb8	83 c4 08	 add	 esp, 8
$LN1131@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00cbb	6a 0a		 push	 10			; 0000000aH
  00cbd	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJCCBNOK@taillength@
  00cc2	8d 4d a8	 lea	 ecx, DWORD PTR $T25[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00cc5	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T25[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ccc	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T25[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00cd3	c6 45 a8 00	 mov	 BYTE PTR $T25[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00cd7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 258  : 				TextFileLoader.GetTokenFloat("taillength",&fad.fTailLength);

  00cdc	8d 45 88	 lea	 eax, DWORD PTR _fad$18[ebp+40]
  00cdf	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00ce3	50		 push	 eax
  00ce4	8d 45 a8	 lea	 eax, DWORD PTR $T25[ebp]
  00ce7	50		 push	 eax
  00ce8	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00cee	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00cf3	8b 45 bc	 mov	 eax, DWORD PTR $T25[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 258  : 				TextFileLoader.GetTokenFloat("taillength",&fad.fTailLength);

  00cf6	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00cfa	83 f8 10	 cmp	 eax, 16			; 00000010H
  00cfd	72 0d		 jb	 SHORT $LN1153@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00cff	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d00	50		 push	 eax
  00d01	ff 75 a8	 push	 DWORD PTR $T25[ebp]
  00d04	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00d09	83 c4 08	 add	 esp, 8
$LN1153@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00d0c	6a 08		 push	 8
  00d0e	68 00 00 00 00	 push	 OFFSET ??_C@_08HAFAEPEI@tailsize@
  00d13	8d 4d a8	 lea	 ecx, DWORD PTR $T24[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00d16	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T24[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00d1d	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T24[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00d24	c6 45 a8 00	 mov	 BYTE PTR $T24[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00d28	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 259  : 				TextFileLoader.GetTokenFloat("tailsize",&fad.fTailSize);

  00d2d	8d 45 8c	 lea	 eax, DWORD PTR _fad$18[ebp+44]
  00d30	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  00d34	50		 push	 eax
  00d35	8d 45 a8	 lea	 eax, DWORD PTR $T24[ebp]
  00d38	50		 push	 eax
  00d39	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00d3f	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d44	8b 45 bc	 mov	 eax, DWORD PTR $T24[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 259  : 				TextFileLoader.GetTokenFloat("tailsize",&fad.fTailSize);

  00d47	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d4b	83 f8 10	 cmp	 eax, 16			; 00000010H
  00d4e	72 0d		 jb	 SHORT $LN1175@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00d50	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d51	50		 push	 eax
  00d52	ff 75 a8	 push	 DWORD PTR $T24[ebp]
  00d55	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00d5a	83 c4 08	 add	 esp, 8
$LN1175@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00d5d	6a 0d		 push	 13			; 0000000dH
  00d5f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DNCKGFAO@tailshaperect@
  00d64	8d 4d a8	 lea	 ecx, DWORD PTR $T23[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00d67	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T23[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00d6e	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00d75	c6 45 a8 00	 mov	 BYTE PTR $T23[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00d79	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 260  : 				TextFileLoader.GetTokenInteger("tailshaperect",&temp);

  00d7e	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00d84	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  00d88	50		 push	 eax
  00d89	8d 45 a8	 lea	 eax, DWORD PTR $T23[ebp]
  00d8c	50		 push	 eax
  00d8d	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00d93	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d98	8b 45 bc	 mov	 eax, DWORD PTR $T23[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 260  : 				TextFileLoader.GetTokenInteger("tailshaperect",&temp);

  00d9b	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d9f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00da2	72 0d		 jb	 SHORT $LN1197@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00da4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00da5	50		 push	 eax
  00da6	ff 75 a8	 push	 DWORD PTR $T23[ebp]
  00da9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00dae	83 c4 08	 add	 esp, 8
$LN1197@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 261  : 				fad.bRectShape = temp?true:false;

  00db1	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _temp$[ebp], 0
  00db8	0f 95 45 90	 setne	 BYTE PTR _fad$18[ebp+48]

; 262  : 			}

  00dbc	eb 04		 jmp	 SHORT $LN34@LoadScript
$LN33@LoadScript:

; 263  : 			else
; 264  : 			{
; 265  : 				fad.bHasTail = false;

  00dbe	c6 45 80 00	 mov	 BYTE PTR _fad$18[ebp+32], 0
$LN34@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00dc2	6a 04		 push	 4
  00dc4	68 00 00 00 00	 push	 OFFSET ??_C@_04FBAPEKPH@roll@
  00dc9	8d 4d a8	 lea	 ecx, DWORD PTR $T22[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00dcc	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T22[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00dd3	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T22[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00dda	c6 45 a8 00	 mov	 BYTE PTR $T22[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00dde	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 268  : 			TextFileLoader.GetTokenFloat("roll",&fad.fRoll);

  00de3	8d 45 94	 lea	 eax, DWORD PTR _fad$18[ebp+52]
  00de6	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  00dea	50		 push	 eax
  00deb	8d 45 a8	 lea	 eax, DWORD PTR $T22[ebp]
  00dee	50		 push	 eax
  00def	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00df5	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00dfa	8b 45 bc	 mov	 eax, DWORD PTR $T22[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 268  : 			TextFileLoader.GetTokenFloat("roll",&fad.fRoll);

  00dfd	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e01	83 f8 10	 cmp	 eax, 16			; 00000010H
  00e04	72 0d		 jb	 SHORT $LN1219@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00e06	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e07	50		 push	 eax
  00e08	ff 75 a8	 push	 DWORD PTR $T22[ebp]
  00e0b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00e10	83 c4 08	 add	 esp, 8
$LN1219@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e13	6a 08		 push	 8
  00e15	68 00 00 00 00	 push	 OFFSET ??_C@_08LHFODBFO@distance@
  00e1a	8d 4d a8	 lea	 ecx, DWORD PTR $T21[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00e1d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T21[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00e24	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T21[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00e2b	c6 45 a8 00	 mov	 BYTE PTR $T21[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e2f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 269  : 			TextFileLoader.GetTokenFloat("distance",&fad.fDistance);

  00e34	8d 45 98	 lea	 eax, DWORD PTR _fad$18[ebp+56]
  00e37	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  00e3b	50		 push	 eax
  00e3c	8d 45 a8	 lea	 eax, DWORD PTR $T21[ebp]
  00e3f	50		 push	 eax
  00e40	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00e46	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e4b	8b 45 bc	 mov	 eax, DWORD PTR $T21[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 269  : 			TextFileLoader.GetTokenFloat("distance",&fad.fDistance);

  00e4e	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e52	83 f8 10	 cmp	 eax, 16			; 00000010H
  00e55	72 0d		 jb	 SHORT $LN1241@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00e57	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e58	50		 push	 eax
  00e59	ff 75 a8	 push	 DWORD PTR $T21[ebp]
  00e5c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00e61	83 c4 08	 add	 esp, 8
$LN1241@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e64	6a 06		 push	 6
  00e66	68 00 00 00 00	 push	 OFFSET ??_C@_06FBOEEHNL@period@
  00e6b	8d 4d a8	 lea	 ecx, DWORD PTR $T20[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00e6e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T20[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00e75	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00e7c	c6 45 a8 00	 mov	 BYTE PTR $T20[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e80	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 270  : 			TextFileLoader.GetTokenFloat("period",&fad.fPeriod);

  00e85	8d 45 9c	 lea	 eax, DWORD PTR _fad$18[ebp+60]
  00e88	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  00e8c	50		 push	 eax
  00e8d	8d 45 a8	 lea	 eax, DWORD PTR $T20[ebp]
  00e90	50		 push	 eax
  00e91	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00e97	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e9c	8b 45 bc	 mov	 eax, DWORD PTR $T20[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 270  : 			TextFileLoader.GetTokenFloat("period",&fad.fPeriod);

  00e9f	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ea3	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ea6	72 0d		 jb	 SHORT $LN1263@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ea8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ea9	50		 push	 eax
  00eaa	ff 75 a8	 push	 DWORD PTR $T20[ebp]
  00ead	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00eb2	83 c4 08	 add	 esp, 8
$LN1263@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00eb5	6a 09		 push	 9
  00eb7	68 00 00 00 00	 push	 OFFSET ??_C@_09EHCGJNBI@amplitude@
  00ebc	8d 4d a8	 lea	 ecx, DWORD PTR $T19[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00ebf	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T19[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00ec6	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T19[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ecd	c6 45 a8 00	 mov	 BYTE PTR $T19[ebp], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ed1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 271  : 			TextFileLoader.GetTokenFloat("amplitude",&fad.fAmplitude);

  00ed6	8d 45 a0	 lea	 eax, DWORD PTR _fad$18[ebp+64]
  00ed9	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  00edd	50		 push	 eax
  00ede	8d 45 a8	 lea	 eax, DWORD PTR $T19[ebp]
  00ee1	50		 push	 eax
  00ee2	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00ee8	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00eed	8b 45 bc	 mov	 eax, DWORD PTR $T19[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 271  : 			TextFileLoader.GetTokenFloat("amplitude",&fad.fAmplitude);

  00ef0	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ef4	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ef7	72 0d		 jb	 SHORT $LN1285@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ef9	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00efa	50		 push	 eax
  00efb	ff 75 a8	 push	 DWORD PTR $T19[ebp]
  00efe	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00f03	83 c4 08	 add	 esp, 8
$LN1285@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 273  : 			m_AttachDataVector.push_back(fad);

  00f06	8b b5 d0 fe ff
	ff		 mov	 esi, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00f0c	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _fad$18[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 273  : 			m_AttachDataVector.push_back(fad);

  00f12	81 c6 84 00 00
	00		 add	 esi, 132		; 00000084H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00f18	51		 push	 ecx
  00f19	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00f1c	50		 push	 eax
  00f1d	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00f20	74 0f		 je	 SHORT $LN1294@LoadScript

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00f22	56		 push	 esi
  00f23	e8 00 00 00 00	 call	 ??$construct@UTFlyingAttachData@CFlyingData@@ABU12@@?$_Default_allocator_traits@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@SAXAAV?$allocator@UTFlyingAttachData@CFlyingData@@@1@QAUTFlyingAttachData@CFlyingData@@ABU34@@Z ; std::_Default_allocator_traits<std::allocator<CFlyingData::TFlyingAttachData> >::construct<CFlyingData::TFlyingAttachData,CFlyingData::TFlyingAttachData const &>
  00f28	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00f2b	83 46 04 44	 add	 DWORD PTR [esi+4], 68	; 00000044H

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00f2f	eb 07		 jmp	 SHORT $LN1293@LoadScript
$LN1294@LoadScript:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00f31	8b ce		 mov	 ecx, esi
  00f33	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTFlyingAttachData@CFlyingData@@@?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAEPAUTFlyingAttachData@CFlyingData@@QAU23@ABU23@@Z ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::_Emplace_reallocate<CFlyingData::TFlyingAttachData const &>
$LN1293@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f38	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _fad$18[ebp+28]
  00f3e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00f41	72 2d		 jb	 SHORT $LN27@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f43	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f44	50		 push	 eax
  00f45	ff b5 68 ff ff
	ff		 push	 DWORD PTR _fad$18[ebp+8]
  00f4b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 274  : 		}

  00f50	eb 1b		 jmp	 SHORT $LN1340@LoadScript
$LN26@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00f52	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]
  00f58	8b c1		 mov	 eax, ecx

; 2145 :         if (_Large_string_engaged()) {

  00f5a	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00f5e	72 02		 jb	 SHORT $LN1314@LoadScript

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00f60	8b 01		 mov	 eax, DWORD PTR [ecx]
$LN1314@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 277  : 			TraceError("CFlyingData::LoadScriptFile Wrong Data : %s", m_strFilename.c_str());

  00f62	50		 push	 eax
  00f63	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@NJMDEMJE@CFlyingData?3?3LoadScriptFile?5Wro@
  00f68	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
$LN1340@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f6d	83 c4 08	 add	 esp, 8
$LN27@LoadScript:
  00f70	8b 45 d4	 mov	 eax, DWORD PTR _strNodeName$36[ebp+20]
  00f73	83 f8 10	 cmp	 eax, 16			; 00000010H
  00f76	72 0d		 jb	 SHORT $LN1322@LoadScript

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f78	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f79	50		 push	 eax
  00f7a	ff 75 c0	 push	 DWORD PTR _strNodeName$36[ebp]
  00f7d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00f82	83 c4 08	 add	 esp, 8
$LN1322@LoadScript:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00f85	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00f8c	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strNodeName$36[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00f93	c6 45 c0 00	 mov	 BYTE PTR _strNodeName$36[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00f97	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
$LN1339@LoadScript:
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 227  : 	for(i=0;i<TextFileLoader.GetChildNodeCount();i++)

  00f9b	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00fa1	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00fa6	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00fac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00fb0	47		 inc	 edi
  00fb1	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  00fb6	3b f8		 cmp	 edi, eax
  00fb8	0f 82 44 f9 ff
	ff		 jb	 $LL4@LoadScript
$LN3@LoadScript:

; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	NANOEND

  00fbe	eb		 DB	 -21			; ffffffebH
  00fbf	03		 DB	 3
  00fc0	d6		 DB	 -42			; ffffffd6H
  00fc1	d7		 DB	 -41			; ffffffd7H
  00fc2	00		 DB	 0
  00fc3	c6 85 df fe ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  00fca	eb 07		 jmp	 SHORT $LN73@LoadScript
$LN72@LoadScript:
  00fcc	c6 85 df fe ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LN73@LoadScript:
  00fd3	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00fd9	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  00fde	8a 85 df fe ff
	ff		 mov	 al, BYTE PTR $T5[ebp]

; 282  : 	return true;
; 283  : }

  00fe4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00fe7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00fee	59		 pop	 ecx
  00fef	5f		 pop	 edi
  00ff0	5e		 pop	 esi
  00ff1	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ff4	33 cd		 xor	 ecx, ebp
  00ff6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ffb	8b e5		 mov	 esp, ebp
  00ffd	5d		 pop	 ebp
  00ffe	8b e3		 mov	 esp, ebx
  01000	5b		 pop	 ebx
  01001	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$0:
  00000	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$1:
  0000b	8d 4d c0	 lea	 ecx, DWORD PTR $T51[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$2:
  00013	8d 4d c0	 lea	 ecx, DWORD PTR $T50[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$3:
  0001b	8d 4d c0	 lea	 ecx, DWORD PTR $T49[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$4:
  00023	8d 4d c0	 lea	 ecx, DWORD PTR $T48[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$5:
  0002b	8d 4d c0	 lea	 ecx, DWORD PTR $T47[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$6:
  00033	8d 4d c0	 lea	 ecx, DWORD PTR $T46[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$7:
  0003b	8d 4d c0	 lea	 ecx, DWORD PTR $T45[ebp]
  0003e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$8:
  00043	8d 4d c0	 lea	 ecx, DWORD PTR $T44[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$9:
  0004b	8d 4d c0	 lea	 ecx, DWORD PTR $T43[ebp]
  0004e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$10:
  00053	8d 4d c0	 lea	 ecx, DWORD PTR $T42[ebp]
  00056	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$11:
  0005b	8d 4d c0	 lea	 ecx, DWORD PTR $T41[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$12:
  00063	8d 4d c0	 lea	 ecx, DWORD PTR $T40[ebp]
  00066	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$14:
  0006b	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  0006e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$15:
  00073	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  00076	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$16:
  0007b	8d 4d a8	 lea	 ecx, DWORD PTR $T34[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$17:
  00083	8d 4d a8	 lea	 ecx, DWORD PTR $T33[ebp]
  00086	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$18:
  0008b	8d 4d a8	 lea	 ecx, DWORD PTR $T32[ebp]
  0008e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$19:
  00093	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _GotoChild$4[ebp]
  00099	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$20:
  0009e	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$36[ebp]
  000a1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$21:
  000a6	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _fad$18[ebp]
  000ac	e9 00 00 00 00	 jmp	 ??1TFlyingAttachData@CFlyingData@@QAE@XZ
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$22:
  000b1	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
  000b4	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$23:
  000b9	8d 4d a8	 lea	 ecx, DWORD PTR $T30[ebp]
  000bc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$24:
  000c1	8d 4d a8	 lea	 ecx, DWORD PTR $T29[ebp]
  000c4	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$26:
  000c9	8d 4d a8	 lea	 ecx, DWORD PTR $T27[ebp]
  000cc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$27:
  000d1	8d 4d a8	 lea	 ecx, DWORD PTR $T26[ebp]
  000d4	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$28:
  000d9	8d 4d a8	 lea	 ecx, DWORD PTR $T25[ebp]
  000dc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$29:
  000e1	8d 4d a8	 lea	 ecx, DWORD PTR $T24[ebp]
  000e4	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$30:
  000e9	8d 4d a8	 lea	 ecx, DWORD PTR $T23[ebp]
  000ec	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$31:
  000f1	8d 4d a8	 lea	 ecx, DWORD PTR $T22[ebp]
  000f4	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$32:
  000f9	8d 4d a8	 lea	 ecx, DWORD PTR $T21[ebp]
  000fc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$33:
  00101	8d 4d a8	 lea	 ecx, DWORD PTR $T20[ebp]
  00104	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z$34:
  00109	8d 4d a8	 lea	 ecx, DWORD PTR $T19[ebp]
  0010c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00111	cc		 int	 3
  00112	cc		 int	 3
  00113	cc		 int	 3
  00114	cc		 int	 3
  00115	cc		 int	 3
__ehhandler$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z:
  00116	90		 npad	 1
  00117	90		 npad	 1
  00118	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0011c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0011f	8b 8a cc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-308]
  00125	33 c8		 xor	 ecx, eax
  00127	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012c	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0012f	33 c8		 xor	 ecx, eax
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadScriptFile@CFlyingData@@QAE_NPBD@Z
  0013b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadScriptFile@CFlyingData@@QAE_NPBD@Z ENDP		; CFlyingData::LoadScriptFile
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?Destroy@CFlyingData@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CFlyingData@@QAEXXZ PROC			; CFlyingData::Destroy, COMDAT
; _this$ = ecx

; 38   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 39   : 	m_AttachDataVector.clear();

  00004	8d b7 84 00 00
	00		 lea	 esi, DWORD PTR [edi+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000a	56		 push	 esi
  0000b	ff 76 04	 push	 DWORD PTR [esi+4]
  0000e	ff 36		 push	 DWORD PTR [esi]
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >

; 1390 :         _Mylast = _Myfirst;

  00015	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 41   : 	__Initialize();

  0001a	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  0001c	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 41   : 	__Initialize();

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	e9 00 00 00 00	 jmp	 ?__Initialize@CFlyingData@@IAEXXZ ; CFlyingData::__Initialize
?Destroy@CFlyingData@@QAEXXZ ENDP			; CFlyingData::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ??1CFlyingData@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CFlyingData@@UAE@XZ PROC				; CFlyingData::~CFlyingData, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CFlyingData@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CFlyingData@@6B@

; 46   : 	Destroy();

  0002c	e8 00 00 00 00	 call	 ?Destroy@CFlyingData@@QAEXXZ ; CFlyingData::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00031	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 47   : }

  00037	8d 9f 84 00 00
	00		 lea	 ebx, DWORD PTR [edi+132]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0003d	85 c0		 test	 eax, eax
  0003f	74 49		 je	 SHORT $LN6@CFlyingDat

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00041	53		 push	 ebx
  00042	ff 73 04	 push	 DWORD PTR [ebx+4]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@YAXPAUTFlyingAttachData@CFlyingData@@QAU12@AAV?$allocator@UTFlyingAttachData@CFlyingData@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyingData::TFlyingAttachData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0004e	b8 79 78 78 78	 mov	 eax, 2021161081		; 78787879H
  00053	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00055	f7 e9		 imul	 ecx
  00057	c1 fa 05	 sar	 edx, 5
  0005a	8b ca		 mov	 ecx, edx
  0005c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0005f	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00061	8b c1		 mov	 eax, ecx
  00063	c1 e0 04	 shl	 eax, 4
  00066	03 c1		 add	 eax, ecx
  00068	c1 e0 02	 shl	 eax, 2
  0006b	50		 push	 eax
  0006c	ff 33		 push	 DWORD PTR [ebx]
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00079	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007c	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  00083	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN6@CFlyingDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0008a	8b 47 54	 mov	 eax, DWORD PTR [edi+84]
  0008d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00090	72 0d		 jb	 SHORT $LN16@CFlyingDat

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00092	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00093	50		 push	 eax
  00094	ff 77 40	 push	 DWORD PTR [edi+64]
  00097	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0009c	83 c4 08	 add	 esp, 8
$LN16@CFlyingDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0009f	c7 47 50 00 00
	00 00		 mov	 DWORD PTR [edi+80], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a6	c7 47 54 0f 00
	00 00		 mov	 DWORD PTR [edi+84], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ad	c6 47 40 00	 mov	 BYTE PTR [edi+64], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  000b1	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  000b4	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b7	72 0d		 jb	 SHORT $LN26@CFlyingDat

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b9	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ba	50		 push	 eax
  000bb	ff 77 04	 push	 DWORD PTR [edi+4]
  000be	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c3	83 c4 08	 add	 esp, 8
$LN26@CFlyingDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000c6	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000cd	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d4	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 47   : }

  000d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e2	59		 pop	 ecx
  000e3	5f		 pop	 edi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
  000e9	cc		 int	 3
  000ea	cc		 int	 3
  000eb	cc		 int	 3
  000ec	cc		 int	 3
  000ed	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CFlyingData@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CFlyingData@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CFlyingData@@UAE@XZ ENDP				; CFlyingData::~CFlyingData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ??0CFlyingData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFlyingData@@QAE@XZ PROC				; CFlyingData::CFlyingData, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CFlyingData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CFlyingData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00036	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003d	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 9    : {

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00048	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004f	c7 46 54 0f 00
	00 00		 mov	 DWORD PTR [esi+84], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00056	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005a	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  00064	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  0006e	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp

; 9    : {

  00078	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 10   : 	__Initialize();

  0007c	e8 00 00 00 00	 call	 ?__Initialize@CFlyingData@@IAEXXZ ; CFlyingData::__Initialize

; 11   : }

  00081	8b c6		 mov	 eax, esi
  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFlyingData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CFlyingData@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 40	 add	 ecx, 64			; 00000040H
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CFlyingData@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@UTFlyingAttachData@CFlyingData@@V?$allocator@UTFlyingAttachData@CFlyingData@@@std@@@std@@QAE@XZ ; std::vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >::~vector<CFlyingData::TFlyingAttachData,std::allocator<CFlyingData::TFlyingAttachData> >
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$??0CFlyingData@@QAE@XZ:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CFlyingData@@QAE@XZ
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CFlyingData@@QAE@XZ ENDP				; CFlyingData::CFlyingData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TFlyingAttachData@CFlyingData@@QAE@XZ
_TEXT	SEGMENT
??1TFlyingAttachData@CFlyingData@@QAE@XZ PROC		; CFlyingData::TFlyingAttachData::~TFlyingAttachData, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@TFlyingAtt

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 08	 push	 DWORD PTR [esi+8]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@TFlyingAtt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 1c 0f 00
	00 00		 mov	 DWORD PTR [esi+28], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
  0002a	5e		 pop	 esi
  0002b	c3		 ret	 0
??1TFlyingAttachData@CFlyingData@@QAE@XZ ENDP		; CFlyingData::TFlyingAttachData::~TFlyingAttachData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 				m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 			}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 2586 :     basic_string& operator=(basic_string&& _Right) noexcept(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 2587 :         if (this != _STD addressof(_Right)) {

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 46		 je	 SHORT $LN19@operator

; 2153 :         return _BUF_SIZE <= _Myres;

  0000e	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00011	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00014	72 0c		 jb	 SHORT $LN7@operator

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00016	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00017	50		 push	 eax
  00018	ff 36		 push	 DWORD PTR [esi]
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001f	83 c4 08	 add	 esp, 8
$LN7@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00022	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00029	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00030	c6 06 00	 mov	 BYTE PTR [esi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00033	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00036	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00039	f3 0f 7e 47 10	 movq	 xmm0, QWORD PTR [edi+16]
  0003e	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00043	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004a	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00051	c6 07 00	 mov	 BYTE PTR [edi], 0
$LN19@operator:
  00054	5f		 pop	 edi

; 2588 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});
; 2589 :         }
; 2590 : 
; 2591 :         return *this;
; 2592 :     }

  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\GameLib\FlyingData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
