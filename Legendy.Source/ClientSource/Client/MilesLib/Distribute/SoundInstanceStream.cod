; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??1ISoundInstance@@UAE@XZ			; ISoundInstance::~ISoundInstance
PUBLIC	??_GISoundInstance@@UAEPAXI@Z			; ISoundInstance::`scalar deleting destructor'
PUBLIC	??0CSoundInstanceStream@@QAE@XZ			; CSoundInstanceStream::CSoundInstanceStream
PUBLIC	??1CSoundInstanceStream@@UAE@XZ			; CSoundInstanceStream::~CSoundInstanceStream
PUBLIC	?Initialize@CSoundInstanceStream@@UAE_NXZ	; CSoundInstanceStream::Initialize
PUBLIC	?Destroy@CSoundInstanceStream@@UAEXXZ		; CSoundInstanceStream::Destroy
PUBLIC	?SetStream@CSoundInstanceStream@@QAEXPAU_STREAM@@@Z ; CSoundInstanceStream::SetStream
PUBLIC	?SetSound@CSoundInstanceStream@@UAE_NPAVCSoundData@@@Z ; CSoundInstanceStream::SetSound
PUBLIC	?Play@CSoundInstanceStream@@UBEXHK@Z		; CSoundInstanceStream::Play
PUBLIC	?Pause@CSoundInstanceStream@@UBEXXZ		; CSoundInstanceStream::Pause
PUBLIC	?Resume@CSoundInstanceStream@@UBEXXZ		; CSoundInstanceStream::Resume
PUBLIC	?Stop@CSoundInstanceStream@@UAEXXZ		; CSoundInstanceStream::Stop
PUBLIC	?GetVolume@CSoundInstanceStream@@UBEXAAM@Z	; CSoundInstanceStream::GetVolume
PUBLIC	?SetVolume@CSoundInstanceStream@@UBEXM@Z	; CSoundInstanceStream::SetVolume
PUBLIC	?IsDone@CSoundInstanceStream@@UBE_NXZ		; CSoundInstanceStream::IsDone
PUBLIC	?IsData@CSoundInstanceStream@@QBE_NXZ		; CSoundInstanceStream::IsData
PUBLIC	?SetPosition@CSoundInstanceStream@@UBEXMMM@Z	; CSoundInstanceStream::SetPosition
PUBLIC	?SetOrientation@CSoundInstanceStream@@UBEXMMMMMM@Z ; CSoundInstanceStream::SetOrientation
PUBLIC	?SetVelocity@CSoundInstanceStream@@UBEXMMMM@Z	; CSoundInstanceStream::SetVelocity
PUBLIC	??_GCSoundInstanceStream@@UAEPAXI@Z		; CSoundInstanceStream::`scalar deleting destructor'
PUBLIC	??_7ISoundInstance@@6B@				; ISoundInstance::`vftable'
PUBLIC	??_7CSoundInstanceStream@@6B@			; CSoundInstanceStream::`vftable'
PUBLIC	??_R4ISoundInstance@@6B@			; ISoundInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVISoundInstance@@@8			; ISoundInstance `RTTI Type Descriptor'
PUBLIC	??_R3ISoundInstance@@8				; ISoundInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISoundInstance@@8				; ISoundInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISoundInstance@@8			; ISoundInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CSoundBase@@8			; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSoundBase@@@8				; CSoundBase `RTTI Type Descriptor'
PUBLIC	??_R3CSoundBase@@8				; CSoundBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundBase@@8				; CSoundBase::`RTTI Base Class Array'
PUBLIC	??_R4CSoundInstanceStream@@6B@			; CSoundInstanceStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSoundInstanceStream@@@8		; CSoundInstanceStream `RTTI Type Descriptor'
PUBLIC	??_R3CSoundInstanceStream@@8			; CSoundInstanceStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundInstanceStream@@8			; CSoundInstanceStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSoundInstanceStream@@8		; CSoundInstanceStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__AIL_close_stream@4:PROC
EXTRN	__imp__AIL_start_stream@4:PROC
EXTRN	__imp__AIL_pause_stream@8:PROC
EXTRN	__imp__AIL_set_stream_volume_levels@12:PROC
EXTRN	__imp__AIL_stream_volume_levels@12:PROC
EXTRN	__imp__AIL_set_stream_loop_count@8:PROC
EXTRN	__imp__AIL_stream_status@4:PROC
EXTRN	??0CSoundBase@@QAE@XZ:PROC			; CSoundBase::CSoundBase
EXTRN	??1CSoundBase@@UAE@XZ:PROC			; CSoundBase::~CSoundBase
EXTRN	??_EISoundInstance@@UAEPAXI@Z:PROC		; ISoundInstance::`vector deleting destructor'
EXTRN	??_ECSoundInstanceStream@@UAEPAXI@Z:PROC	; CSoundInstanceStream::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundInstanceStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundInstanceStream@@8 DD FLAT:??_R0?AVCSoundInstanceStream@@@8 ; CSoundInstanceStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundInstanceStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundInstanceStream@@8
rdata$r	SEGMENT
??_R2CSoundInstanceStream@@8 DD FLAT:??_R1A@?0A@EA@CSoundInstanceStream@@8 ; CSoundInstanceStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISoundInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSoundInstanceStream@@8
rdata$r	SEGMENT
??_R3CSoundInstanceStream@@8 DD 00H			; CSoundInstanceStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CSoundInstanceStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundInstanceStream@@@8
data$r	SEGMENT
??_R0?AVCSoundInstanceStream@@@8 DD FLAT:??_7type_info@@6B@ ; CSoundInstanceStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundInstanceStream@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSoundInstanceStream@@6B@
rdata$r	SEGMENT
??_R4CSoundInstanceStream@@6B@ DD 00H			; CSoundInstanceStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSoundInstanceStream@@@8
	DD	FLAT:??_R3CSoundInstanceStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundBase@@8
rdata$r	SEGMENT
??_R2CSoundBase@@8 DD FLAT:??_R1A@?0A@EA@CSoundBase@@8	; CSoundBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSoundBase@@8
rdata$r	SEGMENT
??_R3CSoundBase@@8 DD 00H				; CSoundBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundBase@@@8
data$r	SEGMENT
??_R0?AVCSoundBase@@@8 DD FLAT:??_7type_info@@6B@	; CSoundBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundBase@@8 DD FLAT:??_R0?AVCSoundBase@@@8 ; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISoundInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISoundInstance@@8 DD FLAT:??_R0?AVISoundInstance@@@8 ; ISoundInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISoundInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2ISoundInstance@@8
rdata$r	SEGMENT
??_R2ISoundInstance@@8 DD FLAT:??_R1A@?0A@EA@ISoundInstance@@8 ; ISoundInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R3ISoundInstance@@8
rdata$r	SEGMENT
??_R3ISoundInstance@@8 DD 00H				; ISoundInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISoundInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISoundInstance@@@8
data$r	SEGMENT
??_R0?AVISoundInstance@@@8 DD FLAT:??_7type_info@@6B@	; ISoundInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVISoundInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4ISoundInstance@@6B@
rdata$r	SEGMENT
??_R4ISoundInstance@@6B@ DD 00H				; ISoundInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVISoundInstance@@@8
	DD	FLAT:??_R3ISoundInstance@@8
rdata$r	ENDS
;	COMDAT ??_7CSoundInstanceStream@@6B@
CONST	SEGMENT
??_7CSoundInstanceStream@@6B@ DD FLAT:??_R4CSoundInstanceStream@@6B@ ; CSoundInstanceStream::`vftable'
	DD	FLAT:??_ECSoundInstanceStream@@UAEPAXI@Z
	DD	FLAT:?Initialize@CSoundInstanceStream@@UAE_NXZ
	DD	FLAT:?Destroy@CSoundInstanceStream@@UAEXXZ
	DD	FLAT:?SetSound@CSoundInstanceStream@@UAE_NPAVCSoundData@@@Z
	DD	FLAT:?Play@CSoundInstanceStream@@UBEXHK@Z
	DD	FLAT:?Pause@CSoundInstanceStream@@UBEXXZ
	DD	FLAT:?Resume@CSoundInstanceStream@@UBEXXZ
	DD	FLAT:?Stop@CSoundInstanceStream@@UAEXXZ
	DD	FLAT:?GetVolume@CSoundInstanceStream@@UBEXAAM@Z
	DD	FLAT:?SetVolume@CSoundInstanceStream@@UBEXM@Z
	DD	FLAT:?IsDone@CSoundInstanceStream@@UBE_NXZ
	DD	FLAT:?SetPosition@CSoundInstanceStream@@UBEXMMM@Z
	DD	FLAT:?SetOrientation@CSoundInstanceStream@@UBEXMMMMMM@Z
	DD	FLAT:?SetVelocity@CSoundInstanceStream@@UBEXMMMM@Z
CONST	ENDS
;	COMDAT ??_7ISoundInstance@@6B@
CONST	SEGMENT
??_7ISoundInstance@@6B@ DD FLAT:??_R4ISoundInstance@@6B@ ; ISoundInstance::`vftable'
	DD	FLAT:??_EISoundInstance@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSoundInstanceStream@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSoundInstanceStream@@UAEPAXI@Z PROC		; CSoundInstanceStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSoundInstanceStream@@UAE@XZ ; CSoundInstanceStream::~CSoundInstanceStream
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 08		 push	 8
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCSoundInstanceStream@@UAEPAXI@Z ENDP		; CSoundInstanceStream::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetVelocity@CSoundInstanceStream@@UBEXMMMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
_fMagnitude$ = 20					; size = 4
?SetVelocity@CSoundInstanceStream@@UBEXMMMM@Z PROC	; CSoundInstanceStream::SetVelocity, COMDAT
; _this$ = ecx

; 114  : }

  00000	c2 10 00	 ret	 16			; 00000010H
?SetVelocity@CSoundInstanceStream@@UBEXMMMM@Z ENDP	; CSoundInstanceStream::SetVelocity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetOrientation@CSoundInstanceStream@@UBEXMMMMMM@Z
_TEXT	SEGMENT
_x_face$ = 8						; size = 4
_y_face$ = 12						; size = 4
_z_face$ = 16						; size = 4
_x_normal$ = 20						; size = 4
_y_normal$ = 24						; size = 4
_z_normal$ = 28						; size = 4
?SetOrientation@CSoundInstanceStream@@UBEXMMMMMM@Z PROC	; CSoundInstanceStream::SetOrientation, COMDAT
; _this$ = ecx

; 110  : }

  00000	c2 18 00	 ret	 24			; 00000018H
?SetOrientation@CSoundInstanceStream@@UBEXMMMMMM@Z ENDP	; CSoundInstanceStream::SetOrientation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetPosition@CSoundInstanceStream@@UBEXMMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?SetPosition@CSoundInstanceStream@@UBEXMMM@Z PROC	; CSoundInstanceStream::SetPosition, COMDAT
; _this$ = ecx

; 105  : }

  00000	c2 0c 00	 ret	 12			; 0000000cH
?SetPosition@CSoundInstanceStream@@UBEXMMM@Z ENDP	; CSoundInstanceStream::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?IsData@CSoundInstanceStream@@QBE_NXZ
_TEXT	SEGMENT
?IsData@CSoundInstanceStream@@QBE_NXZ PROC		; CSoundInstanceStream::IsData, COMDAT
; _this$ = ecx

; 39   : 	if (m_stream)

  00000	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00004	0f 95 c0	 setne	 al

; 40   : 		return true;
; 41   : 
; 42   : 	return false;
; 43   : }

  00007	c3		 ret	 0
?IsData@CSoundInstanceStream@@QBE_NXZ ENDP		; CSoundInstanceStream::IsData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?IsDone@CSoundInstanceStream@@UBE_NXZ
_TEXT	SEGMENT
?IsDone@CSoundInstanceStream@@UBE_NXZ PROC		; CSoundInstanceStream::IsDone, COMDAT
; _this$ = ecx

; 34   : 	return AIL_stream_status(m_stream) == -1;

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_stream_status@4
  00009	83 f8 ff	 cmp	 eax, -1
  0000c	0f 94 c0	 sete	 al

; 35   : }

  0000f	c3		 ret	 0
?IsDone@CSoundInstanceStream@@UBE_NXZ ENDP		; CSoundInstanceStream::IsDone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetVolume@CSoundInstanceStream@@UBEXM@Z
_TEXT	SEGMENT
_volume$ = 8						; size = 4
?SetVolume@CSoundInstanceStream@@UBEXM@Z PROC		; CSoundInstanceStream::SetVolume, COMDAT
; _this$ = ecx

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 91   : 	if (!IsData())

  00006	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  0000b	84 c0		 test	 al, al
  0000d	74 2f		 je	 SHORT $LN1@SetVolume

; 92   : 		return;
; 93   : 
; 94   : 	volume = max(0.0f, min(1.0f, volume));

  0000f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00017	0f 57 c9	 xorps	 xmm1, xmm1
  0001a	f3 0f 5d 45 08	 minss	 xmm0, DWORD PTR _volume$[ebp]
  0001f	0f 2f c8	 comiss	 xmm1, xmm0
  00022	77 03		 ja	 SHORT $LN6@SetVolume
  00024	0f 28 c8	 movaps	 xmm1, xmm0
$LN6@SetVolume:

; 95   : 	AIL_set_stream_volume_levels(m_stream, volume, volume);

  00027	83 ec 08	 sub	 esp, 8
  0002a	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00030	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00035	ff 76 04	 push	 DWORD PTR [esi+4]
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_set_stream_volume_levels@12
$LN1@SetVolume:
  0003e	5e		 pop	 esi

; 96   : }

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?SetVolume@CSoundInstanceStream@@UBEXM@Z ENDP		; CSoundInstanceStream::SetVolume
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?GetVolume@CSoundInstanceStream@@UBEXAAM@Z
_TEXT	SEGMENT
_tmp$ = -4						; size = 4
_rfVolume$ = 8						; size = 4
?GetVolume@CSoundInstanceStream@@UBEXAAM@Z PROC		; CSoundInstanceStream::GetVolume, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 81   : 	float tmp;
; 82   : 
; 83   : 	if (!IsData())

  00007	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  0000c	84 c0		 test	 al, al
  0000e	74 10		 je	 SHORT $LN1@GetVolume

; 84   : 		return;
; 85   : 
; 86   : 	AIL_stream_volume_levels(m_stream, &rfVolume, &tmp);

  00010	8d 45 fc	 lea	 eax, DWORD PTR _tmp$[ebp]
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _rfVolume$[ebp]
  00017	ff 76 04	 push	 DWORD PTR [esi+4]
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_stream_volume_levels@12
$LN1@GetVolume:
  00020	5e		 pop	 esi

; 87   : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?GetVolume@CSoundInstanceStream@@UBEXAAM@Z ENDP		; CSoundInstanceStream::GetVolume
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Stop@CSoundInstanceStream@@UAEXXZ
_TEXT	SEGMENT
?Stop@CSoundInstanceStream@@UAEXXZ PROC			; CSoundInstanceStream::Stop, COMDAT
; _this$ = ecx

; 71   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 72   : 	if (!IsData())

  00003	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  00008	84 c0		 test	 al, al
  0000a	74 10		 je	 SHORT $LN1@Stop

; 73   : 		return;
; 74   : 
; 75   : 	AIL_close_stream(m_stream);

  0000c	ff 76 04	 push	 DWORD PTR [esi+4]
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_close_stream@4

; 76   : 	m_stream = NULL;

  00015	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN1@Stop:

; 77   : }

  0001c	5e		 pop	 esi
  0001d	c3		 ret	 0
?Stop@CSoundInstanceStream@@UAEXXZ ENDP			; CSoundInstanceStream::Stop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Resume@CSoundInstanceStream@@UBEXXZ
_TEXT	SEGMENT
?Resume@CSoundInstanceStream@@UBEXXZ PROC		; CSoundInstanceStream::Resume, COMDAT
; _this$ = ecx

; 63   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 64   : 	if (!IsData())

  00003	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  00008	84 c0		 test	 al, al
  0000a	74 0b		 je	 SHORT $LN1@Resume

; 65   : 		return;
; 66   : 
; 67   : 	AIL_pause_stream(m_stream, 0);

  0000c	6a 00		 push	 0
  0000e	ff 76 04	 push	 DWORD PTR [esi+4]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_pause_stream@8
$LN1@Resume:

; 68   : }

  00017	5e		 pop	 esi
  00018	c3		 ret	 0
?Resume@CSoundInstanceStream@@UBEXXZ ENDP		; CSoundInstanceStream::Resume
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Pause@CSoundInstanceStream@@UBEXXZ
_TEXT	SEGMENT
?Pause@CSoundInstanceStream@@UBEXXZ PROC		; CSoundInstanceStream::Pause, COMDAT
; _this$ = ecx

; 55   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 56   : 	if (!IsData())

  00003	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  00008	84 c0		 test	 al, al
  0000a	74 0b		 je	 SHORT $LN1@Pause

; 57   : 		return;
; 58   : 
; 59   : 	AIL_pause_stream(m_stream, 1);

  0000c	6a 01		 push	 1
  0000e	ff 76 04	 push	 DWORD PTR [esi+4]
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_pause_stream@8
$LN1@Pause:

; 60   : }

  00017	5e		 pop	 esi
  00018	c3		 ret	 0
?Pause@CSoundInstanceStream@@UBEXXZ ENDP		; CSoundInstanceStream::Pause
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Play@CSoundInstanceStream@@UBEXHK@Z
_TEXT	SEGMENT
_count$ = 8						; size = 4
_dwPlayCycleTimeLimit$ = 12				; size = 4
?Play@CSoundInstanceStream@@UBEXHK@Z PROC		; CSoundInstanceStream::Play, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 47   : 	if (!IsData())

  00006	e8 00 00 00 00	 call	 ?IsData@CSoundInstanceStream@@QBE_NXZ ; CSoundInstanceStream::IsData
  0000b	84 c0		 test	 al, al
  0000d	74 15		 je	 SHORT $LN1@Play

; 48   : 		return;
; 49   : 
; 50   : 	AIL_set_stream_loop_count(m_stream, count);

  0000f	ff 75 08	 push	 DWORD PTR _count$[ebp]
  00012	ff 76 04	 push	 DWORD PTR [esi+4]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_set_stream_loop_count@8

; 51   : 	AIL_start_stream(m_stream);

  0001b	ff 76 04	 push	 DWORD PTR [esi+4]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_start_stream@4
$LN1@Play:
  00024	5e		 pop	 esi

; 52   : }

  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?Play@CSoundInstanceStream@@UBEXHK@Z ENDP		; CSoundInstanceStream::Play
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetSound@CSoundInstanceStream@@UAE_NPAVCSoundData@@@Z
_TEXT	SEGMENT
_pSound$ = 8						; size = 4
?SetSound@CSoundInstanceStream@@UAE_NPAVCSoundData@@@Z PROC ; CSoundInstanceStream::SetSound, COMDAT
; _this$ = ecx

; 100  : 	return true;

  00000	b0 01		 mov	 al, 1

; 101  : }

  00002	c2 04 00	 ret	 4
?SetSound@CSoundInstanceStream@@UAE_NPAVCSoundData@@@Z ENDP ; CSoundInstanceStream::SetSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?SetStream@CSoundInstanceStream@@QAEXPAU_STREAM@@@Z
_TEXT	SEGMENT
_stream$ = 8						; size = 4
?SetStream@CSoundInstanceStream@@QAEXPAU_STREAM@@@Z PROC ; CSoundInstanceStream::SetStream, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 	m_stream = stream;

  00003	8b 45 08	 mov	 eax, DWORD PTR _stream$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 30   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetStream@CSoundInstanceStream@@QAEXPAU_STREAM@@@Z ENDP ; CSoundInstanceStream::SetStream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Destroy@CSoundInstanceStream@@UAEXXZ
_TEXT	SEGMENT
?Destroy@CSoundInstanceStream@@UAEXXZ PROC		; CSoundInstanceStream::Destroy, COMDAT
; _this$ = ecx

; 14   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 15   : 	if (m_stream != NULL)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 0e		 je	 SHORT $LN2@Destroy

; 16   : 	{
; 17   : 		AIL_close_stream(m_stream);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_close_stream@4

; 18   : 		m_stream = NULL;

  00011	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN2@Destroy:

; 19   : 	}
; 20   : }

  00018	5e		 pop	 esi
  00019	c3		 ret	 0
?Destroy@CSoundInstanceStream@@UAEXXZ ENDP		; CSoundInstanceStream::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ?Initialize@CSoundInstanceStream@@UAE_NXZ
_TEXT	SEGMENT
?Initialize@CSoundInstanceStream@@UAE_NXZ PROC		; CSoundInstanceStream::Initialize, COMDAT
; _this$ = ecx

; 24   : 	return true;

  00000	b0 01		 mov	 al, 1

; 25   : }

  00002	c3		 ret	 0
?Initialize@CSoundInstanceStream@@UAE_NXZ ENDP		; CSoundInstanceStream::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ??1CSoundInstanceStream@@UAE@XZ
_TEXT	SEGMENT
??1CSoundInstanceStream@@UAE@XZ PROC			; CSoundInstanceStream::~CSoundInstanceStream, COMDAT
; _this$ = ecx

; 9    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSoundInstanceStream@@6B@

; 10   : 	Destroy();

  00009	e8 00 00 00 00	 call	 ?Destroy@CSoundInstanceStream@@UAEXXZ ; CSoundInstanceStream::Destroy
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h

; 10   : 	virtual ~ISoundInstance() {}

  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ISoundInstance@@6B@
  00014	8b ce		 mov	 ecx, esi
  00016	5e		 pop	 esi
  00017	e9 00 00 00 00	 jmp	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
??1CSoundInstanceStream@@UAE@XZ ENDP			; CSoundInstanceStream::~CSoundInstanceStream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp
;	COMDAT ??0CSoundInstanceStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSoundInstanceStream@@QAE@XZ PROC			; CSoundInstanceStream::CSoundInstanceStream, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h

; 9    : 	ISoundInstance() {}

  0000a	e8 00 00 00 00	 call	 ??0CSoundBase@@QAE@XZ	; CSoundBase::CSoundBase
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstanceStream.cpp

; 5    : {

  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSoundInstanceStream@@6B@

; 6    : }

  00015	8b c6		 mov	 eax, esi
  00017	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001e	5e		 pop	 esi
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??0CSoundInstanceStream@@QAE@XZ ENDP			; CSoundInstanceStream::CSoundInstanceStream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h
;	COMDAT ??_GISoundInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GISoundInstance@@UAEPAXI@Z PROC			; ISoundInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	virtual ~ISoundInstance() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ISoundInstance@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 0b		 je	 SHORT $LN7@scalar
  00017	6a 04		 push	 4
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??_GISoundInstance@@UAEPAXI@Z ENDP			; ISoundInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\MilesLib\SoundInstance.h
;	COMDAT ??1ISoundInstance@@UAE@XZ
_TEXT	SEGMENT
??1ISoundInstance@@UAE@XZ PROC				; ISoundInstance::~ISoundInstance, COMDAT
; _this$ = ecx

; 10   : 	virtual ~ISoundInstance() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ISoundInstance@@6B@
  00006	e9 00 00 00 00	 jmp	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
??1ISoundInstance@@UAE@XZ ENDP				; ISoundInstance::~ISoundInstance
_TEXT	ENDS
END
