; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Type@CGraphicText@@SAKXZ			; CGraphicText::Type
PUBLIC	??0CGraphicText@@QAE@PBD@Z			; CGraphicText::CGraphicText
PUBLIC	??1CGraphicText@@UAE@XZ				; CGraphicText::~CGraphicText
PUBLIC	?CreateDeviceObjects@CGraphicText@@UAE_NXZ	; CGraphicText::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGraphicText@@UAEXXZ	; CGraphicText::DestroyDeviceObjects
PUBLIC	?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ; CGraphicText::GetFontTexturePointer
PUBLIC	?OnLoad@CGraphicText@@MAE_NHPBX@Z		; CGraphicText::OnLoad
PUBLIC	?OnClear@CGraphicText@@MAEXXZ			; CGraphicText::OnClear
PUBLIC	?OnIsEmpty@CGraphicText@@MBE_NXZ		; CGraphicText::OnIsEmpty
PUBLIC	?OnIsType@CGraphicText@@MAE_NK@Z		; CGraphicText::OnIsType
PUBLIC	??_GCGraphicText@@UAEPAXI@Z			; CGraphicText::`scalar deleting destructor'
PUBLIC	??_7CGraphicText@@6B@				; CGraphicText::`vftable'
PUBLIC	??_C@_0N@JPGFHJCC@CGraphicText@			; `string'
PUBLIC	??_R4CGraphicText@@6B@				; CGraphicText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicText@@@8			; CGraphicText `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicText@@8				; CGraphicText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicText@@8				; CGraphicText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicText@@8			; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CResource@@8			; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCResource@@@8				; CResource `RTTI Type Descriptor'
PUBLIC	??_R3CResource@@8				; CResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CResource@@8				; CResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__atoi64:PROC
EXTRN	_isdigit:PROC
EXTRN	_strrchr:PROC
EXTRN	_strncpy:PROC
EXTRN	?MIN@@YAHHH@Z:PROC				; MIN
EXTRN	?StringToType@CResource@@SAKPBD@Z:PROC		; CResource::StringToType
EXTRN	??0CResource@@QAE@PBD@Z:PROC			; CResource::CResource
EXTRN	??1CResource@@UAE@XZ:PROC			; CResource::~CResource
EXTRN	?OnIsType@CResource@@MAE_NK@Z:PROC		; CResource::OnIsType
EXTRN	?OnConstruct@CResource@@MAEXXZ:PROC		; CResource::OnConstruct
EXTRN	?OnSelfDestruct@CResource@@MAEXXZ:PROC		; CResource::OnSelfDestruct
EXTRN	??0CGraphicFontTexture@@QAE@XZ:PROC		; CGraphicFontTexture::CGraphicFontTexture
EXTRN	??1CGraphicFontTexture@@UAE@XZ:PROC		; CGraphicFontTexture::~CGraphicFontTexture
EXTRN	?Destroy@CGraphicFontTexture@@QAEXXZ:PROC	; CGraphicFontTexture::Destroy
EXTRN	?Create@CGraphicFontTexture@@QAE_NPBDH_N@Z:PROC	; CGraphicFontTexture::Create
EXTRN	?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ:PROC ; CGraphicFontTexture::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ:PROC ; CGraphicFontTexture::DestroyDeviceObjects
EXTRN	??_ECGraphicText@@UAEPAXI@Z:PROC		; CGraphicText::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA
_BSS	SEGMENT
?s_type@?1??Type@CGraphicText@@SAKXZ@4KA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::s_type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
_BSS	SEGMENT
?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA DB 020H DUP (?) ; `CGraphicText::OnLoad'::`2'::strName
_BSS	ENDS
;	COMDAT ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
_BSS	SEGMENT
?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA DB 08H DUP (?) ; `CGraphicText::OnLoad'::`5'::num
_BSS	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$r	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CResource@@8
rdata$r	SEGMENT
??_R2CResource@@8 DD FLAT:??_R1A@?0A@EA@CResource@@8	; CResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CResource@@8
rdata$r	SEGMENT
??_R3CResource@@8 DD 00H				; CResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCResource@@@8
data$r	SEGMENT
??_R0?AVCResource@@@8 DD FLAT:??_7type_info@@6B@	; CResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCResource@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CResource@@8 DD FLAT:??_R0?AVCResource@@@8 ; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicText@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicText@@8 DD FLAT:??_R0?AVCGraphicText@@@8 ; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicText@@8
rdata$r	SEGMENT
??_R2CGraphicText@@8 DD FLAT:??_R1A@?0A@EA@CGraphicText@@8 ; CGraphicText::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CResource@@8
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicText@@8
rdata$r	SEGMENT
??_R3CGraphicText@@8 DD 00H				; CGraphicText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicText@@@8
data$r	SEGMENT
??_R0?AVCGraphicText@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicText@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicText@@6B@
rdata$r	SEGMENT
??_R4CGraphicText@@6B@ DD 00H				; CGraphicText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicText@@@8
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@JPGFHJCC@CGraphicText@
CONST	SEGMENT
??_C@_0N@JPGFHJCC@CGraphicText@ DB 'CGraphicText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicText@@6B@
CONST	SEGMENT
??_7CGraphicText@@6B@ DD FLAT:??_R4CGraphicText@@6B@	; CGraphicText::`vftable'
	DD	FLAT:??_ECGraphicText@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CResource@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CResource@@MAEXXZ
	DD	FLAT:?CreateDeviceObjects@CGraphicText@@UAE_NXZ
	DD	FLAT:?DestroyDeviceObjects@CGraphicText@@UAEXXZ
	DD	FLAT:?OnLoad@CGraphicText@@MAE_NHPBX@Z
	DD	FLAT:?OnClear@CGraphicText@@MAEXXZ
	DD	FLAT:?OnIsEmpty@CGraphicText@@MBE_NXZ
	DD	FLAT:?OnIsType@CGraphicText@@MAE_NK@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicText@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0
__ehfuncinfo$??0CGraphicText@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGraphicText@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicText@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicText@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicText@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicText@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicText@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicText@@UAEPAXI@Z PROC			; CGraphicText::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicText@@UAE@XZ	; CGraphicText::~CGraphicText
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 e0 00 00 00	 push	 224			; 000000e0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCGraphicText@@UAEPAXI@Z ENDP			; CGraphicText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsType@CGraphicText@@MAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?OnIsType@CGraphicText@@MAE_NK@Z PROC			; CGraphicText::OnIsType, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 94   : 	if (CGraphicText::Type() == type)

  00006	e8 00 00 00 00	 call	 ?Type@CGraphicText@@SAKXZ ; CGraphicText::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 07		 jne	 SHORT $LN2@OnIsType

; 95   : 		return true;

  00012	b0 01		 mov	 al, 1
  00014	5e		 pop	 esi

; 98   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@OnIsType:

; 96   : 
; 97   : 	return CResource::OnIsType(type);

  00019	52		 push	 edx
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?OnIsType@CResource@@MAE_NK@Z ; CResource::OnIsType
  00021	5e		 pop	 esi

; 98   : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?OnIsType@CGraphicText@@MAE_NK@Z ENDP			; CGraphicText::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsEmpty@CGraphicText@@MBE_NXZ
_TEXT	SEGMENT
?OnIsEmpty@CGraphicText@@MBE_NXZ PROC			; CGraphicText::OnIsEmpty, COMDAT
; _this$ = ecx

; 89   : 	return m_fontTexture.IsEmpty();

  00000	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00003	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00006	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00009	ff e0		 jmp	 eax
?OnIsEmpty@CGraphicText@@MBE_NXZ ENDP			; CGraphicText::OnIsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?OnClear@CGraphicText@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CGraphicText@@MAEXXZ PROC			; CGraphicText::OnClear, COMDAT
; _this$ = ecx

; 84   : 	m_fontTexture.Destroy();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?Destroy@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::Destroy
?OnClear@CGraphicText@@MAEXXZ ENDP			; CGraphicText::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?OnLoad@CGraphicText@@MAE_NHPBX@Z
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
_bItalic$ = -4						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnLoad@CGraphicText@@MAE_NHPBX@Z PROC			; CGraphicText::OnLoad, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b c1		 mov	 eax, ecx

; 36   : 	static char strName[32];
; 37   : 	int size;
; 38   : 	bool bItalic = false;

  00008	c6 45 fc 00	 mov	 BYTE PTR _bItalic$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0000c	83 78 20 10	 cmp	 DWORD PTR [eax+32], 16	; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 35   : {

  00010	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00011	8d 70 0c	 lea	 esi, DWORD PTR [eax+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 35   : {

  00014	89 45 f8	 mov	 DWORD PTR _this$1$[ebp], eax
  00017	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00018	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  0001a	72 02		 jb	 SHORT $LN78@OnLoad

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001c	8b 06		 mov	 eax, DWORD PTR [esi]
$LN78@OnLoad:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 41   : 	const char * p = strrchr(GetFileName(), ':');

  0001e	6a 3a		 push	 58			; 0000003aH
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _strrchr
  00026	8b f8		 mov	 edi, eax
  00028	83 c4 08	 add	 esp, 8

; 42   : 
; 43   : 	if (p)

  0002b	85 ff		 test	 edi, edi
  0002d	74 7b		 je	 SHORT $LN4@OnLoad
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00033	8b ce		 mov	 ecx, esi

; 2145 :         if (_Large_string_engaged()) {

  00035	72 04		 jb	 SHORT $LN38@OnLoad

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00037	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00039	8b f1		 mov	 esi, ecx
$LN38@OnLoad:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 45   : 		strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  0003b	8b c7		 mov	 eax, edi
  0003d	2b c1		 sub	 eax, ecx
  0003f	50		 push	 eax
  00040	6a 1f		 push	 31			; 0000001fH
  00042	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  00047	50		 push	 eax
  00048	56		 push	 esi
  00049	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  0004e	e8 00 00 00 00	 call	 _strncpy

; 46   : 		++p;
; 47   : 
; 48   : 		static char num[8];
; 49   : 
; 50   : 		int i = 0;
; 51   : 		while (*p && isdigit(*p))

  00053	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00056	47		 inc	 edi
  00057	83 c4 14	 add	 esp, 20			; 00000014H
  0005a	33 f6		 xor	 esi, esi
  0005c	84 c0		 test	 al, al
  0005e	74 29		 je	 SHORT $LN77@OnLoad
$LL2@OnLoad:
  00060	0f be c0	 movsx	 eax, al
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _isdigit
  00069	83 c4 04	 add	 esp, 4
  0006c	85 c0		 test	 eax, eax
  0006e	74 10		 je	 SHORT $LN3@OnLoad

; 52   : 		{
; 53   : 			num[i++] = *(p++);

  00070	8a 07		 mov	 al, BYTE PTR [edi]
  00072	47		 inc	 edi
  00073	88 86 00 00 00
	00		 mov	 BYTE PTR ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA[esi], al
  00079	46		 inc	 esi
  0007a	8a 07		 mov	 al, BYTE PTR [edi]
  0007c	84 c0		 test	 al, al
  0007e	75 e0		 jne	 SHORT $LL2@OnLoad
$LN3@OnLoad:

; 54   : 		}
; 55   : 
; 56   : 		num[i] = '\0';

  00080	83 fe 08	 cmp	 esi, 8
  00083	0f 83 8c 00 00
	00		 jae	 $LN84@OnLoad
$LN77@OnLoad:
  00089	53		 push	 ebx
  0008a	c6 86 00 00 00
	00 00		 mov	 BYTE PTR ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA[esi], 0

; 57   : 		if(*p == 'i')

  00091	8a 1f		 mov	 bl, BYTE PTR [edi]

; 58   : 			bItalic = true;
; 59   : 		size = atoi(num);

  00093	68 00 00 00 00	 push	 OFFSET ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  00098	e8 00 00 00 00	 call	 __atoi64
  0009d	83 c4 04	 add	 esp, 4
  000a0	80 fb 69	 cmp	 bl, 105			; 00000069H
  000a3	0f 94 45 fc	 sete	 BYTE PTR _bItalic$[ebp]
  000a7	5b		 pop	 ebx

; 60   : 	}

  000a8	eb 4a		 jmp	 SHORT $LN5@OnLoad
$LN4@OnLoad:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000aa	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  000ae	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  000b0	72 02		 jb	 SHORT $LN80@OnLoad

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000b2	8b 06		 mov	 eax, DWORD PTR [esi]
$LN80@OnLoad:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 63   : 		p = strrchr(GetFileName(), '.');

  000b4	6a 2e		 push	 46			; 0000002eH
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 _strrchr
  000bc	83 c4 08	 add	 esp, 8

; 64   : 
; 65   : 		if (!p)

  000bf	85 c0		 test	 eax, eax
  000c1	75 07		 jne	 SHORT $LN7@OnLoad

; 66   : 		{
; 67   : 			assert(!"CGraphicText::OnLoadFromFile there is no extension (ie: .fnt)");
; 68   : 			strName[0] = '\0';

  000c3	a2 00 00 00 00	 mov	 BYTE PTR ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA, al

; 69   : 		}

  000c8	eb 25		 jmp	 SHORT $LN8@OnLoad
$LN7@OnLoad:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000ca	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  000ce	8b ce		 mov	 ecx, esi

; 2145 :         if (_Large_string_engaged()) {

  000d0	72 04		 jb	 SHORT $LN65@OnLoad

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000d2	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000d4	8b f1		 mov	 esi, ecx
$LN65@OnLoad:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp

; 71   : 			strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  000d6	2b c1		 sub	 eax, ecx
  000d8	50		 push	 eax
  000d9	6a 1f		 push	 31			; 0000001fH
  000db	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  000e0	50		 push	 eax
  000e1	56		 push	 esi
  000e2	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  000e7	e8 00 00 00 00	 call	 _strncpy
  000ec	83 c4 14	 add	 esp, 20			; 00000014H
$LN8@OnLoad:

; 72   : 
; 73   : 		size = 12;

  000ef	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
$LN5@OnLoad:

; 74   : 	}
; 75   : 
; 76   : 	if (!m_fontTexture.Create(strName, size, bItalic))

  000f4	ff 75 fc	 push	 DWORD PTR _bItalic$[ebp]
  000f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000fa	50		 push	 eax
  000fb	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  00100	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00103	e8 00 00 00 00	 call	 ?Create@CGraphicFontTexture@@QAE_NPBDH_N@Z ; CGraphicFontTexture::Create
  00108	84 c0		 test	 al, al
  0010a	5f		 pop	 edi
  0010b	0f 95 c0	 setne	 al
  0010e	5e		 pop	 esi

; 77   : 		return false;
; 78   : 
; 79   : 	return true;
; 80   : }

  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
$LN84@OnLoad:

; 54   : 		}
; 55   : 
; 56   : 		num[i] = '\0';

  00115	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN82@OnLoad:
  0011a	cc		 int	 3
?OnLoad@CGraphicText@@MAE_NHPBX@Z ENDP			; CGraphicText::OnLoad
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ
_TEXT	SEGMENT
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ PROC ; CGraphicText::GetFontTexturePointer, COMDAT
; _this$ = ecx

; 25   : 	return &m_fontTexture;

  00000	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 26   : }

  00003	c3		 ret	 0
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ENDP ; CGraphicText::GetFontTexturePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?DestroyDeviceObjects@CGraphicText@@UAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGraphicText@@UAEXXZ PROC		; CGraphicText::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 20   : 	m_fontTexture.DestroyDeviceObjects();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::DestroyDeviceObjects
?DestroyDeviceObjects@CGraphicText@@UAEXXZ ENDP		; CGraphicText::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicText@@UAE_NXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGraphicText@@UAE_NXZ PROC		; CGraphicText::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 15   : 	return m_fontTexture.CreateDeviceObjects();

  00000	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00003	e9 00 00 00 00	 jmp	 ?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ ; CGraphicFontTexture::CreateDeviceObjects
?CreateDeviceObjects@CGraphicText@@UAE_NXZ ENDP		; CGraphicText::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ??1CGraphicText@@UAE@XZ
_TEXT	SEGMENT
??1CGraphicText@@UAE@XZ PROC				; CGraphicText::~CGraphicText, COMDAT
; _this$ = ecx

; 10   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 11   : }

  00003	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicText@@6B@
  0000c	e8 00 00 00 00	 call	 ??1CGraphicFontTexture@@UAE@XZ ; CGraphicFontTexture::~CGraphicFontTexture
  00011	8b ce		 mov	 ecx, esi
  00013	5e		 pop	 esi
  00014	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
??1CGraphicText@@UAE@XZ ENDP				; CGraphicText::~CGraphicText
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ??0CGraphicText@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
??0CGraphicText@@QAE@PBD@Z PROC				; CGraphicText::CGraphicText, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicText@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 5    : CGraphicText::CGraphicText(const char* c_szFileName) : CResource(c_szFileName)

  00029	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CResource@@QAE@PBD@Z	; CResource::CResource

; 6    : {

  00031	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicText@@6B@
  00041	e8 00 00 00 00	 call	 ??0CGraphicFontTexture@@QAE@XZ ; CGraphicFontTexture::CGraphicFontTexture

; 7    : }

  00046	8b c6		 mov	 eax, esi
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CGraphicText@@QAE@PBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicText@@QAE@PBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicText@@QAE@PBD@Z ENDP				; CGraphicText::CGraphicText
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpText.cpp
;	COMDAT ?Type@CGraphicText@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicText@@SAKXZ PROC				; CGraphicText::Type, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicText@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 30   : 	static TType s_type = StringToType("CGraphicText");

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 31   : 	return s_type;
; 32   : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 30   : 	static TType s_type = StringToType("CGraphicText");

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JPGFHJCC@CGraphicText@
  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	e8 00 00 00 00	 call	 ?StringToType@CResource@@SAKPBD@Z ; CResource::StringToType
  00079	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA, eax
  00083	e8 00 00 00 00	 call	 __Init_thread_footer
  00088	83 c4 08	 add	 esp, 8
  0008b	eb b1		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicText@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicText@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicText@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicText@@SAKXZ ENDP				; CGraphicText::Type
END
