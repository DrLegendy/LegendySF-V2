; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCGraphicMarkInstance@@@@6B@	; CDynamicPool<CGraphicMarkInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z ; CDynamicPool<CGraphicMarkInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCGraphicMarkInstance@@@@6B@ ; CDynamicPool<CGraphicMarkInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCGraphicMarkInstance@@@@@8 ; CDynamicPool<CGraphicMarkInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCGraphicMarkInstance@@@@8	; CDynamicPool<CGraphicMarkInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCGraphicMarkInstance@@@@8	; CDynamicPool<CGraphicMarkInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCGraphicMarkInstance@@@@8 ; CDynamicPool<CGraphicMarkInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_E?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CGraphicMarkInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCGraphicMarkInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCGraphicMarkInstance@@@@@8 ; CDynamicPool<CGraphicMarkInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCGraphicMarkInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCGraphicMarkInstance@@@@8 ; CDynamicPool<CGraphicMarkInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCGraphicMarkInstance@@@@8 DD 00H	; CDynamicPool<CGraphicMarkInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCGraphicMarkInstance@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCGraphicMarkInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CGraphicMarkInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCGraphicMarkInstance@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCGraphicMarkInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCGraphicMarkInstance@@@@6B@ DD 00H	; CDynamicPool<CGraphicMarkInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCGraphicMarkInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCGraphicMarkInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCGraphicMarkInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCGraphicMarkInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCGraphicMarkInstance@@@@6B@ ; CDynamicPool<CGraphicMarkInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	?Type@CGraphicMarkInstance@@SAKXZ		; CGraphicMarkInstance::Type
PUBLIC	?IsType@CGraphicMarkInstance@@QAEHK@Z		; CGraphicMarkInstance::IsType
PUBLIC	?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ; CGraphicMarkInstance::SetImageFileName
PUBLIC	?GetImageFileName@CGraphicMarkInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicMarkInstance::GetImageFileName
PUBLIC	??0CGraphicMarkInstance@@QAE@XZ			; CGraphicMarkInstance::CGraphicMarkInstance
PUBLIC	??1CGraphicMarkInstance@@UAE@XZ			; CGraphicMarkInstance::~CGraphicMarkInstance
PUBLIC	?Destroy@CGraphicMarkInstance@@QAEXXZ		; CGraphicMarkInstance::Destroy
PUBLIC	?Render@CGraphicMarkInstance@@QAEXXZ		; CGraphicMarkInstance::Render
PUBLIC	?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ; CGraphicMarkInstance::SetDiffuseColor
PUBLIC	?SetPosition@CGraphicMarkInstance@@QAEXMM@Z	; CGraphicMarkInstance::SetPosition
PUBLIC	?SetIndex@CGraphicMarkInstance@@QAEXI@Z		; CGraphicMarkInstance::SetIndex
PUBLIC	?SetScale@CGraphicMarkInstance@@QAEXM@Z		; CGraphicMarkInstance::SetScale
PUBLIC	?Load@CGraphicMarkInstance@@QAEXXZ		; CGraphicMarkInstance::Load
PUBLIC	?IsEmpty@CGraphicMarkInstance@@QBE_NXZ		; CGraphicMarkInstance::IsEmpty
PUBLIC	?GetWidth@CGraphicMarkInstance@@QAEHXZ		; CGraphicMarkInstance::GetWidth
PUBLIC	?GetHeight@CGraphicMarkInstance@@QAEHXZ		; CGraphicMarkInstance::GetHeight
PUBLIC	?GetTexturePointer@CGraphicMarkInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicMarkInstance::GetTexturePointer
PUBLIC	?GetTextureReference@CGraphicMarkInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicMarkInstance::GetTextureReference
PUBLIC	?GetGraphicImagePointer@CGraphicMarkInstance@@QAEPAVCGraphicImage@@XZ ; CGraphicMarkInstance::GetGraphicImagePointer
PUBLIC	??8CGraphicMarkInstance@@QBE_NABV0@@Z		; CGraphicMarkInstance::operator==
PUBLIC	?Initialize@CGraphicMarkInstance@@IAEXXZ	; CGraphicMarkInstance::Initialize
PUBLIC	?OnRender@CGraphicMarkInstance@@MAEXXZ		; CGraphicMarkInstance::OnRender
PUBLIC	?OnSetImagePointer@CGraphicMarkInstance@@MAEXXZ	; CGraphicMarkInstance::OnSetImagePointer
PUBLIC	?OnIsType@CGraphicMarkInstance@@MAEHK@Z		; CGraphicMarkInstance::OnIsType
PUBLIC	?SetImagePointer@CGraphicMarkInstance@@IAEXPAVCGraphicImage@@@Z ; CGraphicMarkInstance::SetImagePointer
PUBLIC	?CreateSystem@CGraphicMarkInstance@@SAXI@Z	; CGraphicMarkInstance::CreateSystem
PUBLIC	?DestroySystem@CGraphicMarkInstance@@SAXXZ	; CGraphicMarkInstance::DestroySystem
PUBLIC	?New@CGraphicMarkInstance@@SAPAV1@XZ		; CGraphicMarkInstance::New
PUBLIC	?Delete@CGraphicMarkInstance@@SAXPAV1@@Z	; CGraphicMarkInstance::Delete
PUBLIC	??_GCGraphicMarkInstance@@UAEPAXI@Z		; CGraphicMarkInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ ; CDynamicPool<CGraphicMarkInstance>::~CDynamicPool<CGraphicMarkInstance>
PUBLIC	?Delete@?$CDynamicPool@VCGraphicMarkInstance@@@@KAXPAVCGraphicMarkInstance@@@Z ; CDynamicPool<CGraphicMarkInstance>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Emplace_reallocate<CGraphicMarkInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAXPAPAVCGraphicMarkInstance@@QAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicMarkInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicMarkInstance@@PAPAV1@@std@@YAPAPAVCGraphicMarkInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicMarkInstance * *,CGraphicMarkInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A ; CGraphicMarkInstance::ms_kPool
PUBLIC	??_7CGraphicMarkInstance@@6B@			; CGraphicMarkInstance::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_C@_0CM@NEBKKKDH@CGraphicMarkinstance?3?3Load?5?9?5?$FL?$CF@ ; `string'
PUBLIC	??_C@_0BF@BKIBHNLF@CGraphicMarkInstance@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CGraphicMarkInstance@@6B@			; CGraphicMarkInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicMarkInstance@@@8		; CGraphicMarkInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicMarkInstance@@8			; CGraphicMarkInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicMarkInstance@@8			; CGraphicMarkInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicMarkInstance@@8		; CGraphicMarkInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@41400000
PUBLIC	__real@41800000
PUBLIC	__real@437f0000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?IsEmpty@CResource@@QBE_NXZ:PROC		; CResource::IsEmpty
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z:PROC ; CGraphicBase::SetDefaultIndexBuffer
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	?GetWidth@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetWidth
EXTRN	?GetHeight@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetHeight
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	?GetWidth@CGraphicImage@@QBEHXZ:PROC		; CGraphicImage::GetWidth
EXTRN	?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTextureReference
EXTRN	?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTexturePointer
EXTRN	??_ECGraphicMarkInstance@@UAEPAXI@Z:PROC	; CGraphicMarkInstance::`vector deleting destructor'
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_dwType@?1??Type@CGraphicMarkInstance@@SAKXZ@4KA
_BSS	SEGMENT
?s_dwType@?1??Type@CGraphicMarkInstance@@SAKXZ@4KA DD 01H DUP (?) ; `CGraphicMarkInstance::Type'::`2'::s_dwType
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA DD 01H DUP (?) ; `CGraphicMarkInstance::Type'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CGraphicMarkInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CGraphicMarkInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicMarkInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicMarkInstance@@8 DD FLAT:??_R0?AVCGraphicMarkInstance@@@8 ; CGraphicMarkInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicMarkInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicMarkInstance@@8
rdata$r	SEGMENT
??_R2CGraphicMarkInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicMarkInstance@@8 ; CGraphicMarkInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicMarkInstance@@8
rdata$r	SEGMENT
??_R3CGraphicMarkInstance@@8 DD 00H			; CGraphicMarkInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicMarkInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicMarkInstance@@@8
data$r	SEGMENT
??_R0?AVCGraphicMarkInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicMarkInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicMarkInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicMarkInstance@@6B@
rdata$r	SEGMENT
??_R4CGraphicMarkInstance@@6B@ DD 00H			; CGraphicMarkInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicMarkInstance@@@8
	DD	FLAT:??_R3CGraphicMarkInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BKIBHNLF@CGraphicMarkInstance@
CONST	SEGMENT
??_C@_0BF@BKIBHNLF@CGraphicMarkInstance@ DB 'CGraphicMarkInstance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@NEBKKKDH@CGraphicMarkinstance?3?3Load?5?9?5?$FL?$CF@
CONST	SEGMENT
??_C@_0CM@NEBKKKDH@CGraphicMarkinstance?3?3Load?5?9?5?$FL?$CF@ DB 'CGraph'
	DB	'icMarkinstance::Load - [%s] NOT EXIST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicMarkInstance@@6B@
CONST	SEGMENT
??_7CGraphicMarkInstance@@6B@ DD FLAT:??_R4CGraphicMarkInstance@@6B@ ; CGraphicMarkInstance::`vftable'
	DD	FLAT:??_ECGraphicMarkInstance@@UAEPAXI@Z
	DD	FLAT:?OnRender@CGraphicMarkInstance@@MAEXXZ
	DD	FLAT:?OnSetImagePointer@CGraphicMarkInstance@@MAEXXZ
	DD	FLAT:?OnIsType@CGraphicMarkInstance@@MAEHK@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCGraphicMarkInstance@@@@6B@ ; CGraphicMarkInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCGraphicImage@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CGraphicMarkInstance@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CGraphicMarkInstance@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CGraphicMarkInstance@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicMarkInstance@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicMarkInstance@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicMarkInstance@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicMarkInstance@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicMarkInstance@@PAPAV1@@std@@YAPAPAVCGraphicMarkInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicMarkInstance@@PAPAV1@@std@@YAPAPAVCGraphicMarkInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicMarkInstance * *,CGraphicMarkInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicMarkInstance@@PAPAV1@@std@@YAPAPAVCGraphicMarkInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicMarkInstance * *,CGraphicMarkInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicMarkInstance@@PAPAV1@@std@@YAPAPAVCGraphicMarkInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicMarkInstance * *,CGraphicMarkInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAXPAPAVCGraphicMarkInstance@@QAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAXPAPAVCGraphicMarkInstance@@QAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicMarkInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAXPAPAVCGraphicMarkInstance@@QAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicMarkInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Emplace_reallocate<CGraphicMarkInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Emplace_reallocate<CGraphicMarkInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CGraphicMarkInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A ; CGraphicMarkInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ ; CDynamicPool<CGraphicMarkInstance>::~CDynamicPool<CGraphicMarkInstance>
??__F?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CGraphicMarkInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ??__E?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CGraphicMarkInstance::ms_kPool'', COMDAT

; 8    : CDynamicPool<CGraphicMarkInstance> CGraphicMarkInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CGraphicMarkInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CGraphicMarkInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CGraphicMarkInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ ; CDynamicPool<CGraphicMarkInstance>::~CDynamicPool<CGraphicMarkInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCGraphicMarkInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CGraphicMarkInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@YAPAPAVCGraphicMarkInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicMarkInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicMarkInstance * *,std::allocator<CGraphicMarkInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCGraphicMarkInstance@@@@KAXPAVCGraphicMarkInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCGraphicMarkInstance@@@@KAXPAVCGraphicMarkInstance@@@Z PROC ; CDynamicPool<CGraphicMarkInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCGraphicMarkInstance@@@@KAXPAVCGraphicMarkInstance@@@Z ENDP ; CDynamicPool<CGraphicMarkInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ PROC	; CDynamicPool<CGraphicMarkInstance>::~CDynamicPool<CGraphicMarkInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCGraphicMarkInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCGraphicMarkInstance@@@@UAE@XZ ENDP	; CDynamicPool<CGraphicMarkInstance>::~CDynamicPool<CGraphicMarkInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicMarkInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicMarkInstance@@UAEPAXI@Z PROC		; CGraphicMarkInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicMarkInstance@@UAE@XZ ; CGraphicMarkInstance::~CGraphicMarkInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 44		 push	 68			; 00000044H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicMarkInstance@@UAEPAXI@Z ENDP		; CGraphicMarkInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Delete@CGraphicMarkInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkImgInst$ = 8						; size = 4
?Delete@CGraphicMarkInstance@@SAXPAV1@@Z PROC		; CGraphicMarkInstance::Delete, COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 37   : 	pkImgInst->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkImgInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 38   : 	ms_kPool.Free(pkImgInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 39   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Emplace_reallocate<CGraphicMarkInstance * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 39   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CGraphicMarkInstance@@SAXPAV1@@Z ENDP		; CGraphicMarkInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?New@CGraphicMarkInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pkNewData$2 = -4					; size = 4
?New@CGraphicMarkInstance@@SAPAV1@XZ PROC		; CGraphicMarkInstance::New, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00010	75 61		 jne	 SHORT $LN4@New

; 65   : 				T* pkNewData=new T;

  00012	56		 push	 esi
  00013	6a 44		 push	 68			; 00000044H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00020	85 c0		 test	 eax, eax
  00022	74 0b		 je	 SHORT $LN6@New
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ??0CGraphicMarkInstance@@QAE@XZ ; CGraphicMarkInstance::CGraphicMarkInstance
  0002b	8b f0		 mov	 esi, eax
  0002d	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0002f	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00031	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00036	89 75 fc	 mov	 DWORD PTR _pkNewData$2[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00039	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+12
  0003f	74 16		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00041	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 32   : 	return ms_kPool.Alloc();

  00043	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00045	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0004c	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 32   : 	return ms_kPool.Alloc();

  00052	5e		 pop	 esi

; 33   : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00057	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$2[ebp]
  0005a	51		 push	 ecx
  0005b	50		 push	 eax
  0005c	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+4
  00061	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicMarkInstance@@@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@QAEPAPAVCGraphicMarkInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Emplace_reallocate<CGraphicMarkInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00066	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 32   : 	return ms_kPool.Alloc();

  0006c	8b c6		 mov	 eax, esi
  0006e	5e		 pop	 esi

; 33   : }

  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00073	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00076	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  00079	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 33   : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?New@CGraphicMarkInstance@@SAPAV1@XZ ENDP		; CGraphicMarkInstance::New
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?DestroySystem@CGraphicMarkInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CGraphicMarkInstance@@SAXXZ PROC		; CGraphicMarkInstance::DestroySystem, COMDAT

; 26   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 26   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 28   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 28   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CGraphicMarkInstance@@SAXXZ ENDP		; CGraphicMarkInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?CreateSystem@CGraphicMarkInstance@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CGraphicMarkInstance@@SAXI@Z PROC		; CGraphicMarkInstance::CreateSystem, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 21   : {

  0000e	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+28, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1307 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1307 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicMarkInstance@@2V?$CDynamicPool@VCGraphicMarkInstance@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 23   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1308 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicMarkInstance@@V?$allocator@PAVCGraphicMarkInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicMarkInstance *,std::allocator<CGraphicMarkInstance *> >::_Xlength
$LN20@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CGraphicMarkInstance@@SAXI@Z ENDP		; CGraphicMarkInstance::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetImagePointer@CGraphicMarkInstance@@IAEXPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_pImage$ = 8						; size = 4
?SetImagePointer@CGraphicMarkInstance@@IAEXPAVCGraphicImage@@@Z PROC ; CGraphicMarkInstance::SetImagePointer, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 69   : 			m_pObject = pObject;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _pImage$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 192  : {

  00009	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  0000a	8b 7e 28	 mov	 edi, DWORD PTR [esi+40]

; 69   : 			m_pObject = pObject;

  0000d	89 4e 28	 mov	 DWORD PTR [esi+40], ecx

; 70   : 
; 71   : 			if (m_pObject)

  00010	85 c9		 test	 ecx, ecx
  00012	74 05		 je	 SHORT $LN4@SetImagePo

; 72   : 				m_pObject->AddReference();

  00014	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN4@SetImagePo:

; 73   : 
; 74   : 			if (pOldObject)

  00019	85 ff		 test	 edi, edi
  0001b	74 07		 je	 SHORT $LN5@SetImagePo

; 75   : 				pOldObject->Release();

  0001d	8b cf		 mov	 ecx, edi
  0001f	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN5@SetImagePo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 195  : 	OnSetImagePointer();

  00024	8b 06		 mov	 eax, DWORD PTR [esi]
  00026	8b ce		 mov	 ecx, esi
  00028	ff 50 08	 call	 DWORD PTR [eax+8]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi

; 196  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SetImagePointer@CGraphicMarkInstance@@IAEXPAVCGraphicImage@@@Z ENDP ; CGraphicMarkInstance::SetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?OnIsType@CGraphicMarkInstance@@MAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?OnIsType@CGraphicMarkInstance@@MAEHK@Z PROC		; CGraphicMarkInstance::OnIsType, COMDAT
; _this$ = ecx

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 224  : 	if (CGraphicMarkInstance::Type() == dwType)

  00003	e8 00 00 00 00	 call	 ?Type@CGraphicMarkInstance@@SAKXZ ; CGraphicMarkInstance::Type
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 45 08	 cmp	 eax, DWORD PTR _dwType$[ebp]
  0000d	0f 94 c1	 sete	 cl
  00010	8b c1		 mov	 eax, ecx

; 225  : 		return TRUE;
; 226  : 
; 227  : 	return FALSE;
; 228  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?OnIsType@CGraphicMarkInstance@@MAEHK@Z ENDP		; CGraphicMarkInstance::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?OnSetImagePointer@CGraphicMarkInstance@@MAEXXZ
_TEXT	SEGMENT
?OnSetImagePointer@CGraphicMarkInstance@@MAEXXZ PROC	; CGraphicMarkInstance::OnSetImagePointer, COMDAT
; _this$ = ecx

; 232  : }

  00000	c2 00 00	 ret	 0
?OnSetImagePointer@CGraphicMarkInstance@@MAEXXZ ENDP	; CGraphicMarkInstance::OnSetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?OnRender@CGraphicMarkInstance@@MAEXXZ
_TEXT	SEGMENT
_su$1$ = -140						; size = 4
tv1128 = -136						; size = 4
_sv$1$ = -132						; size = 4
tv1112 = -128						; size = 4
_eu$1$ = -124						; size = 4
_fRenderHeight$1$ = -120				; size = 4
tv1152 = -120						; size = 4
_fRenderWidth$1$ = -116					; size = 4
tv1150 = -116						; size = 4
_pTexture$1$ = -112					; size = 4
_ev$1$ = -108						; size = 4
_texReverseWidth$1$ = -108				; size = 4
_dwR$1$ = -104						; size = 4
_dwR$1$ = -104						; size = 4
_dwR$1$ = -104						; size = 4
_dwR$1$ = -104						; size = 4
_vertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
?OnRender@CGraphicMarkInstance@@MAEXXZ PROC		; CGraphicMarkInstance::OnRender, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx
  00016	56		 push	 esi

; 53   : 	CGraphicImage * pImage = m_roImage.GetPointer();

  00017	8b 73 28	 mov	 esi, DWORD PTR [ebx+40]

; 54   : 	CGraphicTexture * pTexture = pImage->GetTexturePointer();

  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer

; 55   : 
; 56   : 	UINT uColCount = pImage->GetWidth() / MARK_WIDTH;

  00021	8b ce		 mov	 ecx, esi
  00023	89 45 90	 mov	 DWORD PTR _pTexture$1$[ebp], eax
  00026	e8 00 00 00 00	 call	 ?GetWidth@CGraphicImage@@QBEHXZ ; CGraphicImage::GetWidth
  0002b	99		 cdq
  0002c	83 e2 0f	 and	 edx, 15			; 0000000fH
  0002f	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  00032	c1 f9 04	 sar	 ecx, 4

; 57   : 
; 58   : 	if (uColCount == 0)

  00035	85 c9		 test	 ecx, ecx
  00037	0f 84 47 06 00
	00		 je	 $LN3@OnRender

; 59   : 		return;
; 60   : 
; 61   : 	UINT uCol = m_uIndex % uColCount;

  0003d	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00040	33 d2		 xor	 edx, edx
  00042	f7 f1		 div	 ecx

; 62   : 	UINT uRow = m_uIndex / uColCount;
; 63   : 
; 64   : 	RECT kRect;
; 65   : 	kRect.left=uCol*MARK_WIDTH;
; 66   : 	kRect.top=uRow*MARK_HEIGHT;
; 67   : 	kRect.right=kRect.left+MARK_WIDTH;
; 68   : 	kRect.bottom=kRect.top+MARK_HEIGHT;
; 69   : 
; 70   : 	float texReverseWidth = 1.0f / float(pTexture->GetWidth());

  00044	8b 4d 90	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00047	57		 push	 edi
  00048	8b fa		 mov	 edi, edx
  0004a	c1 e7 04	 shl	 edi, 4
  0004d	8d 34 40	 lea	 esi, DWORD PTR [eax+eax*2]
  00050	c1 e6 02	 shl	 esi, 2
  00053	e8 00 00 00 00	 call	 ?GetWidth@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetWidth
  00058	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000

; 71   : 	float texReverseHeight = 1.0f / float(pTexture->GetHeight());

  00060	8b 4d 90	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  00063	66 0f 6e c0	 movd	 xmm0, eax
  00067	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006a	f3 0f 5e c8	 divss	 xmm1, xmm0
  0006e	f3 0f 11 4d 94	 movss	 DWORD PTR _texReverseWidth$1$[ebp], xmm1
  00073	e8 00 00 00 00	 call	 ?GetHeight@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetHeight
  00078	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00080	66 0f 6e de	 movd	 xmm3, esi
  00084	66 0f 6e e7	 movd	 xmm4, edi
  00088	66 0f 6e c0	 movd	 xmm0, eax
  0008c	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0008f	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 83   : 	vertices[0].position.z	= 0.0f;

  00092	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+8], 0
  00099	66 0f 6e e8	 movd	 xmm5, eax
  0009d	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  000a0	f3 0f 5e c8	 divss	 xmm1, xmm0
  000a4	66 0f 6e c0	 movd	 xmm0, eax
  000a8	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ab	0f 5b db	 cvtdq2ps xmm3, xmm3
  000ae	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000b2	0f 5b e4	 cvtdq2ps xmm4, xmm4
  000b5	0f 5b ed	 cvtdq2ps xmm5, xmm5
  000b8	f3 0f 59 65 94	 mulss	 xmm4, DWORD PTR _texReverseWidth$1$[ebp]
  000bd	f3 0f 59 6d 94	 mulss	 xmm5, DWORD PTR _texReverseWidth$1$[ebp]
  000c2	f3 0f 59 d9	 mulss	 xmm3, xmm1
  000c6	f3 0f 10 4b 20	 movss	 xmm1, DWORD PTR [ebx+32]
  000cb	f3 0f 11 45 94	 movss	 DWORD PTR _ev$1$[ebp], xmm0
  000d0	0f 28 c1	 movaps	 xmm0, xmm1
  000d3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41800000
  000db	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@41400000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  000e3	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@437f0000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 77   : 	float fRenderWidth=MARK_WIDTH*m_fScale;

  000eb	f3 0f 11 45 8c	 movss	 DWORD PTR _fRenderWidth$1$[ebp], xmm0

; 81   : 	vertices[0].position.x	= m_v2Position.x-0.5f;

  000f0	f3 0f 10 43 14	 movss	 xmm0, DWORD PTR [ebx+20]
  000f5	f3 0f 11 4d 88	 movss	 DWORD PTR _fRenderHeight$1$[ebp], xmm1
  000fa	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00102	f3 0f 5c c1	 subss	 xmm0, xmm1
  00106	f3 0f 11 9d 7c
	ff ff ff	 movss	 DWORD PTR _sv$1$[ebp], xmm3

; 84   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  0010e	f3 0f 11 5d b0	 movss	 DWORD PTR _vertices$[ebp+20], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00113	f3 0f 10 5b 04	 movss	 xmm3, DWORD PTR [ebx+4]
  00118	0f 2f 1d 00 00
	00 00		 comiss	 xmm3, DWORD PTR __real@3f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 81   : 	vertices[0].position.x	= m_v2Position.x-0.5f;

  0011f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv1128[ebp], xmm0
  00127	f3 0f 11 45 9c	 movss	 DWORD PTR _vertices$[ebp], xmm0

; 82   : 	vertices[0].position.y	= m_v2Position.y-0.5f;

  0012c	f3 0f 10 43 18	 movss	 xmm0, DWORD PTR [ebx+24]
  00131	f3 0f 5c c1	 subss	 xmm0, xmm1
  00135	f3 0f 11 a5 74
	ff ff ff	 movss	 DWORD PTR _su$1$[ebp], xmm4
  0013d	f3 0f 11 6d 84	 movss	 DWORD PTR _eu$1$[ebp], xmm5

; 84   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  00142	f3 0f 11 65 ac	 movss	 DWORD PTR _vertices$[ebp+16], xmm4
  00147	f3 0f 11 45 80	 movss	 DWORD PTR tv1112[ebp], xmm0
  0014c	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00151	0f 57 c0	 xorps	 xmm0, xmm0
  00154	72 09		 jb	 SHORT $LN15@OnRender
  00156	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  0015d	eb 34		 jmp	 SHORT $LN14@OnRender
$LN15@OnRender:
  0015f	0f 2f c3	 comiss	 xmm0, xmm3
  00162	72 09		 jb	 SHORT $LN13@OnRender
  00164	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  0016b	eb 26		 jmp	 SHORT $LN14@OnRender
$LN13@OnRender:
  0016d	0f 28 c3	 movaps	 xmm0, xmm3
  00170	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00174	f3 0f 58 c1	 addss	 xmm0, xmm1
  00178	e8 00 00 00 00	 call	 __ftoui3
  0017d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00185	0f 57 c0	 xorps	 xmm0, xmm0
  00188	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@437f0000
  00190	89 45 98	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN14@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00193	f3 0f 10 63 08	 movss	 xmm4, DWORD PTR [ebx+8]
  00198	0f 2f 25 00 00
	00 00		 comiss	 xmm4, DWORD PTR __real@3f800000
  0019f	72 07		 jb	 SHORT $LN19@OnRender
  001a1	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  001a6	eb 1b		 jmp	 SHORT $LN18@OnRender
$LN19@OnRender:
  001a8	0f 2f c4	 comiss	 xmm0, xmm4
  001ab	72 04		 jb	 SHORT $LN17@OnRender
  001ad	33 ff		 xor	 edi, edi
  001af	eb 12		 jmp	 SHORT $LN18@OnRender
$LN17@OnRender:
  001b1	0f 28 c4	 movaps	 xmm0, xmm4
  001b4	f3 0f 59 c2	 mulss	 xmm0, xmm2
  001b8	f3 0f 58 c1	 addss	 xmm0, xmm1
  001bc	e8 00 00 00 00	 call	 __ftoui3
  001c1	8b f8		 mov	 edi, eax
$LN18@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  001c3	f3 0f 10 4b 0c	 movss	 xmm1, DWORD PTR [ebx+12]
  001c8	0f 57 c0	 xorps	 xmm0, xmm0
  001cb	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  001d2	72 07		 jb	 SHORT $LN23@OnRender
  001d4	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  001d9	eb 26		 jmp	 SHORT $LN22@OnRender
$LN23@OnRender:
  001db	0f 2f c1	 comiss	 xmm0, xmm1
  001de	72 04		 jb	 SHORT $LN21@OnRender
  001e0	33 f6		 xor	 esi, esi
  001e2	eb 1d		 jmp	 SHORT $LN22@OnRender
$LN21@OnRender:
  001e4	0f 28 c1	 movaps	 xmm0, xmm1
  001e7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  001ef	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  001f7	e8 00 00 00 00	 call	 __ftoui3
  001fc	8b f0		 mov	 esi, eax
  001fe	0f 57 c0	 xorps	 xmm0, xmm0
$LN22@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00201	f3 0f 10 53 10	 movss	 xmm2, DWORD PTR [ebx+16]
  00206	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0020e	0f 2f d1	 comiss	 xmm2, xmm1
  00211	72 07		 jb	 SHORT $LN27@OnRender
  00213	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00218	eb 29		 jmp	 SHORT $LN26@OnRender
$LN27@OnRender:
  0021a	0f 2f c2	 comiss	 xmm0, xmm2
  0021d	72 04		 jb	 SHORT $LN25@OnRender
  0021f	33 c0		 xor	 eax, eax
  00221	eb 20		 jmp	 SHORT $LN26@OnRender
$LN25@OnRender:
  00223	0f 28 c2	 movaps	 xmm0, xmm2
  00226	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0022e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00236	e8 00 00 00 00	 call	 __ftoui3
  0023b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
$LN26@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 87   : 	vertices[1].position.x	= m_v2Position.x + fRenderWidth -0.5f;

  00243	f3 0f 10 53 14	 movss	 xmm2, DWORD PTR [ebx+20]
  00248	f3 0f 58 55 8c	 addss	 xmm2, DWORD PTR _fRenderWidth$1$[ebp]
  0024d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00255	c1 e0 08	 shl	 eax, 8
  00258	0b 45 98	 or	 eax, DWORD PTR _dwR$1$[ebp]
  0025b	c1 e0 08	 shl	 eax, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 87   : 	vertices[1].position.x	= m_v2Position.x + fRenderWidth -0.5f;

  0025e	f3 0f 5c d0	 subss	 xmm2, xmm0

; 89   : 	vertices[1].position.z	= 0.0f;

  00262	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+32], 0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00269	0b c7		 or	 eax, edi
  0026b	c1 e0 08	 shl	 eax, 8
  0026e	0b c6		 or	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 85   : 	vertices[0].diffuse		= m_DiffuseColor;

  00270	89 45 a8	 mov	 DWORD PTR _vertices$[ebp+12], eax

; 87   : 	vertices[1].position.x	= m_v2Position.x + fRenderWidth -0.5f;

  00273	f3 0f 11 55 8c	 movss	 DWORD PTR tv1150[ebp], xmm2
  00278	f3 0f 11 55 b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm2

; 88   : 	vertices[1].position.y	= m_v2Position.y-0.5f;

  0027d	f3 0f 10 55 80	 movss	 xmm2, DWORD PTR tv1112[ebp]
  00282	f3 0f 11 55 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm2

; 90   : 	vertices[1].texCoord	= TTextureCoordinate(eu, sv);

  00287	f3 0f 10 55 84	 movss	 xmm2, DWORD PTR _eu$1$[ebp]
  0028c	f3 0f 11 55 c4	 movss	 DWORD PTR _vertices$[ebp+40], xmm2
  00291	f3 0f 10 95 7c
	ff ff ff	 movss	 xmm2, DWORD PTR _sv$1$[ebp]
  00299	f3 0f 11 55 c8	 movss	 DWORD PTR _vertices$[ebp+44], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0029e	f3 0f 10 53 04	 movss	 xmm2, DWORD PTR [ebx+4]
  002a3	0f 2f d1	 comiss	 xmm2, xmm1
  002a6	0f 57 c9	 xorps	 xmm1, xmm1
  002a9	72 09		 jb	 SHORT $LN35@OnRender
  002ab	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  002b2	eb 2d		 jmp	 SHORT $LN34@OnRender
$LN35@OnRender:
  002b4	0f 2f ca	 comiss	 xmm1, xmm2
  002b7	72 09		 jb	 SHORT $LN33@OnRender
  002b9	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  002c0	eb 1f		 jmp	 SHORT $LN34@OnRender
$LN33@OnRender:
  002c2	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@437f0000
  002ca	f3 0f 58 c2	 addss	 xmm0, xmm2
  002ce	e8 00 00 00 00	 call	 __ftoui3
  002d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002db	0f 57 c9	 xorps	 xmm1, xmm1
  002de	89 45 98	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN34@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  002e1	f3 0f 10 53 08	 movss	 xmm2, DWORD PTR [ebx+8]
  002e6	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@3f800000
  002ed	72 07		 jb	 SHORT $LN39@OnRender
  002ef	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  002f4	eb 1c		 jmp	 SHORT $LN38@OnRender
$LN39@OnRender:
  002f6	0f 2f ca	 comiss	 xmm1, xmm2
  002f9	72 04		 jb	 SHORT $LN37@OnRender
  002fb	33 ff		 xor	 edi, edi
  002fd	eb 13		 jmp	 SHORT $LN38@OnRender
$LN37@OnRender:
  002ff	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@437f0000
  00307	f3 0f 58 c2	 addss	 xmm0, xmm2
  0030b	e8 00 00 00 00	 call	 __ftoui3
  00310	8b f8		 mov	 edi, eax
$LN38@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00312	f3 0f 10 4b 0c	 movss	 xmm1, DWORD PTR [ebx+12]
  00317	0f 57 c0	 xorps	 xmm0, xmm0
  0031a	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  00321	72 07		 jb	 SHORT $LN43@OnRender
  00323	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00328	eb 26		 jmp	 SHORT $LN42@OnRender
$LN43@OnRender:
  0032a	0f 2f c1	 comiss	 xmm0, xmm1
  0032d	72 04		 jb	 SHORT $LN41@OnRender
  0032f	33 f6		 xor	 esi, esi
  00331	eb 1d		 jmp	 SHORT $LN42@OnRender
$LN41@OnRender:
  00333	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  0033b	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00343	0f 28 c1	 movaps	 xmm0, xmm1
  00346	e8 00 00 00 00	 call	 __ftoui3
  0034b	8b f0		 mov	 esi, eax
  0034d	0f 57 c0	 xorps	 xmm0, xmm0
$LN42@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  00350	f3 0f 10 4b 10	 movss	 xmm1, DWORD PTR [ebx+16]
  00355	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  0035c	72 07		 jb	 SHORT $LN47@OnRender
  0035e	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00363	eb 21		 jmp	 SHORT $LN46@OnRender
$LN47@OnRender:
  00365	0f 2f c1	 comiss	 xmm0, xmm1
  00368	72 04		 jb	 SHORT $LN45@OnRender
  0036a	33 c0		 xor	 eax, eax
  0036c	eb 18		 jmp	 SHORT $LN46@OnRender
$LN45@OnRender:
  0036e	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  00376	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  0037e	0f 28 c1	 movaps	 xmm0, xmm1
  00381	e8 00 00 00 00	 call	 __ftoui3
$LN46@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 93   : 	vertices[2].position.x	= m_v2Position.x-0.5f;

  00386	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv1128[ebp]

; 94   : 	vertices[2].position.y	= m_v2Position.y + fRenderHeight -0.5f;

  0038e	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00396	f3 0f 10 53 04	 movss	 xmm2, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 93   : 	vertices[2].position.x	= m_v2Position.x-0.5f;

  0039b	f3 0f 11 45 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm0

; 94   : 	vertices[2].position.y	= m_v2Position.y + fRenderHeight -0.5f;

  003a0	f3 0f 10 43 18	 movss	 xmm0, DWORD PTR [ebx+24]
  003a5	f3 0f 58 45 88	 addss	 xmm0, DWORD PTR _fRenderHeight$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  003aa	c1 e0 08	 shl	 eax, 8
  003ad	0b 45 98	 or	 eax, DWORD PTR _dwR$1$[ebp]
  003b0	c1 e0 08	 shl	 eax, 8
  003b3	0b c7		 or	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 95   : 	vertices[2].position.z	= 0.0f;

  003b5	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+56], 0
  003bc	f3 0f 5c c1	 subss	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  003c0	c1 e0 08	 shl	 eax, 8
  003c3	0b c6		 or	 eax, esi

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  003c5	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@3f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 91   : 	vertices[1].diffuse		= m_DiffuseColor;

  003cc	89 45 c0	 mov	 DWORD PTR _vertices$[ebp+36], eax

; 94   : 	vertices[2].position.y	= m_v2Position.y + fRenderHeight -0.5f;

  003cf	f3 0f 11 45 88	 movss	 DWORD PTR tv1152[ebp], xmm0
  003d4	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0

; 96   : 	vertices[2].texCoord	= TTextureCoordinate(su, ev);

  003d9	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _su$1$[ebp]
  003e1	f3 0f 11 45 dc	 movss	 DWORD PTR _vertices$[ebp+64], xmm0
  003e6	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _ev$1$[ebp]
  003eb	f3 0f 11 45 e0	 movss	 DWORD PTR _vertices$[ebp+68], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  003f0	0f 57 c0	 xorps	 xmm0, xmm0
  003f3	72 09		 jb	 SHORT $LN55@OnRender
  003f5	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  003fc	eb 30		 jmp	 SHORT $LN54@OnRender
$LN55@OnRender:
  003fe	0f 2f c2	 comiss	 xmm0, xmm2
  00401	72 09		 jb	 SHORT $LN53@OnRender
  00403	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  0040a	eb 22		 jmp	 SHORT $LN54@OnRender
$LN53@OnRender:
  0040c	0f 28 c2	 movaps	 xmm0, xmm2
  0040f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00417	f3 0f 58 c1	 addss	 xmm0, xmm1
  0041b	e8 00 00 00 00	 call	 __ftoui3
  00420	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  00428	0f 57 c0	 xorps	 xmm0, xmm0
  0042b	89 45 98	 mov	 DWORD PTR _dwR$1$[ebp], eax
$LN54@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  0042e	f3 0f 10 53 08	 movss	 xmm2, DWORD PTR [ebx+8]
  00433	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@3f800000
  0043a	72 07		 jb	 SHORT $LN59@OnRender
  0043c	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  00441	eb 1f		 jmp	 SHORT $LN58@OnRender
$LN59@OnRender:
  00443	0f 2f c2	 comiss	 xmm0, xmm2
  00446	72 04		 jb	 SHORT $LN57@OnRender
  00448	33 ff		 xor	 edi, edi
  0044a	eb 16		 jmp	 SHORT $LN58@OnRender
$LN57@OnRender:
  0044c	0f 28 c2	 movaps	 xmm0, xmm2
  0044f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00457	f3 0f 58 c1	 addss	 xmm0, xmm1
  0045b	e8 00 00 00 00	 call	 __ftoui3
  00460	8b f8		 mov	 edi, eax
$LN58@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00462	f3 0f 10 4b 0c	 movss	 xmm1, DWORD PTR [ebx+12]
  00467	0f 57 c0	 xorps	 xmm0, xmm0
  0046a	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  00471	72 07		 jb	 SHORT $LN63@OnRender
  00473	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00478	eb 26		 jmp	 SHORT $LN62@OnRender
$LN63@OnRender:
  0047a	0f 2f c1	 comiss	 xmm0, xmm1
  0047d	72 04		 jb	 SHORT $LN61@OnRender
  0047f	33 f6		 xor	 esi, esi
  00481	eb 1d		 jmp	 SHORT $LN62@OnRender
$LN61@OnRender:
  00483	0f 28 c1	 movaps	 xmm0, xmm1
  00486	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0048e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00496	e8 00 00 00 00	 call	 __ftoui3
  0049b	8b f0		 mov	 esi, eax
  0049d	0f 57 c0	 xorps	 xmm0, xmm0
$LN62@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  004a0	f3 0f 10 4b 10	 movss	 xmm1, DWORD PTR [ebx+16]
  004a5	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  004ac	72 07		 jb	 SHORT $LN67@OnRender
  004ae	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  004b3	eb 21		 jmp	 SHORT $LN66@OnRender
$LN67@OnRender:
  004b5	0f 2f c1	 comiss	 xmm0, xmm1
  004b8	72 04		 jb	 SHORT $LN65@OnRender
  004ba	33 c0		 xor	 eax, eax
  004bc	eb 18		 jmp	 SHORT $LN66@OnRender
$LN65@OnRender:
  004be	0f 28 c1	 movaps	 xmm0, xmm1
  004c1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  004c9	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  004d1	e8 00 00 00 00	 call	 __ftoui3
$LN66@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 99   : 	vertices[3].position.x	= m_v2Position.x + fRenderWidth -0.5f;

  004d6	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv1150[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  004db	f3 0f 10 4b 04	 movss	 xmm1, DWORD PTR [ebx+4]

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004e0	c1 e0 08	 shl	 eax, 8
  004e3	0b 45 98	 or	 eax, DWORD PTR _dwR$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 99   : 	vertices[3].position.x	= m_v2Position.x + fRenderWidth -0.5f;

  004e6	f3 0f 11 45 e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm0

; 100  : 	vertices[3].position.y	= m_v2Position.y + fRenderHeight -0.5f;

  004eb	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv1152[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004f0	c1 e0 08	 shl	 eax, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 100  : 	vertices[3].position.y	= m_v2Position.y + fRenderHeight -0.5f;

  004f3	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004f8	0b c7		 or	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 102  : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  004fa	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _eu$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  004ff	c1 e0 08	 shl	 eax, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 102  : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  00502	f3 0f 11 45 f4	 movss	 DWORD PTR _vertices$[ebp+88], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00507	0b c6		 or	 eax, esi

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00509	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 97   : 	vertices[2].diffuse		= m_DiffuseColor;

  00510	89 45 d8	 mov	 DWORD PTR _vertices$[ebp+60], eax

; 101  : 	vertices[3].position.z	= 0.0f;

  00513	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+80], 0

; 102  : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);

  0051a	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _ev$1$[ebp]
  0051f	f3 0f 11 45 f8	 movss	 DWORD PTR _vertices$[ebp+92], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00524	0f 57 c0	 xorps	 xmm0, xmm0
  00527	72 09		 jb	 SHORT $LN75@OnRender
  00529	c7 45 98 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00530	eb 2c		 jmp	 SHORT $LN74@OnRender
$LN75@OnRender:
  00532	0f 2f c1	 comiss	 xmm0, xmm1
  00535	72 09		 jb	 SHORT $LN73@OnRender
  00537	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  0053e	eb 1e		 jmp	 SHORT $LN74@OnRender
$LN73@OnRender:
  00540	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  00548	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00550	0f 28 c1	 movaps	 xmm0, xmm1
  00553	e8 00 00 00 00	 call	 __ftoui3
  00558	89 45 98	 mov	 DWORD PTR _dwR$1$[ebp], eax
  0055b	0f 57 c0	 xorps	 xmm0, xmm0
$LN74@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  0055e	f3 0f 10 4b 08	 movss	 xmm1, DWORD PTR [ebx+8]
  00563	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  0056a	72 07		 jb	 SHORT $LN79@OnRender
  0056c	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  00571	eb 23		 jmp	 SHORT $LN78@OnRender
$LN79@OnRender:
  00573	0f 2f c1	 comiss	 xmm0, xmm1
  00576	72 04		 jb	 SHORT $LN77@OnRender
  00578	33 ff		 xor	 edi, edi
  0057a	eb 1a		 jmp	 SHORT $LN78@OnRender
$LN77@OnRender:
  0057c	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  00584	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  0058c	0f 28 c1	 movaps	 xmm0, xmm1
  0058f	e8 00 00 00 00	 call	 __ftoui3
  00594	8b f8		 mov	 edi, eax
$LN78@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  00596	f3 0f 10 4b 0c	 movss	 xmm1, DWORD PTR [ebx+12]
  0059b	0f 57 c0	 xorps	 xmm0, xmm0
  0059e	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  005a5	72 07		 jb	 SHORT $LN83@OnRender
  005a7	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  005ac	eb 26		 jmp	 SHORT $LN82@OnRender
$LN83@OnRender:
  005ae	0f 2f c1	 comiss	 xmm0, xmm1
  005b1	72 04		 jb	 SHORT $LN81@OnRender
  005b3	33 f6		 xor	 esi, esi
  005b5	eb 1d		 jmp	 SHORT $LN82@OnRender
$LN81@OnRender:
  005b7	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  005bf	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  005c7	0f 28 c1	 movaps	 xmm0, xmm1
  005ca	e8 00 00 00 00	 call	 __ftoui3
  005cf	8b f0		 mov	 esi, eax
  005d1	0f 57 c0	 xorps	 xmm0, xmm0
$LN82@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  005d4	f3 0f 10 4b 10	 movss	 xmm1, DWORD PTR [ebx+16]
  005d9	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3f800000
  005e0	72 07		 jb	 SHORT $LN87@OnRender
  005e2	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  005e7	eb 21		 jmp	 SHORT $LN86@OnRender
$LN87@OnRender:
  005e9	0f 2f c1	 comiss	 xmm0, xmm1
  005ec	72 04		 jb	 SHORT $LN85@OnRender
  005ee	33 c0		 xor	 eax, eax
  005f0	eb 18		 jmp	 SHORT $LN86@OnRender
$LN85@OnRender:
  005f2	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@437f0000
  005fa	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00602	0f 28 c1	 movaps	 xmm0, xmm1
  00605	e8 00 00 00 00	 call	 __ftoui3
$LN86@OnRender:

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0060a	c1 e0 08	 shl	 eax, 8
  0060d	0b 45 98	 or	 eax, DWORD PTR _dwR$1$[ebp]
  00610	c1 e0 08	 shl	 eax, 8
  00613	0b c7		 or	 eax, edi
  00615	c1 e0 08	 shl	 eax, 8
  00618	0b c6		 or	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 103  : 	vertices[3].diffuse		= m_DiffuseColor;

  0061a	89 45 f0	 mov	 DWORD PTR _vertices$[ebp+84], eax

; 104  : 
; 105  : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  0061d	8d 45 9c	 lea	 eax, DWORD PTR _vertices$[ebp]
  00620	6a 04		 push	 4
  00622	50		 push	 eax
  00623	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  00628	83 c4 08	 add	 esp, 8
  0062b	5f		 pop	 edi
  0062c	84 c0		 test	 al, al
  0062e	74 54		 je	 SHORT $LN3@OnRender

; 106  : 	{
; 107  : 		CGraphicBase::SetDefaultIndexBuffer(CGraphicBase::DEFAULT_IB_FILL_RECT);

  00630	6a 05		 push	 5
  00632	e8 00 00 00 00	 call	 ?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z ; CGraphicBase::SetDefaultIndexBuffer

; 108  : 
; 109  : 		STATEMANAGER.SetTexture(0, pTexture->GetD3DTexture());

  00637	8b 4d 90	 mov	 ecx, DWORD PTR _pTexture$1$[ebp]
  0063a	83 c4 04	 add	 esp, 4
  0063d	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00642	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00648	50		 push	 eax
  00649	6a 00		 push	 0
  0064b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 110  : 		STATEMANAGER.SetTexture(1, NULL);

  00650	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00656	6a 00		 push	 0
  00658	6a 01		 push	 1
  0065a	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 111  : 		STATEMANAGER.SetVertexShader(D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX1);

  0065f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00665	68 42 01 00 00	 push	 322			; 00000142H
  0066a	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 112  : 		STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, 4, 0, 2);

  0066f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00675	6a 02		 push	 2
  00677	6a 00		 push	 0
  00679	6a 04		 push	 4
  0067b	6a 00		 push	 0
  0067d	6a 04		 push	 4
  0067f	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN3@OnRender:

; 113  : 		//OLD: STATEMANAGER.DrawIndexedPrimitiveUP(D3DPT_TRIANGLELIST, 0, 4, 2, c_FillRectIndices, D3DFMT_INDEX16, vertices, sizeof(TPDTVertex));
; 114  : 	}
; 115  : }

  00684	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00687	5e		 pop	 esi
  00688	33 cd		 xor	 ecx, ebp
  0068a	5b		 pop	 ebx
  0068b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00690	8b e5		 mov	 esp, ebp
  00692	5d		 pop	 ebp
  00693	c3		 ret	 0
?OnRender@CGraphicMarkInstance@@MAEXXZ ENDP		; CGraphicMarkInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Initialize@CGraphicMarkInstance@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGraphicMarkInstance@@IAEXXZ PROC		; CGraphicMarkInstance::Initialize, COMDAT
; _this$ = ecx

; 236  : 	m_DiffuseColor.r = m_DiffuseColor.g = m_DiffuseColor.b = m_DiffuseColor.a = 1.0f;

  00000	c7 41 10 00 00
	80 3f		 mov	 DWORD PTR [ecx+16], 1065353216 ; 3f800000H
  00007	c7 41 0c 00 00
	80 3f		 mov	 DWORD PTR [ecx+12], 1065353216 ; 3f800000H
  0000e	c7 41 08 00 00
	80 3f		 mov	 DWORD PTR [ecx+8], 1065353216 ; 3f800000H
  00015	c7 41 04 00 00
	80 3f		 mov	 DWORD PTR [ecx+4], 1065353216 ; 3f800000H

; 237  : 	m_v2Position.x = m_v2Position.y = 0.0f;

  0001c	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
  00023	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 238  : 	m_uIndex = 0;

  0002a	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 239  : 	m_fScale = 1.0f;

  00031	c7 41 20 00 00
	80 3f		 mov	 DWORD PTR [ecx+32], 1065353216 ; 3f800000H

; 240  : }

  00038	c3		 ret	 0
?Initialize@CGraphicMarkInstance@@IAEXXZ ENDP		; CGraphicMarkInstance::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ??8CGraphicMarkInstance@@QBE_NABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??8CGraphicMarkInstance@@QBE_NABV0@@Z PROC		; CGraphicMarkInstance::operator==, COMDAT
; _this$ = ecx

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 208  : 	return (m_roImage.GetPointer() == rhs.m_roImage.GetPointer());

  00003	8b 45 08	 mov	 eax, DWORD PTR _rhs$[ebp]
  00006	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00009	3b 48 28	 cmp	 ecx, DWORD PTR [eax+40]
  0000c	0f 94 c0	 sete	 al

; 209  : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8CGraphicMarkInstance@@QBE_NABV0@@Z ENDP		; CGraphicMarkInstance::operator==
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetGraphicImagePointer@CGraphicMarkInstance@@QAEPAVCGraphicImage@@XZ
_TEXT	SEGMENT
?GetGraphicImagePointer@CGraphicMarkInstance@@QAEPAVCGraphicImage@@XZ PROC ; CGraphicMarkInstance::GetGraphicImagePointer, COMDAT
; _this$ = ecx

; 129  : 	return m_roImage.GetPointer();

  00000	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]

; 130  : }

  00003	c3		 ret	 0
?GetGraphicImagePointer@CGraphicMarkInstance@@QAEPAVCGraphicImage@@XZ ENDP ; CGraphicMarkInstance::GetGraphicImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetTextureReference@CGraphicMarkInstance@@QBEABVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetTextureReference@CGraphicMarkInstance@@QBEABVCGraphicTexture@@XZ PROC ; CGraphicMarkInstance::GetTextureReference, COMDAT
; _this$ = ecx

; 119  : 	return m_roImage->GetTextureReference();

  00000	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00003	e9 00 00 00 00	 jmp	 ?GetTextureReference@CGraphicImage@@QBEABVCGraphicTexture@@XZ ; CGraphicImage::GetTextureReference
?GetTextureReference@CGraphicMarkInstance@@QBEABVCGraphicTexture@@XZ ENDP ; CGraphicMarkInstance::GetTextureReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetTexturePointer@CGraphicMarkInstance@@QAEPAVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetTexturePointer@CGraphicMarkInstance@@QAEPAVCGraphicTexture@@XZ PROC ; CGraphicMarkInstance::GetTexturePointer, COMDAT
; _this$ = ecx

; 124  : 	return m_roImage->GetTexturePointer();

  00000	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00003	e9 00 00 00 00	 jmp	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer
?GetTexturePointer@CGraphicMarkInstance@@QAEPAVCGraphicTexture@@XZ ENDP ; CGraphicMarkInstance::GetTexturePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetHeight@CGraphicMarkInstance@@QAEHXZ
_TEXT	SEGMENT
?GetHeight@CGraphicMarkInstance@@QAEHXZ PROC		; CGraphicMarkInstance::GetHeight, COMDAT
; _this$ = ecx

; 153  : 	if (IsEmpty())

  00000	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicMarkInstance@@QBE_NXZ ; CGraphicMarkInstance::IsEmpty
  00005	33 d2		 xor	 edx, edx
  00007	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0000c	84 c0		 test	 al, al
  0000e	0f 45 ca	 cmovne	 ecx, edx
  00011	8b c1		 mov	 eax, ecx

; 154  : 		return 0;
; 155  : 
; 156  : 	//return m_roImage->GetHeight();
; 157  : 	return 12;
; 158  : }

  00013	c3		 ret	 0
?GetHeight@CGraphicMarkInstance@@QAEHXZ ENDP		; CGraphicMarkInstance::GetHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetWidth@CGraphicMarkInstance@@QAEHXZ
_TEXT	SEGMENT
?GetWidth@CGraphicMarkInstance@@QAEHXZ PROC		; CGraphicMarkInstance::GetWidth, COMDAT
; _this$ = ecx

; 144  : 	if (IsEmpty())

  00000	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicMarkInstance@@QBE_NXZ ; CGraphicMarkInstance::IsEmpty
  00005	33 d2		 xor	 edx, edx
  00007	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0000c	84 c0		 test	 al, al
  0000e	0f 45 ca	 cmovne	 ecx, edx
  00011	8b c1		 mov	 eax, ecx

; 145  : 		return 0;
; 146  : 
; 147  : 	//return m_roImage->GetWidth();
; 148  : 	return 16;
; 149  : }

  00013	c3		 ret	 0
?GetWidth@CGraphicMarkInstance@@QAEHXZ ENDP		; CGraphicMarkInstance::GetWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?IsEmpty@CGraphicMarkInstance@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@CGraphicMarkInstance@@QBE_NXZ PROC		; CGraphicMarkInstance::IsEmpty, COMDAT
; _this$ = ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 62   : 			return m_pObject == NULL ? true : false;

  00000	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00003	85 c9		 test	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 200  : 	if (!m_roImage.IsNull() && !m_roImage->IsEmpty())

  00005	74 0a		 je	 SHORT $LN2@IsEmpty
  00007	e8 00 00 00 00	 call	 ?IsEmpty@CResource@@QBE_NXZ ; CResource::IsEmpty
  0000c	84 c0		 test	 al, al
  0000e	75 01		 jne	 SHORT $LN2@IsEmpty

; 204  : }

  00010	c3		 ret	 0
$LN2@IsEmpty:

; 201  : 		return false;
; 202  : 
; 203  : 	return true;

  00011	b0 01		 mov	 al, 1

; 204  : }

  00013	c3		 ret	 0
?IsEmpty@CGraphicMarkInstance@@QBE_NXZ ENDP		; CGraphicMarkInstance::IsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Load@CGraphicMarkInstance@@QAEXXZ
_TEXT	SEGMENT
?Load@CGraphicMarkInstance@@QAEXXZ PROC			; CGraphicMarkInstance::Load, COMDAT
; _this$ = ecx

; 175  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b d9		 mov	 ebx, ecx

; 176  : 	if (GetImageFileName().empty())

  00004	e8 00 00 00 00	 call	 ?GetImageFileName@CGraphicMarkInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CGraphicMarkInstance::GetImageFileName
  00009	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  0000b	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 176  : 	if (GetImageFileName().empty())

  0000f	74 4f		 je	 SHORT $LN4@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00011	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00015	72 02		 jb	 SHORT $LN23@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00017	8b 06		 mov	 eax, DWORD PTR [esi]
$LN23@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 179  : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(GetImageFileName().c_str());

  00019	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00026	8b f8		 mov	 edi, eax

; 180  : 
; 181  : 	if (!pResource)

  00028	85 ff		 test	 edi, edi
  0002a	75 1a		 jne	 SHORT $LN3@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00030	72 02		 jb	 SHORT $LN18@Load

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00032	8b 36		 mov	 esi, DWORD PTR [esi]
$LN18@Load:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 183  : 		TraceError("CGraphicMarkinstance::Load - [%s] NOT EXIST", GetImageFileName().c_str());

  00034	56		 push	 esi
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@NEBKKKDH@CGraphicMarkinstance?3?3Load?5?9?5?$FL?$CF@
  0003a	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003f	83 c4 08	 add	 esp, 8
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi

; 189  : }

  00044	5b		 pop	 ebx
  00045	c3		 ret	 0
$LN3@Load:

; 184  : 		return;
; 185  : 	}
; 186  : 
; 187  : 	if (pResource->IsType(CGraphicImage::Type()))

  00046	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  0004b	50		 push	 eax
  0004c	8b cf		 mov	 ecx, edi
  0004e	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00053	84 c0		 test	 al, al
  00055	74 08		 je	 SHORT $LN24@Load

; 188  : 		SetImagePointer(static_cast<CGraphicImage*>(pResource));

  00057	57		 push	 edi
  00058	8b cb		 mov	 ecx, ebx
  0005a	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicMarkInstance@@IAEXPAVCGraphicImage@@@Z ; CGraphicMarkInstance::SetImagePointer
$LN24@Load:
  0005f	5f		 pop	 edi
$LN4@Load:
  00060	5e		 pop	 esi

; 189  : }

  00061	5b		 pop	 ebx
  00062	c3		 ret	 0
?Load@CGraphicMarkInstance@@QAEXXZ ENDP			; CGraphicMarkInstance::Load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetScale@CGraphicMarkInstance@@QAEXM@Z
_TEXT	SEGMENT
_fScale$ = 8						; size = 4
?SetScale@CGraphicMarkInstance@@QAEXM@Z PROC		; CGraphicMarkInstance::SetScale, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 134  : 	m_fScale=fScale;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  00008	f3 0f 11 41 20	 movss	 DWORD PTR [ecx+32], xmm0

; 135  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetScale@CGraphicMarkInstance@@QAEXM@Z ENDP		; CGraphicMarkInstance::SetScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetIndex@CGraphicMarkInstance@@QAEXI@Z
_TEXT	SEGMENT
_uIndex$ = 8						; size = 4
?SetIndex@CGraphicMarkInstance@@QAEXI@Z PROC		; CGraphicMarkInstance::SetIndex, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 139  : 	m_uIndex=uIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _uIndex$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 140  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetIndex@CGraphicMarkInstance@@QAEXI@Z ENDP		; CGraphicMarkInstance::SetIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetPosition@CGraphicMarkInstance@@QAEXMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
?SetPosition@CGraphicMarkInstance@@QAEXMM@Z PROC	; CGraphicMarkInstance::SetPosition, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 170  : 	m_v2Position.x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 171  : 	m_v2Position.y = fy;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00012	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 172  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?SetPosition@CGraphicMarkInstance@@QAEXMM@Z ENDP	; CGraphicMarkInstance::SetPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_fg$ = 12						; size = 4
_fb$ = 16						; size = 4
_fa$ = 20						; size = 4
?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z PROC	; CGraphicMarkInstance::SetDiffuseColor, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 162  : 	m_DiffuseColor.r = fr;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fr$[ebp]
  00008	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 163  : 	m_DiffuseColor.g = fg;

  0000d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fg$[ebp]
  00012	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 164  : 	m_DiffuseColor.b = fb;

  00017	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fb$[ebp]
  0001c	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 165  : 	m_DiffuseColor.a = fa;

  00021	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _fa$[ebp]
  00026	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 166  : }

  0002b	5d		 pop	 ebp
  0002c	c2 10 00	 ret	 16			; 00000010H
?SetDiffuseColor@CGraphicMarkInstance@@QAEXMMMM@Z ENDP	; CGraphicMarkInstance::SetDiffuseColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Render@CGraphicMarkInstance@@QAEXXZ
_TEXT	SEGMENT
?Render@CGraphicMarkInstance@@QAEXXZ PROC		; CGraphicMarkInstance::Render, COMDAT
; _this$ = ecx

; 42   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 43   : 	if (IsEmpty())

  00003	e8 00 00 00 00	 call	 ?IsEmpty@CGraphicMarkInstance@@QBE_NXZ ; CGraphicMarkInstance::IsEmpty
  00008	84 c0		 test	 al, al
  0000a	75 08		 jne	 SHORT $LN1@Render

; 44   : 		return;
; 45   : 
; 46   : 	assert(!IsEmpty());
; 47   : 
; 48   : 	OnRender();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	8b ce		 mov	 ecx, esi
  00010	5e		 pop	 esi
  00011	ff 60 04	 jmp	 DWORD PTR [eax+4]
$LN1@Render:
  00014	5e		 pop	 esi

; 49   : }

  00015	c3		 ret	 0
?Render@CGraphicMarkInstance@@QAEXXZ ENDP		; CGraphicMarkInstance::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Destroy@CGraphicMarkInstance@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGraphicMarkInstance@@QAEXXZ PROC		; CGraphicMarkInstance::Destroy, COMDAT
; _this$ = ecx

; 243  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00003	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]

; 68   : 
; 69   : 			m_pObject = pObject;

  00006	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();
; 73   : 
; 74   : 			if (pOldObject)

  0000d	85 c9		 test	 ecx, ecx
  0000f	74 05		 je	 SHORT $LN5@Destroy

; 75   : 				pOldObject->Release();

  00011	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN5@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 245  : 	Initialize();

  00016	8b ce		 mov	 ecx, esi
  00018	5e		 pop	 esi
  00019	e9 00 00 00 00	 jmp	 ?Initialize@CGraphicMarkInstance@@IAEXXZ ; CGraphicMarkInstance::Initialize
?Destroy@CGraphicMarkInstance@@QAEXXZ ENDP		; CGraphicMarkInstance::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ??1CGraphicMarkInstance@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicMarkInstance@@UAE@XZ PROC			; CGraphicMarkInstance::~CGraphicMarkInstance, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicMarkInstance@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicMarkInstance@@6B@

; 255  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CGraphicMarkInstance@@QAEXXZ ; CGraphicMarkInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	8b 46 40	 mov	 eax, DWORD PTR [esi+64]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00033	83 f8 10	 cmp	 eax, 16			; 00000010H
  00036	72 0d		 jb	 SHORT $LN7@CGraphicMa

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00038	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	50		 push	 eax
  0003a	ff 76 2c	 push	 DWORD PTR [esi+44]
  0003d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00042	83 c4 08	 add	 esp, 8
$LN7@CGraphicMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00045	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004c	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00053	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 53   : 			if (m_pObject)

  00057	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]

; 37   : 		{

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 			if (m_pObject)

  00061	85 c9		 test	 ecx, ecx
  00063	74 0c		 je	 SHORT $LN17@CGraphicMa

; 54   : 			{
; 55   : 				m_pObject->Release();

  00065	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  0006a	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
$LN17@CGraphicMa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 256  : }

  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
  00081	cc		 int	 3
  00082	cc		 int	 3
  00083	cc		 int	 3
  00084	cc		 int	 3
  00085	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicMarkInstance@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicMarkInstance@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicMarkInstance@@UAE@XZ ENDP			; CGraphicMarkInstance::~CGraphicMarkInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ??0CGraphicMarkInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGraphicMarkInstance@@QAE@XZ PROC			; CGraphicMarkInstance::CGraphicMarkInstance, COMDAT
; _this$ = ecx

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicMarkInstance@@6B@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Ref.h

; 20   : 		CRef() : m_pObject(NULL)

  00010	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 250  : 	Initialize();

  00029	e8 00 00 00 00	 call	 ?Initialize@CGraphicMarkInstance@@IAEXXZ ; CGraphicMarkInstance::Initialize

; 251  : }

  0002e	8b c6		 mov	 eax, esi
  00030	5e		 pop	 esi
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0CGraphicMarkInstance@@QAE@XZ ENDP			; CGraphicMarkInstance::CGraphicMarkInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?GetImageFileName@CGraphicMarkInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?GetImageFileName@CGraphicMarkInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CGraphicMarkInstance::GetImageFileName, COMDAT
; _this$ = ecx

; 17   : 	return m_stImageFileName;

  00000	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 18   : }

  00003	c3		 ret	 0
?GetImageFileName@CGraphicMarkInstance@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CGraphicMarkInstance::GetImageFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
__New_ptr$1 = -4					; size = 4
_c_szFileName$ = 8					; size = 4
?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z PROC	; CGraphicMarkInstance::SetImageFileName, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szFileName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 11   : {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 11   : {

  0000d	57		 push	 edi

; 12   : 	m_stImageFileName = c_szFileName;

  0000e	8d 79 2c	 lea	 edi, DWORD PTR [ecx+44]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00011	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL44@SetImageFi:
  00014	8a 06		 mov	 al, BYTE PTR [esi]
  00016	46		 inc	 esi
  00017	84 c0		 test	 al, al
  00019	75 f9		 jne	 SHORT $LL44@SetImageFi
  0001b	2b f1		 sub	 esi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001d	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00020	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00023	3b f1		 cmp	 esi, ecx
  00025	77 24		 ja	 SHORT $LN10@SetImageFi

; 2135 :         value_type* _Result = _Bx._Buf;

  00027	8b df		 mov	 ebx, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0002c	72 02		 jb	 SHORT $LN13@SetImageFi

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0002e	8b 1f		 mov	 ebx, DWORD PTR [edi]
$LN13@SetImageFi:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00030	56		 push	 esi
  00031	52		 push	 edx
  00032	53		 push	 ebx

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00033	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00036	e8 00 00 00 00	 call	 _memmove
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003e	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0
  00042	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 13   : }

  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN10@SetImageFi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4221 :         if (_New_size > max_size()) {

  0004b	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00051	0f 87 8d 00 00
	00		 ja	 $LN48@SetImageFi

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00057	8b de		 mov	 ebx, esi
  00059	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0005c	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00062	76 07		 jbe	 SHORT $LN27@SetImageFi

; 4203 :             return _Max;

  00064	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00069	eb 1e		 jmp	 SHORT $LN26@SetImageFi
$LN27@SetImageFi:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006b	8b d1		 mov	 edx, ecx
  0006d	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00072	d1 ea		 shr	 edx, 1
  00074	2b c2		 sub	 eax, edx
  00076	3b c8		 cmp	 ecx, eax
  00078	76 07		 jbe	 SHORT $LN28@SetImageFi

; 4207 :             return _Max;

  0007a	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0007f	eb 08		 jmp	 SHORT $LN26@SetImageFi
$LN28@SetImageFi:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00081	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00084	3b d8		 cmp	 ebx, eax
  00086	0f 42 d8	 cmovb	 ebx, eax
$LN26@SetImageFi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00092	56		 push	 esi
  00093	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00096	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00099	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0009a	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0009d	89 5f 14	 mov	 DWORD PTR [edi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a0	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a5	8b 5d fc	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a8	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000ab	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000ae	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000b2	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b5	72 17		 jb	 SHORT $LN21@SetImageFi

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000b7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b8	50		 push	 eax
  000b9	ff 37		 push	 DWORD PTR [edi]
  000bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 13   : }

  000c0	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000c3	89 1f		 mov	 DWORD PTR [edi], ebx
  000c5	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 13   : }

  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
$LN21@SetImageFi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000ce	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000d1	50		 push	 eax
  000d2	57		 push	 edi
  000d3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp

; 13   : }

  000d8	83 c4 08	 add	 esp, 8
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
$LN48@SetImageFi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4222 :             _Xlen_string(); // result too long

  000e4	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN45@SetImageFi:
  000e9	cc		 int	 3
?SetImageFileName@CGraphicMarkInstance@@QAEXPBD@Z ENDP	; CGraphicMarkInstance::SetImageFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?IsType@CGraphicMarkInstance@@QAEHK@Z
_TEXT	SEGMENT
_dwType$ = 8						; size = 4
?IsType@CGraphicMarkInstance@@QAEHK@Z PROC		; CGraphicMarkInstance::IsType, COMDAT
; _this$ = ecx

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 219  : 	return OnIsType(dwType);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]

; 220  : }

  00005	5d		 pop	 ebp

; 219  : 	return OnIsType(dwType);

  00006	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?IsType@CGraphicMarkInstance@@QAEHK@Z ENDP		; CGraphicMarkInstance::IsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpMarkInstance.cpp
;	COMDAT ?Type@CGraphicMarkInstance@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicMarkInstance@@SAKXZ PROC			; CGraphicMarkInstance::Type, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicMarkInstance@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 213  : 	static DWORD s_dwType = GetCRC32("CGraphicMarkInstance", strlen("CGraphicMarkInstance"));

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 214  : 	return (s_dwType);
; 215  : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwType@?1??Type@CGraphicMarkInstance@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 213  : 	static DWORD s_dwType = GetCRC32("CGraphicMarkInstance", strlen("CGraphicMarkInstance"));

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	6a 14		 push	 20			; 00000014H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BKIBHNLF@CGraphicMarkInstance@
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  0007b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA
  00080	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwType@?1??Type@CGraphicMarkInstance@@SAKXZ@4KA, eax
  00085	e8 00 00 00 00	 call	 __Init_thread_footer
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008d	eb af		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicMarkInstance@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicMarkInstance@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicMarkInstance@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicMarkInstance@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicMarkInstance@@SAKXZ ENDP			; CGraphicMarkInstance::Type
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
