; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ms_isCacheMode@CTextFileLoader@@1_NA		; CTextFileLoader::ms_isCacheMode
PUBLIC	??_R4?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ ; CDynamicPool<CTextFileLoader::SGroupNode>::`vftable'
PUBLIC	??_G?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z ; CDynamicPool<CTextFileLoader::SGroupNode>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z:PROC ; CDynamicPool<CTextFileLoader::SGroupNode>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
_BSS	SEGMENT
?ms_isCacheMode@CTextFileLoader@@1_NA DB 01H DUP (?)	; CTextFileLoader::ms_isCacheMode
_BSS	ENDS
;	COMDAT ??_7?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ ; CDynamicPool<CTextFileLoader::SGroupNode>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8 DD 00H ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CTextFileLoader::SGroupNode> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ DD 00H ; CDynamicPool<CTextFileLoader::SGroupNode>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USGroupNode@CTextFileLoader@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USGroupNode@CTextFileLoader@@@@8
rdata$r	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
PUBLIC	?SetGroupName@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::SGroupNode::SetGroupName
PUBLIC	?IsGroupNameKey@SGroupNode@CTextFileLoader@@QAE_NK@Z ; CTextFileLoader::SGroupNode::IsGroupNameKey
PUBLIC	?GetGroupName@SGroupNode@CTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CTextFileLoader::SGroupNode::GetGroupName
PUBLIC	?GetTokenVector@SGroupNode@CTextFileLoader@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; CTextFileLoader::SGroupNode::GetTokenVector
PUBLIC	?IsExistTokenVector@SGroupNode@CTextFileLoader@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::SGroupNode::IsExistTokenVector
PUBLIC	?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z ; CTextFileLoader::SGroupNode::InsertTokenVector
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
PUBLIC	??1?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAE@XZ ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::~vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@AAEXI@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@CAXXZ ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Xlength
PUBLIC	?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ	; CTextFileLoader::SGroupNode::New
PUBLIC	?Delete@SGroupNode@CTextFileLoader@@SAXPAU12@@Z	; CTextFileLoader::SGroupNode::Delete
PUBLIC	?DestroySystem@SGroupNode@CTextFileLoader@@SAXXZ ; CTextFileLoader::SGroupNode::DestroySystem
PUBLIC	??0SGroupNode@CTextFileLoader@@QAE@XZ		; CTextFileLoader::SGroupNode::SGroupNode
PUBLIC	??1SGroupNode@CTextFileLoader@@QAE@XZ		; CTextFileLoader::SGroupNode::~SGroupNode
PUBLIC	?DestroySystem@CTextFileLoader@@SAXXZ		; CTextFileLoader::DestroySystem
PUBLIC	?SetCacheMode@CTextFileLoader@@SAXXZ		; CTextFileLoader::SetCacheMode
PUBLIC	?Cache@CTextFileLoader@@SAPAV1@PBD@Z		; CTextFileLoader::Cache
PUBLIC	??0CTextFileLoader@@QAE@XZ			; CTextFileLoader::CTextFileLoader
PUBLIC	??1CTextFileLoader@@UAE@XZ			; CTextFileLoader::~CTextFileLoader
PUBLIC	?Destroy@CTextFileLoader@@QAEXXZ		; CTextFileLoader::Destroy
PUBLIC	?Load@CTextFileLoader@@QAE_NPBD@Z		; CTextFileLoader::Load
PUBLIC	?GetFileName@CTextFileLoader@@QAEPBDXZ		; CTextFileLoader::GetFileName
PUBLIC	?IsEmpty@CTextFileLoader@@QAE_NXZ		; CTextFileLoader::IsEmpty
PUBLIC	?SetTop@CTextFileLoader@@QAEXXZ			; CTextFileLoader::SetTop
PUBLIC	?GetChildNodeCount@CTextFileLoader@@QAEKXZ	; CTextFileLoader::GetChildNodeCount
PUBLIC	?SetChildNode@CTextFileLoader@@QAEHPBD@Z	; CTextFileLoader::SetChildNode
PUBLIC	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
PUBLIC	?SetChildNode@CTextFileLoader@@QAEHK@Z		; CTextFileLoader::SetChildNode
PUBLIC	?SetParentNode@CTextFileLoader@@QAEHXZ		; CTextFileLoader::SetParentNode
PUBLIC	?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::GetCurrentNodeName
PUBLIC	?IsToken@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::IsToken
PUBLIC	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
PUBLIC	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
PUBLIC	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
PUBLIC	?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ; CTextFileLoader::GetTokenWord
PUBLIC	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
PUBLIC	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
PUBLIC	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
PUBLIC	?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
PUBLIC	?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
PUBLIC	?GetTokenVector4@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR4@@@Z ; CTextFileLoader::GetTokenVector4
PUBLIC	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
PUBLIC	?GetTokenQuaternion@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXQUATERNION@@@Z ; CTextFileLoader::GetTokenQuaternion
PUBLIC	?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z ; CTextFileLoader::GetTokenDirection
PUBLIC	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
PUBLIC	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
PUBLIC	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
PUBLIC	?__DestroyGroupNodeVector@CTextFileLoader@@IAEXXZ ; CTextFileLoader::__DestroyGroupNodeVector
PUBLIC	?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z ; CTextFileLoader::LoadGroup
PUBLIC	??_GCTextFileLoader@@UAEPAXI@Z			; CTextFileLoader::`scalar deleting destructor'
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Insert_node
PUBLIC	??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ ; CDynamicPool<CTextFileLoader::SGroupNode>::~CDynamicPool<CTextFileLoader::SGroupNode>
PUBLIC	?Delete@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@KAXPAUSGroupNode@CTextFileLoader@@@Z ; CDynamicPool<CTextFileLoader::SGroupNode>::Delete
PUBLIC	??1?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
PUBLIC	??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAXPAPAUSGroupNode@CTextFileLoader@@QAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ; std::_Destroy_range<std::allocator<CTextFileLoader::SGroupNode *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
PUBLIC	??$_Copy_memmove@PAPAUSGroupNode@CTextFileLoader@@PAPAU12@@std@@YAPAPAUSGroupNode@CTextFileLoader@@PAPAU12@00@Z ; std::_Copy_memmove<CTextFileLoader::SGroupNode * *,CTextFileLoader::SGroupNode * *>
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
PUBLIC	?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A ; CTextFileLoader::SGroupNode::ms_kPool
PUBLIC	?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
PUBLIC	??_7CTextFileLoader@@6B@			; CTextFileLoader::`vftable'
PUBLIC	??_C@_06FJKEMHGD@global@			; `string'
PUBLIC	??_C@_02OJDBNLEE@?5?7@				; `string'
PUBLIC	??_C@_0BI@BCFJNLGN@cannot?5find?5?$CC?5in?5?$CFs?3?$CFlu@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_04DONFEANM@list@				; `string'
PUBLIC	??_C@_0EP@OILOFBHI@CTextFileLoader?3?3LoadGroup?5?3?5mu@ ; `string'
PUBLIC	??_C@_06POANKNEN@?$CFs?$CF02u@			; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_R4CTextFileLoader@@6B@			; CTextFileLoader::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextFileLoader@@@8			; CTextFileLoader `RTTI Type Descriptor'
PUBLIC	??_R3CTextFileLoader@@8				; CTextFileLoader::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextFileLoader@@8				; CTextFileLoader::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextFileLoader@@8		; CTextFileLoader::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	__atoi64:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?GetCRC32@@YAKPBDI@Z:PROC			; GetCRC32
EXTRN	?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; stl_lowers
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPackManager::Get
EXTRN	??0CMemoryTextFileLoader@@QAE@XZ:PROC		; CMemoryTextFileLoader::CMemoryTextFileLoader
EXTRN	??1CMemoryTextFileLoader@@UAE@XZ:PROC		; CMemoryTextFileLoader::~CMemoryTextFileLoader
EXTRN	?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z:PROC	; CMemoryTextFileLoader::Bind
EXTRN	?GetLineCount@CMemoryTextFileLoader@@QAEKXZ:PROC ; CMemoryTextFileLoader::GetLineCount
EXTRN	?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z:PROC ; CMemoryTextFileLoader::SplitLine
EXTRN	?SplitLine2@CMemoryTextFileLoader@@QAEHKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z:PROC ; CMemoryTextFileLoader::SplitLine2
EXTRN	??_ECTextFileLoader@@UAEPAXI@Z:PROC		; CTextFileLoader::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A DD 01H DUP (?) ; CSingleton<CEterPackManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A DQ 01H DUP (?) ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kMap_dwNameKey_pkTextFileLoader$initializer$@CTextFileLoader@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ ; ??ms_kMap_dwNameKey_pkTextFileLoader$initializer$@CTextFileLoader@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextFileLoader@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextFileLoader@@8 DD FLAT:??_R0?AVCTextFileLoader@@@8 ; CTextFileLoader::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextFileLoader@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextFileLoader@@8
rdata$r	SEGMENT
??_R2CTextFileLoader@@8 DD FLAT:??_R1A@?0A@EA@CTextFileLoader@@8 ; CTextFileLoader::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CTextFileLoader@@8
rdata$r	SEGMENT
??_R3CTextFileLoader@@8 DD 00H				; CTextFileLoader::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CTextFileLoader@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextFileLoader@@@8
data$r	SEGMENT
??_R0?AVCTextFileLoader@@@8 DD FLAT:??_7type_info@@6B@	; CTextFileLoader `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextFileLoader@@', 00H
data$r	ENDS
;	COMDAT ??_R4CTextFileLoader@@6B@
rdata$r	SEGMENT
??_R4CTextFileLoader@@6B@ DD 00H			; CTextFileLoader::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextFileLoader@@@8
	DD	FLAT:??_R3CTextFileLoader@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06POANKNEN@?$CFs?$CF02u@
CONST	SEGMENT
??_C@_06POANKNEN@?$CFs?$CF02u@ DB '%s%02u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@OILOFBHI@CTextFileLoader?3?3LoadGroup?5?3?5mu@
CONST	SEGMENT
??_C@_0EP@OILOFBHI@CTextFileLoader?3?3LoadGroup?5?3?5mu@ DB 'CTextFileLoa'
	DB	'der::LoadGroup : must have a value (filename: %s line: %d key'
	DB	': %s)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04DONFEANM@list@
CONST	SEGMENT
??_C@_04DONFEANM@list@ DB 'list', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BCFJNLGN@cannot?5find?5?$CC?5in?5?$CFs?3?$CFlu@
CONST	SEGMENT
??_C@_0BI@BCFJNLGN@cannot?5find?5?$CC?5in?5?$CFs?3?$CFlu@ DB 'cannot find'
	DB	' " in %s:%lu', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02OJDBNLEE@?5?7@
CONST	SEGMENT
??_C@_02OJDBNLEE@?5?7@ DB ' ', 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FJKEMHGD@global@
CONST	SEGMENT
??_C@_06FJKEMHGD@global@ DB 'global', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTextFileLoader@@6B@
CONST	SEGMENT
??_7CTextFileLoader@@6B@ DD FLAT:??_R4CTextFileLoader@@6B@ ; CTextFileLoader::`vftable'
	DD	FLAT:??_ECTextFileLoader@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A DD FLAT:??_7?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@ ; CTextFileLoader::SGroupNode::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z$0
__unwindtable$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCTextFileLoader@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z$1
__ehfuncinfo$??$?0AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$0A@@?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@AAKABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@QAEPAUSGroupNode@CTextFileLoader@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@QAEPAUSGroupNode@CTextFileLoader@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@QAEPAUSGroupNode@CTextFileLoader@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@QAEPAUSGroupNode@CTextFileLoader@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$3
__ehfuncinfo$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@CTextFileLoader@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CTextFileLoader@@QAE_NPBD@Z$0
__ehfuncinfo$?Load@CTextFileLoader@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@CTextFileLoader@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTextFileLoader@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTextFileLoader@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTextFileLoader@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTextFileLoader@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CTextFileLoader@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CTextFileLoader@@QAE@XZ$3
__ehfuncinfo$??0CTextFileLoader@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CTextFileLoader@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Cache@CTextFileLoader@@SAPAV1@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$4
__ehfuncinfo$?Cache@CTextFileLoader@@SAPAV1@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Cache@CTextFileLoader@@SAPAV1@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SGroupNode@CTextFileLoader@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SGroupNode@CTextFileLoader@@QAE@XZ$0
__ehfuncinfo$??0SGroupNode@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SGroupNode@CTextFileLoader@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ$0
__ehfuncinfo$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$5
__ehfuncinfo$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@SGroupNode@CTextFileLoader@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ ; ??ms_kPool$initializer$@SGroupNode@CTextFileLoader@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	3b f3		 cmp	 esi, ebx
  00046	74 18		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00048	56		 push	 esi
  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1509 :         ++_Last;

  00050	83 c7 18	 add	 edi, 24			; 00000018H

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00053	83 c6 18	 add	 esi, 24			; 00000018H

; 1509 :         ++_Last;

  00056	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00059	3b f3		 cmp	 esi, ebx
  0005b	75 eb		 jne	 SHORT $LL4@Uninitiali
  0005d	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00060	50		 push	 eax
  00061	57		 push	 edi
  00062	57		 push	 edi
  00063	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1542 :             _Backout._Emplace_back(*_UFirst);
; 1543 :         }
; 1544 : 
; 1545 :         _Dest = _Backout._Release();
; 1546 :     }
; 1547 : 
; 1548 :     return _Dest;

  0006b	8b c7		 mov	 eax, edi

; 1549 : }

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 20		 push	 32			; 00000020H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 31   :         if (_Target) {

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	0f 85 00 00 00
	00		 jne	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy

; 32   :             _Target->_Tidy();
; 33   :         }
; 34   :     }

  0000a	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00009	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000a	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000d	3b c2		 cmp	 eax, edx
  0000f	74 49		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00011	8b ce		 mov	 ecx, esi
  00013	2b c8		 sub	 ecx, eax
  00015	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00020	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00027	c7 44 01 14 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+20], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0002f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00032	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00035	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  0003a	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  0003f	83 c6 18	 add	 esi, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00042	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00049	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00050	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00053	83 c0 18	 add	 eax, 24			; 00000018H

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00056	3b c2		 cmp	 eax, edx
  00058	75 c6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0005a	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0005d	56		 push	 esi
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  00067	8b c6		 mov	 eax, esi
  00069	5e		 pop	 esi

; 1664 :     }
; 1665 : }

  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSGroupNode@CTextFileLoader@@PAPAU12@@std@@YAPAPAUSGroupNode@CTextFileLoader@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSGroupNode@CTextFileLoader@@PAPAU12@@std@@YAPAPAUSGroupNode@CTextFileLoader@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CTextFileLoader::SGroupNode * *,CTextFileLoader::SGroupNode * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSGroupNode@CTextFileLoader@@PAPAU12@@std@@YAPAPAUSGroupNode@CTextFileLoader@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CTextFileLoader::SGroupNode * *,CTextFileLoader::SGroupNode * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z PROC ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSGroupNode@CTextFileLoader@@PAPAU12@@std@@YAPAPAUSGroupNode@CTextFileLoader@@PAPAU12@00@Z ; std::_Copy_memmove<CTextFileLoader::SGroupNode * *,CTextFileLoader::SGroupNode * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ENDP ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAXPAPAUSGroupNode@CTextFileLoader@@QAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAXPAPAUSGroupNode@CTextFileLoader@@QAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CTextFileLoader::SGroupNode *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAXPAPAUSGroupNode@CTextFileLoader@@QAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CTextFileLoader::SGroupNode *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z
_TEXT	SEGMENT
__Newvec$ = -44						; size = 4
_this$ = -40						; size = 4
tv383 = -36						; size = 4
tv384 = -32						; size = 4
__Newsize$1$ = -28					; size = 4
__Newcapacity$ = -24					; size = 4
__Whereoff$1$ = -20					; size = 4
__Constructed_last$ = -20				; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d d8	 mov	 DWORD PTR _this$[ebp], edi

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00032	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00037	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003d	2b d3		 sub	 edx, ebx
  0003f	f7 ea		 imul	 edx
  00041	2b cb		 sub	 ecx, ebx
  00043	c1 fa 02	 sar	 edx, 2
  00046	8b c2		 mov	 eax, edx
  00048	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004b	03 c2		 add	 eax, edx
  0004d	89 45 ec	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  00050	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00055	f7 e9		 imul	 ecx
  00057	c1 fa 02	 sar	 edx, 2
  0005a	8b f2		 mov	 esi, edx
  0005c	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0005f	03 f2		 add	 esi, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  00061	81 fe aa aa aa
	0a		 cmp	 esi, 178956970		; 0aaaaaaaH
  00067	0f 84 38 01 00
	00		 je	 $LN44@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0006d	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00070	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00075	2b cb		 sub	 ecx, ebx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00077	46		 inc	 esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00078	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0007a	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0007f	89 75 e4	 mov	 DWORD PTR __Newsize$1$[ebp], esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00082	c1 fa 02	 sar	 edx, 2
  00085	8b ca		 mov	 ecx, edx
  00087	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0008a	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0008c	8b d1		 mov	 edx, ecx
  0008e	d1 ea		 shr	 edx, 1
  00090	2b c2		 sub	 eax, edx
  00092	3b c8		 cmp	 ecx, eax
  00094	76 07		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00096	8b c6		 mov	 eax, esi
  00098	89 75 e8	 mov	 DWORD PTR __Newcapacity$[ebp], esi
  0009b	eb 0b		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0009d	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  000a0	3b c6		 cmp	 eax, esi
  000a2	0f 42 c6	 cmovb	 eax, esi
  000a5	89 45 e8	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000a8	3d aa aa aa 0a	 cmp	 eax, 178956970		; 0aaaaaaaH
  000ad	0f 87 f7 00 00
	00		 ja	 $LN45@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b3	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000b6	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b9	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  000ba	89 45 e0	 mov	 DWORD PTR tv384[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  000c2	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 748  :         _TRY_BEGIN

  000c4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000cb	8b 45 ec	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ce	83 c4 04	 add	 esp, 4
  000d1	89 5d d4	 mov	 DWORD PTR __Newvec$[ebp], ebx

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000d4	ff 75 0c	 push	 DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000d7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000da	8d 0c c3	 lea	 ecx, DWORD PTR [ebx+eax*8]
  000dd	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  000e0	89 4d dc	 mov	 DWORD PTR tv383[ebp], ecx
  000e3	89 45 ec	 mov	 DWORD PTR __Constructed_last$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000e6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000eb	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ee	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  000f1	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000f3	3b d0		 cmp	 edx, eax
  000f5	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000f7	8b d3		 mov	 edx, ebx

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000f9	eb 15		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000fb	57		 push	 edi
  000fc	53		 push	 ebx
  000fd	52		 push	 edx
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00104	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00107	83 c4 10	 add	 esp, 16			; 00000010H
  0010a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0010d	8b 55 ec	 mov	 edx, DWORD PTR __Constructed_last$[ebp]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00110	57		 push	 edi
  00111	52		 push	 edx
  00112	50		 push	 eax
  00113	51		 push	 ecx
  00114	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00119	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0011b	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0011e	85 c9		 test	 ecx, ecx
  00120	74 35		 je	 SHORT $LN35@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00122	57		 push	 edi
  00123	ff 77 04	 push	 DWORD PTR [edi+4]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0012c	8b 37		 mov	 esi, DWORD PTR [edi]
  0012e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00133	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00136	2b ce		 sub	 ecx, esi
  00138	f7 e9		 imul	 ecx
  0013a	c1 fa 02	 sar	 edx, 2
  0013d	8b c2		 mov	 eax, edx
  0013f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00142	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00144	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00147	c1 e0 03	 shl	 eax, 3
  0014a	50		 push	 eax
  0014b	56		 push	 esi
  0014c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00151	8b 75 e4	 mov	 esi, DWORD PTR __Newsize$1$[ebp]
  00154	83 c4 14	 add	 esp, 20			; 00000014H
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  00157	8b 45 dc	 mov	 eax, DWORD PTR tv383[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0015a	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  0015d	8d 0c cb	 lea	 ecx, DWORD PTR [ebx+ecx*8]
  00160	89 1f		 mov	 DWORD PTR [edi], ebx
  00162	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00165	8b 4d e0	 mov	 ecx, DWORD PTR tv384[ebp]
  00168	03 cb		 add	 ecx, ebx
  0016a	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 767  :     }

  0016d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00170	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00177	59		 pop	 ecx
  00178	5f		 pop	 edi
  00179	5e		 pop	 esi
  0017a	5b		 pop	 ebx
  0017b	8b e5		 mov	 esp, ebp
  0017d	5d		 pop	 ebp
  0017e	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z$0:

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  00181	8b 45 ec	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  00184	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	50		 push	 eax
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  0018e	ff 75 e8	 push	 DWORD PTR __Newcapacity$[ebp]
  00191	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	ff 75 d4	 push	 DWORD PTR __Newvec$[ebp]
  00197	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 762  :         _RERAISE;

  0019c	6a 00		 push	 0
  0019e	6a 00		 push	 0
  001a0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN44@Emplace_re:

; 738  :             _Xlength();

  001a5	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN45@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001aa	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN42@Emplace_re:
  001af	cc		 int	 3
  001b0	cc		 int	 3
  001b1	cc		 int	 3
  001b2	cc		 int	 3
  001b3	cc		 int	 3
  001b4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Old_val$1$ = 12					; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00011	75 7f		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	57		 push	 edi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00015	ff 76 08	 push	 DWORD PTR [esi+8]
  00018	8b c8		 mov	 ecx, eax
  0001a	ff 75 08	 push	 DWORD PTR __Al$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00022	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00024	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00026	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 379  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00029	8d 58 14	 lea	 ebx, DWORD PTR [eax+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0002c	89 45 0c	 mov	 DWORD PTR __Old_val$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0002f	85 c9		 test	 ecx, ecx
  00031	74 49		 je	 SHORT $LN20@Erase_tree

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00033	53		 push	 ebx
  00034	ff 73 04	 push	 DWORD PTR [ebx+4]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 3b		 mov	 edi, DWORD PTR [ebx]
  0003f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00044	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00047	2b cf		 sub	 ecx, edi
  00049	f7 e9		 imul	 ecx
  0004b	c1 fa 02	 sar	 edx, 2
  0004e	8b c2		 mov	 eax, edx
  00050	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00053	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00055	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00058	c1 e0 03	 shl	 eax, 3
  0005b	50		 push	 eax
  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00062	8b 45 0c	 mov	 eax, DWORD PTR __Old_val$1$[ebp]
  00065	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00068	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0

; 1698 :             _Mylast  = pointer();

  0006e	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  00075	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN20@Erase_tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0007c	6a 20		 push	 32			; 00000020H
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00087	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0008a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0008e	74 85		 je	 SHORT $LL2@Erase_tree
  00090	5f		 pop	 edi
  00091	5b		 pop	 ebx
$LN3@Erase_tree:
  00092	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@CAXXZ ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	57		 push	 edi
  00004	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
  00007	85 c0		 test	 eax, eax
  00009	74 45		 je	 SHORT $LN6@pair

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000b	57		 push	 edi
  0000c	ff 77 04	 push	 DWORD PTR [edi+4]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00015	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00018	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001d	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001f	f7 e9		 imul	 ecx
  00021	c1 fa 02	 sar	 edx, 2
  00024	8b c2		 mov	 eax, edx
  00026	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00029	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002e	c1 e0 03	 shl	 eax, 3
  00031	50		 push	 eax
  00032	ff 37		 push	 DWORD PTR [edi]
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00039	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003f	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00042	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00049	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN6@pair:
  00050	5f		 pop	 edi
  00051	c3		 ret	 0
??1?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CTextFileLoader::SGroupNode::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A ; CTextFileLoader::SGroupNode::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ ; CDynamicPool<CTextFileLoader::SGroupNode>::~CDynamicPool<CTextFileLoader::SGroupNode>
??__F?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CTextFileLoader::SGroupNode::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ??__E?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CTextFileLoader::SGroupNode::ms_kPool'', COMDAT

; 12   : CDynamicPool<CTextFileLoader::SGroupNode>	CTextFileLoader::SGroupNode::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CTextFileLoader::SGroupNode::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CTextFileLoader::SGroupNode::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z PROC ; CDynamicPool<CTextFileLoader::SGroupNode>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ ; CDynamicPool<CTextFileLoader::SGroupNode>::~CDynamicPool<CTextFileLoader::SGroupNode>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAEPAXI@Z ENDP ; CDynamicPool<CTextFileLoader::SGroupNode>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@KAXPAUSGroupNode@CTextFileLoader@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@KAXPAUSGroupNode@CTextFileLoader@@@Z PROC ; CDynamicPool<CTextFileLoader::SGroupNode>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 110  : 			delete pkData;

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 12		 je	 SHORT $LN6@Delete
  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ??1SGroupNode@CTextFileLoader@@QAE@XZ
  00012	6a 34		 push	 52			; 00000034H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN6@Delete:
  0001d	5e		 pop	 esi

; 111  : 		}

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?Delete@?$CDynamicPool@USGroupNode@CTextFileLoader@@@@KAXPAUSGroupNode@CTextFileLoader@@@Z ENDP ; CDynamicPool<CTextFileLoader::SGroupNode>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ PROC ; CDynamicPool<CTextFileLoader::SGroupNode>::~CDynamicPool<CTextFileLoader::SGroupNode>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USGroupNode@CTextFileLoader@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USGroupNode@CTextFileLoader@@@@UAE@XZ ENDP ; CDynamicPool<CTextFileLoader::SGroupNode>::~CDynamicPool<CTextFileLoader::SGroupNode>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  00005	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >
??__F?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ??__E?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ
text$di	SEGMENT
__Pnode$1 = -4						; size = 4
??__E?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader'', COMDAT

; 9    : std::map<DWORD, CTextFileLoader*> CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00004	6a 18		 push	 24			; 00000018H
  00006	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0000b	8d 4d fc	 lea	 ecx, DWORD PTR __Pnode$1[ebp]
  0000e	89 45 fc	 mov	 DWORD PTR __Pnode$1[ebp], eax
  00011	51		 push	 ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00018	8d 45 fc	 lea	 eax, DWORD PTR __Pnode$1[ebp]
  0001b	50		 push	 eax
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0001f	83 c0 04	 add	 eax, 4
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00028	8d 45 fc	 lea	 eax, DWORD PTR __Pnode$1[ebp]
  0002b	50		 push	 eax
  0002c	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0002f	83 c0 08	 add	 eax, 8
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 9    : std::map<DWORD, CTextFileLoader*> CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader;

  0003b	68 00 00 00 00	 push	 OFFSET ??__F?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader''
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 347  :         _Pnode->_Color = _Black;

  00040	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 348  :         _Pnode->_Isnil = true;

  00044	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  00047	c6 40 0d 01	 mov	 BYTE PTR [eax+13], 1

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  0004e	a3 00 00 00 00	 mov	 DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 9    : std::map<DWORD, CTextFileLoader*> CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader;

  00053	e8 00 00 00 00	 call	 _atexit
  00058	83 c4 20	 add	 esp, 32			; 00000020H
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
??__E?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextFileLoader@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextFileLoader@@UAEPAXI@Z PROC			; CTextFileLoader::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 00 00 00	 push	 128			; 00000080H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCTextFileLoader@@UAEPAXI@Z ENDP			; CTextFileLoader::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z
_TEXT	SEGMENT
tv1773 = -92						; size = 4
_pGroupNode$GSCopy$1$ = -88				; size = 4
_stSubTokenVector$2 = -84				; size = 12
_nLocalGroupDepth$1$ = -72				; size = 4
_this$GSCopy$1$ = -68					; size = 4
tv1756 = -64						; size = 4
_pNewNode$3 = -64					; size = 4
_stTokenVector$ = -60					; size = 12
$T4 = -45						; size = 1
__Last$1$ = -44						; size = 4
tv1778 = -44						; size = 4
_j$1$ = -44						; size = 4
_key$5 = -40						; size = 24
_key$6 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pGroupNode$ = 8					; size = 4
?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z PROC ; CTextFileLoader::LoadGroup, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d bc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	8b 45 08	 mov	 eax, DWORD PTR _pGroupNode$[ebp]
  00032	89 45 a8	 mov	 DWORD PTR _pGroupNode$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00035	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _stTokenVector$[ebp], 0
  0003c	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _stTokenVector$[ebp+4], 0
  00043	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _stTokenVector$[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 212  : 	for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  0004a	8d 47 2c	 lea	 eax, DWORD PTR [edi+44]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00054	8b c8		 mov	 ecx, eax
  00056	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _nLocalGroupDepth$1$[ebp], 0
  0005d	89 45 a4	 mov	 DWORD PTR tv1773[ebp], eax
  00060	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00065	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00068	3b c8		 cmp	 ecx, eax
  0006a	0f 83 4d 04 00
	00		 jae	 $LN289@LoadGroup
$LL4@LoadGroup:

; 213  : 	{
; 214  : 		int iRet;
; 215  : 
; 216  : 		if ((iRet = m_textFileLoader.SplitLine2(m_dwcurLineIndex, &stTokenVector)) != 0)

  00070	68 00 00 00 00	 push	 OFFSET ??_C@_02OJDBNLEE@?5?7@
  00075	8d 45 c4	 lea	 eax, DWORD PTR _stTokenVector$[ebp]
  00078	50		 push	 eax
  00079	51		 push	 ecx
  0007a	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  0007d	e8 00 00 00 00	 call	 ?SplitLine2@CMemoryTextFileLoader@@QAEHKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z ; CMemoryTextFileLoader::SplitLine2
  00082	85 c0		 test	 eax, eax
  00084	74 2a		 je	 SHORT $LN11@LoadGroup

; 217  : 		{
; 218  : 			if (iRet == -2)

  00086	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  00089	0f 85 18 04 00
	00		 jne	 $LN2@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0008f	83 7f 18 10	 cmp	 DWORD PTR [edi+24], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00093	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 2145 :         if (_Large_string_engaged()) {

  00096	72 02		 jb	 SHORT $LN41@LoadGroup

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00098	8b 00		 mov	 eax, DWORD PTR [eax]
$LN41@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 219  : 				TraceError("cannot find \" in %s:%lu", m_strFileName.c_str(), m_dwcurLineIndex);

  0009a	ff 77 28	 push	 DWORD PTR [edi+40]
  0009d	50		 push	 eax
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BCFJNLGN@cannot?5find?5?$CC?5in?5?$CFs?3?$CFlu@
  000a3	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 220  : 			continue;

  000ab	e9 f7 03 00 00	 jmp	 $LN2@LoadGroup
$LN11@LoadGroup:

; 223  : 		stl_lowers(stTokenVector[0]);

  000b0	ff 75 c4	 push	 DWORD PTR _stTokenVector$[ebp]
  000b3	e8 00 00 00 00	 call	 ?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stl_lowers
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2135 :         value_type* _Result = _Bx._Buf;

  000b8	8b 75 c4	 mov	 esi, DWORD PTR _stTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 223  : 		stl_lowers(stTokenVector[0]);

  000bb	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2135 :         value_type* _Result = _Bx._Buf;

  000be	8b d6		 mov	 edx, esi
  000c0	8b c2		 mov	 eax, edx

; 2153 :         return _BUF_SIZE <= _Myres;

  000c2	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 2136 :         if (_Large_string_engaged()) {

  000c5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000c8	72 02		 jb	 SHORT $LN52@LoadGroup

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  000ca	8b 16		 mov	 edx, DWORD PTR [esi]
$LN52@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 225  : 		if ('{' == stTokenVector[0][0])

  000cc	80 3a 7b	 cmp	 BYTE PTR [edx], 123	; 0000007bH
  000cf	75 08		 jne	 SHORT $LN13@LoadGroup

; 226  : 		{
; 227  : 			nLocalGroupDepth++;

  000d1	ff 45 b8	 inc	 DWORD PTR _nLocalGroupDepth$1$[ebp]

; 228  : 			continue;

  000d4	e9 ce 03 00 00	 jmp	 $LN2@LoadGroup
$LN13@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2135 :         value_type* _Result = _Bx._Buf;

  000d9	8b d0		 mov	 edx, eax

; 2136 :         if (_Large_string_engaged()) {

  000db	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000de	72 02		 jb	 SHORT $LN61@LoadGroup

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  000e0	8b 16		 mov	 edx, DWORD PTR [esi]
$LN61@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 231  : 		if ('}' == stTokenVector[0][0]) {

  000e2	80 3a 7d	 cmp	 BYTE PTR [edx], 125	; 0000007dH
  000e5	0f 84 6f 04 00
	00		 je	 $LN272@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000eb	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000ee	72 02		 jb	 SHORT $LN72@LoadGroup

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000f0	8b 06		 mov	 eax, DWORD PTR [esi]
$LN72@LoadGroup:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  000f2	6a 05		 push	 5
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  000f9	ff 76 10	 push	 DWORD PTR [esi+16]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  00102	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 237  : 		if (0 == stTokenVector[0].compare("group"))

  00105	85 c0		 test	 eax, eax
  00107	0f 85 87 00 00
	00		 jne	 $LN15@LoadGroup

; 238  : 		{
; 239  : 			if (2 != stTokenVector.size())

  0010d	8b 45 c8	 mov	 eax, DWORD PTR _stTokenVector$[ebp+4]
  00110	2b c6		 sub	 eax, esi
  00112	83 e8 30	 sub	 eax, 48			; 00000030H
  00115	83 f8 18	 cmp	 eax, 24			; 00000018H
  00118	0f 83 89 03 00
	00		 jae	 $LN2@LoadGroup

; 245  : 			TGroupNode * pNewNode = TGroupNode::New();

  0011e	e8 00 00 00 00	 call	 ?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ ; CTextFileLoader::SGroupNode::New

; 246  : 			m_kVct_pkNode.push_back(pNewNode);

  00123	8d 4f 74	 lea	 ecx, DWORD PTR [edi+116]
  00126	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00128	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 245  : 			TGroupNode * pNewNode = TGroupNode::New();

  0012b	89 75 c0	 mov	 DWORD PTR _pNewNode$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0012e	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00131	74 08		 je	 SHORT $LN81@LoadGroup

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00133	89 30		 mov	 DWORD PTR [eax], esi

; 690  :         ++_Mylast;

  00135	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00139	eb 0a		 jmp	 SHORT $LN80@LoadGroup
$LN81@LoadGroup:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0013b	8d 55 c0	 lea	 edx, DWORD PTR _pNewNode$3[ebp]
  0013e	52		 push	 edx
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
$LN80@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 248  : 			pNewNode->pParentNode = pGroupNode;

  00145	8b 45 a8	 mov	 eax, DWORD PTR _pGroupNode$GSCopy$1$[ebp]

; 249  : 			pNewNode->SetGroupName(stTokenVector[1]);

  00148	8b ce		 mov	 ecx, esi
  0014a	89 46 24	 mov	 DWORD PTR [esi+36], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0014d	8b 45 c4	 mov	 eax, DWORD PTR _stTokenVector$[ebp]
  00150	83 c0 18	 add	 eax, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 249  : 			pNewNode->SetGroupName(stTokenVector[1]);

  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 ?SetGroupName@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::SGroupNode::SetGroupName

; 250  : 			pGroupNode->ChildNodeVector.push_back(pNewNode);

  00159	8b 4d a8	 mov	 ecx, DWORD PTR _pGroupNode$GSCopy$1$[ebp]
  0015c	83 c1 28	 add	 ecx, 40			; 00000028H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0015f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00162	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00165	74 08		 je	 SHORT $LN90@LoadGroup

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00167	89 30		 mov	 DWORD PTR [eax], esi

; 690  :         ++_Mylast;

  00169	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0016d	eb 0a		 jmp	 SHORT $LN89@LoadGroup
$LN90@LoadGroup:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0016f	8d 55 c0	 lea	 edx, DWORD PTR _pNewNode$3[ebp]
  00172	52		 push	 edx
  00173	50		 push	 eax
  00174	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
$LN89@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 252  : 			++m_dwcurLineIndex;

  00179	ff 47 28	 inc	 DWORD PTR [edi+40]

; 253  : 
; 254  : 			if( false == LoadGroup(pNewNode) )

  0017c	8b cf		 mov	 ecx, edi
  0017e	56		 push	 esi
  0017f	e8 00 00 00 00	 call	 ?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z ; CTextFileLoader::LoadGroup
  00184	84 c0		 test	 al, al
  00186	0f 85 1b 03 00
	00		 jne	 $LN2@LoadGroup
  0018c	8b 75 c4	 mov	 esi, DWORD PTR _stTokenVector$[ebp]
  0018f	e9 34 03 00 00	 jmp	 $LN296@LoadGroup
$LN15@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00194	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00198	8b c6		 mov	 eax, esi
  0019a	72 02		 jb	 SHORT $LN110@LoadGroup

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0019c	8b 06		 mov	 eax, DWORD PTR [esi]
$LN110@LoadGroup:

; 4151 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  0019e	6a 04		 push	 4
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_04DONFEANM@list@
  001a5	ff 76 10	 push	 DWORD PTR [esi+16]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ; std::_Traits_compare<std::char_traits<char> >
  001ae	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 258  : 		else if (0 == stTokenVector[0].compare("list"))

  001b1	85 c0		 test	 eax, eax
  001b3	0f 85 fb 01 00
	00		 jne	 $LN19@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001b9	8b 4d c8	 mov	 ecx, DWORD PTR _stTokenVector$[ebp+4]
  001bc	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001c1	2b ce		 sub	 ecx, esi
  001c3	f7 e9		 imul	 ecx
  001c5	c1 fa 02	 sar	 edx, 2
  001c8	8b c2		 mov	 eax, edx
  001ca	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001cd	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 260  : 			if (2 != stTokenVector.size())

  001cf	83 f8 02	 cmp	 eax, 2
  001d2	0f 85 cf 02 00
	00		 jne	 $LN2@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  001d8	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp], 0
  001df	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp+4], 0
  001e6	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 266  : 			CTokenVector stSubTokenVector;

  001ed	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  001f0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 267  : 
; 268  : 			stl_lowers(stTokenVector[1]);

  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stl_lowers
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001fa	8b 45 c4	 mov	 eax, DWORD PTR _stTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 269  : 			std::string key = stTokenVector[1];

  001fd	8d 4d d8	 lea	 ecx, DWORD PTR _key$6[ebp]
  00200	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00203	83 c0 18	 add	 eax, 24			; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 269  : 			std::string key = stTokenVector[1];

  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0020c	8d 45 c4	 lea	 eax, DWORD PTR _stTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 269  : 			std::string key = stTokenVector[1];

  0020f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00213	50		 push	 eax
  00214	ff 75 c8	 push	 DWORD PTR _stTokenVector$[ebp+4]
  00217	ff 75 c4	 push	 DWORD PTR _stTokenVector$[ebp]
  0021a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1390 :         _Mylast = _Myfirst;

  0021f	8b 45 c4	 mov	 eax, DWORD PTR _stTokenVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 274  : 			for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  00222	8d 77 2c	 lea	 esi, DWORD PTR [edi+44]
  00225	ff 47 28	 inc	 DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00228	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 274  : 			for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  0022b	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  0022d	89 45 c8	 mov	 DWORD PTR _stTokenVector$[ebp+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 274  : 			for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  00230	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00235	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00238	3b c8		 cmp	 ecx, eax
  0023a	0f 83 de 00 00
	00		 jae	 $LN271@LoadGroup
$LL7@LoadGroup:

; 275  : 			{
; 276  : 				if (!m_textFileLoader.SplitLine(m_dwcurLineIndex, &stSubTokenVector))

  00240	68 00 00 00 00	 push	 OFFSET ??_C@_02OJDBNLEE@?5?7@
  00245	8d 45 ac	 lea	 eax, DWORD PTR _stSubTokenVector$2[ebp]
  00248	50		 push	 eax
  00249	51		 push	 ecx
  0024a	8b ce		 mov	 ecx, esi
  0024c	e8 00 00 00 00	 call	 ?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z ; CMemoryTextFileLoader::SplitLine
  00251	84 c0		 test	 al, al
  00253	0f 84 ab 00 00
	00		 je	 $LN5@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2135 :         value_type* _Result = _Bx._Buf;

  00259	8b 7d ac	 mov	 edi, DWORD PTR _stSubTokenVector$2[ebp]
  0025c	8b c7		 mov	 eax, edi
  0025e	8b d0		 mov	 edx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00260	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]

; 2136 :         if (_Large_string_engaged()) {

  00263	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00266	72 02		 jb	 SHORT $LN135@LoadGroup

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00268	8b 07		 mov	 eax, DWORD PTR [edi]
$LN135@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 279  : 				if ('{' == stSubTokenVector[0][0])

  0026a	80 38 7b	 cmp	 BYTE PTR [eax], 123	; 0000007bH
  0026d	0f 84 8e 00 00
	00		 je	 $LN294@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2135 :         value_type* _Result = _Bx._Buf;

  00273	8b c2		 mov	 eax, edx

; 2136 :         if (_Large_string_engaged()) {

  00275	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00278	72 02		 jb	 SHORT $LN144@LoadGroup

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0027a	8b 07		 mov	 eax, DWORD PTR [edi]
$LN144@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 282  : 				if ('}' == stSubTokenVector[0][0])

  0027c	80 38 7d	 cmp	 BYTE PTR [eax], 125	; 0000007dH
  0027f	0f 84 96 00 00
	00		 je	 $LN292@LoadGroup

; 285  : 				for (DWORD j = 0; j < stSubTokenVector.size(); ++j)

  00285	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00287	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 285  : 				for (DWORD j = 0; j < stSubTokenVector.size(); ++j)

  0028c	89 4d d4	 mov	 DWORD PTR _j$1$[ebp], ecx
  0028f	8b 4d b0	 mov	 ecx, DWORD PTR _stSubTokenVector$2[ebp+4]
  00292	2b ca		 sub	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00294	f7 e9		 imul	 ecx
  00296	c1 fa 02	 sar	 edx, 2
  00299	8b c2		 mov	 eax, edx
  0029b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0029e	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 285  : 				for (DWORD j = 0; j < stSubTokenVector.size(); ++j)

  002a0	74 5f		 je	 SHORT $LN294@LoadGroup
  002a2	8b 75 c8	 mov	 esi, DWORD PTR _stTokenVector$[ebp+4]
  002a5	33 c0		 xor	 eax, eax
  002a7	89 45 c0	 mov	 DWORD PTR tv1756[ebp], eax
  002aa	66 0f 1f 44 00
	00		 npad	 6
$LL10@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  002b0	03 c7		 add	 eax, edi

; 704  :         if (_Mylast != _My_data._Myend) {

  002b2	50		 push	 eax
  002b3	3b 75 cc	 cmp	 esi, DWORD PTR _stTokenVector$[ebp+8]
  002b6	74 12		 je	 SHORT $LN155@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  002b8	8b ce		 mov	 ecx, esi
  002ba	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  002bf	8b 75 c8	 mov	 esi, DWORD PTR _stTokenVector$[ebp+4]
  002c2	83 c6 18	 add	 esi, 24			; 00000018H
  002c5	89 75 c8	 mov	 DWORD PTR _stTokenVector$[ebp+4], esi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002c8	eb 0c		 jmp	 SHORT $LN8@LoadGroup
$LN155@LoadGroup:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002ca	56		 push	 esi
  002cb	8d 4d c4	 lea	 ecx, DWORD PTR _stTokenVector$[ebp]
  002ce	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  002d3	8b 75 c8	 mov	 esi, DWORD PTR _stTokenVector$[ebp+4]
$LN8@LoadGroup:

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  002d6	8b 4d b0	 mov	 ecx, DWORD PTR _stSubTokenVector$2[ebp+4]
  002d9	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002de	8b 7d ac	 mov	 edi, DWORD PTR _stSubTokenVector$2[ebp]
  002e1	2b cf		 sub	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 285  : 				for (DWORD j = 0; j < stSubTokenVector.size(); ++j)

  002e3	ff 45 d4	 inc	 DWORD PTR _j$1$[ebp]
  002e6	83 45 c0 18	 add	 DWORD PTR tv1756[ebp], 24 ; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  002ea	f7 e9		 imul	 ecx
  002ec	c1 fa 02	 sar	 edx, 2
  002ef	8b c2		 mov	 eax, edx
  002f1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002f4	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 285  : 				for (DWORD j = 0; j < stSubTokenVector.size(); ++j)

  002f6	39 45 d4	 cmp	 DWORD PTR _j$1$[ebp], eax
  002f9	8b 45 c0	 mov	 eax, DWORD PTR tv1756[ebp]
  002fc	72 b2		 jb	 SHORT $LL10@LoadGroup
  002fe	8b 75 a4	 mov	 esi, DWORD PTR tv1773[ebp]
$LN294@LoadGroup:

; 274  : 			for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  00301	8b 7d bc	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN5@LoadGroup:
  00304	ff 47 28	 inc	 DWORD PTR [edi+40]
  00307	8b ce		 mov	 ecx, esi
  00309	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  0030e	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00311	3b c8		 cmp	 ecx, eax
  00313	0f 82 27 ff ff
	ff		 jb	 $LL7@LoadGroup

; 282  : 				if ('}' == stSubTokenVector[0][0])

  00319	eb 03		 jmp	 SHORT $LN271@LoadGroup
$LN292@LoadGroup:
  0031b	8b 7d bc	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN271@LoadGroup:

; 286  : 				{
; 287  : 					stTokenVector.push_back(stSubTokenVector[j]);
; 288  : 				}
; 289  : 			}
; 290  : 
; 291  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  0031e	8b 4d a8	 mov	 ecx, DWORD PTR _pGroupNode$GSCopy$1$[ebp]
  00321	8d 45 c4	 lea	 eax, DWORD PTR _stTokenVector$[ebp]
  00324	50		 push	 eax
  00325	8d 45 d8	 lea	 eax, DWORD PTR _key$6[ebp]
  00328	50		 push	 eax
  00329	e8 00 00 00 00	 call	 ?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z ; CTextFileLoader::SGroupNode::InsertTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0032e	8b 45 ec	 mov	 eax, DWORD PTR _key$6[ebp+20]
  00331	83 f8 10	 cmp	 eax, 16			; 00000010H
  00334	72 0d		 jb	 SHORT $LN165@LoadGroup

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00336	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00337	50		 push	 eax
  00338	ff 75 d8	 push	 DWORD PTR _key$6[ebp]
  0033b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00340	83 c4 08	 add	 esp, 8
$LN165@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00343	8b 45 ac	 mov	 eax, DWORD PTR _stSubTokenVector$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00346	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _key$6[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0034d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _key$6[ebp+20], 15 ; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00354	c6 45 d8 00	 mov	 BYTE PTR _key$6[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 293  : 		}

  00358	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0035c	85 c0		 test	 eax, eax
  0035e	0f 84 43 01 00
	00		 je	 $LN2@LoadGroup

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00364	8d 4d ac	 lea	 ecx, DWORD PTR _stSubTokenVector$2[ebp]
  00367	51		 push	 ecx
  00368	ff 75 b0	 push	 DWORD PTR _stSubTokenVector$2[ebp+4]
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00371	8b 4d b4	 mov	 ecx, DWORD PTR _stSubTokenVector$2[ebp+8]
  00374	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00379	8b 75 ac	 mov	 esi, DWORD PTR _stSubTokenVector$2[ebp]
  0037c	2b ce		 sub	 ecx, esi
  0037e	f7 e9		 imul	 ecx
  00380	c1 fa 02	 sar	 edx, 2
  00383	8b c2		 mov	 eax, edx
  00385	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00388	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0038a	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0038d	c1 e0 03	 shl	 eax, 3
  00390	50		 push	 eax
  00391	56		 push	 esi
  00392	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00397	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0039a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp], 0

; 1698 :             _Mylast  = pointer();

  003a1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp+4], 0

; 1699 :             _Myend   = pointer();

  003a8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _stSubTokenVector$2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 293  : 		}

  003af	e9 f3 00 00 00	 jmp	 $LN2@LoadGroup
$LN19@LoadGroup:

; 296  : 			std::string key = stTokenVector[0];

  003b4	56		 push	 esi
  003b5	8d 4d d8	 lea	 ecx, DWORD PTR _key$5[ebp]
  003b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003bd	8b 4d c8	 mov	 ecx, DWORD PTR _stTokenVector$[ebp+4]
  003c0	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  003c5	8b 75 c4	 mov	 esi, DWORD PTR _stTokenVector$[ebp]
  003c8	89 4d d4	 mov	 DWORD PTR __Last$1$[ebp], ecx
  003cb	2b ce		 sub	 ecx, esi
  003cd	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 296  : 			std::string key = stTokenVector[0];

  003cf	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003d3	c1 fa 02	 sar	 edx, 2
  003d6	8b c2		 mov	 eax, edx
  003d8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003db	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 298  : 			if (1 == stTokenVector.size())

  003dd	83 f8 01	 cmp	 eax, 1
  003e0	0f 84 3f 01 00
	00		 je	 $LN274@LoadGroup
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  003e6	8b 4d d4	 mov	 ecx, DWORD PTR __Last$1$[ebp]

; 1353 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  003e9	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  003ec	3b f9		 cmp	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  003ee	74 5d		 je	 SHORT $LN208@LoadGroup
$LL209@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  003f0	3b f7		 cmp	 esi, edi
  003f2	74 49		 je	 SHORT $LN207@LoadGroup

; 2153 :         return _BUF_SIZE <= _Myres;

  003f4	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003f7	83 f8 10	 cmp	 eax, 16			; 00000010H
  003fa	72 0f		 jb	 SHORT $LN217@LoadGroup

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003fc	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003fd	50		 push	 eax
  003fe	ff 36		 push	 DWORD PTR [esi]
  00400	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00405	8b 4d d4	 mov	 ecx, DWORD PTR __Last$1$[ebp]
  00408	83 c4 08	 add	 esp, 8
$LN217@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0040b	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00412	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00419	c6 06 00	 mov	 BYTE PTR [esi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0041c	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  0041f	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00422	f3 0f 7e 47 10	 movq	 xmm0, QWORD PTR [edi+16]
  00427	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0042c	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00433	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0043a	c6 07 00	 mov	 BYTE PTR [edi], 0
$LN207@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0043d	83 c7 18	 add	 edi, 24			; 00000018H
  00440	83 c6 18	 add	 esi, 24			; 00000018H
  00443	3b f9		 cmp	 edi, ecx
  00445	75 a9		 jne	 SHORT $LL209@LoadGroup
  00447	8b 4d c8	 mov	 ecx, DWORD PTR _stTokenVector$[ebp+4]
  0044a	89 4d d4	 mov	 DWORD PTR __Last$1$[ebp], ecx
$LN208@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0044d	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00450	83 f8 10	 cmp	 eax, 16			; 00000010H
  00453	72 10		 jb	 SHORT $LN238@LoadGroup

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00455	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00456	50		 push	 eax
  00457	ff 71 e8	 push	 DWORD PTR [ecx-24]
  0045a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0045f	8b 4d d4	 mov	 ecx, DWORD PTR __Last$1$[ebp]
  00462	83 c4 08	 add	 esp, 8
$LN238@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 308  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  00465	8d 45 c4	 lea	 eax, DWORD PTR _stTokenVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00468	c7 41 f8 00 00
	00 00		 mov	 DWORD PTR [ecx-8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 308  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  0046f	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00470	c7 41 fc 0f 00
	00 00		 mov	 DWORD PTR [ecx-4], 15	; 0000000fH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 308  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  00477	8d 45 d8	 lea	 eax, DWORD PTR _key$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0047a	c6 41 e8 00	 mov	 BYTE PTR [ecx-24], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 308  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  0047e	8b 4d a8	 mov	 ecx, DWORD PTR _pGroupNode$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00481	83 6d c8 18	 sub	 DWORD PTR _stTokenVector$[ebp+4], 24 ; 00000018H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 308  : 			pGroupNode->InsertTokenVector(key, stTokenVector);

  00485	50		 push	 eax
  00486	e8 00 00 00 00	 call	 ?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z ; CTextFileLoader::SGroupNode::InsertTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0048b	8b 45 ec	 mov	 eax, DWORD PTR _key$5[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 310  : 		}

  0048e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00492	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00495	72 0d		 jb	 SHORT $LN291@LoadGroup

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00497	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00498	50		 push	 eax
  00499	ff 75 d8	 push	 DWORD PTR _key$5[ebp]
  0049c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004a1	83 c4 08	 add	 esp, 8
$LN291@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 212  : 	for (; m_dwcurLineIndex < m_textFileLoader.GetLineCount(); ++m_dwcurLineIndex)

  004a4	8b 7d bc	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@LoadGroup:
  004a7	ff 47 28	 inc	 DWORD PTR [edi+40]
  004aa	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  004ad	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  004b2	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  004b5	3b c8		 cmp	 ecx, eax
  004b7	0f 82 b3 fb ff
	ff		 jb	 $LL4@LoadGroup
$LN289@LoadGroup:

; 313  : 	return (nLocalGroupDepth == 0);

  004bd	8b 45 b8	 mov	 eax, DWORD PTR _nLocalGroupDepth$1$[ebp]
  004c0	8b 75 c4	 mov	 esi, DWORD PTR _stTokenVector$[ebp]
$LN3@LoadGroup:
  004c3	85 c0		 test	 eax, eax
  004c5	0f 94 c0	 sete	 al
$LN296@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  004c8	88 45 d3	 mov	 BYTE PTR $T4[ebp], al
  004cb	85 f6		 test	 esi, esi
  004cd	74 39		 je	 SHORT $LN261@LoadGroup

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  004cf	8d 45 c4	 lea	 eax, DWORD PTR _stTokenVector$[ebp]
  004d2	50		 push	 eax
  004d3	ff 75 c8	 push	 DWORD PTR _stTokenVector$[ebp+4]
  004d6	56		 push	 esi
  004d7	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  004dc	8b 4d cc	 mov	 ecx, DWORD PTR _stTokenVector$[ebp+8]
  004df	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  004e4	8b 75 c4	 mov	 esi, DWORD PTR _stTokenVector$[ebp]
  004e7	2b ce		 sub	 ecx, esi
  004e9	f7 e9		 imul	 ecx
  004eb	c1 fa 02	 sar	 edx, 2
  004ee	8b ca		 mov	 ecx, edx
  004f0	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  004f3	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004f5	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  004f8	c1 e1 03	 shl	 ecx, 3
  004fb	51		 push	 ecx
  004fc	56		 push	 esi
  004fd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 313  : 	return (nLocalGroupDepth == 0);

  00502	8a 45 d3	 mov	 al, BYTE PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00505	83 c4 14	 add	 esp, 20			; 00000014H
$LN261@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 314  : }

  00508	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0050b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00512	59		 pop	 ecx
  00513	5f		 pop	 edi
  00514	5e		 pop	 esi
  00515	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00518	33 cd		 xor	 ecx, ebp
  0051a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0051f	8b e5		 mov	 esp, ebp
  00521	5d		 pop	 ebp
  00522	c2 04 00	 ret	 4
$LN274@LoadGroup:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00525	83 7d ec 10	 cmp	 DWORD PTR _key$5[ebp+20], 16 ; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00529	8d 4d d8	 lea	 ecx, DWORD PTR _key$5[ebp]

; 3668 :         return _Mypair._Myval2._Myptr();

  0052c	8d 47 04	 lea	 eax, DWORD PTR [edi+4]

; 2145 :         if (_Large_string_engaged()) {

  0052f	0f 43 4d d8	 cmovae	 ecx, DWORD PTR _key$5[ebp]

; 2153 :         return _BUF_SIZE <= _Myres;

  00533	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00537	72 02		 jb	 SHORT $LN194@LoadGroup

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00539	8b 00		 mov	 eax, DWORD PTR [eax]
$LN194@LoadGroup:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 300  : 				TraceError("CTextFileLoader::LoadGroup : must have a value (filename: %s line: %d key: %s)",

  0053b	51		 push	 ecx
  0053c	ff 77 28	 push	 DWORD PTR [edi+40]
  0053f	50		 push	 eax
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@OILOFBHI@CTextFileLoader?3?3LoadGroup?5?3?5mu@
  00545	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0054a	83 c4 10	 add	 esp, 16			; 00000010H

; 301  : 							m_strFileName.c_str(),
; 302  : 							m_dwcurLineIndex,
; 303  : 							key.c_str());
; 304  : 				break;

  0054d	8d 4d d8	 lea	 ecx, DWORD PTR _key$5[ebp]
  00550	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00555	e9 63 ff ff ff	 jmp	 $LN289@LoadGroup
$LN272@LoadGroup:

; 232  : 			nLocalGroupDepth--;

  0055a	8b 45 b8	 mov	 eax, DWORD PTR _nLocalGroupDepth$1$[ebp]
  0055d	48		 dec	 eax
  0055e	e9 60 ff ff ff	 jmp	 $LN3@LoadGroup
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _stTokenVector$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$1:
  00008	8d 4d ac	 lea	 ecx, DWORD PTR _stSubTokenVector$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR _key$6[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR _key$5[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z ENDP ; CTextFileLoader::LoadGroup
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?__DestroyGroupNodeVector@CTextFileLoader@@IAEXXZ
_TEXT	SEGMENT
?__DestroyGroupNodeVector@CTextFileLoader@@IAEXXZ PROC	; CTextFileLoader::__DestroyGroupNodeVector, COMDAT
; _this$ = ecx

; 161  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 77 74	 mov	 esi, DWORD PTR [edi+116]
  00007	3b 77 78	 cmp	 esi, DWORD PTR [edi+120]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 163  : 	for (i=m_kVct_pkNode.begin(); i!=m_kVct_pkNode.end(); ++i)

  0000a	74 1f		 je	 SHORT $LN34@DestroyGro
  0000c	0f 1f 40 00	 npad	 4
$LL4@DestroyGro:

; 164  : 		SGroupNode::Delete(*i);

  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ?Delete@SGroupNode@CTextFileLoader@@SAXPAU12@@Z ; CTextFileLoader::SGroupNode::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00017	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 164  : 		SGroupNode::Delete(*i);

  0001a	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0001d	3b 77 78	 cmp	 esi, DWORD PTR [edi+120]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 163  : 	for (i=m_kVct_pkNode.begin(); i!=m_kVct_pkNode.end(); ++i)

  00020	75 ee		 jne	 SHORT $LL4@DestroyGro

; 165  : 	m_kVct_pkNode.clear();

  00022	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
  00025	89 47 78	 mov	 DWORD PTR [edi+120], eax
  00028	5f		 pop	 edi

; 166  : }

  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
$LN34@DestroyGro:

; 165  : 	m_kVct_pkNode.clear();

  0002b	89 77 78	 mov	 DWORD PTR [edi+120], esi
  0002e	5f		 pop	 edi

; 166  : }

  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
?__DestroyGroupNodeVector@CTextFileLoader@@IAEXXZ ENDP	; CTextFileLoader::__DestroyGroupNodeVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pString$ = 12						; size = 4
?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z PROC ; CTextFileLoader::GetTokenString, COMDAT
; _this$ = ecx

; 682  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 683  : 	CTokenVector * pTokenVector;
; 684  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 48		 je	 SHORT $LN21@GetTokenSt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 687  : 	if (pTokenVector->empty())

  0001e	74 3c		 je	 SHORT $LN21@GetTokenSt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 2f		 je	 SHORT $LN24@GetTokenSt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00035	8b 55 0c	 mov	 edx, DWORD PTR _pString$[ebp]
  00038	3b d1		 cmp	 edx, ecx
  0003a	74 15		 je	 SHORT $LN12@GetTokenSt

; 2153 :         return _BUF_SIZE <= _Myres;

  0003c	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00040	8b c1		 mov	 eax, ecx

; 2145 :         if (_Large_string_engaged()) {

  00042	72 02		 jb	 SHORT $LN17@GetTokenSt

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00044	8b 01		 mov	 eax, DWORD PTR [ecx]
$LN17@GetTokenSt:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00046	ff 71 10	 push	 DWORD PTR [ecx+16]
  00049	8b ca		 mov	 ecx, edx
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN12@GetTokenSt:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 695  : 	return TRUE;

  00051	b8 01 00 00 00	 mov	 eax, 1

; 696  : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
$LN21@GetTokenSt:

; 688  : 	{
; 689  : 		//Tracef(" CTextFileLoader::GetTokenString - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 690  : 		return FALSE;

  0005c	33 c0		 xor	 eax, eax

; 696  : }

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
$LN24@GetTokenSt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00064	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN22@GetTokenSt:
  00069	cc		 int	 3
?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ENDP ; CTextFileLoader::GetTokenString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pColor$ = 12						; size = 4
?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z PROC ; CTextFileLoader::GetTokenColor, COMDAT
; _this$ = ecx

; 662  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 663  : 	CTokenVector * pTokenVector;
; 664  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 f3 00 00
	00		 je	 $LN49@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 667  : 	if (pTokenVector->size() != 4)

  00023	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 dd 00 00
	00		 jae	 $LN49@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 cf 00 00
	00		 je	 $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenCo:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 673  : 	pColor->r = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pColor$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 673  : 	pColor->r = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	0f 86 96 00 00
	00		 jbe	 $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007f	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00083	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00086	72 02		 jb	 SHORT $LN24@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00088	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 674  : 	pColor->g = atof(pTokenVector->at(1).c_str());

  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 _atof
  00090	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00093	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00096	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0009b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 674  : 	pColor->g = atof(pTokenVector->at(1).c_str());

  0009d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000a0	2b cb		 sub	 ecx, ebx
  000a2	f7 e9		 imul	 ecx
  000a4	c1 fa 02	 sar	 edx, 2
  000a7	8b c2		 mov	 eax, edx
  000a9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ac	03 c2		 add	 eax, edx
  000ae	83 f8 02	 cmp	 eax, 2
  000b1	76 62		 jbe	 SHORT $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000b3	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b7	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ba	72 02		 jb	 SHORT $LN34@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 675  : 	pColor->b = atof(pTokenVector->at(2).c_str());

  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 _atof
  000c4	d9 5f 08	 fstp	 DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000cf	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 675  : 	pColor->b = atof(pTokenVector->at(2).c_str());

  000d1	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000d4	2b cb		 sub	 ecx, ebx
  000d6	f7 e9		 imul	 ecx
  000d8	c1 fa 02	 sar	 edx, 2
  000db	8b c2		 mov	 eax, edx
  000dd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e0	03 c2		 add	 eax, edx
  000e2	83 f8 03	 cmp	 eax, 3
  000e5	76 2e		 jbe	 SHORT $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e7	83 7b 5c 10	 cmp	 DWORD PTR [ebx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000eb	8d 43 48	 lea	 eax, DWORD PTR [ebx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ee	72 02		 jb	 SHORT $LN44@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000f0	8b 00		 mov	 eax, DWORD PTR [eax]
$LN44@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 676  : 	pColor->a = atof(pTokenVector->at(3).c_str());

  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _atof
  000f8	83 c4 04	 add	 esp, 4

; 677  : 
; 678  : 	return TRUE;

  000fb	b8 01 00 00 00	 mov	 eax, 1
  00100	d9 5f 0c	 fstp	 DWORD PTR [edi+12]
  00103	5f		 pop	 edi
  00104	5b		 pop	 ebx
  00105	5e		 pop	 esi

; 679  : }

  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
$LN49@GetTokenCo:

; 668  : 	{
; 669  : 		//Tracef(" CTextFileLoader::GetTokenColor - This key should have 4 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 670  : 		return FALSE;

  0010c	33 c0		 xor	 eax, eax
  0010e	5e		 pop	 esi

; 679  : }

  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
$LN48@GetTokenCo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00115	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN50@GetTokenCo:
  0011a	cc		 int	 3
?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ENDP ; CTextFileLoader::GetTokenColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pColor$ = 12						; size = 4
?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z PROC ; CTextFileLoader::GetTokenColor, COMDAT
; _this$ = ecx

; 642  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 643  : 	CTokenVector * pTokenVector;
; 644  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 f3 00 00
	00		 je	 $LN49@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 647  : 	if (pTokenVector->size() != 4)

  00023	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 dd 00 00
	00		 jae	 $LN49@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 cf 00 00
	00		 je	 $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenCo:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 653  : 	pColor->r = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pColor$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 653  : 	pColor->r = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	0f 86 96 00 00
	00		 jbe	 $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007f	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00083	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00086	72 02		 jb	 SHORT $LN24@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00088	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 654  : 	pColor->g = atof(pTokenVector->at(1).c_str());

  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 _atof
  00090	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00093	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00096	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0009b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 654  : 	pColor->g = atof(pTokenVector->at(1).c_str());

  0009d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000a0	2b cb		 sub	 ecx, ebx
  000a2	f7 e9		 imul	 ecx
  000a4	c1 fa 02	 sar	 edx, 2
  000a7	8b c2		 mov	 eax, edx
  000a9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ac	03 c2		 add	 eax, edx
  000ae	83 f8 02	 cmp	 eax, 2
  000b1	76 62		 jbe	 SHORT $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000b3	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b7	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ba	72 02		 jb	 SHORT $LN34@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 655  : 	pColor->b = atof(pTokenVector->at(2).c_str());

  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 _atof
  000c4	d9 5f 08	 fstp	 DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000cf	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 655  : 	pColor->b = atof(pTokenVector->at(2).c_str());

  000d1	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000d4	2b cb		 sub	 ecx, ebx
  000d6	f7 e9		 imul	 ecx
  000d8	c1 fa 02	 sar	 edx, 2
  000db	8b c2		 mov	 eax, edx
  000dd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e0	03 c2		 add	 eax, edx
  000e2	83 f8 03	 cmp	 eax, 3
  000e5	76 2e		 jbe	 SHORT $LN48@GetTokenCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e7	83 7b 5c 10	 cmp	 DWORD PTR [ebx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000eb	8d 43 48	 lea	 eax, DWORD PTR [ebx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ee	72 02		 jb	 SHORT $LN44@GetTokenCo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000f0	8b 00		 mov	 eax, DWORD PTR [eax]
$LN44@GetTokenCo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 656  : 	pColor->a = atof(pTokenVector->at(3).c_str());

  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _atof
  000f8	83 c4 04	 add	 esp, 4

; 657  : 
; 658  : 	return TRUE;

  000fb	b8 01 00 00 00	 mov	 eax, 1
  00100	d9 5f 0c	 fstp	 DWORD PTR [edi+12]
  00103	5f		 pop	 edi
  00104	5b		 pop	 ebx
  00105	5e		 pop	 esi

; 659  : }

  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
$LN49@GetTokenCo:

; 648  : 	{
; 649  : 		//Tracef(" CTextFileLoader::GetTokenColor - This key should have 4 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 650  : 		return FALSE;

  0010c	33 c0		 xor	 eax, eax
  0010e	5e		 pop	 esi

; 659  : }

  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
$LN48@GetTokenCo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00115	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN50@GetTokenCo:
  0011a	cc		 int	 3
?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ENDP ; CTextFileLoader::GetTokenColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pVector$ = 12						; size = 4
?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z PROC ; CTextFileLoader::GetTokenDirection, COMDAT
; _this$ = ecx

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 624  : 	CTokenVector * pTokenVector;
; 625  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 bb 00 00
	00		 je	 $LN39@GetTokenDi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 628  : 	if (pTokenVector->size() != 3)

  00023	8d 42 b8	 lea	 eax, DWORD PTR [edx-72]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 a5 00 00
	00		 jae	 $LN39@GetTokenDi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 97 00 00
	00		 je	 $LN38@GetTokenDi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenDi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenDi:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 634  : 	pVector->x = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 634  : 	pVector->x = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	76 62		 jbe	 SHORT $LN38@GetTokenDi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007b	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  0007f	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00082	72 02		 jb	 SHORT $LN24@GetTokenDi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00084	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenDi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 635  : 	pVector->y = atof(pTokenVector->at(1).c_str());

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _atof
  0008c	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0008f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00092	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00097	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 635  : 	pVector->y = atof(pTokenVector->at(1).c_str());

  00099	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0009c	2b cb		 sub	 ecx, ebx
  0009e	f7 e9		 imul	 ecx
  000a0	c1 fa 02	 sar	 edx, 2
  000a3	8b c2		 mov	 eax, edx
  000a5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a8	03 c2		 add	 eax, edx
  000aa	83 f8 02	 cmp	 eax, 2
  000ad	76 2e		 jbe	 SHORT $LN38@GetTokenDi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000af	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b3	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000b6	72 02		 jb	 SHORT $LN34@GetTokenDi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenDi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 636  : 	pVector->z = atof(pTokenVector->at(2).c_str());

  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 _atof
  000c0	83 c4 04	 add	 esp, 4

; 637  : 
; 638  : 	return TRUE;

  000c3	b8 01 00 00 00	 mov	 eax, 1
  000c8	d9 5f 08	 fstp	 DWORD PTR [edi+8]
  000cb	5f		 pop	 edi
  000cc	5b		 pop	 ebx
  000cd	5e		 pop	 esi

; 639  : }

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
$LN39@GetTokenDi:

; 629  : 	{
; 630  : 		//Tracef(" CTextFileLoader::GetTokenDirection - This key should have 3 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 631  : 		return FALSE;

  000d4	33 c0		 xor	 eax, eax
  000d6	5e		 pop	 esi

; 639  : }

  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 08 00	 ret	 8
$LN38@GetTokenDi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  000dd	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN40@GetTokenDi:
  000e2	cc		 int	 3
?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z ENDP ; CTextFileLoader::GetTokenDirection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenQuaternion@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXQUATERNION@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pQ$ = 12						; size = 4
?GetTokenQuaternion@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXQUATERNION@@@Z PROC ; CTextFileLoader::GetTokenQuaternion, COMDAT
; _this$ = ecx

; 603  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 604  : 	CTokenVector * pTokenVector;
; 605  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 f3 00 00
	00		 je	 $LN49@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 608  : 	if (pTokenVector->size() != 4)

  00023	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 dd 00 00
	00		 jae	 $LN49@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 cf 00 00
	00		 je	 $LN48@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenQu

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenQu:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 614  : 	pQ->x = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pQ$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 614  : 	pQ->x = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	0f 86 96 00 00
	00		 jbe	 $LN48@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007f	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00083	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00086	72 02		 jb	 SHORT $LN24@GetTokenQu

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00088	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenQu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 615  : 	pQ->y = atof(pTokenVector->at(1).c_str());

  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 _atof
  00090	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00093	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00096	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0009b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 615  : 	pQ->y = atof(pTokenVector->at(1).c_str());

  0009d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000a0	2b cb		 sub	 ecx, ebx
  000a2	f7 e9		 imul	 ecx
  000a4	c1 fa 02	 sar	 edx, 2
  000a7	8b c2		 mov	 eax, edx
  000a9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ac	03 c2		 add	 eax, edx
  000ae	83 f8 02	 cmp	 eax, 2
  000b1	76 62		 jbe	 SHORT $LN48@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000b3	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b7	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ba	72 02		 jb	 SHORT $LN34@GetTokenQu

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenQu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 616  : 	pQ->z = atof(pTokenVector->at(2).c_str());

  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 _atof
  000c4	d9 5f 08	 fstp	 DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000cf	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 616  : 	pQ->z = atof(pTokenVector->at(2).c_str());

  000d1	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000d4	2b cb		 sub	 ecx, ebx
  000d6	f7 e9		 imul	 ecx
  000d8	c1 fa 02	 sar	 edx, 2
  000db	8b c2		 mov	 eax, edx
  000dd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e0	03 c2		 add	 eax, edx
  000e2	83 f8 03	 cmp	 eax, 3
  000e5	76 2e		 jbe	 SHORT $LN48@GetTokenQu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e7	83 7b 5c 10	 cmp	 DWORD PTR [ebx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000eb	8d 43 48	 lea	 eax, DWORD PTR [ebx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ee	72 02		 jb	 SHORT $LN44@GetTokenQu

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000f0	8b 00		 mov	 eax, DWORD PTR [eax]
$LN44@GetTokenQu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 617  : 	pQ->w = atof(pTokenVector->at(3).c_str());

  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _atof
  000f8	83 c4 04	 add	 esp, 4

; 618  : 
; 619  : 	return TRUE;

  000fb	b8 01 00 00 00	 mov	 eax, 1
  00100	d9 5f 0c	 fstp	 DWORD PTR [edi+12]
  00103	5f		 pop	 edi
  00104	5b		 pop	 ebx
  00105	5e		 pop	 esi

; 620  : }

  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
$LN49@GetTokenQu:

; 609  : 	{
; 610  : 		//Tracef(" CTextFileLoader::GetTokenVector3 - This key should have 3 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 611  : 		return FALSE;

  0010c	33 c0		 xor	 eax, eax
  0010e	5e		 pop	 esi

; 620  : }

  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
$LN48@GetTokenQu:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00115	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN50@GetTokenQu:
  0011a	cc		 int	 3
?GetTokenQuaternion@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXQUATERNION@@@Z ENDP ; CTextFileLoader::GetTokenQuaternion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rstrKey$ = 8						; size = 4
_pVector$ = 12						; size = 4
?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z PROC ; CTextFileLoader::GetTokenPosition, COMDAT
; _this$ = ecx

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 600  : }

  00003	5d		 pop	 ebp

; 599  : 	return GetTokenVector3(c_rstrKey, pVector);

  00004	e9 00 00 00 00	 jmp	 ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ENDP ; CTextFileLoader::GetTokenPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenVector4@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR4@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pVector4$ = 12						; size = 4
?GetTokenVector4@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR4@@@Z PROC ; CTextFileLoader::GetTokenVector4, COMDAT
; _this$ = ecx

; 577  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 578  : 	CTokenVector * pTokenVector;
; 579  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 f3 00 00
	00		 je	 $LN49@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 582  : 	if (pTokenVector->size() != 4)

  00023	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 dd 00 00
	00		 jae	 $LN49@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 cf 00 00
	00		 je	 $LN48@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenVe:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 588  : 	pVector4->x = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pVector4$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 588  : 	pVector4->x = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	0f 86 96 00 00
	00		 jbe	 $LN48@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007f	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00083	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00086	72 02		 jb	 SHORT $LN24@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00088	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 589  : 	pVector4->y = atof(pTokenVector->at(1).c_str());

  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 _atof
  00090	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00093	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00096	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0009b	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 589  : 	pVector4->y = atof(pTokenVector->at(1).c_str());

  0009d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000a0	2b cb		 sub	 ecx, ebx
  000a2	f7 e9		 imul	 ecx
  000a4	c1 fa 02	 sar	 edx, 2
  000a7	8b c2		 mov	 eax, edx
  000a9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ac	03 c2		 add	 eax, edx
  000ae	83 f8 02	 cmp	 eax, 2
  000b1	76 62		 jbe	 SHORT $LN48@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000b3	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b7	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ba	72 02		 jb	 SHORT $LN34@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000bc	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 590  : 	pVector4->z = atof(pTokenVector->at(2).c_str());

  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 _atof
  000c4	d9 5f 08	 fstp	 DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000cf	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 590  : 	pVector4->z = atof(pTokenVector->at(2).c_str());

  000d1	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  000d4	2b cb		 sub	 ecx, ebx
  000d6	f7 e9		 imul	 ecx
  000d8	c1 fa 02	 sar	 edx, 2
  000db	8b c2		 mov	 eax, edx
  000dd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e0	03 c2		 add	 eax, edx
  000e2	83 f8 03	 cmp	 eax, 3
  000e5	76 2e		 jbe	 SHORT $LN48@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000e7	83 7b 5c 10	 cmp	 DWORD PTR [ebx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000eb	8d 43 48	 lea	 eax, DWORD PTR [ebx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000ee	72 02		 jb	 SHORT $LN44@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000f0	8b 00		 mov	 eax, DWORD PTR [eax]
$LN44@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 591  : 	pVector4->w = atof(pTokenVector->at(3).c_str());

  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _atof
  000f8	83 c4 04	 add	 esp, 4

; 592  : 
; 593  : 	return TRUE;

  000fb	b8 01 00 00 00	 mov	 eax, 1
  00100	d9 5f 0c	 fstp	 DWORD PTR [edi+12]
  00103	5f		 pop	 edi
  00104	5b		 pop	 ebx
  00105	5e		 pop	 esi

; 594  : }

  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 08 00	 ret	 8
$LN49@GetTokenVe:

; 583  : 	{
; 584  : 		//Tracef(" CTextFileLoader::GetTokenVector3 - This key should have 3 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 585  : 		return FALSE;

  0010c	33 c0		 xor	 eax, eax
  0010e	5e		 pop	 esi

; 594  : }

  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 08 00	 ret	 8
$LN48@GetTokenVe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00115	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN50@GetTokenVe:
  0011a	cc		 int	 3
?GetTokenVector4@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR4@@@Z ENDP ; CTextFileLoader::GetTokenVector4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pVector3$ = 12						; size = 4
?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z PROC ; CTextFileLoader::GetTokenVector3, COMDAT
; _this$ = ecx

; 558  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 559  : 	CTokenVector * pTokenVector;
; 560  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	0f 84 bb 00 00
	00		 je	 $LN39@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00019	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  0001c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00021	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 563  : 	if (pTokenVector->size() != 3)

  00023	8d 42 b8	 lea	 eax, DWORD PTR [edx-72]
  00026	83 f8 18	 cmp	 eax, 24			; 00000018H
  00029	0f 83 a5 00 00
	00		 jae	 $LN39@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0002f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00034	f7 ea		 imul	 edx
  00036	c1 fa 02	 sar	 edx, 2
  00039	8b c2		 mov	 eax, edx
  0003b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003e	03 c2		 add	 eax, edx
  00040	0f 84 97 00 00
	00		 je	 $LN38@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00046	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0004a	72 02		 jb	 SHORT $LN14@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenVe:
  0004e	53		 push	 ebx
  0004f	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 569  : 	pVector3->x = atof(pTokenVector->at(0).c_str());

  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _atof
  00056	8b 7d 0c	 mov	 edi, DWORD PTR _pVector3$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00059	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 569  : 	pVector3->x = atof(pTokenVector->at(0).c_str());

  0005e	83 c4 04	 add	 esp, 4
  00061	d9 1f		 fstp	 DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00063	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00066	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00068	2b cb		 sub	 ecx, ebx
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 02	 sar	 edx, 2
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	83 f8 01	 cmp	 eax, 1
  00079	76 62		 jbe	 SHORT $LN38@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007b	83 7b 2c 10	 cmp	 DWORD PTR [ebx+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  0007f	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00082	72 02		 jb	 SHORT $LN24@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00084	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 570  : 	pVector3->y = atof(pTokenVector->at(1).c_str());

  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _atof
  0008c	d9 5f 04	 fstp	 DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0008f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00092	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00097	8b 1e		 mov	 ebx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 570  : 	pVector3->y = atof(pTokenVector->at(1).c_str());

  00099	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0009c	2b cb		 sub	 ecx, ebx
  0009e	f7 e9		 imul	 ecx
  000a0	c1 fa 02	 sar	 edx, 2
  000a3	8b c2		 mov	 eax, edx
  000a5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a8	03 c2		 add	 eax, edx
  000aa	83 f8 02	 cmp	 eax, 2
  000ad	76 2e		 jbe	 SHORT $LN38@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000af	83 7b 44 10	 cmp	 DWORD PTR [ebx+68], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b3	8d 43 30	 lea	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  000b6	72 02		 jb	 SHORT $LN34@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 571  : 	pVector3->z = atof(pTokenVector->at(2).c_str());

  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 _atof
  000c0	83 c4 04	 add	 esp, 4

; 572  : 
; 573  : 	return TRUE;

  000c3	b8 01 00 00 00	 mov	 eax, 1
  000c8	d9 5f 08	 fstp	 DWORD PTR [edi+8]
  000cb	5f		 pop	 edi
  000cc	5b		 pop	 ebx
  000cd	5e		 pop	 esi

; 574  : }

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
$LN39@GetTokenVe:

; 564  : 	{
; 565  : 		//Tracef(" CTextFileLoader::GetTokenVector3 - This key should have 3 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 566  : 		return FALSE;

  000d4	33 c0		 xor	 eax, eax
  000d6	5e		 pop	 esi

; 574  : }

  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 08 00	 ret	 8
$LN38@GetTokenVe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  000dd	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN40@GetTokenVe:
  000e2	cc		 int	 3
?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ENDP ; CTextFileLoader::GetTokenVector3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pVector2$ = 12						; size = 4
?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z PROC ; CTextFileLoader::GetTokenVector2, COMDAT
; _this$ = ecx

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 541  : 	CTokenVector * pTokenVector;
; 542  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00011	85 c0		 test	 eax, eax
  00013	74 7f		 je	 SHORT $LN29@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00015	8b 75 fc	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  00018	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001d	2b d1		 sub	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 545  : 	if (pTokenVector->size() != 2)

  0001f	8d 42 d0	 lea	 eax, DWORD PTR [edx-48]
  00022	83 f8 18	 cmp	 eax, 24			; 00000018H
  00025	73 6d		 jae	 SHORT $LN29@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00027	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0002c	f7 ea		 imul	 edx
  0002e	c1 fa 02	 sar	 edx, 2
  00031	8b c2		 mov	 eax, edx
  00033	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00036	03 c2		 add	 eax, edx
  00038	74 63		 je	 SHORT $LN28@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0003a	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0003e	72 02		 jb	 SHORT $LN14@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00040	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenVe:
  00042	53		 push	 ebx
  00043	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 551  : 	pVector2->x = atof(pTokenVector->at(0).c_str());

  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 _atof
  0004a	8b 5d 0c	 mov	 ebx, DWORD PTR _pVector2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0004d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 551  : 	pVector2->x = atof(pTokenVector->at(0).c_str());

  00052	83 c4 04	 add	 esp, 4
  00055	d9 1b		 fstp	 DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00057	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0005c	2b cf		 sub	 ecx, edi
  0005e	f7 e9		 imul	 ecx
  00060	c1 fa 02	 sar	 edx, 2
  00063	8b c2		 mov	 eax, edx
  00065	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00068	03 c2		 add	 eax, edx
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	76 2e		 jbe	 SHORT $LN28@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0006f	83 7f 2c 10	 cmp	 DWORD PTR [edi+44], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00073	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00076	72 02		 jb	 SHORT $LN24@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00078	8b 00		 mov	 eax, DWORD PTR [eax]
$LN24@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 552  : 	pVector2->y = atof(pTokenVector->at(1).c_str());

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _atof
  00080	83 c4 04	 add	 esp, 4

; 553  : 
; 554  : 	return TRUE;

  00083	b8 01 00 00 00	 mov	 eax, 1
  00088	d9 5b 04	 fstp	 DWORD PTR [ebx+4]
  0008b	5f		 pop	 edi
  0008c	5b		 pop	 ebx
  0008d	5e		 pop	 esi

; 555  : }

  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 08 00	 ret	 8
$LN29@GetTokenVe:

; 546  : 	{
; 547  : 		//Tracef(" CTextFileLoader::GetTokenVector2 - This key should have 2 values %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 548  : 		return FALSE;

  00094	33 c0		 xor	 eax, eax
  00096	5e		 pop	 esi

; 555  : }

  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 08 00	 ret	 8
$LN28@GetTokenVe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0009d	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN30@GetTokenVe:
  000a2	cc		 int	 3
?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ENDP ; CTextFileLoader::GetTokenVector2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z PROC ; CTextFileLoader::GetTokenFloat, COMDAT
; _this$ = ecx

; 523  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 524  : 	CTokenVector * pTokenVector;
; 525  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 42		 je	 SHORT $LN18@GetTokenFl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 528  : 	if (pTokenVector->empty())

  0001e	74 36		 je	 SHORT $LN18@GetTokenFl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 29		 je	 SHORT $LN21@GetTokenFl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00035	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN14@GetTokenFl

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenFl:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 534  : 	*pData = atof(pTokenVector->at(0).c_str());

  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 _atof
  00043	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	d9 18		 fstp	 DWORD PTR [eax]

; 535  : 
; 536  : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1

; 537  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
$LN18@GetTokenFl:

; 529  : 	{
; 530  : 		//Tracef(" CTextFileLoader::GetTokenFloat - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 531  : 		return FALSE;

  00056	33 c0		 xor	 eax, eax

; 537  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
$LN21@GetTokenFl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0005e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN19@GetTokenFl:
  00063	cc		 int	 3
?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ENDP ; CTextFileLoader::GetTokenFloat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z
_TEXT	SEGMENT
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z PROC ; CTextFileLoader::GetTokenDoubleWord, COMDAT
; _this$ = ecx

; 518  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 520  : }

  00003	5d		 pop	 ebp

; 519  : 	return GetTokenInteger(c_rstrKey, *(int **)(&pData));

  00004	e9 00 00 00 00	 jmp	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ENDP ; CTextFileLoader::GetTokenDoubleWord
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z PROC ; CTextFileLoader::GetTokenInteger, COMDAT
; _this$ = ecx

; 501  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 502  : 	CTokenVector * pTokenVector;
; 503  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 42		 je	 SHORT $LN18@GetTokenIn
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 506  : 	if (pTokenVector->empty())

  0001e	74 36		 je	 SHORT $LN18@GetTokenIn
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 29		 je	 SHORT $LN21@GetTokenIn
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00035	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN14@GetTokenIn

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenIn:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 512  : 	*pData = atoi(pTokenVector->at(0).c_str());

  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 __atoi64
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	89 01		 mov	 DWORD PTR [ecx], eax

; 513  : 
; 514  : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1

; 515  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
$LN18@GetTokenIn:

; 507  : 	{
; 508  : 		//Tracef(" CTextFileLoader::GetTokenInteger - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 509  : 		return FALSE;

  00056	33 c0		 xor	 eax, eax

; 515  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
$LN21@GetTokenIn:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0005e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN19@GetTokenIn:
  00063	cc		 int	 3
?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ENDP ; CTextFileLoader::GetTokenInteger
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z PROC ; CTextFileLoader::GetTokenWord, COMDAT
; _this$ = ecx

; 484  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 485  : 	CTokenVector * pTokenVector;
; 486  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 43		 je	 SHORT $LN18@GetTokenWo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 489  : 	if (pTokenVector->empty())

  0001e	74 37		 je	 SHORT $LN18@GetTokenWo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 2a		 je	 SHORT $LN21@GetTokenWo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00035	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN14@GetTokenWo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenWo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 495  : 	*pData = WORD(atoi(pTokenVector->at(0).c_str()));

  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 __atoi64
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	66 89 01	 mov	 WORD PTR [ecx], ax

; 496  : 
; 497  : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1

; 498  : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
$LN18@GetTokenWo:

; 490  : 	{
; 491  : 		//Tracef(" CTextFileLoader::GetTokenWord - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 492  : 		return FALSE;

  00057	33 c0		 xor	 eax, eax

; 498  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN21@GetTokenWo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0005f	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN19@GetTokenWo:
  00064	cc		 int	 3
?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ENDP ; CTextFileLoader::GetTokenWord
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z PROC ; CTextFileLoader::GetTokenByte, COMDAT
; _this$ = ecx

; 467  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 468  : 	CTokenVector * pTokenVector;
; 469  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 42		 je	 SHORT $LN18@GetTokenBy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 472  : 	if (pTokenVector->empty())

  0001e	74 36		 je	 SHORT $LN18@GetTokenBy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 29		 je	 SHORT $LN21@GetTokenBy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00035	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN14@GetTokenBy

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenBy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 478  : 	*pData = BYTE(atoi(pTokenVector->at(0).c_str()));

  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 __atoi64
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	88 01		 mov	 BYTE PTR [ecx], al

; 479  : 
; 480  : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1

; 481  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
$LN18@GetTokenBy:

; 473  : 	{
; 474  : 		//Tracef(" CTextFileLoader::GetTokenByte - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 475  : 		return FALSE;

  00056	33 c0		 xor	 eax, eax

; 481  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
$LN21@GetTokenBy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0005e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN19@GetTokenBy:
  00063	cc		 int	 3
?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ENDP ; CTextFileLoader::GetTokenByte
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z
_TEXT	SEGMENT
_pTokenVector$ = -4					; size = 4
_c_rstrKey$ = 8						; size = 4
_pData$ = 12						; size = 4
?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z PROC ; CTextFileLoader::GetTokenBoolean, COMDAT
; _this$ = ecx

; 450  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 451  : 	CTokenVector * pTokenVector;
; 452  : 	if (!GetTokenVector(c_rstrKey, &pTokenVector))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  00007	50		 push	 eax
  00008	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000b	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  00010	85 c0		 test	 eax, eax
  00012	74 42		 je	 SHORT $LN18@GetTokenBo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _pTokenVector$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001c	3b ca		 cmp	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 455  : 	if (pTokenVector->empty())

  0001e	74 36		 je	 SHORT $LN18@GetTokenBo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00020	2b d1		 sub	 edx, ecx
  00022	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00027	f7 ea		 imul	 edx
  00029	c1 fa 02	 sar	 edx, 2
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	74 29		 je	 SHORT $LN21@GetTokenBo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00035	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00039	72 02		 jb	 SHORT $LN14@GetTokenBo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN14@GetTokenBo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 461  : 	*pData = BOOL(atoi(pTokenVector->at(0).c_str()));

  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 __atoi64
  00043	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	89 01		 mov	 DWORD PTR [ecx], eax

; 462  : 
; 463  : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1

; 464  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
$LN18@GetTokenBo:

; 456  : 	{
; 457  : 		//Tracef(" CTextFileLoader::GetTokenBoolean - Failed to find the value %s [%s : %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 458  : 		return FALSE;

  00056	33 c0		 xor	 eax, eax

; 464  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
$LN21@GetTokenBo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  0005e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN19@GetTokenBo:
  00063	cc		 int	 3
?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ENDP ; CTextFileLoader::GetTokenBoolean
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z
_TEXT	SEGMENT
_c_rstrKey$ = 8						; size = 4
_ppTokenVector$ = 12					; size = 4
?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z PROC ; CTextFileLoader::GetTokenVector, COMDAT
; _this$ = ecx

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 425  : 	if (!m_pcurNode)

  00003	8b 49 70	 mov	 ecx, DWORD PTR [ecx+112]
  00006	85 c9		 test	 ecx, ecx
  00008	74 1a		 je	 SHORT $LN5@GetTokenVe

; 426  : 	{
; 427  : 		assert(!"Node to access has not set!");
; 428  : 		return FALSE;
; 429  : 	}
; 430  : 
; 431  : 	CTokenVector* pkRetTokenVector=m_pcurNode->GetTokenVector(c_rstrKey);

  0000a	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  0000d	e8 00 00 00 00	 call	 ?GetTokenVector@SGroupNode@CTextFileLoader@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; CTextFileLoader::SGroupNode::GetTokenVector

; 432  : 	if (!pkRetTokenVector)

  00012	85 c0		 test	 eax, eax
  00014	74 0e		 je	 SHORT $LN5@GetTokenVe

; 434  : 
; 435  : 	*ppTokenVector = pkRetTokenVector;

  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _ppTokenVector$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 436  : 
; 437  : 	//CTokenVectorMap::iterator itor = m_pcurNode->LocalTokenVectorMap.find(c_rstrKey);
; 438  : 	//if (m_pcurNode->LocalTokenVectorMap.end() == itor)
; 439  : 	//{
; 440  : 		//Tracef(" CTextFileLoader::GetTokenVector - Failed to find the key %s [%s :: %s]\n", m_File.GetFileName(), m_pcurNode->strGroupName.c_str(), c_rstrKey.c_str());
; 441  : 	//	return FALSE;
; 442  : 	//}
; 443  : 
; 444  : 	//*ppTokenVector = &itor->second;
; 445  : 
; 446  : 	return TRUE;

  0001b	b8 01 00 00 00	 mov	 eax, 1

; 447  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN5@GetTokenVe:

; 433  : 		return FALSE;

  00024	33 c0		 xor	 eax, eax

; 447  : }

  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ENDP ; CTextFileLoader::GetTokenVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?IsToken@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_c_rstrKey$ = 8						; size = 4
?IsToken@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CTextFileLoader::IsToken, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 413  : 	if (!m_pcurNode)

  00003	8b 49 70	 mov	 ecx, DWORD PTR [ecx+112]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@IsToken

; 414  : 	{
; 415  : 		assert(!"Node to access has not set!");
; 416  : 		return FALSE;

  0000a	33 c0		 xor	 eax, eax

; 420  : 	//return m_pcurNode->LocalTokenVectorMap.end() != m_pcurNode->LocalTokenVectorMap.find(c_rstrKey);
; 421  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN2@IsToken:

; 417  : 	}
; 418  : 
; 419  : 	return m_pcurNode->IsExistTokenVector(c_rstrKey);

  00010	ff 75 08	 push	 DWORD PTR _c_rstrKey$[ebp]
  00013	e8 00 00 00 00	 call	 ?IsExistTokenVector@SGroupNode@CTextFileLoader@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::SGroupNode::IsExistTokenVector
  00018	0f b6 c0	 movzx	 eax, al

; 420  : 	//return m_pcurNode->LocalTokenVectorMap.end() != m_pcurNode->LocalTokenVectorMap.find(c_rstrKey);
; 421  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?IsToken@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTextFileLoader::IsToken
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_pstrName$ = 8						; size = 4
?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CTextFileLoader::GetCurrentNodeName, COMDAT
; _this$ = ecx

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 401  : 	if (!m_pcurNode)

  00003	8b 49 70	 mov	 ecx, DWORD PTR [ecx+112]
  00006	85 c9		 test	 ecx, ecx
  00008	74 2e		 je	 SHORT $LN15@GetCurrent

; 402  : 		return FALSE;
; 403  : 	if (NULL == m_pcurNode->pParentNode)

  0000a	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  0000e	74 28		 je	 SHORT $LN15@GetCurrent

; 405  : 
; 406  : 	*pstrName = m_pcurNode->GetGroupName();

  00010	e8 00 00 00 00	 call	 ?GetGroupName@SGroupNode@CTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CTextFileLoader::SGroupNode::GetGroupName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _pstrName$[ebp]
  00018	3b c8		 cmp	 ecx, eax
  0001a	74 13		 je	 SHORT $LN6@GetCurrent

; 2153 :         return _BUF_SIZE <= _Myres;

  0001c	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00020	8b d0		 mov	 edx, eax

; 2145 :         if (_Large_string_engaged()) {

  00022	72 02		 jb	 SHORT $LN11@GetCurrent

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00024	8b 10		 mov	 edx, DWORD PTR [eax]
$LN11@GetCurrent:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00026	ff 70 10	 push	 DWORD PTR [eax+16]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN6@GetCurrent:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 408  : 	return TRUE;

  0002f	b8 01 00 00 00	 mov	 eax, 1

; 409  : }

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN15@GetCurrent:

; 404  : 		return FALSE;

  00038	33 c0		 xor	 eax, eax

; 409  : }

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTextFileLoader::GetCurrentNodeName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetParentNode@CTextFileLoader@@QAEHXZ
_TEXT	SEGMENT
?SetParentNode@CTextFileLoader@@QAEHXZ PROC		; CTextFileLoader::SetParentNode, COMDAT
; _this$ = ecx

; 382  : 	if (!m_pcurNode)

  00000	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00003	85 c0		 test	 eax, eax
  00005	74 10		 je	 SHORT $LN5@SetParentN

; 383  : 	{
; 384  : 		assert(!"Node to access has not set!");
; 385  : 		return FALSE;
; 386  : 	}
; 387  : 
; 388  : 	if (NULL == m_pcurNode->pParentNode)

  00007	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0000a	85 c0		 test	 eax, eax
  0000c	74 09		 je	 SHORT $LN5@SetParentN

; 392  : 	}
; 393  : 
; 394  : 	m_pcurNode = m_pcurNode->pParentNode;

  0000e	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 395  : 
; 396  : 	return TRUE;

  00011	b8 01 00 00 00	 mov	 eax, 1

; 397  : }

  00016	c3		 ret	 0
$LN5@SetParentN:

; 389  : 	{
; 390  : 		assert(!"Current group node is already top!");
; 391  : 		return FALSE;

  00017	33 c0		 xor	 eax, eax

; 397  : }

  00019	c3		 ret	 0
?SetParentNode@CTextFileLoader@@QAEHXZ ENDP		; CTextFileLoader::SetParentNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetChildNode@CTextFileLoader@@QAEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?SetChildNode@CTextFileLoader@@QAEHK@Z PROC		; CTextFileLoader::SetChildNode, COMDAT
; _this$ = ecx

; 362  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 363  : 	if (!m_pcurNode)

  00003	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00006	56		 push	 esi
  00007	85 c0		 test	 eax, eax
  00009	74 22		 je	 SHORT $LN9@SetChildNo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000b	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0000e	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 369  : 	if (dwIndex >= m_pcurNode->ChildNodeVector.size())

  00011	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	2b c2		 sub	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 369  : 	if (dwIndex >= m_pcurNode->ChildNodeVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	73 10		 jae	 SHORT $LN9@SetChildNo

; 373  : 	}
; 374  : 
; 375  : 	m_pcurNode = m_pcurNode->ChildNodeVector[dwIndex];

  0001d	8b 04 b2	 mov	 eax, DWORD PTR [edx+esi*4]
  00020	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 376  : 
; 377  : 	return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	5e		 pop	 esi

; 378  : }

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
$LN9@SetChildNo:

; 370  : 	{
; 371  : 		assert(!"Node index to set is too large to access!");
; 372  : 		return FALSE;

  0002d	33 c0		 xor	 eax, eax
  0002f	5e		 pop	 esi

; 378  : }

  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?SetChildNode@CTextFileLoader@@QAEHK@Z ENDP		; CTextFileLoader::SetChildNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z
_TEXT	SEGMENT
_szKey$ = -40						; size = 33
__$ArrayPad$ = -4					; size = 4
_c_rstrKeyHead$ = 8					; size = 4
_dwIndex$ = 12						; size = 4
?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z PROC ; CTextFileLoader::SetChildNode, COMDAT
; _this$ = ecx

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _c_rstrKeyHead$[ebp]
  00013	56		 push	 esi
  00014	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00016	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001a	72 02		 jb	 SHORT $LN6@SetChildNo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@SetChildNo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 357  : 	_snprintf(szKey, sizeof(szKey), "%s%02u", c_rstrKeyHead.c_str(), dwIndex);

  0001e	ff 75 0c	 push	 DWORD PTR _dwIndex$[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_06POANKNEN@?$CFs?$CF02u@
  00027	8d 45 d8	 lea	 eax, DWORD PTR _szKey$[ebp]
  0002a	6a 21		 push	 33			; 00000021H
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 __snprintf
  00032	83 c4 14	 add	 esp, 20			; 00000014H

; 358  : 
; 359  : 	return SetChildNode(szKey);

  00035	8d 45 d8	 lea	 eax, DWORD PTR _szKey$[ebp]
  00038	8b ce		 mov	 ecx, esi
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode

; 360  : }

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00043	33 cd		 xor	 ecx, ebp
  00045	5e		 pop	 esi
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ENDP ; CTextFileLoader::SetChildNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetChildNode@CTextFileLoader@@QAEHPBD@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_dwKey$1$ = 8						; size = 4
_c_szKey$ = 8						; size = 4
?SetChildNode@CTextFileLoader@@QAEHPBD@Z PROC		; CTextFileLoader::SetChildNode, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx

; 334  : 	if (!m_pcurNode)

  0000c	83 7b 70 00	 cmp	 DWORD PTR [ebx+112], 0
  00010	74 61		 je	 SHORT $LN3@SetChildNo

; 340  : 	DWORD dwKey=SGroupNode::GenNameKey(c_szKey, strlen(c_szKey));

  00012	8b 55 08	 mov	 edx, DWORD PTR _c_szKey$[ebp]
  00015	8b c2		 mov	 eax, edx
  00017	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL17@SetChildNo:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL17@SetChildNo
  00027	2b c6		 sub	 eax, esi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00030	8b 5b 70	 mov	 ebx, DWORD PTR [ebx+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 340  : 	DWORD dwKey=SGroupNode::GenNameKey(c_szKey, strlen(c_szKey));

  00033	8b d0		 mov	 edx, eax
  00035	83 c4 08	 add	 esp, 8
  00038	89 55 08	 mov	 DWORD PTR _dwKey$1$[ebp], edx

; 342  : 	for (DWORD i = 0; i < m_pcurNode->ChildNodeVector.size(); ++i)

  0003b	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003d	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00040	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00043	2b c8		 sub	 ecx, eax
  00045	c1 f9 02	 sar	 ecx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 342  : 	for (DWORD i = 0; i < m_pcurNode->ChildNodeVector.size(); ++i)

  00048	85 c9		 test	 ecx, ecx
  0004a	74 27		 je	 SHORT $LN3@SetChildNo
  0004c	0f 1f 40 00	 npad	 4
$LL4@SetChildNo:

; 343  : 	{
; 344  : 		TGroupNode * pGroupNode = m_pcurNode->ChildNodeVector[i];

  00050	8b 3c b0	 mov	 edi, DWORD PTR [eax+esi*4]

; 345  : 		if (pGroupNode->IsGroupNameKey(dwKey))

  00053	8b cf		 mov	 ecx, edi
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 ?IsGroupNameKey@SGroupNode@CTextFileLoader@@QAE_NK@Z ; CTextFileLoader::SGroupNode::IsGroupNameKey
  0005b	84 c0		 test	 al, al
  0005d	75 1f		 jne	 SHORT $LN13@SetChildNo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005f	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 342  : 	for (DWORD i = 0; i < m_pcurNode->ChildNodeVector.size(); ++i)

  00062	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00063	2b 43 28	 sub	 eax, DWORD PTR [ebx+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 342  : 	for (DWORD i = 0; i < m_pcurNode->ChildNodeVector.size(); ++i)

  00066	8b 55 08	 mov	 edx, DWORD PTR _dwKey$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00069	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 342  : 	for (DWORD i = 0; i < m_pcurNode->ChildNodeVector.size(); ++i)

  0006c	3b f0		 cmp	 esi, eax
  0006e	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00071	72 dd		 jb	 SHORT $LL4@SetChildNo
$LN3@SetChildNo:
  00073	5f		 pop	 edi

; 349  : 		}
; 350  : 	}
; 351  : 
; 352  : 	return FALSE;
; 353  : }

  00074	5e		 pop	 esi
  00075	33 c0		 xor	 eax, eax
  00077	5b		 pop	 ebx
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
$LN13@SetChildNo:

; 346  : 		{
; 347  : 			m_pcurNode = pGroupNode;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00081	89 78 70	 mov	 DWORD PTR [eax+112], edi

; 348  : 			return TRUE;

  00084	b8 01 00 00 00	 mov	 eax, 1
  00089	5f		 pop	 edi

; 349  : 		}
; 350  : 	}
; 351  : 
; 352  : 	return FALSE;
; 353  : }

  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
?SetChildNode@CTextFileLoader@@QAEHPBD@Z ENDP		; CTextFileLoader::SetChildNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetChildNodeCount@CTextFileLoader@@QAEKXZ
_TEXT	SEGMENT
?GetChildNodeCount@CTextFileLoader@@QAEKXZ PROC		; CTextFileLoader::GetChildNodeCount, COMDAT
; _this$ = ecx

; 323  : 	if (!m_pcurNode)

  00000	8b 49 70	 mov	 ecx, DWORD PTR [ecx+112]
  00003	85 c9		 test	 ecx, ecx
  00005	75 03		 jne	 SHORT $LN2@GetChildNo

; 324  : 	{
; 325  : 		assert(!"Node to access has not set!");
; 326  : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 330  : }

  00009	c3		 ret	 0
$LN2@GetChildNo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000a	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  0000d	2b 41 28	 sub	 eax, DWORD PTR [ecx+40]
  00010	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 330  : }

  00013	c3		 ret	 0
?GetChildNodeCount@CTextFileLoader@@QAEKXZ ENDP		; CTextFileLoader::GetChildNodeCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetTop@CTextFileLoader@@QAEXXZ
_TEXT	SEGMENT
?SetTop@CTextFileLoader@@QAEXXZ PROC			; CTextFileLoader::SetTop, COMDAT
; _this$ = ecx

; 318  : 	m_pcurNode = &m_GlobalNode;

  00000	8d 41 3c	 lea	 eax, DWORD PTR [ecx+60]
  00003	89 41 70	 mov	 DWORD PTR [ecx+112], eax

; 319  : }

  00006	c3		 ret	 0
?SetTop@CTextFileLoader@@QAEXXZ ENDP			; CTextFileLoader::SetTop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?IsEmpty@CTextFileLoader@@QAE_NXZ
_TEXT	SEGMENT
?IsEmpty@CTextFileLoader@@QAE_NXZ PROC			; CTextFileLoader::IsEmpty, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  00000	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  00004	0f 94 c0	 sete	 al
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 176  : }

  00007	c3		 ret	 0
?IsEmpty@CTextFileLoader@@QAE_NXZ ENDP			; CTextFileLoader::IsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetFileName@CTextFileLoader@@QAEPBDXZ
_TEXT	SEGMENT
?GetFileName@CTextFileLoader@@QAEPBDXZ PROC		; CTextFileLoader::GetFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 2145 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetFileNam
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 170  : 	return m_strFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetFileNam:

; 171  : }

  0000b	c3		 ret	 0
?GetFileName@CTextFileLoader@@QAEPBDXZ ENDP		; CTextFileLoader::GetFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?Load@CTextFileLoader@@QAE_NPBD@Z
_TEXT	SEGMENT
_pvData$ = -344						; size = 4
_kFile$ = -340						; size = 324
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?Load@CTextFileLoader@@QAE_NPBD@Z PROC			; CTextFileLoader::Load, COMDAT
; _this$ = ecx

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@CTextFileLoader@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx
  00030	8b 7d 08	 mov	 edi, DWORD PTR _c_szFileName$[ebp]

; 180  : 	m_strFileName = "";

  00033	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00036	6a 00		 push	 0
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0003d	8b cb		 mov	 ecx, ebx
  0003f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 183  : 	CMappedFile kFile;

  00044	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 184  : 	if (!CEterPackManager::Instance().Get(kFile, c_szFileName, &pvData))

  0004f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00055	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  0005b	50		 push	 eax
  0005c	57		 push	 edi
  0005d	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _kFile$[ebp]
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00070	84 c0		 test	 al, al
  00072	75 07		 jne	 SHORT $LN2@Load
  00074	32 db		 xor	 bl, bl
  00076	e9 99 00 00 00	 jmp	 $LN7@Load
$LN2@Load:

; 185  : 		return false;
; 186  : 
; 187  : 	if (m_dwBufCapacity<kFile.Size())

  0007b	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00081	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00086	39 46 24	 cmp	 DWORD PTR [esi+36], eax
  00089	73 2c		 jae	 SHORT $LN3@Load

; 188  : 	{
; 189  : 		m_dwBufCapacity=kFile.Size();

  0008b	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00091	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00096	89 46 24	 mov	 DWORD PTR [esi+36], eax

; 190  : 
; 191  : 		if (m_acBufData)

  00099	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0009c	85 c0		 test	 eax, eax
  0009e	74 09		 je	 SHORT $LN4@Load

; 192  : 			delete [] m_acBufData;

  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000a6	83 c4 04	 add	 esp, 4
$LN4@Load:

; 193  : 
; 194  : 		m_acBufData=new char[m_dwBufCapacity];

  000a9	ff 76 24	 push	 DWORD PTR [esi+36]
  000ac	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000b1	83 c4 04	 add	 esp, 4
  000b4	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN3@Load:

; 195  : 	}
; 196  : 
; 197  : 	m_dwBufSize=kFile.Size();

  000b7	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  000bd	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size

; 198  : 	memcpy(m_acBufData, pvData, m_dwBufSize);

  000c2	50		 push	 eax
  000c3	ff b5 a8 fe ff
	ff		 push	 DWORD PTR _pvData$[ebp]
  000c9	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000cc	ff 76 1c	 push	 DWORD PTR [esi+28]
  000cf	e8 00 00 00 00	 call	 _memcpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000d4	8b cf		 mov	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 198  : 	memcpy(m_acBufData, pvData, m_dwBufSize);

  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000d9	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  000dc	0f 1f 40 00	 npad	 4
$LL20@Load:
  000e0	8a 01		 mov	 al, BYTE PTR [ecx]
  000e2	41		 inc	 ecx
  000e3	84 c0		 test	 al, al
  000e5	75 f9		 jne	 SHORT $LL20@Load
  000e7	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000e9	51		 push	 ecx
  000ea	57		 push	 edi
  000eb	8b cb		 mov	 ecx, ebx
  000ed	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 203  : 	m_textFileLoader.Bind(m_dwBufSize, m_acBufData);

  000f2	ff 76 1c	 push	 DWORD PTR [esi+28]
  000f5	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  000f8	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  000ff	ff 76 20	 push	 DWORD PTR [esi+32]
  00102	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind

; 204  : 	return LoadGroup(&m_GlobalNode);

  00107	8d 46 3c	 lea	 eax, DWORD PTR [esi+60]
  0010a	8b ce		 mov	 ecx, esi
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?LoadGroup@CTextFileLoader@@IAE_NPAUSGroupNode@1@@Z ; CTextFileLoader::LoadGroup
  00112	8a d8		 mov	 bl, al
$LN7@Load:
  00114	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0011a	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0011f	8a c3		 mov	 al, bl

; 205  : }

  00121	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00124	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012b	59		 pop	 ecx
  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00132	33 cd		 xor	 ecx, ebp
  00134	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@CTextFileLoader@@QAE_NPBD@Z$0:
  00000	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?Load@CTextFileLoader@@QAE_NPBD@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@CTextFileLoader@@QAE_NPBD@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@CTextFileLoader@@QAE_NPBD@Z ENDP			; CTextFileLoader::Load
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?Destroy@CTextFileLoader@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CTextFileLoader@@QAEXXZ PROC			; CTextFileLoader::Destroy, COMDAT
; _this$ = ecx

; 135  : 	__DestroyGroupNodeVector();

  00000	e9 00 00 00 00	 jmp	 ?__DestroyGroupNodeVector@CTextFileLoader@@IAEXXZ ; CTextFileLoader::__DestroyGroupNodeVector
?Destroy@CTextFileLoader@@QAEXXZ ENDP			; CTextFileLoader::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ??1CTextFileLoader@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTextFileLoader@@UAE@XZ PROC				; CTextFileLoader::~CTextFileLoader, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextFileLoader@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextFileLoader@@6B@

; 154  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CTextFileLoader@@QAEXXZ ; CTextFileLoader::Destroy

; 155  : 
; 156  : 	if (m_acBufData)

  00030	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00033	85 c0		 test	 eax, eax
  00035	74 09		 je	 SHORT $LN2@CTextFileL

; 157  : 		delete [] m_acBufData;

  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0003d	83 c4 04	 add	 esp, 4
$LN2@CTextFileL:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00040	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00043	85 c9		 test	 ecx, ecx
  00045	74 27		 je	 SHORT $LN7@CTextFileL

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00047	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  0004a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00056	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00060	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0

; 1699 :             _Myend   = pointer();

  00067	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
$LN7@CTextFileL:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 158  : }

  0006e	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00071	e8 00 00 00 00	 call	 ??1SGroupNode@CTextFileLoader@@QAE@XZ
  00076	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00079	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0007e	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN15@CTextFileL

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 76 04	 push	 DWORD PTR [esi+4]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN15@CTextFileL:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00093	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a1	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 158  : }

  000a5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000af	59		 pop	 ecx
  000b0	5e		 pop	 esi
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
  000b5	cc		 int	 3
  000b6	cc		 int	 3
  000b7	cc		 int	 3
  000b8	cc		 int	 3
  000b9	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTextFileLoader@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextFileLoader@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextFileLoader@@UAE@XZ ENDP				; CTextFileLoader::~CTextFileLoader
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ??0CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTextFileLoader@@QAE@XZ PROC				; CTextFileLoader::CTextFileLoader, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextFileLoader@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00030	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00037	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003e	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 139  : {

  00042	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader
  00051	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00054	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00058	e8 00 00 00 00	 call	 ??0SGroupNode@CTextFileLoader@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005d	c7 46 74 00 00
	00 00		 mov	 DWORD PTR [esi+116], 0
  00064	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0
  0006b	c7 46 7c 00 00
	00 00		 mov	 DWORD PTR [esi+124], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 140  : 	SetTop();

  00072	8b ce		 mov	 ecx, esi
  00074	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00078	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0007d	6a 06		 push	 6
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_06FJKEMHGD@global@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 146  : 	m_GlobalNode.m_strGroupName = "global";

  00084	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00087	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  0008e	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00095	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0009c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 147  : 	m_GlobalNode.pParentNode = NULL;

  000a1	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  000a8	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  000ab	2b 46 74	 sub	 eax, DWORD PTR [esi+116]
  000ae	c1 f8 02	 sar	 eax, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  000b1	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  000b6	73 0d		 jae	 SHORT $LN35@CTextFileL

; 1307 :             if (_Newcapacity > max_size()) {
; 1308 :                 _Xlength();
; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  000b8	68 80 00 00 00	 push	 128			; 00000080H
  000bd	8d 4e 74	 lea	 ecx, DWORD PTR [esi+116]
  000c0	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@AAEXI@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Reallocate_exactly
$LN35@CTextFileL:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 150  : }

  000c5	8b c6		 mov	 eax, esi
  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d1	59		 pop	 ecx
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTextFileLoader@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CTextFileLoader@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$??0CTextFileLoader@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0001c	e9 00 00 00 00	 jmp	 ??1SGroupNode@CTextFileLoader@@QAE@XZ
__unwindfunclet$??0CTextFileLoader@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 74	 add	 ecx, 116		; 00000074H
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAE@XZ ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::~vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$??0CTextFileLoader@@QAE@XZ:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTextFileLoader@@QAE@XZ
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTextFileLoader@@QAE@XZ ENDP				; CTextFileLoader::CTextFileLoader
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?Cache@CTextFileLoader@@SAPAV1@PBD@Z
_TEXT	SEGMENT
__Loc$2 = -44						; size = 12
__Loc$3 = -44						; size = 12
$T4 = -32						; size = 12
$T5 = -28						; size = 8
$T6 = -20						; size = 8
__Myhead$7 = -16					; size = 4
$T8 = -16						; size = 4
$T9 = -16						; size = 4
_dwNameKey$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?Cache@CTextFileLoader@@SAPAV1@PBD@Z PROC		; CTextFileLoader::Cache, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Cache@CTextFileLoader@@SAPAV1@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 93   : 	DWORD dwNameKey=GetCRC32(c_szFileName, strlen(c_szFileName));

  00028	8b 55 08	 mov	 edx, DWORD PTR _c_szFileName$[ebp]
  0002b	8b ca		 mov	 ecx, edx
  0002d	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL136@Cache:
  00030	8a 01		 mov	 al, BYTE PTR [ecx]
  00032	41		 inc	 ecx
  00033	84 c0		 test	 al, al
  00035	75 f9		 jne	 SHORT $LL136@Cache
  00037	2b ce		 sub	 ecx, esi
  00039	51		 push	 ecx
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
  00040	83 c4 08	 add	 esp, 8
  00043	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00045	8d 45 f0	 lea	 eax, DWORD PTR _dwNameKey$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 93   : 	DWORD dwNameKey=GetCRC32(c_szFileName, strlen(c_szFileName));

  00048	89 5d f0	 mov	 DWORD PTR _dwNameKey$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0004b	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  00050	50		 push	 eax
  00051	8d 45 d4	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0005a	8b 75 dc	 mov	 esi, DWORD PTR __Loc$3[ebp+8]
  0005d	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00061	0f 85 a3 00 00
	00		 jne	 $LN2@Cache
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00067	3b 5e 10	 cmp	 ebx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0006a	0f 82 9a 00 00
	00		 jb	 $LN2@Cache

; 232  :         return this->_Ptr == _Right._Ptr;

  00070	39 35 00 00 00
	00		 cmp	 DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 95   : 	if (ms_kMap_dwNameKey_pkTextFileLoader.end()!=f)

  00076	0f 84 8e 00 00
	00		 je	 $LN2@Cache

; 96   : 	{
; 97   : 		if (!ms_isCacheMode)

  0007c	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?ms_isCacheMode@CTextFileLoader@@1_NA, 0 ; CTextFileLoader::ms_isCacheMode
  00083	75 66		 jne	 SHORT $LN133@Cache

; 98   : 		{
; 99   : 			delete f->second;

  00085	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00088	85 c9		 test	 ecx, ecx
  0008a	74 06		 je	 SHORT $LN5@Cache
  0008c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008e	6a 01		 push	 1
  00090	ff 10		 call	 DWORD PTR [eax]
$LN5@Cache:

; 100  : 
; 101  : 			CTextFileLoader* pkNewTextFileLoader=new CTextFileLoader;

  00092	68 80 00 00 00	 push	 128			; 00000080H
  00097	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009c	83 c4 04	 add	 esp, 4
  0009f	89 45 f0	 mov	 DWORD PTR $T9[ebp], eax
  000a2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a9	85 c0		 test	 eax, eax
  000ab	74 0b		 je	 SHORT $LN7@Cache
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader
  000b4	8b f8		 mov	 edi, eax
  000b6	eb 02		 jmp	 SHORT $LN8@Cache
$LN7@Cache:
  000b8	33 ff		 xor	 edi, edi
$LN8@Cache:

; 102  : 			pkNewTextFileLoader->Load(c_szFileName);

  000ba	8b 45 08	 mov	 eax, DWORD PTR _c_szFileName$[ebp]
  000bd	8b cf		 mov	 ecx, edi
  000bf	50		 push	 eax
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load

; 104  : 		}
; 105  : 		f->second->SetTop();

  000cc	8b cf		 mov	 ecx, edi
  000ce	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000d1	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop

; 106  : 		return f->second;

  000d6	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 114  : }

  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e3	59		 pop	 ecx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
$LN133@Cache:

; 103  : 			f->second=pkNewTextFileLoader;

  000eb	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]

; 104  : 		}
; 105  : 		f->second->SetTop();

  000ee	8b cf		 mov	 ecx, edi
  000f0	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop

; 106  : 		return f->second;

  000f5	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 114  : }

  000f8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00102	59		 pop	 ecx
  00103	5f		 pop	 edi
  00104	5e		 pop	 esi
  00105	5b		 pop	 ebx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
$LN2@Cache:

; 107  : 	}
; 108  : 
; 109  : 	CTextFileLoader* pkNewTextFileLoader=new CTextFileLoader;

  0010a	68 80 00 00 00	 push	 128			; 00000080H
  0010f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00114	83 c4 04	 add	 esp, 4
  00117	89 45 f0	 mov	 DWORD PTR $T8[ebp], eax
  0011a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00121	85 c0		 test	 eax, eax
  00123	74 0b		 je	 SHORT $LN9@Cache
  00125	8b c8		 mov	 ecx, eax
  00127	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader
  0012c	8b f8		 mov	 edi, eax
  0012e	eb 02		 jmp	 SHORT $LN10@Cache
$LN9@Cache:
  00130	33 ff		 xor	 edi, edi
$LN10@Cache:

; 110  : 	pkNewTextFileLoader->Load(c_szFileName);

  00132	8b 45 08	 mov	 eax, DWORD PTR _c_szFileName$[ebp]
  00135	8b cf		 mov	 ecx, edi
  00137	50		 push	 eax
  00138	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013f	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00144	8d 45 ec	 lea	 eax, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00147	89 5d ec	 mov	 DWORD PTR $T6[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0014a	50		 push	 eax
  0014b	8d 45 e0	 lea	 eax, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0014e	89 7d f0	 mov	 DWORD PTR $T6[ebp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00151	50		 push	 eax
  00152	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  00157	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTextFileLoader *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTextFileLoader *> >,0> >::_Find_lower_bound<unsigned long>
  0015c	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00160	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00163	66 0f d6 45 d4	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00168	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0016c	75 05		 jne	 SHORT $LN76@Cache
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0016e	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00171	73 76		 jae	 SHORT $LN122@Cache
$LN76@Cache:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00173	81 3d 04 00 00
	00 aa aa aa 0a	 cmp	 DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A+4, 178956970 ; 0aaaaaaaH
  0017d	74 7e		 je	 SHORT $LN140@Cache

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A
  00184	89 45 f0	 mov	 DWORD PTR __Myhead$7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00187	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0018e	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00190	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00197	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0019e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  001a3	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  001a5	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  001a8	50		 push	 eax
  001a9	56		 push	 esi
  001aa	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  001ad	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  001b0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  001b5	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  001b8	50		 push	 eax
  001b9	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  001c2	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  001c5	50		 push	 eax
  001c6	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> * &>
  001cf	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  001d2	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  001d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  001dd	56		 push	 esi
  001de	ff 75 d8	 push	 DWORD PTR __Loc$2[ebp+4]
  001e1	ff 75 d4	 push	 DWORD PTR __Loc$2[ebp]
  001e4	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Insert_node
$LN122@Cache:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 113  : 	return pkNewTextFileLoader;

  001e9	8b c7		 mov	 eax, edi

; 114  : }

  001eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f5	59		 pop	 ecx
  001f6	5f		 pop	 edi
  001f7	5e		 pop	 esi
  001f8	5b		 pop	 ebx
  001f9	8b e5		 mov	 esp, ebp
  001fb	5d		 pop	 ebp
  001fc	c3		 ret	 0
$LN140@Cache:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  001fd	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN138@Cache:
  00202	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$0:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T9[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$1:
  00012	68 80 00 00 00	 push	 128			; 00000080H
  00017	8b 45 f0	 mov	 eax, DWORD PTR $T8[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00020	83 c4 08	 add	 esp, 8
  00023	c3		 ret	 0
__unwindfunclet$?Cache@CTextFileLoader@@SAPAV1@PBD@Z$4:
  00024	8d 4d e4	 lea	 ecx, DWORD PTR $T5[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?Cache@CTextFileLoader@@SAPAV1@PBD@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Cache@CTextFileLoader@@SAPAV1@PBD@Z
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Cache@CTextFileLoader@@SAPAV1@PBD@Z ENDP		; CTextFileLoader::Cache
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetCacheMode@CTextFileLoader@@SAXXZ
_TEXT	SEGMENT
?SetCacheMode@CTextFileLoader@@SAXXZ PROC		; CTextFileLoader::SetCacheMode, COMDAT

; 118  : 	ms_isCacheMode=true;

  00000	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?ms_isCacheMode@CTextFileLoader@@1_NA, 1 ; CTextFileLoader::ms_isCacheMode

; 119  : }

  00007	c3		 ret	 0
?SetCacheMode@CTextFileLoader@@SAXXZ ENDP		; CTextFileLoader::SetCacheMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?DestroySystem@CTextFileLoader@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CTextFileLoader@@SAXXZ PROC		; CTextFileLoader::DestroySystem, COMDAT

; 122  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A
  00008	8b 37		 mov	 esi, DWORD PTR [edi]

; 232  :         return this->_Ptr == _Right._Ptr;

  0000a	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 125  : 		for (i=ms_kMap_dwNameKey_pkTextFileLoader.begin(); i!=ms_kMap_dwNameKey_pkTextFileLoader.end(); ++i)

  0000c	74 55		 je	 SHORT $LN3@DestroySys
  0000e	66 90		 npad	 2
$LL30@DestroySys:

; 126  : 			delete i->second;

  00010	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00013	85 c9		 test	 ecx, ecx
  00015	74 0c		 je	 SHORT $LN2@DestroySys
  00017	8b 01		 mov	 eax, DWORD PTR [ecx]
  00019	6a 01		 push	 1
  0001b	ff 10		 call	 DWORD PTR [eax]
  0001d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A
$LN2@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00023	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00026	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0002a	74 1d		 je	 SHORT $LN29@DestroySys

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0002c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00033	75 10		 jne	 SHORT $LN84@DestroySys
$LL27@DestroySys:
  00035	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00038	75 0b		 jne	 SHORT $LN84@DestroySys

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0003a	8b f0		 mov	 esi, eax
  0003c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00043	74 f0		 je	 SHORT $LL27@DestroySys
$LN84@DestroySys:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00045	8b f0		 mov	 esi, eax

; 59   :         } else {

  00047	eb 16		 jmp	 SHORT $LN34@DestroySys
$LN29@DestroySys:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00049	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  0004b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0004d	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00051	75 0c		 jne	 SHORT $LN34@DestroySys
$LL33@DestroySys:
  00053	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00055	8b f1		 mov	 esi, ecx
  00057	8b c8		 mov	 ecx, eax
  00059	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0005d	74 f4		 je	 SHORT $LL33@DestroySys
$LN34@DestroySys:

; 232  :         return this->_Ptr == _Right._Ptr;

  0005f	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 125  : 		for (i=ms_kMap_dwNameKey_pkTextFileLoader.begin(); i!=ms_kMap_dwNameKey_pkTextFileLoader.end(); ++i)

  00061	75 ad		 jne	 SHORT $LL30@DestroySys
$LN3@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00063	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00066	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0006a	75 2b		 jne	 SHORT $LN58@DestroySys
  0006c	0f 1f 40 00	 npad	 4
$LL57@DestroySys:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00070	ff 76 08	 push	 DWORD PTR [esi+8]
  00073	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  00078	68 00 00 00 00	 push	 OFFSET ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A ; CTextFileLoader::ms_kMap_dwNameKey_pkTextFileLoader
  0007d	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCTextFileLoader@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CTextFileLoader *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CTextFileLoader *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00082	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00084	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00086	6a 18		 push	 24			; 00000018H
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00091	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00095	74 d9		 je	 SHORT $LL57@DestroySys
$LN58@DestroySys:

; 1449 :         _Head->_Parent  = _Head;

  00097	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  0009a	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  0009c	89 7f 08	 mov	 DWORD PTR [edi+8], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 130  : 	SGroupNode::DestroySystem();

  0009f	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1452 :         _Scary->_Mysize = 0;

  000a0	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_kMap_dwNameKey_pkTextFileLoader@CTextFileLoader@@1V?$map@KPAVCTextFileLoader@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTextFileLoader@@@std@@@3@@std@@A+4, 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 130  : 	SGroupNode::DestroySystem();

  000aa	5e		 pop	 esi
  000ab	e9 00 00 00 00	 jmp	 ?DestroySystem@SGroupNode@CTextFileLoader@@SAXXZ ; CTextFileLoader::SGroupNode::DestroySystem
?DestroySystem@CTextFileLoader@@SAXXZ ENDP		; CTextFileLoader::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1SGroupNode@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
??1SGroupNode@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::SGroupNode::~SGroupNode, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx
  00003	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00006	85 c9		 test	 ecx, ecx
  00008	74 27		 je	 SHORT $LN6@SGroupNode

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  0000d	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000f	83 e0 fc	 and	 eax, -4			; fffffffcH
  00012	50		 push	 eax
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00019	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00023	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 1699 :             _Myend   = pointer();

  0002a	c7 47 30 00 00
	00 00		 mov	 DWORD PTR [edi+48], 0
$LN6@SGroupNode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00031	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00034	56		 push	 esi
  00035	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
  00038	8b ce		 mov	 ecx, esi
  0003a	ff 70 04	 push	 DWORD PTR [eax+4]
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00043	6a 20		 push	 32			; 00000020H
  00045	ff 36		 push	 DWORD PTR [esi]
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0004c	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0004f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00052	5e		 pop	 esi
  00053	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00056	72 0d		 jb	 SHORT $LN25@SGroupNode

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00058	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00059	50		 push	 eax
  0005a	ff 77 04	 push	 DWORD PTR [edi+4]
  0005d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00062	83 c4 08	 add	 esp, 8
$LN25@SGroupNode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00065	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006c	c7 47 18 0f 00
	00 00		 mov	 DWORD PTR [edi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00073	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  00077	5f		 pop	 edi
  00078	c3		 ret	 0
??1SGroupNode@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::SGroupNode::~SGroupNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??0SGroupNode@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SGroupNode@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::SGroupNode::SGroupNode, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SGroupNode@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002d	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00034	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003b	c6 43 04 00	 mov	 BYTE PTR [ebx+4], 0
  0003f	8d 7b 1c	 lea	 edi, DWORD PTR [ebx+28]
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00049	6a 20		 push	 32			; 00000020H
  0004b	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0004e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00054	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00060	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00062	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  0006a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006f	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00072	50		 push	 eax
  00073	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0007c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0007f	50		 push	 eax
  00080	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00089	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  0008f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00092	89 37		 mov	 DWORD PTR [edi], esi
  00094	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00096	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], 0
  0009d	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
  000a4	c7 43 30 00 00
	00 00		 mov	 DWORD PTR [ebx+48], 0
  000ab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b5	59		 pop	 ecx
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SGroupNode@CTextFileLoader@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??0SGroupNode@CTextFileLoader@@QAE@XZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SGroupNode@CTextFileLoader@@QAE@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SGroupNode@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::SGroupNode::SGroupNode
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?DestroySystem@SGroupNode@CTextFileLoader@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@SGroupNode@CTextFileLoader@@SAXXZ PROC	; CTextFileLoader::SGroupNode::DestroySystem, COMDAT

; 86   : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00001	8b 1d 08 00 00
	00		 mov	 ebx, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 86   : {

  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+4
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 38		 je	 SHORT $LN33@DestroySys
  00012	57		 push	 edi
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 110  : 			delete pkData;

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	85 ff		 test	 edi, edi
  00017	74 12		 je	 SHORT $LN18@DestroySys
  00019	8b cf		 mov	 ecx, edi
  0001b	e8 00 00 00 00	 call	 ??1SGroupNode@CTextFileLoader@@QAE@XZ
  00020	6a 34		 push	 52			; 00000034H
  00022	57		 push	 edi
  00023	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00028	83 c4 08	 add	 esp, 8
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002b	83 c6 04	 add	 esi, 4
  0002e	3b f3		 cmp	 esi, ebx
  00030	75 e1		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00032	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+4
  00037	5f		 pop	 edi
  00038	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 88   : }

  0003d	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+16
  00042	5e		 pop	 esi
  00043	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20, eax
  00048	5b		 pop	 ebx
  00049	c3		 ret	 0
$LN33@DestroySys:
  0004a	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+16
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  0004f	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+8, esi
  00055	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 88   : }

  00056	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20, eax
  0005b	5b		 pop	 ebx
  0005c	c3		 ret	 0
?DestroySystem@SGroupNode@CTextFileLoader@@SAXXZ ENDP	; CTextFileLoader::SGroupNode::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?Delete@SGroupNode@CTextFileLoader@@SAXPAU12@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkNode$ = 8						; size = 4
?Delete@SGroupNode@CTextFileLoader@@SAXPAU12@@Z PROC	; CTextFileLoader::SGroupNode::Delete, COMDAT

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 76   : 	pkNode->m_kMap_dwKey_kVct_stToken.clear();

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pkNode$[ebp]
  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1447 :         auto _Head = _Scary->_Myhead;

  00008	8b 73 1c	 mov	 esi, DWORD PTR [ebx+28]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 75   : {

  0000b	57		 push	 edi

; 76   : 	pkNode->m_kMap_dwKey_kVct_stToken.clear();

  0000c	8d 7b 1c	 lea	 edi, DWORD PTR [ebx+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0000f	8b cf		 mov	 ecx, edi
  00011	ff 76 04	 push	 DWORD PTR [esi+4]
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  0001a	89 76 04	 mov	 DWORD PTR [esi+4], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 78   : 	pkNode->m_strGroupName="";

  0001d	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1450 :         _Head->_Left    = _Head;

  00020	89 36		 mov	 DWORD PTR [esi], esi

; 1451 :         _Head->_Right   = _Head;

  00022	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 1452 :         _Scary->_Mysize = 0;

  00025	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 77   : 	pkNode->ChildNodeVector.clear();

  0002c	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0002f	6a 00		 push	 0
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 77   : 	pkNode->ChildNodeVector.clear();

  00036	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00039	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 79   : 	pkNode->m_dwGroupNameKey=0;

  0003e	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00044	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 80   : 	ms_kPool.Free(pkNode);

  00049	89 5d 08	 mov	 DWORD PTR _pkData$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0004c	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+24
  00052	74 0e		 je	 SHORT $LN16@Delete
  00054	5f		 pop	 edi

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00055	89 18		 mov	 DWORD PTR [eax], ebx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00057	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 81   : }

  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
$LN16@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00062	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00065	51		 push	 ecx
  00066	50		 push	 eax
  00067	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+16
  0006c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
  00071	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 81   : }

  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?Delete@SGroupNode@CTextFileLoader@@SAXPAU12@@Z ENDP	; CTextFileLoader::SGroupNode::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ PROC	; CTextFileLoader::SGroupNode::New, COMDAT

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 34		 push	 52			; 00000034H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0SGroupNode@CTextFileLoader@@QAE@XZ
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 71   : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 72   : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroupNode@CTextFileLoader@@@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAEPAPAUSGroupNode@CTextFileLoader@@QAPAU23@ABQAU23@@Z ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Emplace_reallocate<CTextFileLoader::SGroupNode * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 71   : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 72   : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@SGroupNode@CTextFileLoader@@2V?$CDynamicPool@USGroupNode@CTextFileLoader@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 72   : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ$0:
  00000	6a 34		 push	 52			; 00000034H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@SGroupNode@CTextFileLoader@@SAPAU12@XZ ENDP	; CTextFileLoader::SGroupNode::New
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@CAXXZ PROC ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@CAXXZ ENDP ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@AAEXI@Z PROC ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@YAPAPAUSGroupNode@CTextFileLoader@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroupNode@CTextFileLoader@@@0@@Z ; std::_Uninitialized_move<CTextFileLoader::SGroupNode * *,std::allocator<CTextFileLoader::SGroupNode *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAE@XZ PROC ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::~vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAUSGroupNode@CTextFileLoader@@V?$allocator@PAUSGroupNode@CTextFileLoader@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >::~vector<CTextFileLoader::SGroupNode *,std::allocator<CTextFileLoader::SGroupNode *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z
_TEXT	SEGMENT
$T2 = -56						; size = 16
__Loc$3 = -40						; size = 12
$T4 = -28						; size = 12
$T5 = -24						; size = 8
__Guard$6 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Rightlast$1$ = 8					; size = 4
__Myhead$7 = 8						; size = 4
_c_rstGroupName$ = 8					; size = 4
__Rightfirst$1$ = 12					; size = 4
_c_rkVct_stToken$ = 12					; size = 4
?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z PROC ; CTextFileLoader::SGroupNode::InsertTokenVector, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  0002b	8b 45 08	 mov	 eax, DWORD PTR _c_rstGroupName$[ebp]
  0002e	8b d0		 mov	 edx, eax

; 2145 :         if (_Large_string_engaged()) {

  00030	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00034	72 02		 jb	 SHORT $LN7@InsertToke

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00036	8b 10		 mov	 edx, DWORD PTR [eax]
$LN7@InsertToke:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 37   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00038	ff 70 10	 push	 DWORD PTR [eax+16]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 525  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rkVct_stToken$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00044	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00046	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00048	89 5d c8	 mov	 DWORD PTR $T2[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0004b	33 ff		 xor	 edi, edi
  0004d	89 75 cc	 mov	 DWORD PTR $T2[ebp+4], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 37   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00050	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00053	89 7d d0	 mov	 DWORD PTR $T2[ebp+8], edi

; 525  :         const pointer _Rightfirst = _Right_data._Myfirst;

  00056	8b 01		 mov	 eax, DWORD PTR [ecx]

; 526  :         const pointer _Rightlast  = _Right_data._Mylast;

  00058	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005b	89 75 d4	 mov	 DWORD PTR $T2[ebp+12], esi

; 525  :         const pointer _Rightfirst = _Right_data._Myfirst;

  0005e	89 45 0c	 mov	 DWORD PTR __Rightfirst$1$[ebp], eax

; 526  :         const pointer _Rightlast  = _Right_data._Mylast;

  00061	89 4d 08	 mov	 DWORD PTR __Rightlast$1$[ebp], ecx

; 527  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 528  :         if (_Rightfirst != _Rightlast) {

  00064	3b c1		 cmp	 eax, ecx
  00066	74 5a		 je	 SHORT $LN35@InsertToke

; 529  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  00068	2b c8		 sub	 ecx, eax
  0006a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0006f	f7 e9		 imul	 ecx
  00071	c1 fa 02	 sar	 edx, 2
  00074	8b c2		 mov	 eax, edx
  00076	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00079	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0007b	3d aa aa aa 0a	 cmp	 eax, 178956970		; 0aaaaaaaH
  00080	0f 87 6f 01 00
	00		 ja	 $LN134@InsertToke

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00086	8d 34 40	 lea	 esi, DWORD PTR [eax+eax*2]
  00089	c1 e6 03	 shl	 esi, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  00092	89 45 cc	 mov	 DWORD PTR $T2[ebp+4], eax

; 1644 :         _Mylast            = _Newvec;

  00095	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  00098	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  0009b	89 4d d4	 mov	 DWORD PTR $T2[ebp+12], ecx

; 530  :             _Tidy_guard<vector> _Guard{this};

  0009e	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000a1	89 4d ec	 mov	 DWORD PTR __Guard$6[ebp], ecx

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000a4	51		 push	 ecx
  000a5	50		 push	 eax
  000a6	ff 75 08	 push	 DWORD PTR __Rightlast$1$[ebp]

; 530  :             _Tidy_guard<vector> _Guard{this};

  000a9	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000ac	ff 75 0c	 push	 DWORD PTR __Rightfirst$1$[ebp]
  000af	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 531  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000b4	8b 75 cc	 mov	 esi, DWORD PTR $T2[ebp+4]
  000b7	8b f8		 mov	 edi, eax
  000b9	8b 5d c8	 mov	 ebx, DWORD PTR $T2[ebp]

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000bc	83 c4 14	 add	 esp, 20			; 00000014H

; 531  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  000bf	89 7d d0	 mov	 DWORD PTR $T2[ebp+8], edi
$LN35@InsertToke:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 39   : 	m_kMap_dwKey_kVct_stToken.insert(std::map<DWORD, CTokenVector>::value_type(dwGroupNameKey, c_rkVct_stToken));

  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  000c5	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000c8	50		 push	 eax
  000c9	8d 45 e4	 lea	 eax, DWORD PTR $T4[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 39   : 	m_kMap_dwKey_kVct_stToken.insert(std::map<DWORD, CTokenVector>::value_type(dwGroupNameKey, c_rkVct_stToken));

  000cc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000d3	83 c1 1c	 add	 ecx, 28			; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>
  000dc	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  000e0	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000e3	66 0f d6 45 d8	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000e8	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ec	75 09		 jne	 SHORT $LN47@InsertToke
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  000ee	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  000f1	0f 83 b2 00 00
	00		 jae	 $LN108@InsertToke
$LN47@InsertToke:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  000f7	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
  000fa	83 c3 1c	 add	 ebx, 28			; 0000001cH
  000fd	81 7b 04 ff ff
	ff 07		 cmp	 DWORD PTR [ebx+4], 134217727 ; 07ffffffH
  00104	0f 84 f0 00 00
	00		 je	 $LN135@InsertToke

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0010a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0010c	89 45 08	 mov	 DWORD PTR __Myhead$7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0010f	89 5d e8	 mov	 DWORD PTR $T5[ebp], ebx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00112	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00114	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00118	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0011f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

  00124	8b 4d c8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00127	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00137	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

  0013e	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 386  :         _Myfirst = _Right._Myfirst;

  00141	8b 45 cc	 mov	 eax, DWORD PTR $T2[ebp+4]
  00144	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 387  :         _Mylast  = _Right._Mylast;

  00147	8b 45 d0	 mov	 eax, DWORD PTR $T2[ebp+8]
  0014a	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 388  :         _Myend   = _Right._Myend;

  0014d	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+12]
  00150	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00153	8d 45 08	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  00156	50		 push	 eax
  00157	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 390  :         _Right._Myfirst = pointer();

  00158	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+4], 0

; 391  :         _Right._Mylast  = pointer();

  0015f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0

; 392  :         _Right._Myend   = pointer();

  00166	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0016d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00172	8d 45 08	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  00175	50		 push	 eax
  00176	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0017f	8d 45 08	 lea	 eax, DWORD PTR __Myhead$7[ebp]
  00182	50		 push	 eax
  00183	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
  0018c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  0018f	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00195	8b cb		 mov	 ecx, ebx
  00197	56		 push	 esi
  00198	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp+4]
  0019b	ff 75 d8	 push	 DWORD PTR __Loc$3[ebp]
  0019e	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Insert_node
  001a3	8b 7d d0	 mov	 edi, DWORD PTR $T2[ebp+8]
  001a6	8b 75 cc	 mov	 esi, DWORD PTR $T2[ebp+4]
$LN108@InsertToke:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  001a9	85 f6		 test	 esi, esi
  001ab	74 34		 je	 SHORT $LN124@InsertToke

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  001ad	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp+4]
  001b0	51		 push	 ecx
  001b1	57		 push	 edi
  001b2	56		 push	 esi
  001b3	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001b8	8b 4d d4	 mov	 ecx, DWORD PTR $T2[ebp+12]
  001bb	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001c0	8b 75 cc	 mov	 esi, DWORD PTR $T2[ebp+4]
  001c3	2b ce		 sub	 ecx, esi
  001c5	f7 e9		 imul	 ecx
  001c7	c1 fa 02	 sar	 edx, 2
  001ca	8b c2		 mov	 eax, edx
  001cc	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001cf	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d1	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001d4	c1 e0 03	 shl	 eax, 3
  001d7	50		 push	 eax
  001d8	56		 push	 esi
  001d9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001de	83 c4 14	 add	 esp, 20			; 00000014H
$LN124@InsertToke:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 40   : }

  001e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001eb	59		 pop	 ecx
  001ec	5f		 pop	 edi
  001ed	5e		 pop	 esi
  001ee	5b		 pop	 ebx
  001ef	8b e5		 mov	 esp, ebp
  001f1	5d		 pop	 ebp
  001f2	c2 08 00	 ret	 8
$LN134@InsertToke:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001f5	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN135@InsertToke:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  001fa	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN132@InsertToke:
  001ff	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Guard$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Tidy_guard<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$0:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
__unwindfunclet$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z$5:
  00010	8d 4d e8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertTokenVector@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z ENDP ; CTextFileLoader::SGroupNode::InsertTokenVector
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?IsExistTokenVector@SGroupNode@CTextFileLoader@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwGroupNameKey$ = 8					; size = 4
_c_rstGroupName$ = 8					; size = 4
?IsExistTokenVector@SGroupNode@CTextFileLoader@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CTextFileLoader::SGroupNode::IsExistTokenVector, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rstGroupName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 26   : {

  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00009	8b d0		 mov	 edx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  0000b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 26   : {

  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00013	72 02		 jb	 SHORT $LN7@IsExistTok

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00015	8b 10		 mov	 edx, DWORD PTR [eax]
$LN7@IsExistTok:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 27   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00017	ff 70 10	 push	 DWORD PTR [eax+16]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
  00020	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00023	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 27   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00026	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00028	8d 45 08	 lea	 eax, DWORD PTR _dwGroupNameKey$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 27   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  0002b	89 7d 08	 mov	 DWORD PTR _dwGroupNameKey$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0003b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003f	75 14		 jne	 SHORT $LN39@IsExistTok
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00041	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00044	72 0f		 jb	 SHORT $LN39@IsExistTok

; 232  :         return this->_Ptr == _Right._Ptr;

  00046	39 46 1c	 cmp	 DWORD PTR [esi+28], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 29   : 	if (m_kMap_dwKey_kVct_stToken.end()==m_kMap_dwKey_kVct_stToken.find(dwGroupNameKey))

  00049	74 0a		 je	 SHORT $LN39@IsExistTok

; 31   : 
; 32   : 	return true;

  0004b	5f		 pop	 edi
  0004c	b0 01		 mov	 al, 1

; 33   : }

  0004e	5e		 pop	 esi
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN39@IsExistTok:
  00055	5f		 pop	 edi

; 30   : 		return false;

  00056	32 c0		 xor	 al, al

; 33   : }

  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?IsExistTokenVector@SGroupNode@CTextFileLoader@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTextFileLoader::SGroupNode::IsExistTokenVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetTokenVector@SGroupNode@CTextFileLoader@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwGroupNameKey$ = 8					; size = 4
_c_rstGroupName$ = 8					; size = 4
?GetTokenVector@SGroupNode@CTextFileLoader@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z PROC ; CTextFileLoader::SGroupNode::GetTokenVector, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rstGroupName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 15   : {

  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00009	8b d0		 mov	 edx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  0000b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 15   : {

  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00013	72 02		 jb	 SHORT $LN7@GetTokenVe

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00015	8b 10		 mov	 edx, DWORD PTR [eax]
$LN7@GetTokenVe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 16   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00017	ff 70 10	 push	 DWORD PTR [eax+16]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
  00020	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00023	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 16   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  00026	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00028	8d 45 08	 lea	 eax, DWORD PTR _dwGroupNameKey$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 16   : 	DWORD dwGroupNameKey=GenNameKey(c_rstGroupName.c_str(), c_rstGroupName.length());

  0002b	89 75 08	 mov	 DWORD PTR _dwGroupNameKey$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0003b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003f	75 15		 jne	 SHORT $LN45@GetTokenVe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00041	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00044	72 10		 jb	 SHORT $LN45@GetTokenVe

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00046	39 47 1c	 cmp	 DWORD PTR [edi+28], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 19   : 	if (m_kMap_dwKey_kVct_stToken.end()==f)

  00049	74 0b		 je	 SHORT $LN45@GetTokenVe

; 21   : 
; 22   : 	return &f->second;

  0004b	5f		 pop	 edi
  0004c	83 c0 14	 add	 eax, 20			; 00000014H

; 23   : }

  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
$LN45@GetTokenVe:
  00056	5f		 pop	 edi

; 20   : 		return NULL;

  00057	33 c0		 xor	 eax, eax

; 23   : }

  00059	5e		 pop	 esi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?GetTokenVector@SGroupNode@CTextFileLoader@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ENDP ; CTextFileLoader::SGroupNode::GetTokenVector
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GetGroupName@SGroupNode@CTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?GetGroupName@SGroupNode@CTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CTextFileLoader::SGroupNode::GetGroupName, COMDAT
; _this$ = ecx

; 49   : 	return m_strGroupName;

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 50   : }

  00003	c3		 ret	 0
?GetGroupName@SGroupNode@CTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CTextFileLoader::SGroupNode::GetGroupName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?IsGroupNameKey@SGroupNode@CTextFileLoader@@QAE_NK@Z
_TEXT	SEGMENT
_dwGroupNameKey$ = 8					; size = 4
?IsGroupNameKey@SGroupNode@CTextFileLoader@@QAE_NK@Z PROC ; CTextFileLoader::SGroupNode::IsGroupNameKey, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 	if (dwGroupNameKey==m_dwGroupNameKey)

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwGroupNameKey$[ebp]
  00006	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00008	0f 94 c0	 sete	 al

; 55   : 		return true;
; 56   : 
; 57   : 	return false;
; 58   : }

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?IsGroupNameKey@SGroupNode@CTextFileLoader@@QAE_NK@Z ENDP ; CTextFileLoader::SGroupNode::IsGroupNameKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?SetGroupName@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_c_rstGroupName$ = 8					; size = 4
?SetGroupName@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CTextFileLoader::SGroupNode::SetGroupName, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rstGroupName$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 61   : {

  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 62   : 	m_strGroupName=c_rstGroupName;

  0000a	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2785 :         if (this != _STD addressof(_Right)) {

  0000d	3b f0		 cmp	 esi, eax
  0000f	74 15		 je	 SHORT $LN4@SetGroupNa

; 2153 :         return _BUF_SIZE <= _Myres;

  00011	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2144 :         const value_type* _Result = _Bx._Buf;

  00015	8b c8		 mov	 ecx, eax

; 2145 :         if (_Large_string_engaged()) {

  00017	72 02		 jb	 SHORT $LN9@SetGroupNa

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00019	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN9@SetGroupNa:

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0001b	ff 70 10	 push	 DWORD PTR [eax+16]
  0001e	51		 push	 ecx
  0001f	8b ce		 mov	 ecx, esi
  00021	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN4@SetGroupNa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 63   : 	stl_lowers(m_strGroupName);

  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stl_lowers
  0002c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00033	72 02		 jb	 SHORT $LN16@SetGroupNa

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00035	8b 36		 mov	 esi, DWORD PTR [esi]
$LN16@SetGroupNa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp

; 65   : 	m_dwGroupNameKey=GenNameKey(m_strGroupName.c_str(), m_strGroupName.length());

  00037	ff 77 14	 push	 DWORD PTR [edi+20]
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ; CTextFileLoader::SGroupNode::GenNameKey
  00040	83 c4 08	 add	 esp, 8
  00043	89 07		 mov	 DWORD PTR [edi], eax
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi

; 66   : }

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?SetGroupName@SGroupNode@CTextFileLoader@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTextFileLoader::SGroupNode::SetGroupName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\TextFileLoader.cpp
;	COMDAT ?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z
_TEXT	SEGMENT
_c_szGroupName$ = 8					; size = 4
_uGroupNameLen$ = 12					; size = 4
?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z PROC	; CTextFileLoader::SGroupNode::GenNameKey, COMDAT

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : }

  00003	5d		 pop	 ebp

; 44   : 	return GetCRC32(c_szGroupName, uGroupNameLen);

  00004	e9 00 00 00 00	 jmp	 ?GetCRC32@@YAKPBDI@Z	; GetCRC32
?GenNameKey@SGroupNode@CTextFileLoader@@SAKPBDI@Z ENDP	; CTextFileLoader::SGroupNode::GenNameKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1708 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1685 :     void _Tidy() noexcept { // free all storage

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1686 :         auto& _My_data    = _Mypair._Myval2;
; 1687 :         pointer& _Myfirst = _My_data._Myfirst;
; 1688 :         pointer& _Mylast  = _My_data._Mylast;
; 1689 :         pointer& _Myend   = _My_data._Myend;
; 1690 : 
; 1691 :         _My_data._Orphan_all();
; 1692 : 
; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN2@Tidy

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN2@Tidy:

; 1700 :         }
; 1701 :     }

  0004e	5f		 pop	 edi
  0004f	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00009	c1 e0 03	 shl	 eax, 3
  0000c	50		 push	 eax
  0000d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8

; 804  :     }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Left_size$ = 12					; size = 4
__Right$ = 16						; size = 4
__Right_size$ = 20					; size = 4
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  00006	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00007	8b 5d 14	 mov	 ebx, DWORD PTR __Right_size$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000a	56		 push	 esi

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Right$[ebp]

; 509  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

  0000e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Left_size$[ebp]
  00012	3b df		 cmp	 ebx, edi
  00014	8b cf		 mov	 ecx, edi
  00016	0f 42 cb	 cmovb	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00019	83 e9 04	 sub	 ecx, 4
  0001c	72 13		 jb	 SHORT $LN12@Traits_com
  0001e	66 90		 npad	 2
$LL13@Traits_com:
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	3b 06		 cmp	 eax, DWORD PTR [esi]
  00024	75 10		 jne	 SHORT $LN11@Traits_com
  00026	83 c2 04	 add	 edx, 4
  00029	83 c6 04	 add	 esi, 4
  0002c	83 e9 04	 sub	 ecx, 4
  0002f	73 ef		 jae	 SHORT $LL13@Traits_com
$LN12@Traits_com:
  00031	83 f9 fc	 cmp	 ecx, -4			; fffffffcH
  00034	74 34		 je	 SHORT $LN10@Traits_com
$LN11@Traits_com:
  00036	8a 02		 mov	 al, BYTE PTR [edx]
  00038	3a 06		 cmp	 al, BYTE PTR [esi]
  0003a	75 27		 jne	 SHORT $LN14@Traits_com
  0003c	83 f9 fd	 cmp	 ecx, -3			; fffffffdH
  0003f	74 29		 je	 SHORT $LN10@Traits_com
  00041	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00044	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00047	75 1a		 jne	 SHORT $LN14@Traits_com
  00049	83 f9 fe	 cmp	 ecx, -2			; fffffffeH
  0004c	74 1c		 je	 SHORT $LN10@Traits_com
  0004e	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00051	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00054	75 0d		 jne	 SHORT $LN14@Traits_com
  00056	83 f9 ff	 cmp	 ecx, -1
  00059	74 0f		 je	 SHORT $LN10@Traits_com
  0005b	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  0005e	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00061	74 07		 je	 SHORT $LN10@Traits_com
$LN14@Traits_com:
  00063	1b c0		 sbb	 eax, eax
  00065	83 c8 01	 or	 eax, 1
  00068	eb 02		 jmp	 SHORT $LN15@Traits_com
$LN10@Traits_com:
  0006a	33 c0		 xor	 eax, eax
$LN15@Traits_com:

; 510  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));
; 512  : 
; 513  :     if (_Ans != 0) {

  0006c	85 c0		 test	 eax, eax
  0006e	75 10		 jne	 SHORT $LN4@Traits_com

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00070	3b df		 cmp	 ebx, edi
  00072	76 08		 jbe	 SHORT $LN16@Traits_com

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	83 c8 ff	 or	 eax, -1
  00079	5b		 pop	 ebx
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN16@Traits_com:

; 518  :         return -1;
; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  0007c	1b c0		 sbb	 eax, eax
  0007e	f7 d8		 neg	 eax
$LN4@Traits_com:

; 522  :         return 1;
; 523  :     }
; 524  : 
; 525  :     return 0;
; 526  : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQBDI0I@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN11@basic_stri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@basic_stri:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN8@basic_stri

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN8@basic_stri:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00090	5e		 pop	 esi

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
