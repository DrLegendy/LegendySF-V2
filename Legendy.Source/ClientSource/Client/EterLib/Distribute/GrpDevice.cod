; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GRAPHICS_CAPS_CAN_NOT_DRAW_LINE@@3_NA		; GRAPHICS_CAPS_CAN_NOT_DRAW_LINE
PUBLIC	?GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW@@3_NA	; GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW
PUBLIC	?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA		; GRAPHICS_CAPS_HALF_SIZE_IMAGE
PUBLIC	?GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER@@3_NA ; GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER
PUBLIC	?GRAPHICS_CAPS_SOFTWARE_TILING@@3_NA		; GRAPHICS_CAPS_SOFTWARE_TILING
PUBLIC	?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A		; g_kD3DPP
PUBLIC	?g_isBrowserMode@@3_NA				; g_isBrowserMode
PUBLIC	?g_rcBrowser@@3UtagRECT@@A			; g_rcBrowser
_BSS	SEGMENT
?GRAPHICS_CAPS_CAN_NOT_DRAW_LINE@@3_NA DB 01H DUP (?)	; GRAPHICS_CAPS_CAN_NOT_DRAW_LINE
	ALIGN	4

?GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW@@3_NA DB 01H DUP (?)	; GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW
	ALIGN	4

?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA DB 01H DUP (?)	; GRAPHICS_CAPS_HALF_SIZE_IMAGE
	ALIGN	4

?GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER@@3_NA DB 01H DUP (?) ; GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER
	ALIGN	4

?GRAPHICS_CAPS_SOFTWARE_TILING@@3_NA DB 01H DUP (?)	; GRAPHICS_CAPS_SOFTWARE_TILING
	ALIGN	4

?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A DB 034H DUP (?)	; g_kD3DPP
?g_isBrowserMode@@3_NA DB 01H DUP (?)			; g_isBrowserMode
	ALIGN	4

?g_rcBrowser@@3UtagRECT@@A DB 010H DUP (?)		; g_rcBrowser
_BSS	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	___local_stdio_scanf_options
PUBLIC	_sscanf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CGraphicDevice@@QAE@XZ			; CGraphicDevice::CGraphicDevice
PUBLIC	??1CGraphicDevice@@UAE@XZ			; CGraphicDevice::~CGraphicDevice
PUBLIC	?InitBackBufferCount@CGraphicDevice@@QAEXI@Z	; CGraphicDevice::InitBackBufferCount
PUBLIC	?Destroy@CGraphicDevice@@QAEXXZ			; CGraphicDevice::Destroy
PUBLIC	?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z	; CGraphicDevice::Create
PUBLIC	?GetDeviceState@CGraphicDevice@@QAE?AW4EDeviceState@1@XZ ; CGraphicDevice::GetDeviceState
PUBLIC	?Reset@CGraphicDevice@@QAE_NXZ			; CGraphicDevice::Reset
PUBLIC	?EnableWebBrowserMode@CGraphicDevice@@QAEXABUtagRECT@@@Z ; CGraphicDevice::EnableWebBrowserMode
PUBLIC	?DisableWebBrowserMode@CGraphicDevice@@QAEXXZ	; CGraphicDevice::DisableWebBrowserMode
PUBLIC	?MoveWebBrowserRect@CGraphicDevice@@QAEXABUtagRECT@@@Z ; CGraphicDevice::MoveWebBrowserRect
PUBLIC	?ResizeBackBuffer@CGraphicDevice@@QAE_NII@Z	; CGraphicDevice::ResizeBackBuffer
PUBLIC	?RegisterWarningString@CGraphicDevice@@QAEXIPBD@Z ; CGraphicDevice::RegisterWarningString
PUBLIC	?__Initialize@CGraphicDevice@@IAEXXZ		; CGraphicDevice::__Initialize
PUBLIC	?__IsInDriverBlackList@CGraphicDevice@@IAE_NAAVD3D_CAdapterInfo@@@Z ; CGraphicDevice::__IsInDriverBlackList
PUBLIC	?__WarningMessage@CGraphicDevice@@IAEXPAUHWND__@@I@Z ; CGraphicDevice::__WarningMessage
PUBLIC	?__InitializeDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__InitializeDefaultIndexBufferList
PUBLIC	?__DestroyDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__DestroyDefaultIndexBufferList
PUBLIC	?__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ ; CGraphicDevice::__CreateDefaultIndexBufferList
PUBLIC	?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
PUBLIC	?__InitializePDTVertexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__InitializePDTVertexBufferList
PUBLIC	?__DestroyPDTVertexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__DestroyPDTVertexBufferList
PUBLIC	?__CreatePDTVertexBufferList@CGraphicDevice@@IAE_NXZ ; CGraphicDevice::__CreatePDTVertexBufferList
PUBLIC	?CreatePTStreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePTStreamVertexShader
PUBLIC	?CreatePNTStreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePNTStreamVertexShader
PUBLIC	?CreatePNT2StreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePNT2StreamVertexShader
PUBLIC	?CreateDoublePNTStreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreateDoublePNTStreamVertexShader
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
PUBLIC	??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z ; std::map<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
PUBLIC	??_GCGraphicDevice@@UAEPAXI@Z			; CGraphicDevice::`scalar deleting destructor'
PUBLIC	?EL3D_ConfirmDevice@@YAHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z ; EL3D_ConfirmDevice
PUBLIC	?GetMaxTextureWidth@@YAKXZ			; GetMaxTextureWidth
PUBLIC	?GetMaxTextureHeight@@YAKXZ			; GetMaxTextureHeight
PUBLIC	??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<unsigned int>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
PUBLIC	??$?0ABI$$Z$$V@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><unsigned int const &>
PUBLIC	??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<unsigned int const &>,std::tuple<>,0>
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_7CGraphicDevice@@6B@				; CGraphicDevice::`vftable'
PUBLIC	??_C@_07KGMMFLDN@Warning@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0L@NIHOAGKC@grpblk?4txt@			; `string'
PUBLIC	??_C@_08NLGDGEBC@?$CFs?5?$CFx?5?$CFx@		; `string'
PUBLIC	??_C@_0BE@JAEGAKLI@adapter?5?$CFd?5is?5EMPTY@	; `string'
PUBLIC	??_C@_0BM@LIHILKDJ@device?5?$CFd?0?5mode?5?$CFd?5is?5EMPTY@ ; `string'
PUBLIC	??_C@_04MAKEOOIM@3dfx@				; `string'
PUBLIC	??_C@_0JB@NCJOPOMN@IDirect3DDevice?4CreateDevice?5?9?5@ ; `string'
PUBLIC	??_C@_0GO@ICOCNPJJ@IDirect3DDevice?4CreateDevice?5?9?5@ ; `string'
PUBLIC	??_C@_0ID@GFNIEGEI@IDirect3DDevice?4CreateDevice?5?9?5@ ; `string'
PUBLIC	??_C@_0CI@IPGGGCFB@IDirect3DDevice?4CreateDevice?5?9?5@ ; `string'
PUBLIC	??_C@_0CJ@PKDINAHJ@IDirect3DDevice?4GetDeviceCaps?5?9@ ; `string'
PUBLIC	??_C@_03OJNODIHH@SIS@				; `string'
PUBLIC	??_R4CGraphicDevice@@6B@			; CGraphicDevice::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicDevice@@@8			; CGraphicDevice `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicDevice@@8				; CGraphicDevice::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicDevice@@8				; CGraphicDevice::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicDevice@@8			; CGraphicDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@3f000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__strnicmp:PROC
EXTRN	_strncpy:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_Direct3DCreate8@4:PROC
EXTRN	_D3DXCreateMatrixStack@8:PROC
EXTRN	_D3DXCreateCylinder@32:PROC
EXTRN	_D3DXCreateSphere@24:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fopen:PROC
EXTRN	___stdio_common_vsscanf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?Tracen@@YAXPBD@Z:PROC				; Tracen
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?GetString@D3D_SModeInfo@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; D3D_SModeInfo::GetString
EXTRN	?GetDesktopD3DDisplayModer@D3D_CAdapterInfo@@QAEAAU_D3DDISPLAYMODE@@XZ:PROC ; D3D_CAdapterInfo::GetDesktopD3DDisplayModer
EXTRN	?GetD3DModeInfop@D3D_CAdapterInfo@@QAEPAUD3D_SModeInfo@@II@Z:PROC ; D3D_CAdapterInfo::GetD3DModeInfop
EXTRN	?Find@D3D_CDisplayModeAutoDetector@@QAEHIIIHPAI00@Z:PROC ; D3D_CDisplayModeAutoDetector::Find
EXTRN	?Build@D3D_CDisplayModeAutoDetector@@QAEHAAUIDirect3D8@@P6AHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z@Z:PROC ; D3D_CDisplayModeAutoDetector::Build
EXTRN	?GetD3DAdapterInfop@D3D_CDisplayModeAutoDetector@@QAEPAVD3D_CAdapterInfo@@I@Z:PROC ; D3D_CDisplayModeAutoDetector::GetD3DAdapterInfop
EXTRN	?GetString@D3D_CDisplayModeAutoDetector@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; D3D_CDisplayModeAutoDetector::GetString
EXTRN	?GetAvailableTextureMemory@CGraphicBase@@SAKXZ:PROC ; CGraphicBase::GetAvailableTextureMemory
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z:PROC ; CStateManager::CStateManager
EXTRN	?SetDefaultState@CStateManager@@QAEXXZ:PROC	; CStateManager::SetDefaultState
EXTRN	??_ECGraphicDevice@@UAEPAXI@Z:PROC		; CGraphicDevice::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matIdentity
EXTRN	?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A:BYTE	; CGraphicBase::ms_matView
EXTRN	?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A:BYTE	; CGraphicBase::ms_matProj
EXTRN	?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matInverseView
EXTRN	?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matInverseViewYAxis
EXTRN	?ms_lpSphereMesh@CGraphicBase@@1PAUID3DXMesh@@A:DWORD ; CGraphicBase::ms_lpSphereMesh
EXTRN	?ms_lpCylinderMesh@CGraphicBase@@1PAUID3DXMesh@@A:DWORD ; CGraphicBase::ms_lpCylinderMesh
EXTRN	?ms_hLastResult@CGraphicBase@@1JA:DWORD		; CGraphicBase::ms_hLastResult
EXTRN	?ms_iWidth@CGraphicBase@@1HA:DWORD		; CGraphicBase::ms_iWidth
EXTRN	?ms_iHeight@CGraphicBase@@1HA:DWORD		; CGraphicBase::ms_iHeight
EXTRN	?ms_iD3DAdapterInfo@CGraphicBase@@1IA:DWORD	; CGraphicBase::ms_iD3DAdapterInfo
EXTRN	?ms_iD3DDevInfo@CGraphicBase@@1IA:DWORD		; CGraphicBase::ms_iD3DDevInfo
EXTRN	?ms_iD3DModeInfo@CGraphicBase@@1IA:DWORD	; CGraphicBase::ms_iD3DModeInfo
EXTRN	?ms_kD3DDetector@CGraphicBase@@1VD3D_CDisplayModeAutoDetector@@A:BYTE ; CGraphicBase::ms_kD3DDetector
EXTRN	?ms_hWnd@CGraphicBase@@1PAUHWND__@@A:DWORD	; CGraphicBase::ms_hWnd
EXTRN	?ms_hDC@CGraphicBase@@1PAUHDC__@@A:DWORD	; CGraphicBase::ms_hDC
EXTRN	?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A:DWORD	; CGraphicBase::ms_lpd3d
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A:DWORD ; CGraphicBase::ms_lpd3dMatStack
EXTRN	?ms_Viewport@CGraphicBase@@1U_D3DVIEWPORT8@@A:BYTE ; CGraphicBase::ms_Viewport
EXTRN	?ms_d3dCaps@CGraphicBase@@1U_D3DCAPS8@@A:BYTE	; CGraphicBase::ms_d3dCaps
EXTRN	?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A:BYTE ; CGraphicBase::ms_d3dPresentParameter
EXTRN	?ms_dwD3DBehavior@CGraphicBase@@1KA:DWORD	; CGraphicBase::ms_dwD3DBehavior
EXTRN	?ms_ptVS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_ptVS
EXTRN	?ms_pntVS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_pntVS
EXTRN	?ms_pnt2VS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_pnt2VS
EXTRN	?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matScreen0
EXTRN	?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matScreen1
EXTRN	?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matScreen2
EXTRN	?ms_dwWavingEndTime@CGraphicBase@@1KA:DWORD	; CGraphicBase::ms_dwWavingEndTime
EXTRN	?ms_dwFlashingEndTime@CGraphicBase@@1KA:DWORD	; CGraphicBase::ms_dwFlashingEndTime
EXTRN	?ms_bSupportDXT@CGraphicBase@@1_NA:BYTE		; CGraphicBase::ms_bSupportDXT
EXTRN	?ms_isLowTextureMemory@CGraphicBase@@1_NA:BYTE	; CGraphicBase::ms_isLowTextureMemory
EXTRN	?ms_isHighTextureMemory@CGraphicBase@@1_NA:BYTE	; CGraphicBase::ms_isHighTextureMemory
EXTRN	?ms_alpd3dPDTVB@CGraphicBase@@1PAPAUIDirect3DVertexBuffer8@@A:BYTE ; CGraphicBase::ms_alpd3dPDTVB
EXTRN	?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A:BYTE ; CGraphicBase::ms_alpd3dDefIB
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?s_MaxTextureWidth@@3KA DD 01H DUP (?)			; s_MaxTextureWidth
?s_MaxTextureHeight@@3KA DD 01H DUP (?)			; s_MaxTextureHeight
_BSS	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicDevice@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicDevice@@8 DD FLAT:??_R0?AVCGraphicDevice@@@8 ; CGraphicDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicDevice@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicDevice@@8
rdata$r	SEGMENT
??_R2CGraphicDevice@@8 DD FLAT:??_R1A@?0A@EA@CGraphicDevice@@8 ; CGraphicDevice::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicDevice@@8
rdata$r	SEGMENT
??_R3CGraphicDevice@@8 DD 00H				; CGraphicDevice::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicDevice@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicDevice@@@8
data$r	SEGMENT
??_R0?AVCGraphicDevice@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicDevice `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicDevice@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicDevice@@6B@
rdata$r	SEGMENT
??_R4CGraphicDevice@@6B@ DD 00H				; CGraphicDevice::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicDevice@@@8
	DD	FLAT:??_R3CGraphicDevice@@8
rdata$r	ENDS
;	COMDAT ?c_awFillCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awFillCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awFillCubeIndices
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	00H
	DW	06H
	DW	00H
	DW	04H
	DW	06H
	DW	00H
	DW	01H
	DW	04H
	DW	01H
	DW	05H
	DW	04H
	DW	01H
	DW	03H
	DW	05H
	DW	03H
	DW	07H
	DW	05H
	DW	03H
	DW	02H
	DW	07H
	DW	02H
	DW	06H
	DW	07H
	DW	04H
	DW	05H
	DW	06H
	DW	05H
	DW	07H
	DW	06H
CONST	ENDS
;	COMDAT ?c_awFillRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awFillRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awFillRectIndices
	DW	02H
	DW	01H
	DW	02H
	DW	03H
	DW	01H
CONST	ENDS
;	COMDAT ?c_awFillTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awFillTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awFillTriIndices
	DW	01H
	DW	02H
CONST	ENDS
;	COMDAT ?c_awLineCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awLineCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awLineCubeIndices
	DW	01H
	DW	00H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
	DW	00H
	DW	04H
	DW	01H
	DW	05H
	DW	02H
	DW	06H
	DW	03H
	DW	07H
	DW	04H
	DW	05H
	DW	04H
	DW	06H
	DW	05H
	DW	07H
	DW	06H
	DW	07H
CONST	ENDS
;	COMDAT ?c_awLineRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awLineRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awLineRectIndices
	DW	01H
	DW	00H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	03H
CONST	ENDS
;	COMDAT ?c_awLineTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awLineTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awLineTriIndices
	DW	01H
	DW	00H
	DW	02H
	DW	01H
	DW	02H
CONST	ENDS
;	COMDAT ?c_awLineIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
CONST	SEGMENT
?c_awLineIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB DW 00H ; `CGraphicDevice::__CreateDefaultIndexBufferList'::`2'::c_awLineIndices
	DW	01H
CONST	ENDS
;	COMDAT ??_C@_03OJNODIHH@SIS@
CONST	SEGMENT
??_C@_03OJNODIHH@SIS@ DB 'SIS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PKDINAHJ@IDirect3DDevice?4GetDeviceCaps?5?9@
CONST	SEGMENT
??_C@_0CJ@PKDINAHJ@IDirect3DDevice?4GetDeviceCaps?5?9@ DB 'IDirect3DDevic'
	DB	'e.GetDeviceCaps - ERROR %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IPGGGCFB@IDirect3DDevice?4CreateDevice?5?9?5@
CONST	SEGMENT
??_C@_0CI@IPGGGCFB@IDirect3DDevice?4CreateDevice?5?9?5@ DB 'IDirect3DDevi'
	DB	'ce.CreateDevice - ERROR %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0ID@GFNIEGEI@IDirect3DDevice?4CreateDevice?5?9?5@
CONST	SEGMENT
??_C@_0ID@GFNIEGEI@IDirect3DDevice?4CreateDevice?5?9?5@ DB 'IDirect3DDevi'
	DB	'ce.CreateDevice - ERROR D3DERR_OUTOFVIDEOMEMORY', 0aH, 'Direc'
	DB	't3D does not have enough display memory to perform the operat'
	DB	'ion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GO@ICOCNPJJ@IDirect3DDevice?4CreateDevice?5?9?5@
CONST	SEGMENT
??_C@_0GO@ICOCNPJJ@IDirect3DDevice?4CreateDevice?5?9?5@ DB 'IDirect3DDevi'
	DB	'ce.CreateDevice - ERROR D3DERR_NOTAVAILABLE', 0aH, 'This devi'
	DB	'ce does not support the queried technique. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JB@NCJOPOMN@IDirect3DDevice?4CreateDevice?5?9?5@
CONST	SEGMENT
??_C@_0JB@NCJOPOMN@IDirect3DDevice?4CreateDevice?5?9?5@ DB 'IDirect3DDevi'
	DB	'ce.CreateDevice - ERROR D3DERR_INVALIDCALL', 0aH, 'The method'
	DB	' call is invalid. For example, a method''s parameter may have'
	DB	' an invalid value.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MAKEOOIM@3dfx@
CONST	SEGMENT
??_C@_04MAKEOOIM@3dfx@ DB '3dfx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LIHILKDJ@device?5?$CFd?0?5mode?5?$CFd?5is?5EMPTY@
CONST	SEGMENT
??_C@_0BM@LIHILKDJ@device?5?$CFd?0?5mode?5?$CFd?5is?5EMPTY@ DB 'device %d'
	DB	', mode %d is EMPTY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JAEGAKLI@adapter?5?$CFd?5is?5EMPTY@
CONST	SEGMENT
??_C@_0BE@JAEGAKLI@adapter?5?$CFd?5is?5EMPTY@ DB 'adapter %d is EMPTY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLGDGEBC@?$CFs?5?$CFx?5?$CFx@
CONST	SEGMENT
??_C@_08NLGDGEBC@?$CFs?5?$CFx?5?$CFx@ DB '%s %x %x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIHOAGKC@grpblk?4txt@
CONST	SEGMENT
??_C@_0L@NIHOAGKC@grpblk?4txt@ DB 'grpblk.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning@
CONST	SEGMENT
??_C@_07KGMMFLDN@Warning@ DB 'Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicDevice@@6B@
CONST	SEGMENT
??_7CGraphicDevice@@6B@ DD FLAT:??_R4CGraphicDevice@@6B@ ; CGraphicDevice::`vftable'
	DD	FLAT:??_ECGraphicDevice@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABI@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABI@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABI@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABI@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABI@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABI$$V@?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@_N@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABI$$V@?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@_N@1@ABI@Z$2
__ehfuncinfo$??$_Try_emplace@ABI$$V@?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@_N@1@ABI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABI$$V@?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@_N@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z$2
__ehfuncinfo$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$2
__ehfuncinfo$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGraphicDevice@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicDevice@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicDevice@@QAE@XZ$0
__ehfuncinfo$??0CGraphicDevice@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGraphicDevice@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<unsigned int const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b 00		 mov	 eax, DWORD PTR [eax]
  0000e	89 01		 mov	 DWORD PTR [ecx], eax
  00010	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00012	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00019	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00020	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<unsigned int const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0ABI$$Z$$V@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
_this$ = -8						; size = 4
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABI$$Z$$V@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z PROC ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><unsigned int const &>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000c	89 75 f8	 mov	 DWORD PTR _this$[ebp], esi
  0000f	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  00013	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00016	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$?0V?$tuple@ABI@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABI@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><std::tuple<unsigned int const &>,std::tuple<>,0>
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$?0ABI$$Z$$V@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 7d 0c	 mov	 edi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00011	75 51		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	56		 push	 esi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 77 08	 push	 DWORD PTR [edi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b f7		 mov	 esi, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00027	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0002a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002d	72 0d		 jb	 SHORT $LN21@Erase_tree

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0002f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00030	50		 push	 eax
  00031	ff 76 14	 push	 DWORD PTR [esi+20]
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00039	83 c4 08	 add	 esp, 8
$LN21@Erase_tree:

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003c	6a 2c		 push	 44			; 0000002cH
  0003e	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00059	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0005c	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00060	74 b6		 je	 SHORT $LL2@Erase_tree
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
$LN3@Erase_tree:
  00064	5f		 pop	 edi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 2c		 push	 44			; 0000002cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<unsigned int>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?GetMaxTextureHeight@@YAKXZ
_TEXT	SEGMENT
?GetMaxTextureHeight@@YAKXZ PROC			; GetMaxTextureHeight, COMDAT

; 304  : 	return s_MaxTextureHeight;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_MaxTextureHeight@@3KA

; 305  : }

  00005	c3		 ret	 0
?GetMaxTextureHeight@@YAKXZ ENDP			; GetMaxTextureHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?GetMaxTextureWidth@@YAKXZ
_TEXT	SEGMENT
?GetMaxTextureWidth@@YAKXZ PROC				; GetMaxTextureWidth, COMDAT

; 299  : 	return s_MaxTextureWidth;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_MaxTextureWidth@@3KA

; 300  : }

  00005	c3		 ret	 0
?GetMaxTextureWidth@@YAKXZ ENDP				; GetMaxTextureWidth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?EL3D_ConfirmDevice@@YAHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z
_TEXT	SEGMENT
_rkD3DCaps$ = 8						; size = 4
_uBehavior$ = 12					; size = 4
___formal$ = 16						; size = 4
?EL3D_ConfirmDevice@@YAHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z PROC ; EL3D_ConfirmDevice, COMDAT

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 264  : 	if (uBehavior & D3DCREATE_PUREDEVICE)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _uBehavior$[ebp]
  00006	a8 10		 test	 al, 16			; 00000010H
  00008	75 27		 jne	 SHORT $LN11@EL3D_Confi

; 265  :         return FALSE;
; 266  : 
; 267  : 	if (uBehavior & D3DCREATE_HARDWARE_VERTEXPROCESSING)

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _rkD3DCaps$[ebp]
  0000d	a8 40		 test	 al, 64			; 00000040H
  0000f	74 28		 je	 SHORT $LN9@EL3D_Confi

; 268  : 	{
; 269  : 		// DirectionalLight
; 270  : 		if (!(rkD3DCaps.VertexProcessingCaps & D3DVTXPCAPS_DIRECTIONALLIGHTS))

  00011	8b 81 9c 00 00
	00		 mov	 eax, DWORD PTR [ecx+156]
  00017	a8 08		 test	 al, 8
  00019	74 16		 je	 SHORT $LN11@EL3D_Confi

; 271  : 			return FALSE;
; 272  : 
; 273  : 		// PositionalLight
; 274  : 		if (!(rkD3DCaps.VertexProcessingCaps & D3DVTXPCAPS_POSITIONALLIGHTS))

  0001b	a8 10		 test	 al, 16			; 00000010H
  0001d	74 12		 je	 SHORT $LN11@EL3D_Confi

; 275  : 			return FALSE;
; 276  : 
; 277  : 		// Software T&L Support - ATI NOT SUPPORT CLIP, USE DIRECTX SOFTWARE PROCESSING CLIPPING
; 278  : 		if (GRAPHICS_CAPS_SOFTWARE_TILING)

  0001f	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?GRAPHICS_CAPS_SOFTWARE_TILING@@3_NA, 0 ; GRAPHICS_CAPS_SOFTWARE_TILING
  00026	74 0d		 je	 SHORT $LN6@EL3D_Confi

; 279  : 		{
; 280  : 			if (!(rkD3DCaps.PrimitiveMiscCaps & D3DPMISCCAPS_CLIPTLVERTS))

  00028	f7 41 20 00 02
	00 00		 test	 DWORD PTR [ecx+32], 512	; 00000200H
  0002f	75 08		 jne	 SHORT $LN9@EL3D_Confi
$LN11@EL3D_Confi:

; 287  : 				return FALSE;

  00031	33 c0		 xor	 eax, eax

; 295  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN6@EL3D_Confi:

; 281  : 				return FALSE;
; 282  : 		}
; 283  : 		else
; 284  : 		{
; 285  : 			// Shadow/Terrain
; 286  : 			if (!(rkD3DCaps.VertexProcessingCaps & D3DVTXPCAPS_TEXGEN))

  00035	a8 01		 test	 al, 1
  00037	74 f8		 je	 SHORT $LN11@EL3D_Confi
$LN9@EL3D_Confi:

; 288  : 		}
; 289  : 	}
; 290  : 
; 291  : 	s_MaxTextureWidth = rkD3DCaps.MaxTextureWidth;

  00039	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  0003c	a3 00 00 00 00	 mov	 DWORD PTR ?s_MaxTextureWidth@@3KA, eax

; 292  : 	s_MaxTextureHeight = rkD3DCaps.MaxTextureHeight;

  00041	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00044	a3 00 00 00 00	 mov	 DWORD PTR ?s_MaxTextureHeight@@3KA, eax

; 293  : 
; 294  : 	return TRUE;

  00049	b8 01 00 00 00	 mov	 eax, 1

; 295  : }

  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?EL3D_ConfirmDevice@@YAHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z ENDP ; EL3D_ConfirmDevice
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicDevice@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicDevice@@UAEPAXI@Z PROC			; CGraphicDevice::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicDevice@@UAE@XZ ; CGraphicDevice::~CGraphicDevice
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 14		 push	 20			; 00000014H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicDevice@@UAEPAXI@Z ENDP			; CGraphicDevice::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
;	COMDAT ??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z
_TEXT	SEGMENT
__Loc$3 = -32						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Myhead$ = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z PROC ; std::map<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[], COMDAT
; _this$ = ecx

; 324  :     mapped_type& operator[](const key_type& _Keyval) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0002a	8b 5d 08	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  0002d	8d 45 e0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<unsigned int>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00037	8b 55 e8	 mov	 edx, DWORD PTR __Loc$3[ebp+8]
  0003a	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0003e	75 07		 jne	 SHORT $LN4@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00040	8b 03		 mov	 eax, DWORD PTR [ebx]
  00042	3b 42 10	 cmp	 eax, DWORD PTR [edx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00045	73 7e		 jae	 SHORT $LN3@operator
$LN4@operator:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00047	81 7f 04 5d 74
	d1 05		 cmp	 DWORD PTR [edi+4], 97612893 ; 05d1745dH
  0004e	0f 84 88 00 00
	00		 je	 $LN91@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00054	8b 07		 mov	 eax, DWORD PTR [edi]
  00056	89 45 08	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00059	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005c	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00065	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006c	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00071	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00073	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00076	51		 push	 ecx
  00077	8b c4		 mov	 eax, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

  00079	89 18		 mov	 DWORD PTR [eax], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0007b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ??$?0ABI$$Z$$V@?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABI@1@V?$tuple@$$V@1@@Z ; std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><unsigned int const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00088	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  0008b	50		 push	 eax
  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00092	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00095	50		 push	 eax
  00096	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0009f	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000a2	50		 push	 eax
  000a3	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
  000ac	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  000af	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b5	8b cf		 mov	 ecx, edi
  000b7	56		 push	 esi
  000b8	ff 75 e4	 push	 DWORD PTR __Loc$3[ebp+4]
  000bb	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp]
  000be	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
  000c3	8b d0		 mov	 edx, eax
$LN3@operator:

; 325  :         return _Try_emplace(_Keyval).first->_Myval.second;

  000c5	8d 42 14	 lea	 eax, DWORD PTR [edx+20]

; 326  :     }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN91@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  000dc	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN89@operator:
  000e1	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z ENDP ; std::map<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?CreateDoublePNTStreamVertexShader@CGraphicDevice@@IAEKXZ
_TEXT	SEGMENT
_ret$ = -44						; size = 4
_declVector$ = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
?CreateDoublePNTStreamVertexShader@CGraphicDevice@@IAEKXZ PROC ; CGraphicDevice::CreateDoublePNTStreamVertexShader, COMDAT
; _this$ = ecx

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 205  : 	assert(ms_lpd3dDevice != NULL);
; 206  : 
; 207  : 	DWORD declVector[] =
; 208  : 	{
; 209  : 		D3DVSD_STREAM(0),
; 210  : 		D3DVSD_REG(0, D3DVSDT_FLOAT3),
; 211  : 		D3DVSD_REG(3, D3DVSDT_FLOAT3),
; 212  : 		D3DVSD_REG(7, D3DVSDT_FLOAT2),
; 213  : 		D3DVSD_STREAM(1),
; 214  : 		D3DVSD_REG(D3DVSDE_POSITION2, D3DVSDT_FLOAT3),
; 215  : 		D3DVSD_REG(D3DVSDE_NORMAL2, D3DVSDT_FLOAT3),
; 216  : 		D3DVSD_REG(D3DVSDE_TEXCOORD1, D3DVSDT_FLOAT2),
; 217  : 		D3DVSD_END()
; 218  : 	};
; 219  : 
; 220  : 	DWORD ret;
; 221  : 
; 222  : 	if (FAILED(ms_lpd3dDevice->CreateVertexShader(&declVector[0], NULL, &ret, 0)))

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	8d 55 d4	 lea	 edx, DWORD PTR _ret$[ebp]
  00018	6a 00		 push	 0
  0001a	52		 push	 edx
  0001b	6a 00		 push	 0
  0001d	c7 45 d8 00 00
	00 20		 mov	 DWORD PTR _declVector$[ebp], 536870912 ; 20000000H
  00024	8d 55 d8	 lea	 edx, DWORD PTR _declVector$[ebp]
  00027	c7 45 dc 00 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+4], 1073872896 ; 40020000H
  0002e	c7 45 e0 03 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+8], 1073872899 ; 40020003H
  00035	c7 45 e4 07 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+12], 1073807367 ; 40010007H
  0003c	c7 45 e8 01 00
	00 20		 mov	 DWORD PTR _declVector$[ebp+16], 536870913 ; 20000001H
  00043	c7 45 ec 0f 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+20], 1073872911 ; 4002000fH
  0004a	c7 45 f0 10 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+24], 1073872912 ; 40020010H
  00051	c7 45 f4 08 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+28], 1073807368 ; 40010008H
  00058	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _declVector$[ebp+32], -1
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	ff 91 2c 01 00
	00		 call	 DWORD PTR [ecx+300]
  00069	8b 4d d4	 mov	 ecx, DWORD PTR _ret$[ebp]
  0006c	33 d2		 xor	 edx, edx
  0006e	85 c0		 test	 eax, eax
  00070	0f 48 ca	 cmovs	 ecx, edx
  00073	8b c1		 mov	 eax, ecx

; 223  : 		return 0;
; 224  : 
; 225  : 	return ret;
; 226  : }

  00075	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00078	33 cd		 xor	 ecx, ebp
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?CreateDoublePNTStreamVertexShader@CGraphicDevice@@IAEKXZ ENDP ; CGraphicDevice::CreateDoublePNTStreamVertexShader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?CreatePNT2StreamVertexShader@CGraphicDevice@@IAEKXZ
_TEXT	SEGMENT
_ret$ = -32						; size = 4
_declVector$ = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
?CreatePNT2StreamVertexShader@CGraphicDevice@@IAEKXZ PROC ; CGraphicDevice::CreatePNT2StreamVertexShader, COMDAT
; _this$ = ecx

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 161  : 	assert(ms_lpd3dDevice != NULL);
; 162  : 
; 163  : 	DWORD declVector[] =
; 164  : 	{
; 165  : 		D3DVSD_STREAM(0),
; 166  : 		D3DVSD_REG(0, D3DVSDT_FLOAT3),
; 167  : 		D3DVSD_REG(3, D3DVSDT_FLOAT3),
; 168  : 		D3DVSD_REG(7, D3DVSDT_FLOAT2),
; 169  : 		D3DVSD_REG(D3DVSDE_TEXCOORD1, D3DVSDT_FLOAT2),
; 170  : //		D3DVSD_STREAM(1),
; 171  : 		D3DVSD_END()
; 172  : 	};
; 173  : 
; 174  : 	DWORD ret;
; 175  : 
; 176  : 	if (FAILED(ms_lpd3dDevice->CreateVertexShader(&declVector[0], NULL, &ret, 0)))

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	8d 55 e0	 lea	 edx, DWORD PTR _ret$[ebp]
  00018	6a 00		 push	 0
  0001a	52		 push	 edx
  0001b	6a 00		 push	 0
  0001d	c7 45 e4 00 00
	00 20		 mov	 DWORD PTR _declVector$[ebp], 536870912 ; 20000000H
  00024	8d 55 e4	 lea	 edx, DWORD PTR _declVector$[ebp]
  00027	c7 45 e8 00 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+4], 1073872896 ; 40020000H
  0002e	c7 45 ec 03 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+8], 1073872899 ; 40020003H
  00035	c7 45 f0 07 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+12], 1073807367 ; 40010007H
  0003c	c7 45 f4 08 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+16], 1073807368 ; 40010008H
  00043	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _declVector$[ebp+20], -1
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	52		 push	 edx
  0004d	50		 push	 eax
  0004e	ff 91 2c 01 00
	00		 call	 DWORD PTR [ecx+300]
  00054	8b 4d e0	 mov	 ecx, DWORD PTR _ret$[ebp]
  00057	33 d2		 xor	 edx, edx
  00059	85 c0		 test	 eax, eax
  0005b	0f 48 ca	 cmovs	 ecx, edx
  0005e	8b c1		 mov	 eax, ecx

; 177  : 		return 0;
; 178  : 
; 179  : 	return ret;
; 180  : }

  00060	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00063	33 cd		 xor	 ecx, ebp
  00065	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?CreatePNT2StreamVertexShader@CGraphicDevice@@IAEKXZ ENDP ; CGraphicDevice::CreatePNT2StreamVertexShader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?CreatePNTStreamVertexShader@CGraphicDevice@@IAEKXZ
_TEXT	SEGMENT
_ret$ = -28						; size = 4
_declVector$ = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
?CreatePNTStreamVertexShader@CGraphicDevice@@IAEKXZ PROC ; CGraphicDevice::CreatePNTStreamVertexShader, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 140  : 	assert(ms_lpd3dDevice != NULL);
; 141  : 
; 142  : 	DWORD declVector[] =
; 143  : 	{
; 144  : 		D3DVSD_STREAM(0),
; 145  : 		D3DVSD_REG(0, D3DVSDT_FLOAT3),
; 146  : 		D3DVSD_REG(3, D3DVSDT_FLOAT3),
; 147  : 		D3DVSD_REG(7, D3DVSDT_FLOAT2),
; 148  : 		D3DVSD_END()
; 149  : 	};
; 150  : 
; 151  : 	DWORD ret;
; 152  : 
; 153  : 	if (FAILED(ms_lpd3dDevice->CreateVertexShader(&declVector[0], NULL, &ret, 0)))

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	8d 55 e4	 lea	 edx, DWORD PTR _ret$[ebp]
  00018	6a 00		 push	 0
  0001a	52		 push	 edx
  0001b	6a 00		 push	 0
  0001d	c7 45 e8 00 00
	00 20		 mov	 DWORD PTR _declVector$[ebp], 536870912 ; 20000000H
  00024	8d 55 e8	 lea	 edx, DWORD PTR _declVector$[ebp]
  00027	c7 45 ec 00 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+4], 1073872896 ; 40020000H
  0002e	c7 45 f0 03 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+8], 1073872899 ; 40020003H
  00035	c7 45 f4 07 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+12], 1073807367 ; 40010007H
  0003c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _declVector$[ebp+16], -1
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	50		 push	 eax
  00047	ff 91 2c 01 00
	00		 call	 DWORD PTR [ecx+300]
  0004d	8b 4d e4	 mov	 ecx, DWORD PTR _ret$[ebp]
  00050	33 d2		 xor	 edx, edx
  00052	85 c0		 test	 eax, eax
  00054	0f 48 ca	 cmovs	 ecx, edx
  00057	8b c1		 mov	 eax, ecx

; 154  : 		return 0;
; 155  : 
; 156  : 	return ret;
; 157  : }

  00059	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005c	33 cd		 xor	 ecx, ebp
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?CreatePNTStreamVertexShader@CGraphicDevice@@IAEKXZ ENDP ; CGraphicDevice::CreatePNTStreamVertexShader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?CreatePTStreamVertexShader@CGraphicDevice@@IAEKXZ
_TEXT	SEGMENT
_ret$ = -28						; size = 4
_declVector$ = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
?CreatePTStreamVertexShader@CGraphicDevice@@IAEKXZ PROC	; CGraphicDevice::CreatePTStreamVertexShader, COMDAT
; _this$ = ecx

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 184  : 	assert(ms_lpd3dDevice != NULL);
; 185  : 
; 186  : 	DWORD declVector[] =
; 187  : 	{
; 188  : 		D3DVSD_STREAM(0),
; 189  : 		D3DVSD_REG(0, D3DVSDT_FLOAT3),
; 190  : 		D3DVSD_STREAM(1),
; 191  : 		D3DVSD_REG(7, D3DVSDT_FLOAT2),
; 192  : 		D3DVSD_END()
; 193  : 	};
; 194  : 
; 195  : 	DWORD ret;
; 196  : 
; 197  : 	if (FAILED(ms_lpd3dDevice->CreateVertexShader(&declVector[0], NULL, &ret, 0)))

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	8d 55 e4	 lea	 edx, DWORD PTR _ret$[ebp]
  00018	6a 00		 push	 0
  0001a	52		 push	 edx
  0001b	6a 00		 push	 0
  0001d	c7 45 e8 00 00
	00 20		 mov	 DWORD PTR _declVector$[ebp], 536870912 ; 20000000H
  00024	8d 55 e8	 lea	 edx, DWORD PTR _declVector$[ebp]
  00027	c7 45 ec 00 00
	02 40		 mov	 DWORD PTR _declVector$[ebp+4], 1073872896 ; 40020000H
  0002e	c7 45 f0 01 00
	00 20		 mov	 DWORD PTR _declVector$[ebp+8], 536870913 ; 20000001H
  00035	c7 45 f4 07 00
	01 40		 mov	 DWORD PTR _declVector$[ebp+12], 1073807367 ; 40010007H
  0003c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _declVector$[ebp+16], -1
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	50		 push	 eax
  00047	ff 91 2c 01 00
	00		 call	 DWORD PTR [ecx+300]
  0004d	8b 4d e4	 mov	 ecx, DWORD PTR _ret$[ebp]
  00050	33 d2		 xor	 edx, edx
  00052	85 c0		 test	 eax, eax
  00054	0f 48 ca	 cmovs	 ecx, edx
  00057	8b c1		 mov	 eax, ecx

; 198  : 		return 0;
; 199  : 
; 200  : 	return (ret);
; 201  : }

  00059	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005c	33 cd		 xor	 ecx, ebp
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?CreatePTStreamVertexShader@CGraphicDevice@@IAEKXZ ENDP	; CGraphicDevice::CreatePTStreamVertexShader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__CreatePDTVertexBufferList@CGraphicDevice@@IAE_NXZ
_TEXT	SEGMENT
?__CreatePDTVertexBufferList@CGraphicDevice@@IAE_NXZ PROC ; CGraphicDevice::__CreatePDTVertexBufferList, COMDAT
; _this$ = ecx

; 617  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 618  : 	for (UINT i=0; i<PDT_VERTEXBUFFER_NUM; ++i)

  00002	bf 00 00 00 00	 mov	 edi, OFFSET ?ms_alpd3dPDTVB@CGraphicBase@@1PAPAUIDirect3DVertexBuffer8@@A ; CGraphicBase::ms_alpd3dPDTVB
  00007	33 f6		 xor	 esi, esi
  00009	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@CreatePDTV:

; 619  : 	{
; 620  : 		if (FAILED(

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00015	57		 push	 edi
  00016	6a 02		 push	 2
  00018	68 42 01 00 00	 push	 322			; 00000142H
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	68 08 02 00 00	 push	 520			; 00000208H
  00024	68 80 01 00 00	 push	 384			; 00000180H
  00029	50		 push	 eax
  0002a	ff 51 5c	 call	 DWORD PTR [ecx+92]
  0002d	85 c0		 test	 eax, eax
  0002f	78 13		 js	 SHORT $LN8@CreatePDTV

; 618  : 	for (UINT i=0; i<PDT_VERTEXBUFFER_NUM; ++i)

  00031	83 c6 04	 add	 esi, 4
  00034	83 c7 04	 add	 edi, 4
  00037	81 fe 90 01 00
	00		 cmp	 esi, 400		; 00000190H
  0003d	72 d1		 jb	 SHORT $LL4@CreatePDTV

; 629  : 	}
; 630  : 	return true;

  0003f	5f		 pop	 edi
  00040	b0 01		 mov	 al, 1

; 631  : }

  00042	5e		 pop	 esi
  00043	c3		 ret	 0
$LN8@CreatePDTV:
  00044	5f		 pop	 edi

; 621  : 			ms_lpd3dDevice->CreateVertexBuffer(
; 622  : 			sizeof(TPDTVertex)*PDT_VERTEX_NUM,
; 623  : 			D3DUSAGE_DYNAMIC|D3DUSAGE_WRITEONLY,
; 624  : 			D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX1,
; 625  : 			D3DPOOL_SYSTEMMEM,
; 626  : 			&ms_alpd3dPDTVB[i])
; 627  : 		))
; 628  : 		return false;

  00045	32 c0		 xor	 al, al

; 631  : }

  00047	5e		 pop	 esi
  00048	c3		 ret	 0
?__CreatePDTVertexBufferList@CGraphicDevice@@IAE_NXZ ENDP ; CGraphicDevice::__CreatePDTVertexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__DestroyPDTVertexBufferList@CGraphicDevice@@IAEXXZ
_TEXT	SEGMENT
?__DestroyPDTVertexBufferList@CGraphicDevice@@IAEXXZ PROC ; CGraphicDevice::__DestroyPDTVertexBufferList, COMDAT
; _this$ = ecx

; 605  : {

  00000	56		 push	 esi

; 606  : 	for (UINT i=0; i<PDT_VERTEXBUFFER_NUM; ++i)

  00001	33 f6		 xor	 esi, esi
$LL4@DestroyPDT:

; 607  : 	{
; 608  : 		if (ms_alpd3dPDTVB[i])

  00003	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_alpd3dPDTVB@CGraphicBase@@1PAPAUIDirect3DVertexBuffer8@@A[esi]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroyPDT

; 609  : 		{
; 610  : 			ms_alpd3dPDTVB[i]->Release();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	51		 push	 ecx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]

; 611  : 			ms_alpd3dPDTVB[i]=NULL;

  00013	c7 86 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_alpd3dPDTVB@CGraphicBase@@1PAPAUIDirect3DVertexBuffer8@@A[esi], 0
$LN2@DestroyPDT:

; 606  : 	for (UINT i=0; i<PDT_VERTEXBUFFER_NUM; ++i)

  0001d	83 c6 04	 add	 esi, 4
  00020	81 fe 90 01 00
	00		 cmp	 esi, 400		; 00000190H
  00026	72 db		 jb	 SHORT $LL4@DestroyPDT

; 612  : 		}
; 613  : 	}
; 614  : }

  00028	5e		 pop	 esi
  00029	c3		 ret	 0
?__DestroyPDTVertexBufferList@CGraphicDevice@@IAEXXZ ENDP ; CGraphicDevice::__DestroyPDTVertexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__InitializePDTVertexBufferList@CGraphicDevice@@IAEXXZ
_TEXT	SEGMENT
?__InitializePDTVertexBufferList@CGraphicDevice@@IAEXXZ PROC ; CGraphicDevice::__InitializePDTVertexBufferList, COMDAT
; _this$ = ecx

; 599  : {

  00000	57		 push	 edi

; 600  : 	for (UINT i=0; i<PDT_VERTEXBUFFER_NUM; ++i)

  00001	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00006	33 c0		 xor	 eax, eax
  00008	bf 00 00 00 00	 mov	 edi, OFFSET ?ms_alpd3dPDTVB@CGraphicBase@@1PAPAUIDirect3DVertexBuffer8@@A ; CGraphicBase::ms_alpd3dPDTVB
  0000d	f3 ab		 rep stosd
  0000f	5f		 pop	 edi

; 601  : 		ms_alpd3dPDTVB[i]=NULL;
; 602  : }

  00010	c3		 ret	 0
?__InitializePDTVertexBufferList@CGraphicDevice@@IAEXXZ ENDP ; CGraphicDevice::__InitializePDTVertexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z
_TEXT	SEGMENT
_dstIndices$ = 8					; size = 4
_eDefIB$ = 8						; size = 4
_uIdxCount$ = 12					; size = 4
_c_awIndices$ = 16					; size = 4
?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z PROC ; CGraphicDevice::__CreateDefaultIndexBuffer, COMDAT
; _this$ = ecx

; 650  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 651  : 	assert(ms_alpd3dDefIB[eDefIB]==NULL);
; 652  : 
; 653  : 	if (FAILED(

  00003	8b 45 08	 mov	 eax, DWORD PTR _eDefIB$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A[eax*4]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR _uIdxCount$[ebp]
  00012	56		 push	 esi
  00013	6a 01		 push	 1
  00015	6a 65		 push	 101			; 00000065H
  00017	8d 3c 00	 lea	 edi, DWORD PTR [eax+eax]
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0001f	6a 08		 push	 8
  00021	57		 push	 edi
  00022	50		 push	 eax
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	ff 51 60	 call	 DWORD PTR [ecx+96]
  00028	85 c0		 test	 eax, eax
  0002a	78 35		 js	 SHORT $LN5@CreateDefa

; 654  : 		ms_lpd3dDevice->CreateIndexBuffer(
; 655  : 			sizeof(WORD)*uIdxCount,
; 656  : 			D3DUSAGE_WRITEONLY,
; 657  : 			D3DFMT_INDEX16,
; 658  : 			D3DPOOL_MANAGED,
; 659  : 			&ms_alpd3dDefIB[eDefIB])
; 660  : 	)) return false;
; 661  : 
; 662  : 	WORD* dstIndices;
; 663  : 	if (FAILED(

  0002c	8b 06		 mov	 eax, DWORD PTR [esi]
  0002e	8d 55 08	 lea	 edx, DWORD PTR _dstIndices$[ebp]
  00031	6a 00		 push	 0
  00033	52		 push	 edx
  00034	6a 00		 push	 0
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	6a 00		 push	 0
  0003a	50		 push	 eax
  0003b	ff 51 2c	 call	 DWORD PTR [ecx+44]
  0003e	85 c0		 test	 eax, eax
  00040	78 1f		 js	 SHORT $LN5@CreateDefa

; 666  : 
; 667  : 	memcpy(dstIndices, c_awIndices, sizeof(WORD)*uIdxCount);

  00042	57		 push	 edi
  00043	ff 75 10	 push	 DWORD PTR _c_awIndices$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _dstIndices$[ebp]
  00049	e8 00 00 00 00	 call	 _memcpy

; 668  : 
; 669  : 	ms_alpd3dDefIB[eDefIB]->Unlock();

  0004e	8b 06		 mov	 eax, DWORD PTR [esi]
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	50		 push	 eax
  00056	ff 51 30	 call	 DWORD PTR [ecx+48]
  00059	5f		 pop	 edi

; 670  : 
; 671  : 	return true;

  0005a	b0 01		 mov	 al, 1

; 672  : }

  0005c	5e		 pop	 esi
  0005d	5d		 pop	 ebp
  0005e	c2 0c 00	 ret	 12			; 0000000cH
$LN5@CreateDefa:
  00061	5f		 pop	 edi

; 664  : 		ms_alpd3dDefIB[eDefIB]->Lock(0, 0, (BYTE**)&dstIndices, 0)
; 665  : 	)) return false;

  00062	32 c0		 xor	 al, al

; 672  : }

  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp
  00066	c2 0c 00	 ret	 12			; 0000000cH
?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ENDP ; CGraphicDevice::__CreateDefaultIndexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ
_TEXT	SEGMENT
?__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ PROC ; CGraphicDevice::__CreateDefaultIndexBufferList, COMDAT
; _this$ = ecx

; 675  : {

  00000	56		 push	 esi

; 676  : 	static const WORD c_awLineIndices[2] = { 0, 1, };
; 677  : 	static const WORD c_awLineTriIndices[6] = { 0, 1, 0, 2, 1, 2, };
; 678  : 	static const WORD c_awLineRectIndices[8] = { 0, 1, 0, 2, 1, 3, 2, 3,};
; 679  : 	static const WORD c_awLineCubeIndices[24] = {
; 680  : 		0, 1, 0, 2, 1, 3, 2, 3,
; 681  : 		0, 4, 1, 5, 2, 6, 3, 7,
; 682  : 		4, 5, 4, 6, 5, 7, 6, 7,
; 683  : 	};
; 684  : 	static const WORD c_awFillTriIndices[3]= { 0, 1, 2, };
; 685  : 	static const WORD c_awFillRectIndices[6] = { 0, 2, 1, 2, 3, 1, };
; 686  : 	static const WORD c_awFillCubeIndices[36] = {
; 687  : 		0, 1, 2, 1, 3, 2,
; 688  : 		2, 0, 6, 0, 4, 6,
; 689  : 		0, 1, 4, 1, 5, 4,
; 690  : 		1, 3, 5, 3, 7, 5,
; 691  : 		3, 2, 7, 2, 6, 7,
; 692  : 		4, 5, 6, 5, 7, 6,
; 693  : 	};
; 694  : 
; 695  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_LINE, 2, c_awLineIndices))

  00001	68 00 00 00 00	 push	 OFFSET ?c_awLineIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  00006	6a 02		 push	 2
  00008	6a 00		 push	 0
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00011	84 c0		 test	 al, al
  00013	74 7c		 je	 SHORT $LN10@CreateDefa

; 696  : 		return false;
; 697  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_LINE_TRI, 6, c_awLineTriIndices))

  00015	68 00 00 00 00	 push	 OFFSET ?c_awLineTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  0001a	6a 06		 push	 6
  0001c	6a 01		 push	 1
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00025	84 c0		 test	 al, al
  00027	74 68		 je	 SHORT $LN10@CreateDefa

; 698  : 		return false;
; 699  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_LINE_RECT, 8, c_awLineRectIndices))

  00029	68 00 00 00 00	 push	 OFFSET ?c_awLineRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  0002e	6a 08		 push	 8
  00030	6a 02		 push	 2
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00039	84 c0		 test	 al, al
  0003b	74 54		 je	 SHORT $LN10@CreateDefa

; 700  : 		return false;
; 701  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_LINE_CUBE, 24, c_awLineCubeIndices))

  0003d	68 00 00 00 00	 push	 OFFSET ?c_awLineCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  00042	6a 18		 push	 24			; 00000018H
  00044	6a 03		 push	 3
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  0004d	84 c0		 test	 al, al
  0004f	74 40		 je	 SHORT $LN10@CreateDefa

; 702  : 		return false;
; 703  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_FILL_TRI, 3, c_awFillTriIndices))

  00051	68 00 00 00 00	 push	 OFFSET ?c_awFillTriIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  00056	6a 03		 push	 3
  00058	6a 04		 push	 4
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00061	84 c0		 test	 al, al
  00063	74 2c		 je	 SHORT $LN10@CreateDefa

; 704  : 		return false;
; 705  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_FILL_RECT, 6, c_awFillRectIndices))

  00065	68 00 00 00 00	 push	 OFFSET ?c_awFillRectIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  0006a	6a 06		 push	 6
  0006c	6a 05		 push	 5
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00075	84 c0		 test	 al, al
  00077	74 18		 je	 SHORT $LN10@CreateDefa

; 706  : 		return false;
; 707  : 	if (!__CreateDefaultIndexBuffer(DEFAULT_IB_FILL_CUBE, 36, c_awFillCubeIndices))

  00079	68 00 00 00 00	 push	 OFFSET ?c_awFillCubeIndices@?1??__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ@4QBGB
  0007e	6a 24		 push	 36			; 00000024H
  00080	6a 06		 push	 6
  00082	8b ce		 mov	 ecx, esi
  00084	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBuffer@CGraphicDevice@@IAE_NIIPBG@Z ; CGraphicDevice::__CreateDefaultIndexBuffer
  00089	84 c0		 test	 al, al
  0008b	74 04		 je	 SHORT $LN10@CreateDefa

; 709  : 
; 710  : 	return true;

  0008d	b0 01		 mov	 al, 1
  0008f	5e		 pop	 esi

; 711  : }

  00090	c3		 ret	 0
$LN10@CreateDefa:

; 708  : 		return false;

  00091	32 c0		 xor	 al, al
  00093	5e		 pop	 esi

; 711  : }

  00094	c3		 ret	 0
?__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ ENDP ; CGraphicDevice::__CreateDefaultIndexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__DestroyDefaultIndexBufferList@CGraphicDevice@@IAEXXZ
_TEXT	SEGMENT
?__DestroyDefaultIndexBufferList@CGraphicDevice@@IAEXXZ PROC ; CGraphicDevice::__DestroyDefaultIndexBufferList, COMDAT
; _this$ = ecx

; 640  : {

  00000	56		 push	 esi

; 641  : 	for (UINT i=0; i<DEFAULT_IB_NUM; ++i)

  00001	33 f6		 xor	 esi, esi
$LL4@DestroyDef:

; 642  : 		if (ms_alpd3dDefIB[i])

  00003	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A[esi]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 10		 je	 SHORT $LN2@DestroyDef

; 643  : 		{
; 644  : 			ms_alpd3dDefIB[i]->Release();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	51		 push	 ecx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]

; 645  : 			ms_alpd3dDefIB[i]=NULL;

  00013	c7 86 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A[esi], 0
$LN2@DestroyDef:

; 641  : 	for (UINT i=0; i<DEFAULT_IB_NUM; ++i)

  0001d	83 c6 04	 add	 esi, 4
  00020	83 fe 1c	 cmp	 esi, 28			; 0000001cH
  00023	72 de		 jb	 SHORT $LL4@DestroyDef

; 646  : 		}
; 647  : }

  00025	5e		 pop	 esi
  00026	c3		 ret	 0
?__DestroyDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ENDP ; CGraphicDevice::__DestroyDefaultIndexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__InitializeDefaultIndexBufferList@CGraphicDevice@@IAEXXZ
_TEXT	SEGMENT
?__InitializeDefaultIndexBufferList@CGraphicDevice@@IAEXXZ PROC ; CGraphicDevice::__InitializeDefaultIndexBufferList, COMDAT
; _this$ = ecx

; 634  : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 635  : 	for (UINT i=0; i<DEFAULT_IB_NUM; ++i)
; 636  : 		ms_alpd3dDefIB[i]=NULL;

  00003	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A+16, 0
  0000d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A, xmm0
  00014	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A+20, 0
  0001e	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_alpd3dDefIB@CGraphicBase@@1PAPAUIDirect3DIndexBuffer8@@A+24, 0

; 637  : }

  00028	c3		 ret	 0
?__InitializeDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ENDP ; CGraphicDevice::__InitializeDefaultIndexBufferList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__WarningMessage@CGraphicDevice@@IAEXPAUHWND__@@I@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_hWnd$ = 8						; size = 4
_uiMsg$ = 12						; size = 4
?__WarningMessage@CGraphicDevice@@IAEXPAUHWND__@@I@Z PROC ; CGraphicDevice::__WarningMessage, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 0c	 lea	 eax, DWORD PTR _uiMsg$[ebp]
  0000a	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 53   : 	if (m_kMap_strWarningMessage.end() == m_kMap_strWarningMessage.find(uiMsg))

  0000b	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Find_lower_bound@I@?$_Tree@V?$_Tmap_traits@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Find_lower_bound<unsigned int>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00019	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00020	75 33		 jne	 SHORT $LN1@WarningMes
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00022	8b 45 0c	 mov	 eax, DWORD PTR _uiMsg$[ebp]
  00025	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	72 2b		 jb	 SHORT $LN1@WarningMes

; 232  :         return this->_Ptr == _Right._Ptr;

  0002a	39 0e		 cmp	 DWORD PTR [esi], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 53   : 	if (m_kMap_strWarningMessage.end() == m_kMap_strWarningMessage.find(uiMsg))

  0002c	74 27		 je	 SHORT $LN1@WarningMes

; 55   : 	MessageBox(hWnd, m_kMap_strWarningMessage[uiMsg].c_str(), "Warning", MB_OK|MB_TOPMOST);

  0002e	8d 45 0c	 lea	 eax, DWORD PTR _uiMsg$[ebp]
  00031	8b ce		 mov	 ecx, esi
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z ; std::map<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00039	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0003d	72 02		 jb	 SHORT $LN34@WarningMes

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN34@WarningMes:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 55   : 	MessageBox(hWnd, m_kMap_strWarningMessage[uiMsg].c_str(), "Warning", MB_OK|MB_TOPMOST);

  00041	68 00 00 04 00	 push	 262144			; 00040000H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_07KGMMFLDN@Warning@
  0004b	50		 push	 eax
  0004c	ff 75 08	 push	 DWORD PTR _hWnd$[ebp]
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
$LN1@WarningMes:
  00055	5e		 pop	 esi

; 56   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
?__WarningMessage@CGraphicDevice@@IAEXPAUHWND__@@I@Z ENDP ; CGraphicDevice::__WarningMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__IsInDriverBlackList@CGraphicDevice@@IAE_NAAVD3D_CAdapterInfo@@@Z
_TEXT	SEGMENT
_dwChkLowVersion$1 = -784				; size = 4
_dwChkHighVersion$2 = -780				; size = 4
_ret$1$ = -773						; size = 1
_szSrcDriver$ = -772					; size = 256
_szChkDriver$3 = -516					; size = 256
_szLine$4 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_rkD3DAdapterInfo$ = 8					; size = 4
?__IsInDriverBlackList@CGraphicDevice@@IAE_NAAVD3D_CAdapterInfo@@@Z PROC ; CGraphicDevice::__IsInDriverBlackList, COMDAT
; _this$ = ecx

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 03 00
	00		 sub	 esp, 784		; 00000310H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _rkD3DAdapterInfo$[ebp]

; 309  : 	D3DADAPTER_IDENTIFIER8& rkD3DAdapterIdentifier=rkD3DAdapterInfo.GetIdentifier();
; 310  : 
; 311  : 	char szSrcDriver[256];
; 312  : 	strncpy(szSrcDriver, rkD3DAdapterIdentifier.Driver, sizeof(szSrcDriver)-1);

  00018	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _szSrcDriver$[ebp]
  0001e	57		 push	 edi
  0001f	68 ff 00 00 00	 push	 255			; 000000ffH
  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _strncpy

; 313  : 	DWORD dwSrcHighVersion=rkD3DAdapterIdentifier.DriverVersion.QuadPart>>32;

  0002b	8b 9e 00 04 00
	00		 mov	 ebx, DWORD PTR [esi+1024]
  00031	8b be 04 04 00
	00		 mov	 edi, DWORD PTR [esi+1028]

; 314  : 	DWORD dwSrcLowVersion=rkD3DAdapterIdentifier.DriverVersion.QuadPart&0xffffffff;
; 315  : 
; 316  : 	bool ret=false;
; 317  : 
; 318  : 	FILE* fp=fopen("grpblk.txt", "r");

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NIHOAGKC@grpblk?4txt@
  00041	c6 85 fb fc ff
	ff 00		 mov	 BYTE PTR _ret$1$[ebp], 0
  00048	e8 00 00 00 00	 call	 _fopen
  0004d	8b f0		 mov	 esi, eax
  0004f	83 c4 14	 add	 esp, 20			; 00000014H

; 319  : 	if (fp)

  00052	85 f6		 test	 esi, esi
  00054	0f 84 ca 00 00
	00		 je	 $LN21@IsInDriver

; 320  : 	{
; 321  : 		DWORD dwChkHighVersion;
; 322  : 		DWORD dwChkLowVersion;
; 323  : 
; 324  : 		char szChkDriver[256];
; 325  : 
; 326  : 		char szLine[256];
; 327  : 		while (fgets(szLine, sizeof(szLine)-1, fp))

  0005a	56		 push	 esi
  0005b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szLine$4[ebp]
  00061	68 ff 00 00 00	 push	 255			; 000000ffH
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _fgets
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006f	85 c0		 test	 eax, eax
  00071	0f 84 a4 00 00
	00		 je	 $LN16@IsInDriver
  00077	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2@IsInDriver:

; 328  : 		{
; 329  : 			sscanf(szLine, "%s %x %x", szChkDriver, &dwChkHighVersion, &dwChkLowVersion);

  00080	8d 85 f0 fc ff
	ff		 lea	 eax, DWORD PTR _dwChkLowVersion$1[ebp]
  00086	50		 push	 eax
  00087	8d 85 f4 fc ff
	ff		 lea	 eax, DWORD PTR _dwChkHighVersion$2[ebp]
  0008d	50		 push	 eax
  0008e	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szChkDriver$3[ebp]
  00094	50		 push	 eax
  00095	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szLine$4[ebp]
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_08NLGDGEBC@?$CFs?5?$CFx?5?$CFx@
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 _sscanf
  000a6	83 c4 14	 add	 esp, 20			; 00000014H

; 330  : 
; 331  : 			if (strcmp(szSrcDriver, szChkDriver)==0)

  000a9	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szChkDriver$3[ebp]
  000af	8d 8d fc fc ff
	ff		 lea	 ecx, DWORD PTR _szSrcDriver$[ebp]
$LL17@IsInDriver:
  000b5	8a 11		 mov	 dl, BYTE PTR [ecx]
  000b7	3a 10		 cmp	 dl, BYTE PTR [eax]
  000b9	75 1a		 jne	 SHORT $LN18@IsInDriver
  000bb	84 d2		 test	 dl, dl
  000bd	74 12		 je	 SHORT $LN19@IsInDriver
  000bf	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000c2	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  000c5	75 0e		 jne	 SHORT $LN18@IsInDriver
  000c7	83 c1 02	 add	 ecx, 2
  000ca	83 c0 02	 add	 eax, 2
  000cd	84 d2		 test	 dl, dl
  000cf	75 e4		 jne	 SHORT $LL17@IsInDriver
$LN19@IsInDriver:
  000d1	33 c0		 xor	 eax, eax
  000d3	eb 05		 jmp	 SHORT $LN20@IsInDriver
$LN18@IsInDriver:
  000d5	1b c0		 sbb	 eax, eax
  000d7	83 c8 01	 or	 eax, 1
$LN20@IsInDriver:
  000da	85 c0		 test	 eax, eax
  000dc	75 10		 jne	 SHORT $LN7@IsInDriver

; 332  : 				if (dwSrcHighVersion==dwChkHighVersion)

  000de	3b bd f4 fc ff
	ff		 cmp	 edi, DWORD PTR _dwChkHighVersion$2[ebp]
  000e4	75 08		 jne	 SHORT $LN7@IsInDriver

; 333  : 					if (dwSrcLowVersion==dwChkLowVersion)

  000e6	3b 9d f0 fc ff
	ff		 cmp	 ebx, DWORD PTR _dwChkLowVersion$1[ebp]
  000ec	74 26		 je	 SHORT $LN12@IsInDriver
$LN7@IsInDriver:

; 320  : 	{
; 321  : 		DWORD dwChkHighVersion;
; 322  : 		DWORD dwChkLowVersion;
; 323  : 
; 324  : 		char szChkDriver[256];
; 325  : 
; 326  : 		char szLine[256];
; 327  : 		while (fgets(szLine, sizeof(szLine)-1, fp))

  000ee	56		 push	 esi
  000ef	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szLine$4[ebp]

; 336  : 						break;
; 337  : 					}
; 338  : 
; 339  : 			szLine[0]='\0';

  000f5	c6 85 fc fe ff
	ff 00		 mov	 BYTE PTR _szLine$4[ebp], 0
  000fc	68 ff 00 00 00	 push	 255			; 000000ffH
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 _fgets
  00107	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010a	85 c0		 test	 eax, eax
  0010c	0f 85 6e ff ff
	ff		 jne	 $LL2@IsInDriver

; 320  : 	{
; 321  : 		DWORD dwChkHighVersion;
; 322  : 		DWORD dwChkLowVersion;
; 323  : 
; 324  : 		char szChkDriver[256];
; 325  : 
; 326  : 		char szLine[256];
; 327  : 		while (fgets(szLine, sizeof(szLine)-1, fp))

  00112	eb 07		 jmp	 SHORT $LN16@IsInDriver
$LN12@IsInDriver:

; 334  : 					{
; 335  : 						ret=true;

  00114	c6 85 fb fc ff
	ff 01		 mov	 BYTE PTR _ret$1$[ebp], 1
$LN16@IsInDriver:

; 340  : 		}
; 341  : 		fclose(fp);

  0011b	56		 push	 esi
  0011c	e8 00 00 00 00	 call	 _fclose
  00121	83 c4 04	 add	 esp, 4
$LN21@IsInDriver:

; 342  : 	}
; 343  : 
; 344  : 	return ret;
; 345  : }

  00124	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00127	8a 85 fb fc ff
	ff		 mov	 al, BYTE PTR _ret$1$[ebp]
  0012d	33 cd		 xor	 ecx, ebp
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
?__IsInDriverBlackList@CGraphicDevice@@IAE_NAAVD3D_CAdapterInfo@@@Z ENDP ; CGraphicDevice::__IsInDriverBlackList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?__Initialize@CGraphicDevice@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CGraphicDevice@@IAEXXZ PROC		; CGraphicDevice::__Initialize, COMDAT
; _this$ = ecx

; 28   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 29   : 	ms_iD3DAdapterInfo=D3DADAPTER_DEFAULT;

  00003	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA, 0 ; CGraphicBase::ms_iD3DAdapterInfo

; 30   : 	ms_iD3DDevInfo=D3DADAPTER_DEFAULT;

  0000d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_iD3DDevInfo@CGraphicBase@@1IA, 0 ; CGraphicBase::ms_iD3DDevInfo

; 31   : 	ms_iD3DModeInfo=D3DADAPTER_DEFAULT;

  00017	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_iD3DModeInfo@CGraphicBase@@1IA, 0 ; CGraphicBase::ms_iD3DModeInfo

; 32   : 
; 33   : 	ms_lpd3d			= NULL;

  00021	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A, 0 ; CGraphicBase::ms_lpd3d

; 34   : 	ms_lpd3dDevice		= NULL;

  0002b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A, 0 ; CGraphicBase::ms_lpd3dDevice

; 35   : 	ms_lpd3dMatStack	= NULL;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A, 0 ; CGraphicBase::ms_lpd3dMatStack

; 36   : 
; 37   : 	ms_dwWavingEndTime = 0;

  0003f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_dwWavingEndTime@CGraphicBase@@1KA, 0 ; CGraphicBase::ms_dwWavingEndTime

; 38   : 	ms_dwFlashingEndTime = 0;

  00049	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_dwFlashingEndTime@CGraphicBase@@1KA, 0 ; CGraphicBase::ms_dwFlashingEndTime

; 39   : 
; 40   : 	m_pStateManager		= NULL;

  00053	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 41   : 
; 42   : 	__InitializeDefaultIndexBufferList();

  0005a	e8 00 00 00 00	 call	 ?__InitializeDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__InitializeDefaultIndexBufferList

; 43   : 	__InitializePDTVertexBufferList();

  0005f	8b ce		 mov	 ecx, esi
  00061	5e		 pop	 esi
  00062	e9 00 00 00 00	 jmp	 ?__InitializePDTVertexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__InitializePDTVertexBufferList
?__Initialize@CGraphicDevice@@IAEXXZ ENDP		; CGraphicDevice::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?RegisterWarningString@CGraphicDevice@@QAEXIPBD@Z
_TEXT	SEGMENT
_uiMsg$ = 8						; size = 4
_c_szString$ = 12					; size = 4
?RegisterWarningString@CGraphicDevice@@QAEXIPBD@Z PROC	; CGraphicDevice::RegisterWarningString, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 48   : 	m_kMap_strWarningMessage[uiMsg] = c_szString;

  00005	8d 45 08	 lea	 eax, DWORD PTR _uiMsg$[ebp]
  00008	83 c1 08	 add	 ecx, 8
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??A?$map@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@I@2@V?$allocator@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABI@Z ; std::map<unsigned int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00011	8b 55 0c	 mov	 edx, DWORD PTR _c_szString$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 48   : 	m_kMap_strWarningMessage[uiMsg] = c_szString;

  00014	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00016	8b ca		 mov	 ecx, edx
  00018	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
  0001b	0f 1f 44 00 00	 npad	 5
$LL9@RegisterWa:
  00020	8a 01		 mov	 al, BYTE PTR [ecx]
  00022	41		 inc	 ecx
  00023	84 c0		 test	 al, al
  00025	75 f9		 jne	 SHORT $LL9@RegisterWa
  00027	2b cf		 sub	 ecx, edi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00029	51		 push	 ecx
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 49   : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
?RegisterWarningString@CGraphicDevice@@QAEXIPBD@Z ENDP	; CGraphicDevice::RegisterWarningString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?ResizeBackBuffer@CGraphicDevice@@QAE_NII@Z
_TEXT	SEGMENT
_uWidth$ = 8						; size = 4
_uHeight$ = 12						; size = 4
?ResizeBackBuffer@CGraphicDevice@@QAE_NII@Z PROC	; CGraphicDevice::ResizeBackBuffer, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 112  : 	if (!ms_lpd3dDevice)

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00009	85 c9		 test	 ecx, ecx
  0000b	74 4a		 je	 SHORT $LN8@ResizeBack

; 113  : 		return false;
; 114  : 
; 115  : 	D3DPRESENT_PARAMETERS& rkD3DPP=ms_d3dPresentParameter;
; 116  : 	if (rkD3DPP.Windowed)

  0000d	83 3d 1c 00 00
	00 00		 cmp	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+28, 0
  00014	74 3b		 je	 SHORT $LN4@ResizeBack

; 117  : 	{
; 118  : 		if (rkD3DPP.BackBufferWidth!=uWidth || rkD3DPP.BackBufferHeight!=uHeight)

  00016	8b 55 08	 mov	 edx, DWORD PTR _uWidth$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _uHeight$[ebp]
  0001c	39 15 00 00 00
	00		 cmp	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A, edx
  00022	75 08		 jne	 SHORT $LN5@ResizeBack
  00024	39 05 04 00 00
	00		 cmp	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+4, eax
  0002a	74 25		 je	 SHORT $LN4@ResizeBack
$LN5@ResizeBack:

; 119  : 		{
; 120  : 			rkD3DPP.BackBufferWidth=uWidth;

  0002c	89 15 00 00 00
	00		 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A, edx

; 121  : 			rkD3DPP.BackBufferHeight=uHeight;

  00032	a3 04 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+4, eax

; 122  : 
; 123  : 			IDirect3DDevice8& rkD3DDev=*ms_lpd3dDevice;
; 124  : 
; 125  : 			HRESULT hr=rkD3DDev.Reset(&rkD3DPP);

  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	68 00 00 00 00	 push	 OFFSET ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A ; CGraphicBase::ms_d3dPresentParameter
  0003e	51		 push	 ecx
  0003f	ff 50 38	 call	 DWORD PTR [eax+56]

; 126  : 			if (FAILED(hr))

  00042	85 c0		 test	 eax, eax
  00044	78 11		 js	 SHORT $LN8@ResizeBack

; 129  : 			}
; 130  : 
; 131  : 			STATEMANAGER.SetDefaultState();

  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004c	e8 00 00 00 00	 call	 ?SetDefaultState@CStateManager@@QAEXXZ ; CStateManager::SetDefaultState
$LN4@ResizeBack:

; 132  : 		}
; 133  : 	}
; 134  : 
; 135  : 	return true;

  00051	b0 01		 mov	 al, 1

; 136  : }

  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
$LN8@ResizeBack:

; 127  : 			{
; 128  : 				return false;

  00057	32 c0		 xor	 al, al

; 136  : }

  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
?ResizeBackBuffer@CGraphicDevice@@QAE_NII@Z ENDP	; CGraphicDevice::ResizeBackBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?MoveWebBrowserRect@CGraphicDevice@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_c_rcWebPage$ = 8					; size = 4
?MoveWebBrowserRect@CGraphicDevice@@QAEXABUtagRECT@@@Z PROC ; CGraphicDevice::MoveWebBrowserRect, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   : 	g_rcBrowser=c_rcWebPage;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rcWebPage$[ebp]
  00006	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00009	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?g_rcBrowser@@3UtagRECT@@A, xmm0

; 61   : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?MoveWebBrowserRect@CGraphicDevice@@QAEXABUtagRECT@@@Z ENDP ; CGraphicDevice::MoveWebBrowserRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?DisableWebBrowserMode@CGraphicDevice@@QAEXXZ
_TEXT	SEGMENT
?DisableWebBrowserMode@CGraphicDevice@@QAEXXZ PROC	; CGraphicDevice::DisableWebBrowserMode, COMDAT
; _this$ = ecx

; 93   : 	if (!ms_lpd3dDevice)

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00006	85 c9		 test	 ecx, ecx
  00008	74 55		 je	 SHORT $LN1@DisableWeb

; 94   : 		return;
; 95   : 
; 96   : 	D3DPRESENT_PARAMETERS& rkD3DPP=ms_d3dPresentParameter;
; 97   : 
; 98   : 	g_isBrowserMode=false;
; 99   : 
; 100  : 	rkD3DPP=g_kD3DPP;

  0000a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A
  00011	a1 30 00 00 00	 mov	 eax, DWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+48
  00016	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?g_isBrowserMode@@3_NA, 0 ; g_isBrowserMode
  0001d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A, xmm0
  00024	a3 30 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+48, eax
  00029	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+16

; 101  : 
; 102  : 	IDirect3DDevice8& rkD3DDev=*ms_lpd3dDevice;
; 103  : 	HRESULT hr=rkD3DDev.Reset(&rkD3DPP);

  00030	68 00 00 00 00	 push	 OFFSET ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A ; CGraphicBase::ms_d3dPresentParameter
  00035	51		 push	 ecx
  00036	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+16, xmm0
  0003d	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+32
  00044	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+32, xmm0
  0004b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004d	ff 50 38	 call	 DWORD PTR [eax+56]

; 104  : 	if (FAILED(hr))

  00050	85 c0		 test	 eax, eax
  00052	78 0b		 js	 SHORT $LN1@DisableWeb

; 105  : 		return;
; 106  : 
; 107  : 	STATEMANAGER.SetDefaultState();

  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005a	e9 00 00 00 00	 jmp	 ?SetDefaultState@CStateManager@@QAEXXZ ; CStateManager::SetDefaultState
$LN1@DisableWeb:

; 108  : }

  0005f	c3		 ret	 0
?DisableWebBrowserMode@CGraphicDevice@@QAEXXZ ENDP	; CGraphicDevice::DisableWebBrowserMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?EnableWebBrowserMode@CGraphicDevice@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_c_rcWebPage$ = 8					; size = 4
?EnableWebBrowserMode@CGraphicDevice@@QAEXABUtagRECT@@@Z PROC ; CGraphicDevice::EnableWebBrowserMode, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 65   : 	if (!ms_lpd3dDevice)

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00009	85 c9		 test	 ecx, ecx
  0000b	0f 84 89 00 00
	00		 je	 $LN1@EnableWebB

; 66   : 		return;
; 67   : 
; 68   : 	D3DPRESENT_PARAMETERS& rkD3DPP=ms_d3dPresentParameter;
; 69   : 
; 70   : 	g_isBrowserMode=true;
; 71   : 
; 72   : 	if (D3DSWAPEFFECT_COPY==rkD3DPP.SwapEffect)

  00011	83 3d 14 00 00
	00 03		 cmp	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+20, 3
  00018	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?g_isBrowserMode@@3_NA, 1 ; g_isBrowserMode
  0001f	74 79		 je	 SHORT $LN1@EnableWebB

; 73   : 		return;
; 74   : 
; 75   : 	g_kD3DPP=rkD3DPP;

  00021	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A
  00028	a1 30 00 00 00	 mov	 eax, DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+48
  0002d	a3 30 00 00 00	 mov	 DWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+48, eax

; 76   : 	g_rcBrowser=c_rcWebPage;

  00032	8b 45 08	 mov	 eax, DWORD PTR _c_rcWebPage$[ebp]
  00035	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A, xmm0

; 77   : 
; 78   : 	//rkD3DPP.Windowed=TRUE;
; 79   : 	rkD3DPP.SwapEffect=D3DSWAPEFFECT_COPY;
; 80   : 	rkD3DPP.BackBufferCount = 1;
; 81   : 	rkD3DPP.FullScreen_PresentationInterval = D3DPRESENT_INTERVAL_IMMEDIATE;
; 82   : 
; 83   : 	IDirect3DDevice8& rkD3DDev=*ms_lpd3dDevice;
; 84   : 	HRESULT hr=rkD3DDev.Reset(&rkD3DPP);

  0003c	68 00 00 00 00	 push	 OFFSET ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A ; CGraphicBase::ms_d3dPresentParameter
  00041	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+16
  00048	51		 push	 ecx
  00049	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+16, xmm0
  00050	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+32
  00057	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?g_kD3DPP@@3U_D3DPRESENT_PARAMETERS_@@A+32, xmm0
  0005e	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00061	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+20, 3
  0006b	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+12, 1
  00075	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?g_rcBrowser@@3UtagRECT@@A, xmm0
  0007c	c7 05 30 00 00
	00 00 00 00 80	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+48, -2147483648 ; 80000000H
  00086	8b 01		 mov	 eax, DWORD PTR [ecx]
  00088	ff 50 38	 call	 DWORD PTR [eax+56]

; 85   : 	if (FAILED(hr))

  0008b	85 c0		 test	 eax, eax
  0008d	78 0b		 js	 SHORT $LN1@EnableWebB

; 86   : 		return;
; 87   : 
; 88   : 	STATEMANAGER.SetDefaultState();

  0008f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00095	e8 00 00 00 00	 call	 ?SetDefaultState@CStateManager@@QAEXXZ ; CStateManager::SetDefaultState
$LN1@EnableWebB:

; 89   : }

  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
?EnableWebBrowserMode@CGraphicDevice@@QAEXABUtagRECT@@@Z ENDP ; CGraphicDevice::EnableWebBrowserMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?Reset@CGraphicDevice@@QAE_NXZ
_TEXT	SEGMENT
?Reset@CGraphicDevice@@QAE_NXZ PROC			; CGraphicDevice::Reset, COMDAT
; _this$ = ecx

; 251  : 	HRESULT hr;
; 252  : 
; 253  : 	if (FAILED(hr = ms_lpd3dDevice->Reset(&ms_d3dPresentParameter)))

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00005	68 00 00 00 00	 push	 OFFSET ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A ; CGraphicBase::ms_d3dPresentParameter
  0000a	50		 push	 eax
  0000b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000d	ff 51 38	 call	 DWORD PTR [ecx+56]
  00010	85 c0		 test	 eax, eax
  00012	0f 99 c0	 setns	 al

; 254  : 		return false;
; 255  : 
; 256  : 	return true;
; 257  : }

  00015	c3		 ret	 0
?Reset@CGraphicDevice@@QAE_NXZ ENDP			; CGraphicDevice::Reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?GetDeviceState@CGraphicDevice@@QAE?AW4EDeviceState@1@XZ
_TEXT	SEGMENT
?GetDeviceState@CGraphicDevice@@QAE?AW4EDeviceState@1@XZ PROC ; CGraphicDevice::GetDeviceState, COMDAT
; _this$ = ecx

; 230  : 	if (!ms_lpd3dDevice)

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00006	85 c9		 test	 ecx, ecx
  00008	75 04		 jne	 SHORT $LN2@GetDeviceS

; 231  : 		return DEVICESTATE_NULL;

  0000a	8d 41 03	 lea	 eax, DWORD PTR [ecx+3]

; 247  : }

  0000d	c3		 ret	 0
$LN2@GetDeviceS:

; 232  : 
; 233  : 	HRESULT hr;
; 234  : 
; 235  : 	if (FAILED(hr = ms_lpd3dDevice->TestCooperativeLevel()))

  0000e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00010	51		 push	 ecx
  00011	ff 50 0c	 call	 DWORD PTR [eax+12]
  00014	85 c0		 test	 eax, eax
  00016	79 1a		 jns	 SHORT $LN3@GetDeviceS

; 236  : 	{
; 237  : 		if (D3DERR_DEVICELOST == hr)

  00018	3d 68 08 76 88	 cmp	 eax, -2005530520	; 88760868H
  0001d	74 0d		 je	 SHORT $LN5@GetDeviceS

; 238  : 			return DEVICESTATE_BROKEN;
; 239  : 
; 240  : 		if (D3DERR_DEVICENOTRESET == hr)

  0001f	3d 69 08 76 88	 cmp	 eax, -2005530519	; 88760869H
  00024	75 06		 jne	 SHORT $LN5@GetDeviceS

; 241  : 			return DEVICESTATE_NEEDS_RESET;

  00026	b8 02 00 00 00	 mov	 eax, 2

; 247  : }

  0002b	c3		 ret	 0
$LN5@GetDeviceS:

; 242  : 
; 243  : 		return DEVICESTATE_BROKEN;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 247  : }

  00031	c3		 ret	 0
$LN3@GetDeviceS:

; 244  : 	}
; 245  : 
; 246  : 	return DEVICESTATE_OK;

  00032	33 c0		 xor	 eax, eax

; 247  : }

  00034	c3		 ret	 0
?GetDeviceState@CGraphicDevice@@QAE?AW4EDeviceState@1@XZ ENDP ; CGraphicDevice::GetDeviceState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z
_TEXT	SEGMENT
_pkD3DAdapterInfo$1$ = -84				; size = 4
$T2 = -84						; size = 4
_this$GSCopy$1$ = -80					; size = 4
_ErrorCorrection$1$ = -76				; size = 4
_hWnd$GSCopy$1$ = -72					; size = 4
tv2762 = -68						; size = 4
_iRet$1$ = -68						; size = 4
_stDevList$ = -64					; size = 24
_stModeInfo$ = -40					; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
_iHres$ = 12						; size = 4
_iVres$ = 16						; size = 4
_Windowed$ = 20						; size = 1
___formal$ = 24						; size = 4
_iReflashRate$ = 28					; size = 4
?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z PROC	; CGraphicDevice::Create, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00030	8b 5d 08	 mov	 ebx, DWORD PTR _hWnd$[ebp]
  00033	89 5d b8	 mov	 DWORD PTR _hWnd$GSCopy$1$[ebp], ebx

; 349  : 	int iRet = CREATE_OK;

  00036	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR _iRet$1$[ebp], 1

; 350  : 
; 351  : 	Destroy();

  0003d	e8 00 00 00 00	 call	 ?Destroy@CGraphicDevice@@QAEXXZ ; CGraphicDevice::Destroy

; 352  : 
; 353  : 	ms_iWidth	= iHres;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _iHres$[ebp]
  00045	a3 00 00 00 00	 mov	 DWORD PTR ?ms_iWidth@CGraphicBase@@1HA, eax ; CGraphicBase::ms_iWidth

; 354  : 	ms_iHeight	= iVres;

  0004a	8b 45 10	 mov	 eax, DWORD PTR _iVres$[ebp]

; 355  : 
; 356  : 	ms_hWnd		= hWnd;
; 357  : 	ms_hDC		= GetDC(hWnd);

  0004d	53		 push	 ebx
  0004e	a3 00 00 00 00	 mov	 DWORD PTR ?ms_iHeight@CGraphicBase@@1HA, eax ; CGraphicBase::ms_iHeight
  00053	89 1d 00 00 00
	00		 mov	 DWORD PTR ?ms_hWnd@CGraphicBase@@1PAUHWND__@@A, ebx ; CGraphicBase::ms_hWnd
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4

; 358  : 	ms_lpd3d	= Direct3DCreate8(D3D_SDK_VERSION);

  0005f	68 dc 00 00 00	 push	 220			; 000000dcH
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?ms_hDC@CGraphicBase@@1PAUHDC__@@A, eax ; CGraphicBase::ms_hDC
  00069	e8 00 00 00 00	 call	 _Direct3DCreate8@4
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A, eax ; CGraphicBase::ms_lpd3d

; 359  : 
; 360  : 	if (!ms_lpd3d)

  00073	85 c0		 test	 eax, eax
  00075	75 0a		 jne	 SHORT $LN4@Create

; 361  : 		return CREATE_NO_DIRECTX;

  00077	b8 02 00 00 00	 mov	 eax, 2
  0007c	e9 ad 0a 00 00	 jmp	 $LN1@Create
$LN4@Create:

; 362  : 
; 363  : 	if (!ms_kD3DDetector.Build(*ms_lpd3d, EL3D_ConfirmDevice))

  00081	68 00 00 00 00	 push	 OFFSET ?EL3D_ConfirmDevice@@YAHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z ; EL3D_ConfirmDevice
  00086	50		 push	 eax
  00087	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kD3DDetector@CGraphicBase@@1VD3D_CDisplayModeAutoDetector@@A ; CGraphicBase::ms_kD3DDetector
  0008c	e8 00 00 00 00	 call	 ?Build@D3D_CDisplayModeAutoDetector@@QAEHAAUIDirect3D8@@P6AHAAU_D3DCAPS8@@IW4_D3DFORMAT@@@Z@Z ; D3D_CDisplayModeAutoDetector::Build
  00091	85 c0		 test	 eax, eax
  00093	75 0a		 jne	 SHORT $LN5@Create

; 364  : 		return CREATE_ENUM;

  00095	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0009a	e9 8f 0a 00 00	 jmp	 $LN1@Create
$LN5@Create:

; 365  : 
; 366  : 	if (!ms_kD3DDetector.Find(800, 600, 32, TRUE, &ms_iD3DModeInfo, &ms_iD3DDevInfo, &ms_iD3DAdapterInfo))

  0009f	68 00 00 00 00	 push	 OFFSET ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  000a4	68 00 00 00 00	 push	 OFFSET ?ms_iD3DDevInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DDevInfo
  000a9	68 00 00 00 00	 push	 OFFSET ?ms_iD3DModeInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DModeInfo
  000ae	6a 01		 push	 1
  000b0	6a 20		 push	 32			; 00000020H
  000b2	68 58 02 00 00	 push	 600			; 00000258H
  000b7	68 20 03 00 00	 push	 800			; 00000320H
  000bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kD3DDetector@CGraphicBase@@1VD3D_CDisplayModeAutoDetector@@A ; CGraphicBase::ms_kD3DDetector
  000c1	e8 00 00 00 00	 call	 ?Find@D3D_CDisplayModeAutoDetector@@QAEHIIIHPAI00@Z ; D3D_CDisplayModeAutoDetector::Find
  000c6	85 c0		 test	 eax, eax
  000c8	75 0a		 jne	 SHORT $LN6@Create

; 367  : 		return CREATE_DETECT;

  000ca	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  000cf	e9 5a 0a 00 00	 jmp	 $LN1@Create
$LN6@Create:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000d4	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _stDevList$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000db	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _stDevList$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000e2	c6 45 c0 00	 mov	 BYTE PTR _stDevList$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 370  : 	ms_kD3DDetector.GetString(&stDevList);

  000e6	8d 45 c0	 lea	 eax, DWORD PTR _stDevList$[ebp]
  000e9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000f0	50		 push	 eax
  000f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kD3DDetector@CGraphicBase@@1VD3D_CDisplayModeAutoDetector@@A ; CGraphicBase::ms_kD3DDetector
  000f6	e8 00 00 00 00	 call	 ?GetString@D3D_CDisplayModeAutoDetector@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3D_CDisplayModeAutoDetector::GetString

; 371  : 
; 372  : 	//Tracen(stDevList.c_str());
; 373  : 	//Tracenf("adapter %d, device %d, mode %d", ms_iD3DAdapterInfo, ms_iD3DDevInfo, ms_iD3DModeInfo);
; 374  : 
; 375  : 	D3D_CAdapterInfo * pkD3DAdapterInfo = ms_kD3DDetector.GetD3DAdapterInfop(ms_iD3DAdapterInfo);

  000fb	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  00101	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kD3DDetector@CGraphicBase@@1VD3D_CDisplayModeAutoDetector@@A ; CGraphicBase::ms_kD3DDetector
  00106	e8 00 00 00 00	 call	 ?GetD3DAdapterInfop@D3D_CDisplayModeAutoDetector@@QAEPAVD3D_CAdapterInfo@@I@Z ; D3D_CDisplayModeAutoDetector::GetD3DAdapterInfop
  0010b	8b f0		 mov	 esi, eax
  0010d	89 75 ac	 mov	 DWORD PTR _pkD3DAdapterInfo$1$[ebp], esi

; 376  : 	if (!pkD3DAdapterInfo)

  00110	85 f6		 test	 esi, esi
  00112	75 1d		 jne	 SHORT $LN7@Create

; 377  : 	{
; 378  : 		Tracenf("adapter %d is EMPTY", ms_iD3DAdapterInfo);

  00114	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JAEGAKLI@adapter?5?$CFd?5is?5EMPTY@
  0011f	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00124	83 c4 08	 add	 esp, 8
  00127	bf 80 00 00 00	 mov	 edi, 128		; 00000080H
  0012c	e9 e6 09 00 00	 jmp	 $LN198@Create
$LN7@Create:

; 379  : 		return CREATE_DETECT;
; 380  : 	}
; 381  : 
; 382  : 	if (__IsInDriverBlackList(*pkD3DAdapterInfo))

  00131	56		 push	 esi
  00132	8b cf		 mov	 ecx, edi
  00134	e8 00 00 00 00	 call	 ?__IsInDriverBlackList@CGraphicDevice@@IAE_NAAVD3D_CAdapterInfo@@@Z ; CGraphicDevice::__IsInDriverBlackList
  00139	84 c0		 test	 al, al
  0013b	74 15		 je	 SHORT $LN8@Create

; 383  : 	{
; 384  : 		iRet |= CREATE_BAD_DRIVER;
; 385  : 		__WarningMessage(hWnd, CREATE_BAD_DRIVER);

  0013d	68 00 02 00 00	 push	 512			; 00000200H
  00142	b8 01 02 00 00	 mov	 eax, 513		; 00000201H
  00147	8b cf		 mov	 ecx, edi
  00149	53		 push	 ebx
  0014a	89 45 bc	 mov	 DWORD PTR _iRet$1$[ebp], eax
  0014d	e8 00 00 00 00	 call	 ?__WarningMessage@CGraphicDevice@@IAEXPAUHWND__@@I@Z ; CGraphicDevice::__WarningMessage
$LN8@Create:

; 386  : 	}
; 387  : 
; 388  : 	D3D_SModeInfo * pkD3DModeInfo = pkD3DAdapterInfo->GetD3DModeInfop(ms_iD3DDevInfo, ms_iD3DModeInfo);

  00152	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DModeInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DModeInfo
  00158	8b ce		 mov	 ecx, esi
  0015a	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DDevInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DDevInfo
  00160	e8 00 00 00 00	 call	 ?GetD3DModeInfop@D3D_CAdapterInfo@@QAEPAUD3D_SModeInfo@@II@Z ; D3D_CAdapterInfo::GetD3DModeInfop
  00165	8b d8		 mov	 ebx, eax

; 389  : 	if (!pkD3DModeInfo)

  00167	85 db		 test	 ebx, ebx
  00169	75 23		 jne	 SHORT $LN9@Create

; 390  : 	{
; 391  : 		Tracenf("device %d, mode %d is EMPTY", ms_iD3DDevInfo, ms_iD3DModeInfo);

  0016b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DModeInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DModeInfo
  00171	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DDevInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DDevInfo
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@LIHILKDJ@device?5?$CFd?0?5mode?5?$CFd?5is?5EMPTY@
  0017c	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00181	83 c4 0c	 add	 esp, 12			; 0000000cH
  00184	bf 80 00 00 00	 mov	 edi, 128		; 00000080H
  00189	e9 89 09 00 00	 jmp	 $LN198@Create
$LN9@Create:

; 392  : 		return CREATE_DETECT;
; 393  : 	}
; 394  : 
; 395  : 	D3DADAPTER_IDENTIFIER8& rkD3DAdapterId=pkD3DAdapterInfo->GetIdentifier();
; 396  : 	if (Windowed &&
; 397  : 		strnicmp(rkD3DAdapterId.Driver, "3dfx", 4)==0 &&

  0018e	80 7d 14 00	 cmp	 BYTE PTR _Windowed$[ebp], 0
  00192	74 2b		 je	 SHORT $LN10@Create
  00194	6a 04		 push	 4
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_04MAKEOOIM@3dfx@
  0019b	56		 push	 esi
  0019c	e8 00 00 00 00	 call	 __strnicmp
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	85 c0		 test	 eax, eax
  001a6	75 17		 jne	 SHORT $LN10@Create
  001a8	8b ce		 mov	 ecx, esi
  001aa	e8 00 00 00 00	 call	 ?GetDesktopD3DDisplayModer@D3D_CAdapterInfo@@QAEAAU_D3DDISPLAYMODE@@XZ ; D3D_CAdapterInfo::GetDesktopD3DDisplayModer
  001af	83 78 0c 16	 cmp	 DWORD PTR [eax+12], 22	; 00000016H
  001b3	75 0a		 jne	 SHORT $LN10@Create

; 398  : 		22 == pkD3DAdapterInfo->GetDesktopD3DDisplayModer().Format)
; 399  : 	{
; 400  : 		return CREATE_FORMAT;

  001b5	bf 00 04 00 00	 mov	 edi, 1024		; 00000400H
  001ba	e9 58 09 00 00	 jmp	 $LN198@Create
$LN10@Create:

; 401  : 	}
; 402  : 
; 403  : 	if (pkD3DModeInfo->m_dwD3DBehavior==D3DCREATE_SOFTWARE_VERTEXPROCESSING)

  001bf	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001c2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stModeInfo$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001c9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stModeInfo$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001d0	c6 45 d8 00	 mov	 BYTE PTR _stModeInfo$[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 413  : 	pkD3DModeInfo->GetString(&stModeInfo);

  001d4	8d 45 d8	 lea	 eax, DWORD PTR _stModeInfo$[ebp]
  001d7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001db	50		 push	 eax
  001dc	8b cb		 mov	 ecx, ebx
  001de	e8 00 00 00 00	 call	 ?GetString@D3D_SModeInfo@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3D_SModeInfo::GetString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  001e3	8b 7d bc	 mov	 edi, DWORD PTR _iRet$1$[ebp]
  001e6	8a 55 14	 mov	 dl, BYTE PTR _Windowed$[ebp]
  001e9	81 cf 00 01 00
	00		 or	 edi, 256		; 00000100H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 417  : 	int ErrorCorrection = 0;

  001ef	8b 4d 1c	 mov	 ecx, DWORD PTR _iReflashRate$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  001f2	83 fe 20	 cmp	 esi, 32			; 00000020H
  001f5	8b 75 ac	 mov	 esi, DWORD PTR _pkD3DAdapterInfo$1$[ebp]
  001f8	0f 45 7d bc	 cmovne	 edi, DWORD PTR _iRet$1$[ebp]
  001fc	0f b6 c2	 movzx	 eax, dl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 417  : 	int ErrorCorrection = 0;

  001ff	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _ErrorCorrection$1$[ebp], 0
  00206	89 45 bc	 mov	 DWORD PTR tv2762[ebp], eax
  00209	0f 1f 80 00 00
	00 00		 npad	 7
$RETRY$222:

; 418  : 
; 419  : RETRY:
; 420  : 	ZeroMemory(&ms_d3dPresentParameter, sizeof(ms_d3dPresentParameter));
; 421  : 
; 422  : 	ms_d3dPresentParameter.Windowed							= Windowed;

  00210	a3 1c 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+28, eax
  00215	0f 57 c0	 xorps	 xmm0, xmm0

; 423  : 	ms_d3dPresentParameter.BackBufferWidth					= iHres;

  00218	8b 45 0c	 mov	 eax, DWORD PTR _iHres$[ebp]
  0021b	a3 00 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A, eax

; 424  : 	ms_d3dPresentParameter.BackBufferHeight					= iVres;

  00220	8b 45 10	 mov	 eax, DWORD PTR _iVres$[ebp]
  00223	a3 04 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+4, eax

; 425  : 	ms_d3dPresentParameter.hDeviceWindow					= hWnd;

  00228	8b 45 b8	 mov	 eax, DWORD PTR _hWnd$GSCopy$1$[ebp]
  0022b	a3 18 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+24, eax

; 426  : 	ms_d3dPresentParameter.BackBufferCount					= m_uBackBufferCount;

  00230	8b 45 b0	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00233	66 0f 13 05 08
	00 00 00	 movlpd	 QWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+8, xmm0
  0023b	66 0f 13 05 10
	00 00 00	 movlpd	 QWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+16, xmm0
  00243	66 0f 13 05 20
	00 00 00	 movlpd	 QWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+32, xmm0
  0024b	66 0f 13 05 28
	00 00 00	 movlpd	 QWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+40, xmm0
  00253	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+48, 0
  0025d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00260	a3 0c 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+12, eax

; 427  : 	ms_d3dPresentParameter.SwapEffect						= D3DSWAPEFFECT_DISCARD;

  00265	c7 05 14 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+20, 1

; 428  : 
; 429  : 	if (Windowed)

  0026f	84 d2		 test	 dl, dl
  00271	74 0c		 je	 SHORT $LN12@Create

; 430  : 	{
; 431  : 		ms_d3dPresentParameter.BackBufferFormat				= pkD3DAdapterInfo->GetDesktopD3DDisplayModer().Format;

  00273	8b ce		 mov	 ecx, esi
  00275	e8 00 00 00 00	 call	 ?GetDesktopD3DDisplayModer@D3D_CAdapterInfo@@QAEAAU_D3DDISPLAYMODE@@XZ ; D3D_CAdapterInfo::GetDesktopD3DDisplayModer
  0027a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]

; 432  : 	}

  0027d	eb 09		 jmp	 SHORT $LN218@Create
$LN12@Create:

; 433  : 	else
; 434  : 	{
; 435  : 		ms_d3dPresentParameter.BackBufferFormat				= pkD3DModeInfo->m_eD3DFmtPixel;

  0027f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]

; 436  : 		ms_d3dPresentParameter.FullScreen_RefreshRateInHz	= iReflashRate;

  00282	89 0d 2c 00 00
	00		 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+44, ecx
$LN218@Create:

; 437  : 	}
; 438  : 
; 439  : 	ms_d3dPresentParameter.Flags							= D3DPRESENTFLAG_LOCKABLE_BACKBUFFER;

  00288	a3 08 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+8, eax

; 440  : 	ms_d3dPresentParameter.EnableAutoDepthStencil			= TRUE;
; 441  : 	ms_d3dPresentParameter.AutoDepthStencilFormat			= pkD3DModeInfo->m_eD3DFmtDepthStencil;
; 442  : 
; 443  : 	ms_dwD3DBehavior = pkD3DModeInfo->m_dwD3DBehavior;
; 444  : 
; 445  : 	if (FAILED(ms_hLastResult = ms_lpd3d->CreateDevice(

  0028d	68 00 00 00 00	 push	 OFFSET ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00292	c7 05 28 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+40, 1
  0029c	c7 05 20 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+32, 1
  002a6	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  002a9	a3 24 00 00 00	 mov	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+36, eax
  002ae	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  002b1	68 00 00 00 00	 push	 OFFSET ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A ; CGraphicBase::ms_d3dPresentParameter
  002b6	a3 00 00 00 00	 mov	 DWORD PTR ?ms_dwD3DBehavior@CGraphicBase@@1KA, eax ; CGraphicBase::ms_dwD3DBehavior
  002bb	ff 73 0c	 push	 DWORD PTR [ebx+12]
  002be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A ; CGraphicBase::ms_lpd3d
  002c3	ff 75 b8	 push	 DWORD PTR _hWnd$GSCopy$1$[ebp]
  002c6	6a 01		 push	 1
  002c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  002ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d0	50		 push	 eax
  002d1	ff 51 3c	 call	 DWORD PTR [ecx+60]
  002d4	a3 00 00 00 00	 mov	 DWORD PTR ?ms_hLastResult@CGraphicBase@@1JA, eax ; CGraphicBase::ms_hLastResult
  002d9	85 c0		 test	 eax, eax
  002db	79 67		 jns	 SHORT $LN14@Create

; 446  : 				ms_iD3DAdapterInfo,
; 447  : 				D3DDEVTYPE_HAL,
; 448  : 				hWnd,
; 449  : 				pkD3DModeInfo->m_dwD3DBehavior,
; 450  : 				&ms_d3dPresentParameter,
; 451  : 				&ms_lpd3dDevice)))
; 452  : 	{
; 453  : 		switch (ms_hLastResult)

  002dd	3d 7c 01 76 88	 cmp	 eax, -2005532292	; 8876017cH
  002e2	74 2c		 je	 SHORT $LN17@Create
  002e4	3d 6a 08 76 88	 cmp	 eax, -2005530518	; 8876086aH
  002e9	74 1e		 je	 SHORT $LN16@Create
  002eb	3d 6c 08 76 88	 cmp	 eax, -2005530516	; 8876086cH
  002f0	74 10		 je	 SHORT $LN15@Create

; 463  : 				break;
; 464  : 			default:
; 465  : 				Tracenf("IDirect3DDevice.CreateDevice - ERROR %d", ms_hLastResult);

  002f2	50		 push	 eax
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@IPGGGCFB@IDirect3DDevice?4CreateDevice?5?9?5@
  002f8	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  002fd	83 c4 08	 add	 esp, 8
  00300	eb 1b		 jmp	 SHORT $LN2@Create
$LN15@Create:

; 454  : 		{
; 455  : 			case D3DERR_INVALIDCALL:
; 456  : 				Tracen("IDirect3DDevice.CreateDevice - ERROR D3DERR_INVALIDCALL\nThe method call is invalid. For example, a method's parameter may have an invalid value.");

  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0JB@NCJOPOMN@IDirect3DDevice?4CreateDevice?5?9?5@

; 457  : 				break;

  00307	eb 0c		 jmp	 SHORT $LN219@Create
$LN16@Create:

; 458  : 			case D3DERR_NOTAVAILABLE:
; 459  : 				Tracen("IDirect3DDevice.CreateDevice - ERROR D3DERR_NOTAVAILABLE\nThis device does not support the queried technique. ");

  00309	68 00 00 00 00	 push	 OFFSET ??_C@_0GO@ICOCNPJJ@IDirect3DDevice?4CreateDevice?5?9?5@

; 460  : 				break;

  0030e	eb 05		 jmp	 SHORT $LN219@Create
$LN17@Create:

; 461  : 			case D3DERR_OUTOFVIDEOMEMORY:
; 462  : 				Tracen("IDirect3DDevice.CreateDevice - ERROR D3DERR_OUTOFVIDEOMEMORY\nDirect3D does not have enough display memory to perform the operation");

  00310	68 00 00 00 00	 push	 OFFSET ??_C@_0ID@GFNIEGEI@IDirect3DDevice?4CreateDevice?5?9?5@
$LN219@Create:

; 466  : 				break;
; 467  : 		}
; 468  : 
; 469  : 		if (ErrorCorrection)

  00315	e8 00 00 00 00	 call	 ?Tracen@@YAXPBD@Z	; Tracen
  0031a	83 c4 04	 add	 esp, 4
$LN2@Create:
  0031d	83 7d b4 00	 cmp	 DWORD PTR _ErrorCorrection$1$[ebp], 0
  00321	75 17		 jne	 SHORT $LN214@Create

; 470  : 			return CREATE_DEVICE;
; 471  : 
; 472  : 		iReflashRate = 0;
; 473  : 		++ErrorCorrection;
; 474  : 		iRet = CREATE_REFRESHRATE;
; 475  : 		goto RETRY;

  00323	8a 55 14	 mov	 dl, BYTE PTR _Windowed$[ebp]
  00326	33 c9		 xor	 ecx, ecx
  00328	8b 45 bc	 mov	 eax, DWORD PTR tv2762[ebp]
  0032b	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _ErrorCorrection$1$[ebp], 1
  00332	8d 79 20	 lea	 edi, DWORD PTR [ecx+32]
  00335	e9 d6 fe ff ff	 jmp	 $RETRY$222
$LN214@Create:
  0033a	bf 10 00 00 00	 mov	 edi, 16			; 00000010H
  0033f	e9 ac 07 00 00	 jmp	 $LN35@Create
$LN14@Create:

; 476  : 	}
; 477  : 
; 478  : 	// Check DXT Support Info
; 479  : 	if(ms_lpd3d->CheckDeviceFormat(
; 480  : 				ms_iD3DAdapterInfo,
; 481  : 				D3DDEVTYPE_HAL,
; 482  : 				ms_d3dPresentParameter.BackBufferFormat,
; 483  : 				0,
; 484  : 				D3DRTYPE_TEXTURE,
; 485  : 				D3DFMT_DXT1) == D3DERR_NOTAVAILABLE)

  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A ; CGraphicBase::ms_lpd3d
  00349	68 44 58 54 31	 push	 827611204		; 31545844H
  0034e	6a 03		 push	 3
  00350	6a 00		 push	 0
  00352	ff 35 08 00 00
	00		 push	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+8
  00358	8b 08		 mov	 ecx, DWORD PTR [eax]
  0035a	6a 01		 push	 1
  0035c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  00362	50		 push	 eax
  00363	ff 51 28	 call	 DWORD PTR [ecx+40]
  00366	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA ; CGraphicBase::ms_bSupportDXT
  0036d	33 d2		 xor	 edx, edx

; 486  : 	{
; 487  : 		ms_bSupportDXT = false;
; 488  : 	}
; 489  : 
; 490  : 	if(ms_lpd3d->CheckDeviceFormat(
; 491  : 				ms_iD3DAdapterInfo,
; 492  : 				D3DDEVTYPE_HAL,
; 493  : 				ms_d3dPresentParameter.BackBufferFormat,
; 494  : 				0,
; 495  : 				D3DRTYPE_TEXTURE,
; 496  : 				D3DFMT_DXT3) == D3DERR_NOTAVAILABLE)

  0036f	68 44 58 54 33	 push	 861165636		; 33545844H
  00374	6a 03		 push	 3
  00376	52		 push	 edx
  00377	ff 35 08 00 00
	00		 push	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+8
  0037d	3d 6a 08 76 88	 cmp	 eax, -2005530518	; 8876086aH
  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A ; CGraphicBase::ms_lpd3d
  00387	6a 01		 push	 1
  00389	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  0038f	0f 44 ca	 cmove	 ecx, edx
  00392	88 0d 00 00 00
	00		 mov	 BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA, cl ; CGraphicBase::ms_bSupportDXT
  00398	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039a	50		 push	 eax
  0039b	ff 51 28	 call	 DWORD PTR [ecx+40]
  0039e	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA ; CGraphicBase::ms_bSupportDXT
  003a5	33 d2		 xor	 edx, edx

; 497  : 	{
; 498  : 		ms_bSupportDXT = false;
; 499  : 	}
; 500  : 
; 501  : 	if(ms_lpd3d->CheckDeviceFormat(
; 502  : 				ms_iD3DAdapterInfo,
; 503  : 				D3DDEVTYPE_HAL,
; 504  : 				ms_d3dPresentParameter.BackBufferFormat,
; 505  : 				0,
; 506  : 				D3DRTYPE_TEXTURE,
; 507  : 				D3DFMT_DXT5) == D3DERR_NOTAVAILABLE)

  003a7	68 44 58 54 35	 push	 894720068		; 35545844H
  003ac	6a 03		 push	 3
  003ae	52		 push	 edx
  003af	ff 35 08 00 00
	00		 push	 DWORD PTR ?ms_d3dPresentParameter@CGraphicBase@@1U_D3DPRESENT_PARAMETERS_@@A+8
  003b5	3d 6a 08 76 88	 cmp	 eax, -2005530518	; 8876086aH
  003ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A ; CGraphicBase::ms_lpd3d
  003bf	6a 01		 push	 1
  003c1	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_iD3DAdapterInfo@CGraphicBase@@1IA ; CGraphicBase::ms_iD3DAdapterInfo
  003c7	0f 44 ca	 cmove	 ecx, edx
  003ca	88 0d 00 00 00
	00		 mov	 BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA, cl ; CGraphicBase::ms_bSupportDXT
  003d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d2	50		 push	 eax
  003d3	ff 51 28	 call	 DWORD PTR [ecx+40]
  003d6	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA ; CGraphicBase::ms_bSupportDXT
  003dd	33 d2		 xor	 edx, edx
  003df	3d 6a 08 76 88	 cmp	 eax, -2005530518	; 8876086aH

; 508  : 	{
; 509  : 		ms_bSupportDXT = false;
; 510  : 	}
; 511  : 
; 512  : 	if (FAILED((ms_hLastResult = ms_lpd3dDevice->GetDeviceCaps(&ms_d3dCaps))))

  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  003e9	68 00 00 00 00	 push	 OFFSET ?ms_d3dCaps@CGraphicBase@@1U_D3DCAPS8@@A ; CGraphicBase::ms_d3dCaps
  003ee	0f 44 ca	 cmove	 ecx, edx
  003f1	88 0d 00 00 00
	00		 mov	 BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA, cl ; CGraphicBase::ms_bSupportDXT
  003f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f9	50		 push	 eax
  003fa	ff 51 1c	 call	 DWORD PTR [ecx+28]
  003fd	a3 00 00 00 00	 mov	 DWORD PTR ?ms_hLastResult@CGraphicBase@@1JA, eax ; CGraphicBase::ms_hLastResult
  00402	85 c0		 test	 eax, eax
  00404	79 18		 jns	 SHORT $LN23@Create

; 513  : 	{
; 514  : 		Tracenf("IDirect3DDevice.GetDeviceCaps - ERROR %d", ms_hLastResult);

  00406	50		 push	 eax
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@PKDINAHJ@IDirect3DDevice?4GetDeviceCaps?5?9@
  0040c	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00411	83 c4 08	 add	 esp, 8

; 515  : 		return CREATE_GET_DEVICE_CAPS2;

  00414	bf 08 00 00 00	 mov	 edi, 8
  00419	e9 d2 06 00 00	 jmp	 $LN35@Create
$LN23@Create:

; 516  : 	}
; 517  : 
; 518  : 	if (!Windowed)

  0041e	80 7d 14 00	 cmp	 BYTE PTR _Windowed$[ebp], 0
  00422	75 17		 jne	 SHORT $LN24@Create

; 519  : 		SetWindowPos(hWnd, HWND_TOPMOST, 0, 0, iHres, iVres, SWP_SHOWWINDOW);

  00424	6a 40		 push	 64			; 00000040H
  00426	ff 75 10	 push	 DWORD PTR _iVres$[ebp]
  00429	ff 75 0c	 push	 DWORD PTR _iHres$[ebp]
  0042c	6a 00		 push	 0
  0042e	6a 00		 push	 0
  00430	6a ff		 push	 -1
  00432	ff 75 b8	 push	 DWORD PTR _hWnd$GSCopy$1$[ebp]
  00435	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
$LN24@Create:

; 520  : 
; 521  : 	//Tracef("vertex shader version : %X\n",(DWORD)ms_d3dCaps.VertexShaderVersion);
; 522  : 
; 523  : 	ms_lpd3dDevice->GetViewport(&ms_Viewport);

  0043b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00440	68 00 00 00 00	 push	 OFFSET ?ms_Viewport@CGraphicBase@@1U_D3DVIEWPORT8@@A ; CGraphicBase::ms_Viewport
  00445	50		 push	 eax
  00446	8b 08		 mov	 ecx, DWORD PTR [eax]
  00448	ff 91 a4 00 00
	00		 call	 DWORD PTR [ecx+164]

; 524  : 
; 525  : 	m_pStateManager = new CStateManager(ms_lpd3dDevice);

  0044e	68 7c 33 01 00	 push	 78716			; 0001337cH
  00453	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00458	83 c4 04	 add	 esp, 4
  0045b	89 45 ac	 mov	 DWORD PTR $T2[ebp], eax
  0045e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00462	85 c0		 test	 eax, eax
  00464	74 0f		 je	 SHORT $LN37@Create
  00466	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0046c	8b c8		 mov	 ecx, eax
  0046e	e8 00 00 00 00	 call	 ??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z ; CStateManager::CStateManager
  00473	eb 02		 jmp	 SHORT $LN38@Create
$LN37@Create:
  00475	33 c0		 xor	 eax, eax
$LN38@Create:
  00477	8b 5d b0	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]

; 526  : 
; 527  : 	D3DXCreateMatrixStack(0, &ms_lpd3dMatStack);

  0047a	68 00 00 00 00	 push	 OFFSET ?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A ; CGraphicBase::ms_lpd3dMatStack
  0047f	6a 00		 push	 0
  00481	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00485	89 43 10	 mov	 DWORD PTR [ebx+16], eax
  00488	e8 00 00 00 00	 call	 _D3DXCreateMatrixStack@8

; 528  : 	ms_lpd3dMatStack->LoadIdentity();

  0048d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A ; CGraphicBase::ms_lpd3dMatStack
  00492	50		 push	 eax
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	ff 51 14	 call	 DWORD PTR [ecx+20]

; 529  : 
; 530  : 	ms_ptVS	= CreatePTStreamVertexShader();

  00498	8b cb		 mov	 ecx, ebx
  0049a	e8 00 00 00 00	 call	 ?CreatePTStreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePTStreamVertexShader

; 531  : 	ms_pntVS = CreatePNTStreamVertexShader();

  0049f	8b cb		 mov	 ecx, ebx
  004a1	a3 00 00 00 00	 mov	 DWORD PTR ?ms_ptVS@CGraphicBase@@1KA, eax ; CGraphicBase::ms_ptVS
  004a6	e8 00 00 00 00	 call	 ?CreatePNTStreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePNTStreamVertexShader

; 532  : 	ms_pnt2VS = CreatePNT2StreamVertexShader();

  004ab	8b cb		 mov	 ecx, ebx
  004ad	a3 00 00 00 00	 mov	 DWORD PTR ?ms_pntVS@CGraphicBase@@1KA, eax ; CGraphicBase::ms_pntVS
  004b2	e8 00 00 00 00	 call	 ?CreatePNT2StreamVertexShader@CGraphicDevice@@IAEKXZ ; CGraphicDevice::CreatePNT2StreamVertexShader
  004b7	a3 00 00 00 00	 mov	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA, eax ; CGraphicBase::ms_pnt2VS
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  004bc	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  004c6	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  004d0	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  004da	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  004e4	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  004ee	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  004f8	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  00502	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  0050c	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  00516	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  00520	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  0052a	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00534	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  0053e	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
  00548	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
  00552	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0055c	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  00566	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  00570	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  0057a	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  00584	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  0058e	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  00598	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  005a2	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  005ac	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  005b6	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  005c0	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  005ca	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  005d4	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  005de	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
  005e8	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
  005f2	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matView@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  005fc	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  00606	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  00610	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  0061a	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  00624	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  0062e	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  00638	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  00642	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  0064c	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  00656	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  00660	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  0066a	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00674	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  0067e	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
  00688	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
  00692	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matProj@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0069c	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  006a6	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  006b0	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  006ba	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  006c4	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  006ce	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  006d8	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  006e2	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  006ec	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  006f6	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  00700	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  0070a	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00714	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  0071e	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 549  : 	ms_matScreen2._11 = (float) iHres / 2;

  00728	66 0f 6e 45 0c	 movd	 xmm0, DWORD PTR _iHres$[ebp]
  0072d	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 551  : 
; 552  : 	D3DXCreateSphere(ms_lpd3dDevice, 1.0f, 32, 32, &ms_lpSphereMesh, NULL);

  00730	6a 00		 push	 0
  00732	68 00 00 00 00	 push	 OFFSET ?ms_lpSphereMesh@CGraphicBase@@1PAUID3DXMesh@@A ; CGraphicBase::ms_lpSphereMesh
  00737	6a 20		 push	 32			; 00000020H
  00739	6a 20		 push	 32			; 00000020H
  0073b	51		 push	 ecx
  0073c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00744	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  0074b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00751	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 549  : 	ms_matScreen2._11 = (float) iHres / 2;

  0075b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A, xmm0
  00763	66 0f 6e 45 10	 movd	 xmm0, DWORD PTR _iVres$[ebp]

; 550  : 	ms_matScreen2._22 = (float) iVres / 2;

  00768	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  0076b	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseView@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00775	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  0077f	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  00789	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  00793	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 550  : 	ms_matScreen2._22 = (float) iVres / 2;

  0079d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  007a5	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  007af	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  007b9	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  007c3	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  007cd	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  007d7	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  007e1	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  007eb	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  007f5	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  007ff	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
  00809	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
  00813	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matInverseViewYAxis@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0081d	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  00827	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  00831	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  0083b	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  00845	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  0084f	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  00859	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  00863	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  0086d	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  00877	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  00881	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  0088b	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00895	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  0089f	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  008a9	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  008b3	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  008bd	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  008c7	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  008d1	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  008db	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  008e5	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  008ef	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  008f9	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  00903	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  0090d	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  00917	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
  00921	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+20, 1065353216 ; 3f800000H
  0092b	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00935	c7 05 38 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+56, 0
  0093f	c7 05 34 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+52, 0
  00949	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+48, 0
  00953	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+44, 0
  0095d	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+36, 0
  00967	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+32, 0
  00971	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+28, 0
  0097b	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+24, 0
  00985	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+16, 0
  0098f	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+12, 0
  00999	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+8, 0
  009a3	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+4, 0

; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  009ad	c7 05 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+60, 1065353216 ; 3f800000H
  009b7	c7 05 28 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+40, 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 543  : 	ms_matScreen0._11 = 1;

  009c1	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A, 1065353216 ; 3f800000H

; 544  : 	ms_matScreen0._22 = -1;

  009cb	c7 05 14 00 00
	00 00 00 80 bf	 mov	 DWORD PTR ?ms_matScreen0@CGraphicBase@@1UD3DXMATRIX@@A+20, -1082130432 ; bf800000H

; 545  : 
; 546  : 	ms_matScreen1._41 = 1;

  009d5	c7 05 30 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+48, 1065353216 ; 3f800000H

; 547  : 	ms_matScreen1._42 = 1;

  009df	c7 05 34 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?ms_matScreen1@CGraphicBase@@1UD3DXMATRIX@@A+52, 1065353216 ; 3f800000H

; 550  : 	ms_matScreen2._22 = (float) iVres / 2;

  009e9	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?ms_matScreen2@CGraphicBase@@1UD3DXMATRIX@@A+20, xmm0

; 551  : 
; 552  : 	D3DXCreateSphere(ms_lpd3dDevice, 1.0f, 32, 32, &ms_lpSphereMesh, NULL);

  009f1	e8 00 00 00 00	 call	 _D3DXCreateSphere@24

; 553  : 	D3DXCreateCylinder(ms_lpd3dDevice, 1.0f, 1.0f, 1.0f, 8, 8, &ms_lpCylinderMesh, NULL);

  009f6	6a 00		 push	 0
  009f8	68 00 00 00 00	 push	 OFFSET ?ms_lpCylinderMesh@CGraphicBase@@1PAUID3DXMesh@@A ; CGraphicBase::ms_lpCylinderMesh
  009fd	6a 08		 push	 8
  009ff	6a 08		 push	 8
  00a01	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00a04	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00a0c	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  00a14	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00a1b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00a21	e8 00 00 00 00	 call	 _D3DXCreateCylinder@32

; 554  : 
; 555  : 	ms_lpd3dDevice->Clear(0L, NULL, D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER, 0xff000000, 1.0f, 0);

  00a26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00a2b	6a 00		 push	 0
  00a2d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a2f	51		 push	 ecx
  00a30	c7 04 24 00 00
	80 3f		 mov	 DWORD PTR [esp], 1065353216 ; 3f800000H
  00a37	68 00 00 00 ff	 push	 -16777216		; ff000000H
  00a3c	6a 03		 push	 3
  00a3e	6a 00		 push	 0
  00a40	6a 00		 push	 0
  00a42	50		 push	 eax
  00a43	ff 91 90 00 00
	00		 call	 DWORD PTR [ecx+144]

; 556  : 
; 557  : 	if (!__CreateDefaultIndexBufferList())

  00a49	8b cb		 mov	 ecx, ebx
  00a4b	e8 00 00 00 00	 call	 ?__CreateDefaultIndexBufferList@CGraphicDevice@@IAE_NXZ ; CGraphicDevice::__CreateDefaultIndexBufferList
  00a50	84 c0		 test	 al, al
  00a52	75 07		 jne	 SHORT $LN25@Create

; 558  : 		return false;

  00a54	33 ff		 xor	 edi, edi
  00a56	e9 95 00 00 00	 jmp	 $LN35@Create
$LN25@Create:

; 559  : 
; 560  : 	if (!__CreatePDTVertexBufferList())

  00a5b	8b cb		 mov	 ecx, ebx
  00a5d	e8 00 00 00 00	 call	 ?__CreatePDTVertexBufferList@CGraphicDevice@@IAE_NXZ ; CGraphicDevice::__CreatePDTVertexBufferList
  00a62	84 c0		 test	 al, al
  00a64	75 07		 jne	 SHORT $LN26@Create

; 561  : 		return false;

  00a66	33 ff		 xor	 edi, edi
  00a68	e9 83 00 00 00	 jmp	 $LN35@Create
$LN26@Create:

; 562  : 
; 563  : 	DWORD dwTexMemSize = GetAvailableTextureMemory();

  00a6d	e8 00 00 00 00	 call	 ?GetAvailableTextureMemory@CGraphicBase@@SAKXZ ; CGraphicBase::GetAvailableTextureMemory

; 564  : 
; 565  : 	if (dwTexMemSize < 64 * 1024 * 1024)

  00a72	3d 00 00 00 04	 cmp	 eax, 67108864		; 04000000H
  00a77	73 3c		 jae	 SHORT $LN27@Create

; 566  : 		ms_isLowTextureMemory = true;

  00a79	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?ms_isLowTextureMemory@CGraphicBase@@1_NA, 1 ; CGraphicBase::ms_isLowTextureMemory
$LN29@Create:

; 572  : 	else
; 573  : 		ms_isHighTextureMemory = false;

  00a80	32 c0		 xor	 al, al
$LN30@Create:

; 574  : 
; 575  : 	if (ms_d3dCaps.TextureAddressCaps & D3DPTADDRESSCAPS_BORDER)

  00a82	a2 00 00 00 00	 mov	 BYTE PTR ?ms_isHighTextureMemory@CGraphicBase@@1_NA, al ; CGraphicBase::ms_isHighTextureMemory
  00a87	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?ms_d3dCaps@CGraphicBase@@1U_D3DCAPS8@@A+76
  00a8c	c1 e8 03	 shr	 eax, 3

; 576  : 		GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER=false;
; 577  : 	else
; 578  : 		GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER=true;
; 579  : 
; 580  : 	//D3DADAPTER_IDENTIFIER8& rkD3DAdapterId=pkD3DAdapterInfo->GetIdentifier();
; 581  : 	if (strnicmp(rkD3DAdapterId.Driver, "SIS", 3) == 0)

  00a8f	6a 03		 push	 3
  00a91	f6 d0		 not	 al
  00a93	24 01		 and	 al, 1
  00a95	68 00 00 00 00	 push	 OFFSET ??_C@_03OJNODIHH@SIS@
  00a9a	56		 push	 esi
  00a9b	a2 00 00 00 00	 mov	 BYTE PTR ?GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER@@3_NA, al ; GRAPHICS_CAPS_CAN_NOT_TEXTURE_ADDRESS_BORDER
  00aa0	e8 00 00 00 00	 call	 __strnicmp
  00aa5	83 c4 0c	 add	 esp, 12			; 0000000cH
  00aa8	85 c0		 test	 eax, eax
  00aaa	75 1b		 jne	 SHORT $LN33@Create

; 582  : 	{
; 583  : 		GRAPHICS_CAPS_CAN_NOT_DRAW_LINE = true;

  00aac	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?GRAPHICS_CAPS_CAN_NOT_DRAW_LINE@@3_NA, 1 ; GRAPHICS_CAPS_CAN_NOT_DRAW_LINE

; 584  : 		GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW = true;
; 585  : 		GRAPHICS_CAPS_HALF_SIZE_IMAGE = true;
; 586  : 		ms_isLowTextureMemory = true;
; 587  : 	}

  00ab3	eb 26		 jmp	 SHORT $LN220@Create
$LN27@Create:

; 567  : 	else
; 568  : 		ms_isLowTextureMemory = false;
; 569  : 
; 570  : 	if (dwTexMemSize > 100 * 1024 * 1024)

  00ab5	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ms_isLowTextureMemory@CGraphicBase@@1_NA, 0 ; CGraphicBase::ms_isLowTextureMemory
  00abc	3d 00 00 40 06	 cmp	 eax, 104857600		; 06400000H
  00ac1	76 bd		 jbe	 SHORT $LN29@Create

; 571  : 		ms_isHighTextureMemory = true;

  00ac3	b0 01		 mov	 al, 1
  00ac5	eb bb		 jmp	 SHORT $LN30@Create
$LN33@Create:

; 588  : 	else if (strnicmp(rkD3DAdapterId.Driver, "3dfx", 4) == 0)

  00ac7	6a 04		 push	 4
  00ac9	68 00 00 00 00	 push	 OFFSET ??_C@_04MAKEOOIM@3dfx@
  00ace	56		 push	 esi
  00acf	e8 00 00 00 00	 call	 __strnicmp
  00ad4	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ad7	85 c0		 test	 eax, eax
  00ad9	75 15		 jne	 SHORT $LN35@Create
$LN220@Create:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00adb	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?ms_isLowTextureMemory@CGraphicBase@@1_NA, 1 ; CGraphicBase::ms_isLowTextureMemory
  00ae2	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA, 1 ; GRAPHICS_CAPS_HALF_SIZE_IMAGE
  00ae9	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW@@3_NA, 1 ; GRAPHICS_CAPS_CAN_NOT_DRAW_SHADOW
$LN35@Create:
  00af0	8b 45 ec	 mov	 eax, DWORD PTR _stModeInfo$[ebp+20]
  00af3	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00af6	72 0d		 jb	 SHORT $LN197@Create

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00af8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00af9	50		 push	 eax
  00afa	ff 75 d8	 push	 DWORD PTR _stModeInfo$[ebp]
  00afd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b02	83 c4 08	 add	 esp, 8
$LN197@Create:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00b05	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stModeInfo$[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b0c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stModeInfo$[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00b13	c6 45 d8 00	 mov	 BYTE PTR _stModeInfo$[ebp], 0
$LN198@Create:

; 2153 :         return _BUF_SIZE <= _Myres;

  00b17	8b 4d d4	 mov	 ecx, DWORD PTR _stDevList$[ebp+20]
  00b1a	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b1d	72 0d		 jb	 SHORT $LN207@Create

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b1f	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b20	51		 push	 ecx
  00b21	ff 75 c0	 push	 DWORD PTR _stDevList$[ebp]
  00b24	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b29	83 c4 08	 add	 esp, 8
$LN207@Create:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 595  : 	return (iRet);

  00b2c	8b c7		 mov	 eax, edi
$LN1@Create:

; 596  : }

  00b2e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b31	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00b38	59		 pop	 ecx
  00b39	5f		 pop	 edi
  00b3a	5e		 pop	 esi
  00b3b	5b		 pop	 ebx
  00b3c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b3f	33 cd		 xor	 ecx, ebp
  00b41	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b46	8b e5		 mov	 esp, ebp
  00b48	5d		 pop	 ebp
  00b49	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR _stDevList$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR _stModeInfo$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z$2:
  00010	68 7c 33 01 00	 push	 78716			; 0001337cH
  00015	8b 45 ac	 mov	 eax, DWORD PTR $T2[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001e	83 c4 08	 add	 esp, 8
  00021	c3		 ret	 0
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
__ehhandler$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z:
  00027	90		 npad	 1
  00028	90		 npad	 1
  00029	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00030	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003d	33 c8		 xor	 ecx, eax
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Create@CGraphicDevice@@QAEHPAUHWND__@@HH_NHH@Z ENDP	; CGraphicDevice::Create
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?Destroy@CGraphicDevice@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGraphicDevice@@QAEXXZ PROC			; CGraphicDevice::Destroy, COMDAT
; _this$ = ecx

; 719  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 720  : 	__DestroyPDTVertexBufferList();

  00003	e8 00 00 00 00	 call	 ?__DestroyPDTVertexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__DestroyPDTVertexBufferList

; 721  : 	__DestroyDefaultIndexBufferList();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?__DestroyDefaultIndexBufferList@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__DestroyDefaultIndexBufferList

; 722  : 
; 723  : 	if (ms_hDC)

  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_hDC@CGraphicBase@@1PAUHDC__@@A ; CGraphicBase::ms_hDC
  00014	85 c0		 test	 eax, eax
  00016	74 17		 je	 SHORT $LN2@Destroy

; 724  : 	{
; 725  : 		ReleaseDC(ms_hWnd, ms_hDC);

  00018	50		 push	 eax
  00019	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_hWnd@CGraphicBase@@1PAUHWND__@@A ; CGraphicBase::ms_hWnd
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8

; 726  : 		ms_hDC = NULL;

  00025	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_hDC@CGraphicBase@@1PAUHDC__@@A, 0 ; CGraphicBase::ms_hDC
$LN2@Destroy:

; 727  : 	}
; 728  : 
; 729  : 	if (ms_ptVS)

  0002f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_ptVS@CGraphicBase@@1KA ; CGraphicBase::ms_ptVS
  00035	85 d2		 test	 edx, edx
  00037	74 19		 je	 SHORT $LN3@Destroy

; 730  : 	{
; 731  : 		ms_lpd3dDevice->DeleteVertexShader(ms_ptVS);

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0003e	52		 push	 edx
  0003f	50		 push	 eax
  00040	8b 08		 mov	 ecx, DWORD PTR [eax]
  00042	ff 91 38 01 00
	00		 call	 DWORD PTR [ecx+312]

; 732  : 		ms_ptVS = 0;;

  00048	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_ptVS@CGraphicBase@@1KA, 0 ; CGraphicBase::ms_ptVS
$LN3@Destroy:

; 733  : 	}
; 734  : 
; 735  : 	if (ms_pntVS)

  00052	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_pntVS@CGraphicBase@@1KA ; CGraphicBase::ms_pntVS
  00058	85 d2		 test	 edx, edx
  0005a	74 19		 je	 SHORT $LN4@Destroy

; 736  : 	{
; 737  : 		ms_lpd3dDevice->DeleteVertexShader(ms_pntVS);

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	ff 91 38 01 00
	00		 call	 DWORD PTR [ecx+312]

; 738  : 		ms_pntVS = 0;

  0006b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_pntVS@CGraphicBase@@1KA, 0 ; CGraphicBase::ms_pntVS
$LN4@Destroy:

; 739  : 	}
; 740  : 
; 741  : 	if (ms_pnt2VS)

  00075	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  0007b	85 d2		 test	 edx, edx
  0007d	74 19		 je	 SHORT $LN5@Destroy

; 742  : 	{
; 743  : 		ms_lpd3dDevice->DeleteVertexShader(ms_pnt2VS);

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00084	52		 push	 edx
  00085	50		 push	 eax
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	ff 91 38 01 00
	00		 call	 DWORD PTR [ecx+312]

; 744  : 		ms_pnt2VS = 0;

  0008e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA, 0 ; CGraphicBase::ms_pnt2VS
$LN5@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterBase\Stl.h

; 138  : 	if (!rpObject)

  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpSphereMesh@CGraphicBase@@1PAUID3DXMesh@@A ; CGraphicBase::ms_lpSphereMesh
  0009e	85 c9		 test	 ecx, ecx
  000a0	74 10		 je	 SHORT $LN10@Destroy

; 139  : 		return;
; 140  : 
; 141  : 	rpObject->Release();

  000a2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a4	51		 push	 ecx
  000a5	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  000a8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpSphereMesh@CGraphicBase@@1PAUID3DXMesh@@A, 0 ; CGraphicBase::ms_lpSphereMesh
$LN10@Destroy:

; 138  : 	if (!rpObject)

  000b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpCylinderMesh@CGraphicBase@@1PAUID3DXMesh@@A ; CGraphicBase::ms_lpCylinderMesh
  000b8	85 c9		 test	 ecx, ecx
  000ba	74 10		 je	 SHORT $LN13@Destroy

; 139  : 		return;
; 140  : 
; 141  : 	rpObject->Release();

  000bc	8b 01		 mov	 eax, DWORD PTR [ecx]
  000be	51		 push	 ecx
  000bf	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  000c2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpCylinderMesh@CGraphicBase@@1PAUID3DXMesh@@A, 0 ; CGraphicBase::ms_lpCylinderMesh
$LN13@Destroy:

; 138  : 	if (!rpObject)

  000cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A ; CGraphicBase::ms_lpd3dMatStack
  000d2	85 c9		 test	 ecx, ecx
  000d4	74 10		 je	 SHORT $LN16@Destroy

; 139  : 		return;
; 140  : 
; 141  : 	rpObject->Release();

  000d6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d8	51		 push	 ecx
  000d9	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  000dc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3dMatStack@CGraphicBase@@1PAUID3DXMatrixStack@@A, 0 ; CGraphicBase::ms_lpd3dMatStack
$LN16@Destroy:

; 138  : 	if (!rpObject)

  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  000ec	85 c9		 test	 ecx, ecx
  000ee	74 10		 je	 SHORT $LN19@Destroy

; 139  : 		return;
; 140  : 
; 141  : 	rpObject->Release();

  000f0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f2	51		 push	 ecx
  000f3	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  000f6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A, 0 ; CGraphicBase::ms_lpd3dDevice
$LN19@Destroy:

; 138  : 	if (!rpObject)

  00100	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A ; CGraphicBase::ms_lpd3d
  00106	85 c9		 test	 ecx, ecx
  00108	74 10		 je	 SHORT $LN22@Destroy

; 139  : 		return;
; 140  : 
; 141  : 	rpObject->Release();

  0010a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010c	51		 push	 ecx
  0010d	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  00110	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_lpd3d@CGraphicBase@@1PAUIDirect3D8@@A, 0 ; CGraphicBase::ms_lpd3d
$LN22@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 754  : 	if (m_pStateManager)

  0011a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0011d	85 c9		 test	 ecx, ecx
  0011f	74 0d		 je	 SHORT $LN6@Destroy

; 755  : 	{
; 756  : 		delete m_pStateManager;

  00121	8b 01		 mov	 eax, DWORD PTR [ecx]
  00123	6a 01		 push	 1
  00125	ff 10		 call	 DWORD PTR [eax]

; 757  : 		m_pStateManager = NULL;

  00127	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN6@Destroy:

; 758  : 	}
; 759  : 
; 760  : 	__Initialize();

  0012e	8b ce		 mov	 ecx, esi
  00130	5e		 pop	 esi
  00131	e9 00 00 00 00	 jmp	 ?__Initialize@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__Initialize
?Destroy@CGraphicDevice@@QAEXXZ ENDP			; CGraphicDevice::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ?InitBackBufferCount@CGraphicDevice@@QAEXI@Z
_TEXT	SEGMENT
_uBackBufferCount$ = 8					; size = 4
?InitBackBufferCount@CGraphicDevice@@QAEXI@Z PROC	; CGraphicDevice::InitBackBufferCount, COMDAT
; _this$ = ecx

; 714  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 715  : 	m_uBackBufferCount=uBackBufferCount;

  00003	8b 45 08	 mov	 eax, DWORD PTR _uBackBufferCount$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 716  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?InitBackBufferCount@CGraphicDevice@@QAEXI@Z ENDP	; CGraphicDevice::InitBackBufferCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ??1CGraphicDevice@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicDevice@@UAE@XZ PROC				; CGraphicDevice::~CGraphicDevice, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicDevice@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CGraphicDevice@@6B@

; 24   : 	Destroy();

  0002c	e8 00 00 00 00	 call	 ?Destroy@CGraphicDevice@@QAEXXZ ; CGraphicDevice::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00031	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 25   : }

  00034	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00037	8b ce		 mov	 ecx, esi
  00039	ff 70 04	 push	 DWORD PTR [eax+4]
  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00042	6a 2c		 push	 44			; 0000002cH
  00044	ff 36		 push	 DWORD PTR [esi]
  00046	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004b	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 25   : }

  0004e	8b cf		 mov	 ecx, edi
  00050	e8 00 00 00 00	 call	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicDevice@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicDevice@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicDevice@@UAE@XZ ENDP				; CGraphicDevice::~CGraphicDevice
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp
;	COMDAT ??0CGraphicDevice@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGraphicDevice@@QAE@XZ PROC				; CGraphicDevice::CGraphicDevice, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicDevice@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  00032	8d 7b 08	 lea	 edi, DWORD PTR [ebx+8]
  00035	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CGraphicDevice@@6B@
  0003b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00042	6a 2c		 push	 44			; 0000002cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 18   : {

  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  0004e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00054	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00060	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00062	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  0006a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006f	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00072	50		 push	 eax
  00073	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0007c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0007f	50		 push	 eax
  00080	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<unsigned int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * const &>
  00089	83 c4 1c	 add	 esp, 28			; 0000001cH

; 347  :         _Pnode->_Color = _Black;

  0008c	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 19   : 	__Initialize();

  00092	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00094	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpDevice.cpp

; 19   : 	__Initialize();

  00096	e8 00 00 00 00	 call	 ?__Initialize@CGraphicDevice@@IAEXXZ ; CGraphicDevice::__Initialize

; 20   : }

  0009b	8b c3		 mov	 eax, ebx
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicDevice@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CGraphicDevice@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicDevice@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicDevice@@QAE@XZ ENDP				; CGraphicDevice::CGraphicDevice
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2270 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2176 :         return __stdio_common_vsscanf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00016	ff 70 04	 push	 DWORD PTR [eax+4]
  00019	ff 30		 push	 DWORD PTR [eax]
  0001b	e8 00 00 00 00	 call	 ___stdio_common_vsscanf
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);
; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);
; 2275 :         __crt_va_end(_ArgList);
; 2276 :         return _Result;
; 2277 :     }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

  00005	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
