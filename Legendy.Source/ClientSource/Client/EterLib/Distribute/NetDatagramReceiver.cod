; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CNetDatagramReceiver@@QAE@XZ			; CNetDatagramReceiver::CNetDatagramReceiver
PUBLIC	??1CNetDatagramReceiver@@UAE@XZ			; CNetDatagramReceiver::~CNetDatagramReceiver
PUBLIC	?Clear@CNetDatagramReceiver@@QAEXXZ		; CNetDatagramReceiver::Clear
PUBLIC	?Bind@CNetDatagramReceiver@@QAEHKG@Z		; CNetDatagramReceiver::Bind
PUBLIC	?isBind@CNetDatagramReceiver@@QAEHXZ		; CNetDatagramReceiver::isBind
PUBLIC	?Process@CNetDatagramReceiver@@QAEHXZ		; CNetDatagramReceiver::Process
PUBLIC	?Recv@CNetDatagramReceiver@@QAEHPAXH@Z		; CNetDatagramReceiver::Recv
PUBLIC	?Peek@CNetDatagramReceiver@@QAEHPAXH@Z		; CNetDatagramReceiver::Peek
PUBLIC	?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z ; CNetDatagramReceiver::SetRecvBufferSize
PUBLIC	??_GCNetDatagramReceiver@@UAEPAXI@Z		; CNetDatagramReceiver::`scalar deleting destructor'
PUBLIC	??_7CNetDatagramReceiver@@6B@			; CNetDatagramReceiver::`vftable'
PUBLIC	??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@	; `string'
PUBLIC	??_R4CNetDatagramReceiver@@6B@			; CNetDatagramReceiver::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNetDatagramReceiver@@@8		; CNetDatagramReceiver `RTTI Type Descriptor'
PUBLIC	??_R3CNetDatagramReceiver@@8			; CNetDatagramReceiver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNetDatagramReceiver@@8			; CNetDatagramReceiver::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNetDatagramReceiver@@8		; CNetDatagramReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	_bind@12:PROC
EXTRN	_ioctlsocket@12:PROC
EXTRN	_htons@4:PROC
EXTRN	_recvfrom@24:PROC
EXTRN	_socket@12:PROC
EXTRN	??_ECNetDatagramReceiver@@UAEPAXI@Z:PROC	; CNetDatagramReceiver::`vector deleting destructor'
EXTRN	_memcpy:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNetDatagramReceiver@@8 DD FLAT:??_R0?AVCNetDatagramReceiver@@@8 ; CNetDatagramReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R2CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R2CNetDatagramReceiver@@8 DD FLAT:??_R1A@?0A@EA@CNetDatagramReceiver@@8 ; CNetDatagramReceiver::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R3CNetDatagramReceiver@@8 DD 00H			; CNetDatagramReceiver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNetDatagramReceiver@@@8
data$r	SEGMENT
??_R0?AVCNetDatagramReceiver@@@8 DD FLAT:??_7type_info@@6B@ ; CNetDatagramReceiver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNetDatagramReceiver@@', 00H
data$r	ENDS
;	COMDAT ??_R4CNetDatagramReceiver@@6B@
rdata$r	SEGMENT
??_R4CNetDatagramReceiver@@6B@ DD 00H			; CNetDatagramReceiver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNetDatagramReceiver@@@8
	DD	FLAT:??_R3CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@
CONST	SEGMENT
??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@ DB 'Failed binding socket', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7CNetDatagramReceiver@@6B@
CONST	SEGMENT
??_7CNetDatagramReceiver@@6B@ DD FLAT:??_R4CNetDatagramReceiver@@6B@ ; CNetDatagramReceiver::`vftable'
	DD	FLAT:??_ECNetDatagramReceiver@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCNetDatagramReceiver@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNetDatagramReceiver@@UAEPAXI@Z PROC		; CNetDatagramReceiver::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNetDatagramReceiver@@UAE@XZ ; CNetDatagramReceiver::~CNetDatagramReceiver
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 30		 push	 48			; 00000030H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCNetDatagramReceiver@@UAEPAXI@Z ENDP		; CNetDatagramReceiver::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z
_TEXT	SEGMENT
_recvBufSize$ = 8					; size = 4
?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z PROC	; CNetDatagramReceiver::SetRecvBufferSize, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 69   : 	if (m_recvBuf)

  00007	8b 7d 08	 mov	 edi, DWORD PTR _recvBufSize$[ebp]
  0000a	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0000d	85 c0		 test	 eax, eax
  0000f	74 0e		 je	 SHORT $LN2@SetRecvBuf

; 70   : 	{
; 71   : 		if (m_recvBufSize>recvBufSize)

  00011	39 7e 2c	 cmp	 DWORD PTR [esi+44], edi
  00014	7f 18		 jg	 SHORT $LN1@SetRecvBuf

; 72   : 			return;
; 73   : 
; 74   : 		delete [] m_recvBuf;

  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0001c	83 c4 04	 add	 esp, 4
$LN2@SetRecvBuf:

; 75   : 	}
; 76   : 	m_recvBufSize=recvBufSize;
; 77   : 	m_recvBuf=new char[m_recvBufSize];

  0001f	57		 push	 edi
  00020	89 7e 2c	 mov	 DWORD PTR [esi+44], edi
  00023	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00028	83 c4 04	 add	 esp, 4
  0002b	89 46 28	 mov	 DWORD PTR [esi+40], eax
$LN1@SetRecvBuf:

; 78   : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z ENDP	; CNetDatagramReceiver::SetRecvBufferSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Peek@CNetDatagramReceiver@@QAEHPAXH@Z
_TEXT	SEGMENT
_pBuffer$ = 8						; size = 4
_iSize$ = 12						; size = 4
?Peek@CNetDatagramReceiver@@QAEHPAXH@Z PROC		; CNetDatagramReceiver::Peek, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	if (m_recvBufCurrentSize < m_recvBufCurrentPos+iSize)

  00003	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00006	56		 push	 esi
  00007	8b 75 0c	 mov	 esi, DWORD PTR _iSize$[ebp]
  0000a	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  0000d	39 41 24	 cmp	 DWORD PTR [ecx+36], eax
  00010	7d 07		 jge	 SHORT $LN2@Peek

; 32   : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	5e		 pop	 esi

; 36   : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
$LN2@Peek:

; 33   : 
; 34   : 	memcpy(pBuffer, m_recvBuf + m_recvBufCurrentPos, iSize);

  00019	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0001c	56		 push	 esi
  0001d	03 c2		 add	 eax, edx
  0001f	50		 push	 eax
  00020	ff 75 08	 push	 DWORD PTR _pBuffer$[ebp]
  00023	e8 00 00 00 00	 call	 _memcpy
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 35   : 	return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	5e		 pop	 esi

; 36   : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?Peek@CNetDatagramReceiver@@QAEHPAXH@Z ENDP		; CNetDatagramReceiver::Peek
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Recv@CNetDatagramReceiver@@QAEHPAXH@Z
_TEXT	SEGMENT
_pBuffer$ = 8						; size = 4
_iSize$ = 12						; size = 4
?Recv@CNetDatagramReceiver@@QAEHPAXH@Z PROC		; CNetDatagramReceiver::Recv, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 22   : 	if (!Peek(pBuffer, iSize))

  00005	8b 7d 0c	 mov	 edi, DWORD PTR _iSize$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	ff 75 08	 push	 DWORD PTR _pBuffer$[ebp]
  0000e	e8 00 00 00 00	 call	 ?Peek@CNetDatagramReceiver@@QAEHPAXH@Z ; CNetDatagramReceiver::Peek
  00013	85 c0		 test	 eax, eax
  00015	75 06		 jne	 SHORT $LN2@Recv

; 27   : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
$LN2@Recv:

; 23   : 		return FALSE;
; 24   : 
; 25   : 	m_recvBufCurrentPos += iSize;

  0001d	01 7e 20	 add	 DWORD PTR [esi+32], edi

; 26   : 	return TRUE;

  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	5f		 pop	 edi

; 27   : }

  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
?Recv@CNetDatagramReceiver@@QAEHPAXH@Z ENDP		; CNetDatagramReceiver::Recv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Process@CNetDatagramReceiver@@QAEHXZ
_TEXT	SEGMENT
_irecvAddrLength$ = -4					; size = 4
?Process@CNetDatagramReceiver@@QAEHXZ PROC		; CNetDatagramReceiver::Process, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 6    : 	m_recvBufCurrentPos = 0;
; 7    : 	m_recvBufCurrentSize = 0;
; 8    : 
; 9    : 	int irecvAddrLength = sizeof(SOCKADDR_IN);

  00007	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR _irecvAddrLength$[ebp], 16 ; 00000010H

; 10   : 	m_recvBufCurrentSize = recvfrom(m_Socket, (char *)m_recvBuf, m_recvBufSize, 0, (PSOCKADDR)&m_SockAddr, &irecvAddrLength);

  0000e	8d 45 fc	 lea	 eax, DWORD PTR _irecvAddrLength$[ebp]
  00011	50		 push	 eax
  00012	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00015	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0001c	50		 push	 eax
  0001d	6a 00		 push	 0
  0001f	ff 76 2c	 push	 DWORD PTR [esi+44]
  00022	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00029	ff 76 28	 push	 DWORD PTR [esi+40]
  0002c	ff 76 0c	 push	 DWORD PTR [esi+12]
  0002f	e8 00 00 00 00	 call	 _recvfrom@24

; 11   : 
; 12   : 	if (m_recvBufCurrentSize <= 0)

  00034	33 c9		 xor	 ecx, ecx
  00036	89 46 24	 mov	 DWORD PTR [esi+36], eax
  00039	85 c0		 test	 eax, eax
  0003b	5e		 pop	 esi
  0003c	0f 9f c1	 setg	 cl
  0003f	8b c1		 mov	 eax, ecx

; 13   : 	{
; 14   : 		return FALSE;
; 15   : 	}
; 16   : 
; 17   : 	return TRUE;
; 18   : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?Process@CNetDatagramReceiver@@QAEHXZ ENDP		; CNetDatagramReceiver::Process
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?isBind@CNetDatagramReceiver@@QAEHXZ
_TEXT	SEGMENT
?isBind@CNetDatagramReceiver@@QAEHXZ PROC		; CNetDatagramReceiver::isBind, COMDAT
; _this$ = ecx

; 40   : 	return m_isBind;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 41   : }

  00003	c3		 ret	 0
?isBind@CNetDatagramReceiver@@QAEHXZ ENDP		; CNetDatagramReceiver::isBind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Bind@CNetDatagramReceiver@@QAEHKG@Z
_TEXT	SEGMENT
_arg$ = -4						; size = 4
___formal$ = 8						; size = 4
_wPortIndex$ = 12					; size = 2
?Bind@CNetDatagramReceiver@@QAEHKG@Z PROC		; CNetDatagramReceiver::Bind, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 45   : 	m_Socket = socket(AF_INET, SOCK_DGRAM, 0);

  00006	6a 00		 push	 0
  00008	6a 02		 push	 2
  0000a	6a 02		 push	 2
  0000c	8b f9		 mov	 edi, ecx
  0000e	e8 00 00 00 00	 call	 _socket@12

; 46   : 
; 47   : 	DWORD arg = 1;
; 48   : 	ioctlsocket(m_Socket, FIONBIO, &arg);	// Non-blocking mode

  00013	8d 4d fc	 lea	 ecx, DWORD PTR _arg$[ebp]
  00016	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00019	51		 push	 ecx
  0001a	68 7e 66 04 80	 push	 -2147195266		; 8004667eH
  0001f	50		 push	 eax
  00020	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _arg$[ebp], 1
  00027	e8 00 00 00 00	 call	 _ioctlsocket@12

; 49   : 
; 50   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));
; 51   : 	m_SockAddr.sin_family = AF_INET;
; 52   : //	m_SockAddr.sin_addr.s_addr = dwAddress;
; 53   : 	m_SockAddr.sin_addr.s_addr = INADDR_ANY;
; 54   : 	m_SockAddr.sin_port = htons(wPortIndex);

  0002c	ff 75 0c	 push	 DWORD PTR _wPortIndex$[ebp]
  0002f	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  00032	0f 57 c0	 xorps	 xmm0, xmm0
  00035	b8 02 00 00 00	 mov	 eax, 2
  0003a	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0003d	66 89 06	 mov	 WORD PTR [esi], ax
  00040	e8 00 00 00 00	 call	 _htons@4

; 55   : 
; 56   : 	if (bind(m_Socket, (PSOCKADDR)&m_SockAddr, sizeof(SOCKADDR_IN)) < 0)

  00045	6a 10		 push	 16			; 00000010H
  00047	56		 push	 esi
  00048	ff 77 0c	 push	 DWORD PTR [edi+12]
  0004b	66 89 47 12	 mov	 WORD PTR [edi+18], ax
  0004f	e8 00 00 00 00	 call	 _bind@12
  00054	85 c0		 test	 eax, eax
  00056	79 17		 jns	 SHORT $LN2@Bind

; 57   : 	{
; 58   : 		Tracef("Failed binding socket\n");

  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@
  0005d	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00062	83 c4 04	 add	 esp, 4

; 59   : 		return FALSE;

  00065	33 c0		 xor	 eax, eax
  00067	5f		 pop	 edi

; 65   : }

  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
$LN2@Bind:

; 60   : 	}
; 61   : 
; 62   : 	m_isBind = TRUE;

  0006f	c7 47 04 01 00
	00 00		 mov	 DWORD PTR [edi+4], 1

; 63   : 
; 64   : 	return TRUE;

  00076	b8 01 00 00 00	 mov	 eax, 1
  0007b	5f		 pop	 edi

; 65   : }

  0007c	5e		 pop	 esi
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?Bind@CNetDatagramReceiver@@QAEHKG@Z ENDP		; CNetDatagramReceiver::Bind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Clear@CNetDatagramReceiver@@QAEXXZ
_TEXT	SEGMENT
?Clear@CNetDatagramReceiver@@QAEXXZ PROC		; CNetDatagramReceiver::Clear, COMDAT
; _this$ = ecx

; 81   : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 82   : 
; 83   : 	m_isBind = FALSE;

  00003	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 84   : 
; 85   : 	m_dwPortIndex = 1000;

  0000a	c7 41 08 e8 03
	00 00		 mov	 DWORD PTR [ecx+8], 1000	; 000003e8H

; 86   : 
; 87   : 	m_Socket = 0;

  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 88   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));

  00018	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0

; 89   : 
; 90   : 	m_recvBufCurrentPos = 0;

  0001c	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 91   : 	m_recvBufCurrentSize = 0;

  00023	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 92   : }

  0002a	c3		 ret	 0
?Clear@CNetDatagramReceiver@@QAEXXZ ENDP		; CNetDatagramReceiver::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ??1CNetDatagramReceiver@@UAE@XZ
_TEXT	SEGMENT
??1CNetDatagramReceiver@@UAE@XZ PROC			; CNetDatagramReceiver::~CNetDatagramReceiver, COMDAT
; _this$ = ecx

; 103  : 	if (m_recvBuf)

  00000	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CNetDatagramReceiver@@6B@
  00009	85 c0		 test	 eax, eax
  0000b	74 07		 je	 SHORT $LN2@CNetDatagr

; 104  : 		delete [] m_recvBuf;

  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00013	59		 pop	 ecx
$LN2@CNetDatagr:

; 105  : }

  00014	c3		 ret	 0
??1CNetDatagramReceiver@@UAE@XZ ENDP			; CNetDatagramReceiver::~CNetDatagramReceiver
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ??0CNetDatagramReceiver@@QAE@XZ
_TEXT	SEGMENT
??0CNetDatagramReceiver@@QAE@XZ PROC			; CNetDatagramReceiver::CNetDatagramReceiver, COMDAT
; _this$ = ecx

; 95   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CNetDatagramReceiver@@6B@

; 96   : 	m_recvBuf = NULL;

  00009	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 97   : 	m_recvBufSize = 0;

  00010	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 98   : 
; 99   : 	Clear();

  00017	e8 00 00 00 00	 call	 ?Clear@CNetDatagramReceiver@@QAEXXZ ; CNetDatagramReceiver::Clear

; 100  : }

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
??0CNetDatagramReceiver@@QAE@XZ ENDP			; CNetDatagramReceiver::CNetDatagramReceiver
_TEXT	ENDS
END
