; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXVECTOR2@@QAE@XZ				; D3DXVECTOR2::D3DXVECTOR2
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	??0CSkyObjectQuad@@QAE@XZ			; CSkyObjectQuad::CSkyObjectQuad
PUBLIC	??1CSkyObjectQuad@@UAE@XZ			; CSkyObjectQuad::~CSkyObjectQuad
PUBLIC	?Clear@CSkyObjectQuad@@QAEXABEABM111@Z		; CSkyObjectQuad::Clear
PUBLIC	?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z	; CSkyObjectQuad::SetSrcColor
PUBLIC	?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z	; CSkyObjectQuad::SetTransition
PUBLIC	?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex
PUBLIC	?StartTransition@CSkyObjectQuad@@QAEXXZ		; CSkyObjectQuad::StartTransition
PUBLIC	?Update@CSkyObjectQuad@@QAE_NXZ			; CSkyObjectQuad::Update
PUBLIC	?Render@CSkyObjectQuad@@QAEXXZ			; CSkyObjectQuad::Render
PUBLIC	??_GCSkyObjectQuad@@UAEPAXI@Z			; CSkyObjectQuad::`scalar deleting destructor'
PUBLIC	??0CSkyObject@@QAE@XZ				; CSkyObject::CSkyObject
PUBLIC	??1CSkyObject@@UAE@XZ				; CSkyObject::~CSkyObject
PUBLIC	?Destroy@CSkyObject@@UAEXXZ			; CSkyObject::Destroy
PUBLIC	?Render@CSkyObject@@UAEXXZ			; CSkyObject::Render
PUBLIC	?Update@CSkyObject@@UAEXXZ			; CSkyObject::Update
PUBLIC	?StartTransition@CSkyObject@@UAEXXZ		; CSkyObject::StartTransition
PUBLIC	?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z ; CSkyObject::GenerateTexture
PUBLIC	?DeleteTexture@CSkyObject@@IAEXPAVCGraphicImageInstance@@@Z ; CSkyObject::DeleteTexture
PUBLIC	?deallocate@?$allocator@VCSkyObjectQuad@@@std@@QAEXQAVCSkyObjectQuad@@I@Z ; std::allocator<CSkyObjectQuad>::deallocate
PUBLIC	?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::resize
PUBLIC	?_Destroy@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXPAVCSkyObjectQuad@@0@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Destroy
PUBLIC	?_Xlength@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xlength
PUBLIC	?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xrange
PUBLIC	?_Getal@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEAAV?$allocator@VCSkyObjectQuad@@@2@XZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Getal
PUBLIC	?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::StartTransition
PUBLIC	?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ	; CSkyObject::TSkyObjectFace::Update
PUBLIC	?Render@TSkyObjectFace@CSkyObject@@QAEXXZ	; CSkyObject::TSkyObjectFace::Render
PUBLIC	??0TSkyObjectFace@CSkyObject@@QAE@XZ		; CSkyObject::TSkyObjectFace::TSkyObjectFace
PUBLIC	??1TSkyObjectFace@CSkyObject@@QAE@XZ		; CSkyObject::TSkyObjectFace::~TSkyObjectFace
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::operator[]
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >
PUBLIC	??_GCSkyObject@@UAEPAXI@Z			; CSkyObject::`scalar deleting destructor'
PUBLIC	??0CSkyBox@@QAE@XZ				; CSkyBox::CSkyBox
PUBLIC	??1CSkyBox@@UAE@XZ				; CSkyBox::~CSkyBox
PUBLIC	?Update@CSkyBox@@UAEXXZ				; CSkyBox::Update
PUBLIC	?Render@CSkyBox@@UAEXXZ				; CSkyBox::Render
PUBLIC	?RenderCloud@CSkyBox@@QAEXXZ			; CSkyBox::RenderCloud
PUBLIC	?Destroy@CSkyBox@@UAEXXZ			; CSkyBox::Destroy
PUBLIC	?Unload@CSkyBox@@QAEXXZ				; CSkyBox::Unload
PUBLIC	?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z	; CSkyBox::SetSkyBoxScale
PUBLIC	?SetGradientLevel@CSkyBox@@QAEXEE@Z		; CSkyBox::SetGradientLevel
PUBLIC	?SetFaceTexture@CSkyBox@@QAEXPBDH@Z		; CSkyBox::SetFaceTexture
PUBLIC	?SetCloudTexture@CSkyBox@@QAEXPBD@Z		; CSkyBox::SetCloudTexture
PUBLIC	?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z	; CSkyBox::SetCloudScale
PUBLIC	?SetCloudHeight@CSkyBox@@QAEXM@Z		; CSkyBox::SetCloudHeight
PUBLIC	?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ; CSkyBox::SetCloudTextureScale
PUBLIC	?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ; CSkyBox::SetCloudScrollSpeed
PUBLIC	?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z ; CSkyBox::SetCloudColor
PUBLIC	?Refresh@CSkyBox@@QAEXXZ			; CSkyBox::Refresh
PUBLIC	?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z ; CSkyBox::SetSkyColor
PUBLIC	?StartTransition@CSkyBox@@UAEXXZ		; CSkyBox::StartTransition
PUBLIC	?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ; CSkyBox::SetSkyObjectQuadVertical
PUBLIC	?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
PUBLIC	??_GCSkyBox@@UAEPAXI@Z				; CSkyBox::`scalar deleting destructor'
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::insert<0,0>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
PUBLIC	??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSkyObjectQuad> >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >::~_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Uninitialized_move@PAVCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@QAV1@0PAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Uninitialized_move<CSkyObjectQuad *,std::allocator<CSkyObjectQuad> >
PUBLIC	??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CSkyObjectQuad@@6B@				; CSkyObjectQuad::`vftable'
PUBLIC	??_7CSkyObject@@6B@				; CSkyObject::`vftable'
PUBLIC	??_7CSkyBox@@6B@				; CSkyBox::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_C@_05HJNNLMDJ@front@				; `string'
PUBLIC	??_C@_04JFCNHLLM@back@				; `string'
PUBLIC	??_C@_04GOOOJOPP@left@				; `string'
PUBLIC	??_C@_05DHJDAOHK@right@				; `string'
PUBLIC	??_C@_03FGFCOCMD@top@				; `string'
PUBLIC	??_C@_06PMMPCIPB@bottom@			; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CSkyObjectQuad@@6B@			; CSkyObjectQuad::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkyObjectQuad@@@8			; CSkyObjectQuad `RTTI Type Descriptor'
PUBLIC	??_R3CSkyObjectQuad@@8				; CSkyObjectQuad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkyObjectQuad@@8				; CSkyObjectQuad::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkyObjectQuad@@8			; CSkyObjectQuad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSkyObject@@6B@				; CSkyObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkyObject@@@8				; CSkyObject `RTTI Type Descriptor'
PUBLIC	??_R3CSkyObject@@8				; CSkyObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkyObject@@8				; CSkyObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkyObject@@8			; CSkyObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4CSkyBox@@6B@				; CSkyBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkyBox@@@8				; CSkyBox `RTTI Type Descriptor'
PUBLIC	??_R3CSkyBox@@8					; CSkyBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkyBox@@8					; CSkyBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkyBox@@8			; CSkyBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3a83126f
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@bf800000
PUBLIC	__xmm@3f8000003f8000003f800000bf800000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
PUBLIC	__xmm@bf8000003f8000003f8000003f800000
PUBLIC	__xmm@bf800000bf800000bf8000003f800000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXMatrixScaling@16:PROC
EXTRN	_D3DXMatrixPerspectiveFovRH@20:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	??0CScreen@@QAE@XZ:PROC				; CScreen::CScreen
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?IsType@CResource@@QAE_NK@Z:PROC		; CResource::IsType
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?Type@CGraphicImage@@SAKXZ:PROC			; CGraphicImage::Type
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTextureReference
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	??0CColorTransitionHelper@@QAE@XZ:PROC		; CColorTransitionHelper::CColorTransitionHelper
EXTRN	??1CColorTransitionHelper@@QAE@XZ:PROC		; CColorTransitionHelper::~CColorTransitionHelper
EXTRN	?Clear@CColorTransitionHelper@@QAEXABM000@Z:PROC ; CColorTransitionHelper::Clear
EXTRN	?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z:PROC ; CColorTransitionHelper::SetSrcColor
EXTRN	?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z:PROC ; CColorTransitionHelper::SetTransition
EXTRN	?GetCurColor@CColorTransitionHelper@@QAEABKXZ:PROC ; CColorTransitionHelper::GetCurColor
EXTRN	?StartTransition@CColorTransitionHelper@@QAEXXZ:PROC ; CColorTransitionHelper::StartTransition
EXTRN	?Update@CColorTransitionHelper@@QAE_NXZ:PROC	; CColorTransitionHelper::Update
EXTRN	??_ECSkyObjectQuad@@UAEPAXI@Z:PROC		; CSkyObjectQuad::`vector deleting destructor'
EXTRN	??_ECSkyObject@@UAEPAXI@Z:PROC			; CSkyObject::`vector deleting destructor'
EXTRN	??_ECSkyBox@@UAEPAXI@Z:PROC			; CSkyBox::`vector deleting destructor'
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SaveTransform
EXTRN	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z:PROC ; CStateManager::RestoreTransform
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z:PROC ; CStateManager::DrawPrimitive
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetCurrentMillisecond@CTimer@@QAEKXZ:PROC	; CTimer::GetCurrentMillisecond
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT __xmm@bf800000bf800000bf8000003f800000
CONST	SEGMENT
__xmm@bf800000bf800000bf8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	0bfH, 00H, 00H, 080H, 0bfH, 00H, 00H, 080H, 0bfH
CONST	ENDS
;	COMDAT __xmm@bf8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@bf8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, 0bfH
CONST	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f800000bf800000
CONST	SEGMENT
__xmm@3f8000003f8000003f800000bf800000 DB 00H, 00H, 080H, 0bfH, 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CSkyBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkyBox@@8 DD FLAT:??_R0?AVCSkyBox@@@8	; CSkyBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkyBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkyBox@@8
rdata$r	SEGMENT
??_R2CSkyBox@@8 DD FLAT:??_R1A@?0A@EA@CSkyBox@@8	; CSkyBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSkyObject@@8
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSkyBox@@8
rdata$r	SEGMENT
??_R3CSkyBox@@8 DD 00H					; CSkyBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CSkyBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkyBox@@@8
data$r	SEGMENT
??_R0?AVCSkyBox@@@8 DD FLAT:??_7type_info@@6B@		; CSkyBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkyBox@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSkyBox@@6B@
rdata$r	SEGMENT
??_R4CSkyBox@@6B@ DD 00H				; CSkyBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkyBox@@@8
	DD	FLAT:??_R3CSkyBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$r	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSkyObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkyObject@@8 DD FLAT:??_R0?AVCSkyObject@@@8 ; CSkyObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkyObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkyObject@@8
rdata$r	SEGMENT
??_R2CSkyObject@@8 DD FLAT:??_R1A@?0A@EA@CSkyObject@@8	; CSkyObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSkyObject@@8
rdata$r	SEGMENT
??_R3CSkyObject@@8 DD 00H				; CSkyObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CSkyObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkyObject@@@8
data$r	SEGMENT
??_R0?AVCSkyObject@@@8 DD FLAT:??_7type_info@@6B@	; CSkyObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkyObject@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSkyObject@@6B@
rdata$r	SEGMENT
??_R4CSkyObject@@6B@ DD 00H				; CSkyObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkyObject@@@8
	DD	FLAT:??_R3CSkyObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSkyObjectQuad@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkyObjectQuad@@8 DD FLAT:??_R0?AVCSkyObjectQuad@@@8 ; CSkyObjectQuad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkyObjectQuad@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkyObjectQuad@@8
rdata$r	SEGMENT
??_R2CSkyObjectQuad@@8 DD FLAT:??_R1A@?0A@EA@CSkyObjectQuad@@8 ; CSkyObjectQuad::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSkyObjectQuad@@8
rdata$r	SEGMENT
??_R3CSkyObjectQuad@@8 DD 00H				; CSkyObjectQuad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSkyObjectQuad@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkyObjectQuad@@@8
data$r	SEGMENT
??_R0?AVCSkyObjectQuad@@@8 DD FLAT:??_7type_info@@6B@	; CSkyObjectQuad `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkyObjectQuad@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSkyObjectQuad@@6B@
rdata$r	SEGMENT
??_R4CSkyObjectQuad@@6B@ DD 00H				; CSkyObjectQuad::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkyObjectQuad@@@8
	DD	FLAT:??_R3CSkyObjectQuad@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06PMMPCIPB@bottom@
CONST	SEGMENT
??_C@_06PMMPCIPB@bottom@ DB 'bottom', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FGFCOCMD@top@
CONST	SEGMENT
??_C@_03FGFCOCMD@top@ DB 'top', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DHJDAOHK@right@
CONST	SEGMENT
??_C@_05DHJDAOHK@right@ DB 'right', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GOOOJOPP@left@
CONST	SEGMENT
??_C@_04GOOOJOPP@left@ DB 'left', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFCNHLLM@back@
CONST	SEGMENT
??_C@_04JFCNHLLM@back@ DB 'back', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HJNNLMDJ@front@
CONST	SEGMENT
??_C@_05HJNNLMDJ@front@ DB 'front', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSkyBox@@6B@
CONST	SEGMENT
??_7CSkyBox@@6B@ DD FLAT:??_R4CSkyBox@@6B@		; CSkyBox::`vftable'
	DD	FLAT:??_ECSkyBox@@UAEPAXI@Z
	DD	FLAT:?Destroy@CSkyBox@@UAEXXZ
	DD	FLAT:?Render@CSkyBox@@UAEXXZ
	DD	FLAT:?Update@CSkyBox@@UAEXXZ
	DD	FLAT:?StartTransition@CSkyBox@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkyObject@@6B@
CONST	SEGMENT
??_7CSkyObject@@6B@ DD FLAT:??_R4CSkyObject@@6B@	; CSkyObject::`vftable'
	DD	FLAT:??_ECSkyObject@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?StartTransition@CSkyObject@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkyObjectQuad@@6B@
CONST	SEGMENT
??_7CSkyObjectQuad@@6B@ DD FLAT:??_R4CSkyObjectQuad@@6B@ ; CSkyObjectQuad::`vftable'
	DD	FLAT:??_ECSkyObjectQuad@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$0
__ehfuncinfo$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z$0
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$1
__ehfuncinfo$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??$_Try_emplace@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@_N@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$1
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetCloudTexture@CSkyBox@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCloudTexture@CSkyBox@@QAEXPBD@Z$1
__ehfuncinfo$?SetCloudTexture@CSkyBox@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCloudTexture@CSkyBox@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z$1
__ehfuncinfo$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Render@CSkyBox@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@CSkyBox@@UAEXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@CSkyBox@@UAEXXZ$1
__ehfuncinfo$?Render@CSkyBox@@UAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Render@CSkyBox@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSkyBox@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSkyBox@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSkyBox@@QAE@XZ$0
__ehfuncinfo$??0CSkyBox@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSkyBox@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CSkyObject@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CSkyObject@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CSkyObject@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSkyObject@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CSkyObject@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CSkyObject@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CSkyObject@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CSkyObject@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSkyObjectQuad@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT
; _this$ = ecx

; 975  :     : first(_STD get<_Indexes1>(_STD move(_Val1))...), second(_STD get<_Indexes2>(_STD move(_Val2))...) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	ff 30		 push	 DWORD PTR [eax]
  0000f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00014	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 10 00	 ret	 16			; 00000010H
??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\tuple
;	COMDAT ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
_this$ = -8						; size = 4
$T2 = -4						; size = 1
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 1
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; _this$ = ecx

; 981  :     : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8d 45 10	 lea	 eax, DWORD PTR __Val2$[ebp]
  0000c	89 75 f8	 mov	 DWORD PTR _this$[ebp], esi
  0000f	c6 45 fc 00	 mov	 BYTE PTR $T2[ebp], 0
  00013	ff 75 fc	 push	 DWORD PTR $T2[ebp]
  00016	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8d 45 0c	 lea	 eax, DWORD PTR __Val1$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$V@1@U?$integer_sequence@I$0A@@1@U?$integer_sequence@I$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAVCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@QAV1@0PAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv409 = 16						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@QAV1@0PAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z PROC ; std::_Uninitialized_move<CSkyObjectQuad *,std::allocator<CSkyObjectQuad> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  0000d	74 7e		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000f	56		 push	 esi
  00010	8b f3		 mov	 esi, ebx
  00012	8d 53 6c	 lea	 edx, DWORD PTR [ebx+108]
  00015	2b f1		 sub	 esi, ecx
  00017	8d 41 64	 lea	 eax, DWORD PTR [ecx+100]
  0001a	57		 push	 edi
  0001b	89 75 10	 mov	 DWORD PTR tv409[ebp], esi
  0001e	66 90		 npad	 2
$LL4@Uninitiali:
  00020	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CSkyObjectQuad@@6B@
  00026	8b fa		 mov	 edi, edx
  00028	0f 10 40 a0	 movups	 xmm0, XMMWORD PTR [eax-96]

; 1509 :         ++_Last;

  0002c	81 c3 2c 01 00
	00		 add	 ebx, 300		; 0000012cH
  00032	0f 11 42 98	 movups	 XMMWORD PTR [edx-104], xmm0
  00036	0f 10 40 b0	 movups	 xmm0, XMMWORD PTR [eax-80]
  0003a	0f 11 42 a8	 movups	 XMMWORD PTR [edx-88], xmm0
  0003e	0f 10 40 c0	 movups	 xmm0, XMMWORD PTR [eax-64]
  00042	0f 11 42 b8	 movups	 XMMWORD PTR [edx-72], xmm0
  00046	0f 10 40 d0	 movups	 xmm0, XMMWORD PTR [eax-48]
  0004a	0f 11 42 c8	 movups	 XMMWORD PTR [edx-56], xmm0
  0004e	0f 10 40 e0	 movups	 xmm0, XMMWORD PTR [eax-32]
  00052	0f 11 42 d8	 movups	 XMMWORD PTR [edx-40], xmm0
  00056	0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [eax-16]
  0005a	0f 11 42 e8	 movups	 XMMWORD PTR [edx-24], xmm0
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	81 c2 2c 01 00
	00		 add	 edx, 300		; 0000012cH
  00066	89 0c 06	 mov	 DWORD PTR [esi+eax], ecx
  00069	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006c	89 4c 06 04	 mov	 DWORD PTR [esi+eax+4], ecx
  00070	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  00073	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00078	8d 80 2c 01 00
	00		 lea	 eax, DWORD PTR [eax+300]
  0007e	f3 a5		 rep movsd

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00080	8b 75 10	 mov	 esi, DWORD PTR tv409[ebp]
  00083	8d 48 9c	 lea	 ecx, DWORD PTR [eax-100]
  00086	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00089	75 95		 jne	 SHORT $LL4@Uninitiali
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0008d	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  00090	53		 push	 ebx
  00091	53		 push	 ebx
  00092	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  0009a	8b c3		 mov	 eax, ebx
  0009c	5b		 pop	 ebx

; 1664 :     }
; 1665 : }

  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
??$_Uninitialized_move@PAVCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@QAV1@0PAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ENDP ; std::_Uninitialized_move<CSkyObjectQuad *,std::allocator<CSkyObjectQuad> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4502 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b c8		 mov	 ecx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN6@operator:
  00010	53		 push	 ebx
  00011	56		 push	 esi

; 2144 :         const value_type* _Result = _Bx._Buf;

  00012	8b 75 08	 mov	 esi, DWORD PTR __Left$[ebp]
  00015	8b d6		 mov	 edx, esi
  00017	57		 push	 edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001c	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001e	8b 16		 mov	 edx, DWORD PTR [esi]
$LN11@operator:

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00020	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00023	8b f3		 mov	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4129 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00025	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  00028	3b fb		 cmp	 edi, ebx
  0002a	0f 42 f7	 cmovb	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0002d	83 ee 04	 sub	 esi, 4
  00030	72 11		 jb	 SHORT $LN26@operator
$LL27@operator:
  00032	8b 02		 mov	 eax, DWORD PTR [edx]
  00034	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00036	75 10		 jne	 SHORT $LN25@operator
  00038	83 c2 04	 add	 edx, 4
  0003b	83 c1 04	 add	 ecx, 4
  0003e	83 ee 04	 sub	 esi, 4
  00041	73 ef		 jae	 SHORT $LL27@operator
$LN26@operator:
  00043	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00046	74 34		 je	 SHORT $LN24@operator
$LN25@operator:
  00048	8a 02		 mov	 al, BYTE PTR [edx]
  0004a	3a 01		 cmp	 al, BYTE PTR [ecx]
  0004c	75 27		 jne	 SHORT $LN28@operator
  0004e	83 fe fd	 cmp	 esi, -3			; fffffffdH
  00051	74 29		 je	 SHORT $LN24@operator
  00053	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00056	3a 41 01	 cmp	 al, BYTE PTR [ecx+1]
  00059	75 1a		 jne	 SHORT $LN28@operator
  0005b	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0005e	74 1c		 je	 SHORT $LN24@operator
  00060	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00063	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00066	75 0d		 jne	 SHORT $LN28@operator
  00068	83 fe ff	 cmp	 esi, -1
  0006b	74 0f		 je	 SHORT $LN24@operator
  0006d	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  00070	3a 41 03	 cmp	 al, BYTE PTR [ecx+3]
  00073	74 07		 je	 SHORT $LN24@operator
$LN28@operator:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
  0007a	eb 02		 jmp	 SHORT $LN29@operator
$LN24@operator:
  0007c	33 c0		 xor	 eax, eax
$LN29@operator:

; 513  :     if (_Ans != 0) {

  0007e	85 c0		 test	 eax, eax
  00080	75 13		 jne	 SHORT $LN18@operator

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  00082	3b fb		 cmp	 edi, ebx
  00084	76 0b		 jbe	 SHORT $LN30@operator

; 4503 :     return _Left.compare(_Right) < 0;

  00086	5f		 pop	 edi

; 518  :         return -1;

  00087	83 c8 ff	 or	 eax, -1

; 4503 :     return _Left.compare(_Right) < 0;

  0008a	5e		 pop	 esi
  0008b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008e	5b		 pop	 ebx

; 4504 : }

  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN30@operator:

; 521  :     if (_Left_size > _Right_size) {

  00091	1b c0		 sbb	 eax, eax
  00093	f7 d8		 neg	 eax
$LN18@operator:

; 4503 :     return _Left.compare(_Right) < 0;

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0009a	5b		 pop	 ebx

; 4504 : }

  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >::~_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >::~_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CSkyObjectQuad> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0002b	8b 5d 10	 mov	 ebx, DWORD PTR __Al$[ebp]
  0002e	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00031	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00034	89 5d f0	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00037	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	85 f6		 test	 esi, esi
  00043	74 15		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00045	8b cf		 mov	 ecx, edi
  00047	e8 00 00 00 00	 call	 ??0CSkyObjectQuad@@QAE@XZ ; CSkyObjectQuad::CSkyObjectQuad

; 1509 :         ++_Last;

  0004c	81 c7 2c 01 00
	00		 add	 edi, 300		; 0000012cH
  00052	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00055	83 ee 01	 sub	 esi, 1
  00058	75 eb		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0005a	53		 push	 ebx
  0005b	57		 push	 edi
  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00065	8b c7		 mov	 eax, edi

; 1838 :     }
; 1839 : }

  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >::~_Uninitialized_backout_al<std::allocator<CSkyObjectQuad> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CSkyObjectQuad> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
tv331 = -28						; size = 4
__Oldsize$1$ = -24					; size = 4
__Appended_first$ = -24					; size = 4
__Newvec$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d e0	 mov	 DWORD PTR _this$[ebp], edi

; 1183 :         if (_Newsize > max_size()) {

  00030	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  00033	81 fb 0d 74 da
	00		 cmp	 ebx, 14316557		; 00da740dH
  00039	0f 87 30 01 00
	00		 ja	 $LN39@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0003f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00042	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00047	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00049	f7 e9		 imul	 ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004e	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00050	c1 fa 05	 sar	 edx, 5
  00053	8b c2		 mov	 eax, edx
  00055	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00058	03 c2		 add	 eax, edx
  0005a	89 45 e8	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005d	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00062	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00064	b8 0d 74 da 00	 mov	 eax, 14316557		; 00da740dH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00069	c1 fa 05	 sar	 edx, 5
  0006c	8b ca		 mov	 ecx, edx
  0006e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00071	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00073	8b d1		 mov	 edx, ecx
  00075	d1 ea		 shr	 edx, 1
  00077	2b c2		 sub	 eax, edx
  00079	3b c8		 cmp	 ecx, eax
  0007b	77 17		 ja	 SHORT $LN37@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007d	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00080	3b c3		 cmp	 eax, ebx
  00082	72 10		 jb	 SHORT $LN37@Resize_rea

; 1626 :             return _Newsize; // geometric growth would be insufficient
; 1627 :         }
; 1628 : 
; 1629 :         return _Geometric; // geometric growth is sufficient

  00084	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00087	3d 0d 74 da 00	 cmp	 eax, 14316557		; 00da740dH
  0008c	0f 87 e2 00 00
	00		 ja	 $LN40@Resize_rea
  00092	eb 05		 jmp	 SHORT $LN18@Resize_rea
$LN37@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00094	8b c3		 mov	 eax, ebx
  00096	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN18@Resize_rea:
  00099	69 c0 2c 01 00
	00		 imul	 eax, eax, 300

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  000a0	89 45 e4	 mov	 DWORD PTR tv331[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a3	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000a8	8b 55 e8	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ab	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000ad	69 ca 2c 01 00
	00		 imul	 ecx, edx, 300

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000b3	8b c3		 mov	 eax, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000b5	57		 push	 edi

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000b6	2b c2		 sub	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b8	89 75 ec	 mov	 DWORD PTR __Newvec$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000bb	50		 push	 eax

; 1196 :         pointer _Appended_last        = _Appended_first;
; 1197 : 
; 1198 :         _TRY_BEGIN

  000bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000c3	03 ce		 add	 ecx, esi

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000c5	51		 push	 ecx

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000c6	89 4d e8	 mov	 DWORD PTR __Appended_first$[ebp], ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000c9	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSkyObjectQuad> >
  000ce	83 c4 10	 add	 esp, 16			; 00000010H

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d1	57		 push	 edi
  000d2	56		 push	 esi
  000d3	ff 77 04	 push	 DWORD PTR [edi+4]
  000d6	ff 37		 push	 DWORD PTR [edi]
  000d8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@QAV1@0PAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Uninitialized_move<CSkyObjectQuad *,std::allocator<CSkyObjectQuad> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000dd	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000e2	85 c9		 test	 ecx, ecx
  000e4	74 35		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000e6	57		 push	 edi
  000e7	ff 77 04	 push	 DWORD PTR [edi+4]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000f0	8b 37		 mov	 esi, DWORD PTR [edi]
  000f2	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  000f7	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000fa	2b ce		 sub	 ecx, esi
  000fc	f7 e9		 imul	 ecx
  000fe	c1 fa 05	 sar	 edx, 5
  00101	8b c2		 mov	 eax, edx
  00103	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00106	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00108	69 c0 2c 01 00
	00		 imul	 eax, eax, 300
  0010e	50		 push	 eax
  0010f	56		 push	 esi
  00110	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00115	8b 75 ec	 mov	 esi, DWORD PTR __Newvec$[ebp]
  00118	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0011b	69 c3 2c 01 00
	00		 imul	 eax, ebx, 300
  00121	89 37		 mov	 DWORD PTR [edi], esi
  00123	03 c6		 add	 eax, esi
  00125	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00128	8b 45 e4	 mov	 eax, DWORD PTR tv331[ebp]
  0012b	03 c6		 add	 eax, esi
  0012d	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 1208 :     }

  00130	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00133	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013a	59		 pop	 ecx
  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c2 08 00	 ret	 8
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1201 :         _CATCH_ALL
; 1202 :         _Destroy(_Appended_first, _Appended_last);

  00144	8b 45 e8	 mov	 eax, DWORD PTR __Appended_first$[ebp]
  00147	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	50		 push	 eax
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXPAVCSkyObjectQuad@@0@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Destroy

; 1203 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00151	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  00154	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	ff 75 ec	 push	 DWORD PTR __Newvec$[ebp]
  0015a	e8 00 00 00 00	 call	 ?_Getal@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEAAV?$allocator@VCSkyObjectQuad@@@2@XZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Getal
  0015f	8b c8		 mov	 ecx, eax
  00161	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VCSkyObjectQuad@@@std@@QAEXQAVCSkyObjectQuad@@I@Z ; std::allocator<CSkyObjectQuad>::deallocate

; 1204 :         _RERAISE;

  00166	6a 00		 push	 0
  00168	6a 00		 push	 0
  0016a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN39@Resize_rea:

; 1184 :             _Xlength();

  0016f	e8 00 00 00 00	 call	 ?_Xlength@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xlength
$LN40@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00174	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN36@Resize_rea:
  00179	cc		 int	 3
  0017a	cc		 int	 3
  0017b	cc		 int	 3
  0017c	cc		 int	 3
  0017d	cc		 int	 3
  0017e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN4@Tree_temp_

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 2c		 push	 44			; 0000002cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN4@Tree_temp_:
  00012	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 2c		 push	 44			; 0000002cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	89 37		 mov	 DWORD PTR [edi], esi

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0000f	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00013	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0001a	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0001d	75 32		 jne	 SHORT $LN12@Find_lower
  0001f	53		 push	 ebx
  00020	8b 5d 0c	 mov	 ebx, DWORD PTR __Keyval$[ebp]
$LL2@Find_lower:

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00023	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00026	89 37		 mov	 DWORD PTR [edi], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00028	53		 push	 ebx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0002f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00032	84 c0		 test	 al, al
  00034	74 07		 je	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00036	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00039	33 c0		 xor	 eax, eax

; 1708 :             } else {

  0003b	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  0003d	89 77 08	 mov	 DWORD PTR [edi+8], esi

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	8b 36		 mov	 esi, DWORD PTR [esi]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00047	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0004a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0004e	74 d3		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00050	5b		 pop	 ebx
$LN12@Find_lower:

; 1716 :     }

  00051	8b c7		 mov	 eax, edi
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 13		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:

; 699  :         _Ptr->~_Uty();

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	8b ce		 mov	 ecx, esi
  00014	6a 00		 push	 0
  00016	ff 10		 call	 DWORD PTR [eax]

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {

  00018	81 c6 2c 01 00
	00		 add	 esi, 300		; 0000012cH
  0001e	3b f7		 cmp	 esi, edi
  00020	75 ee		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00022	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00023	5e		 pop	 esi
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 7d 0c	 mov	 edi, DWORD PTR __Rootnode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00011	75 51		 jne	 SHORT $LN3@Erase_tree
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
  00017	56		 push	 esi
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00018	ff 77 08	 push	 DWORD PTR [edi+8]
  0001b	8b c8		 mov	 ecx, eax
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	8b f7		 mov	 esi, edi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00025	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00027	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0002a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002d	72 0d		 jb	 SHORT $LN21@Erase_tree

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0002f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00030	50		 push	 eax
  00031	ff 76 10	 push	 DWORD PTR [esi+16]
  00034	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00039	83 c4 08	 add	 esp, 8
$LN21@Erase_tree:

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0003c	6a 2c		 push	 44			; 0000002cH
  0003e	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00059	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0005c	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00060	74 b6		 je	 SHORT $LL2@Erase_tree
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
$LN3@Erase_tree:
  00064	5f		 pop	 edi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
_TEXT	SEGMENT
__Loc$2 = -40						; size = 12
$T3 = -28						; size = 12
$T4 = -24						; size = 8
__Myhead$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::insert<0,0>, COMDAT
; _this$ = ecx

; 1343 :     pair<iterator, bool> insert(value_type&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  0002d	8d 45 e4	 lea	 eax, DWORD PTR $T3[ebp]
  00030	57		 push	 edi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00037	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 d8	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00047	75 18		 jne	 SHORT $LN4@insert
  00049	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0004c	50		 push	 eax
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00053	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00056	84 c0		 test	 al, al
  00058	75 07		 jne	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0005a	32 c9		 xor	 cl, cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1011 :                 return {_Loc._Bound, false};

  0005c	e9 8c 00 00 00	 jmp	 $LN78@insert
$LN4@insert:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00061	81 7b 04 5d 74
	d1 05		 cmp	 DWORD PTR [ebx+4], 97612893 ; 05d1745dH
  00068	0f 84 9b 00 00
	00		 je	 $LN92@insert

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0006e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00070	89 45 f0	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00073	89 5d e8	 mov	 DWORD PTR $T4[ebp], ebx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0007f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00086	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  0008b	8b f8		 mov	 edi, eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008d	83 c4 04	 add	 esp, 4

; 1048 :         _Ptr = _Al.allocate(1);

  00090	89 7d ec	 mov	 DWORD PTR $T4[ebp+4], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

  00093	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  00096	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 805  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  00099	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

  000a0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a5	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  000a8	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000ab	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000ae	50		 push	 eax
  000af	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

  000b0	89 4f 28	 mov	 DWORD PTR [edi+40], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000b3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000b8	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000bb	50		 push	 eax
  000bc	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000c5	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000c8	50		 push	 eax
  000c9	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>
  000d2	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  000d5	66 c7 47 0c 00
	00		 mov	 WORD PTR [edi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000db	8b cb		 mov	 ecx, ebx
  000dd	57		 push	 edi
  000de	ff 75 dc	 push	 DWORD PTR __Loc$2[ebp+4]
  000e1	ff 75 d8	 push	 DWORD PTR __Loc$2[ebp]
  000e4	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000e9	8b f0		 mov	 esi, eax
  000eb	b1 01		 mov	 cl, 1
$LN78@insert:
  000ed	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000f0	89 30		 mov	 DWORD PTR [eax], esi
  000f2	88 48 04	 mov	 BYTE PTR [eax+4], cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1346 :     }

  000f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ff	59		 pop	 ecx
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 08 00	 ret	 8
$LN92@insert:

; 1720 :             _Throw_tree_length_error();

  00109	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN90@insert:
  0010e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::insert<0,0>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN7@pair

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN7@pair:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCSkyBox@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSkyBox@@UAEPAXI@Z PROC				; CSkyBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSkyBox@@UAE@XZ	; CSkyBox::~CSkyBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 80 03 00 00	 push	 896			; 00000380H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSkyBox@@UAEPAXI@Z ENDP				; CSkyBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_aPDTVertex$ = -24					; size = 24
_pSkyObjectQuadVector$ = 8				; size = 4
$T1 = 11						; size = 1
$T2 = 11						; size = 1
$T3 = 11						; size = 1
$T4 = 11						; size = 1
_c_pv3QuadPoints$ = 12					; size = 4
?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z PROC ; CSkyBox::SetSkyObjectQuadHorizon, COMDAT
; _this$ = ecx

; 403  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1386 :         pointer& _Mylast  = _My_data._Mylast;

  00007	8b 75 08	 mov	 esi, DWORD PTR _pSkyObjectQuadVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 403  : {

  0000a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000b	56		 push	 esi
  0000c	ff 76 04	 push	 DWORD PTR [esi+4]
  0000f	ff 36		 push	 DWORD PTR [esi]
  00011	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >

; 1390 :         _Mylast = _Myfirst;

  00016	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 405  : 	pSkyObjectQuadVector->resize(1);

  0001b	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 405  : 	pSkyObjectQuadVector->resize(1);

  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::resize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  0002f	8b 3e		 mov	 edi, DWORD PTR [esi]
  00031	2b cf		 sub	 ecx, edi
  00033	f7 e9		 imul	 ecx
  00035	c1 fa 05	 sar	 edx, 5
  00038	8b c2		 mov	 eax, edx
  0003a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003d	03 c2		 add	 eax, edx
  0003f	0f 84 c0 00 00
	00		 je	 $LN13@SetSkyObje
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 412  : 	rSkyObjectQuad.SetVertex(0, aPDTVertex);

  00045	8b 75 0c	 mov	 esi, DWORD PTR _c_pv3QuadPoints$[ebp]
  00048	8b cf		 mov	 ecx, edi
  0004a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 0
  00051	c7 45 fc 00 00
	80 3f		 mov	 DWORD PTR _aPDTVertex$[ebp+20], 1065353216 ; 3f800000H
  00058	c6 45 0b 00	 mov	 BYTE PTR $T4[ebp], 0
  0005c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005f	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  00063	89 45 f0	 mov	 DWORD PTR _aPDTVertex$[ebp+8], eax
  00066	8d 45 e8	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00069	50		 push	 eax
  0006a	8d 45 0b	 lea	 eax, DWORD PTR $T4[ebp]
  0006d	66 0f d6 45 e8	 movq	 QWORD PTR _aPDTVertex$[ebp], xmm0
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 413  : 
; 414  : 	aPDTVertex.position		= c_pv3QuadPoints[1];

  00078	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 415  : 	aPDTVertex.texCoord.x	= 0.0f;
; 416  : 	aPDTVertex.texCoord.y	= 0.0f;
; 417  : 	rSkyObjectQuad.SetVertex(1, aPDTVertex);

  0007b	8b cf		 mov	 ecx, edi
  0007d	f3 0f 7e 46 0c	 movq	 xmm0, QWORD PTR [esi+12]
  00082	89 45 f0	 mov	 DWORD PTR _aPDTVertex$[ebp+8], eax
  00085	8d 45 e8	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00088	50		 push	 eax
  00089	8d 45 0b	 lea	 eax, DWORD PTR $T3[ebp]
  0008c	66 0f d6 45 e8	 movq	 QWORD PTR _aPDTVertex$[ebp], xmm0
  00091	50		 push	 eax
  00092	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _aPDTVertex$[ebp+20], 0
  00099	c6 45 0b 01	 mov	 BYTE PTR $T3[ebp], 1
  0009d	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 418  : 
; 419  : 	aPDTVertex.position		= c_pv3QuadPoints[2];

  000a2	8b 46 20	 mov	 eax, DWORD PTR [esi+32]

; 420  : 	aPDTVertex.texCoord.x	= 1.0f;
; 421  : 	aPDTVertex.texCoord.y	= 1.0f;
; 422  : 	rSkyObjectQuad.SetVertex(2, aPDTVertex);

  000a5	8b cf		 mov	 ecx, edi
  000a7	f3 0f 7e 46 18	 movq	 xmm0, QWORD PTR [esi+24]
  000ac	89 45 f0	 mov	 DWORD PTR _aPDTVertex$[ebp+8], eax
  000af	8d 45 e8	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  000b2	50		 push	 eax
  000b3	8d 45 0b	 lea	 eax, DWORD PTR $T2[ebp]
  000b6	66 0f d6 45 e8	 movq	 QWORD PTR _aPDTVertex$[ebp], xmm0
  000bb	50		 push	 eax
  000bc	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 1065353216 ; 3f800000H
  000c3	c7 45 fc 00 00
	80 3f		 mov	 DWORD PTR _aPDTVertex$[ebp+20], 1065353216 ; 3f800000H
  000ca	c6 45 0b 02	 mov	 BYTE PTR $T2[ebp], 2
  000ce	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 423  : 
; 424  : 	aPDTVertex.position		= c_pv3QuadPoints[3];

  000d3	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]

; 425  : 	aPDTVertex.texCoord.x	= 1.0f;
; 426  : 	aPDTVertex.texCoord.y	= 0.0f;
; 427  : 	rSkyObjectQuad.SetVertex(3, aPDTVertex);

  000d6	8b cf		 mov	 ecx, edi
  000d8	f3 0f 7e 46 24	 movq	 xmm0, QWORD PTR [esi+36]
  000dd	89 45 f0	 mov	 DWORD PTR _aPDTVertex$[ebp+8], eax
  000e0	8d 45 e8	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  000e3	50		 push	 eax
  000e4	8d 45 0b	 lea	 eax, DWORD PTR $T1[ebp]
  000e7	66 0f d6 45 e8	 movq	 QWORD PTR _aPDTVertex$[ebp], xmm0
  000ec	50		 push	 eax
  000ed	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _aPDTVertex$[ebp+20], 0
  000f4	c6 45 0b 03	 mov	 BYTE PTR $T1[ebp], 3
  000f8	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi

; 428  : }

  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 08 00	 ret	 8
$LN13@SetSkyObje:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  00105	e8 00 00 00 00	 call	 ?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xrange
$LN11@SetSkyObje:
  0010a	cc		 int	 3
?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ENDP ; CSkyBox::SetSkyObjectQuadHorizon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z
_TEXT	SEGMENT
_aPDTVertex$ = -52					; size = 24
tv739 = -28						; size = 4
tv729 = -24						; size = 4
tv745 = -20						; size = 4
_rSkyObjectQuad$1$ = -20				; size = 4
tv746 = -16						; size = 4
_rSkyObjectQuad$1$ = -16				; size = 4
_dwIndex$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
tv773 = -2						; size = 1
$T1 = -2						; size = 1
$T2 = -2						; size = 1
$T3 = -2						; size = 1
$T4 = -2						; size = 1
$T5 = -2						; size = 1
$T6 = -2						; size = 1
$T7 = -2						; size = 1
$T8 = -2						; size = 1
_ucY$2$ = -1						; size = 1
_ucY$1$ = -1						; size = 1
_pSkyObjectQuadVector$ = 8				; size = 4
_c_pv2QuadPoints$ = 12					; size = 4
?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z PROC ; CSkyBox::SetSkyObjectQuadVertical, COMDAT
; _this$ = ecx

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00007	8b 75 08	 mov	 esi, DWORD PTR _pSkyObjectQuadVector$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 321  : {

  0000a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000b	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 321  : {

  0000c	89 4d f8	 mov	 DWORD PTR _this$1$[ebp], ecx

; 322  : 	TPDTVertex aPDTVertex;
; 323  : 
; 324  : 	DWORD dwIndex = 0;

  0000f	33 ff		 xor	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00011	ff 76 04	 push	 DWORD PTR [esi+4]
  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >

; 1390 :         _Mylast = _Myfirst;

  0001b	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00020	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 327  : 	pSkyObjectQuadVector->resize(m_ucVirticalGradientLevelUpper + m_ucVirticalGradientLevelLower);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  00026	0f b6 88 15 02
	00 00		 movzx	 ecx, BYTE PTR [eax+533]
  0002d	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
  00034	03 c8		 add	 ecx, eax
  00036	51		 push	 ecx
  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::resize

; 328  : 
; 329  : 	unsigned char ucY;
; 330  : 	for (ucY = 0; ucY < m_ucVirticalGradientLevelUpper; ++ucY)

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  00041	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f000000
  00049	c6 45 ff 00	 mov	 BYTE PTR _ucY$1$[ebp], 0
  0004d	80 b8 14 02 00
	00 00		 cmp	 BYTE PTR [eax+532], 0
  00054	0f 86 00 02 00
	00		 jbe	 $LN3@SetSkyObje
  0005a	89 7d f0	 mov	 DWORD PTR tv746[ebp], edi
  0005d	0f 1f 00	 npad	 3
$LL4@SetSkyObje:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00060	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00063	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00068	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0006a	f7 e9		 imul	 ecx
  0006c	c1 fa 05	 sar	 edx, 5
  0006f	8b c2		 mov	 eax, edx
  00071	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00074	03 c2		 add	 eax, edx
  00076	3b c7		 cmp	 eax, edi
  00078	0f 86 68 04 00
	00		 jbe	 $LN23@SetSkyObje
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 332  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  0007e	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]
  00081	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  00082	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 332  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  00084	89 7d f4	 mov	 DWORD PTR _dwIndex$1$[ebp], edi

; 333  : 
; 334  : 		aPDTVertex.position.x = c_pv2QuadPoints[0].x;
; 335  : 		aPDTVertex.position.y = c_pv2QuadPoints[0].y;
; 336  : 		aPDTVertex.position.z = 1.0f - (float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelUpper);

  00087	0f b6 7d ff	 movzx	 edi, BYTE PTR _ucY$1$[ebp]
  0008b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0008f	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  00094	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00099	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  0009c	8d 77 01	 lea	 esi, DWORD PTR [edi+1]
  0009f	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  000a4	66 0f 6e ce	 movd	 xmm1, esi
  000a8	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000ab	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000b2	8b 55 f0	 mov	 edx, DWORD PTR tv746[ebp]
  000b5	03 ca		 add	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 332  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  000b7	81 c2 2c 01 00
	00		 add	 edx, 300		; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  000bd	89 4d ec	 mov	 DWORD PTR _rSkyObjectQuad$1$[ebp], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 332  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  000c0	89 55 f0	 mov	 DWORD PTR tv746[ebp], edx
  000c3	66 0f 6e c0	 movd	 xmm0, eax

; 337  : 		aPDTVertex.texCoord.x = 0.0f;
; 338  : 		aPDTVertex.texCoord.y = (float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 339  : 		rSkyObjectQuad.SetVertex(0 , aPDTVertex);

  000c7	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  000ca	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000cd	50		 push	 eax
  000ce	8d 45 fe	 lea	 eax, DWORD PTR $T8[ebp]
  000d1	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 0
  000d8	50		 push	 eax
  000d9	c6 45 fe 00	 mov	 BYTE PTR $T8[ebp], 0
  000dd	f3 0f 5e c8	 divss	 xmm1, xmm0
  000e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000e9	f3 0f 5c c1	 subss	 xmm0, xmm1
  000ed	f3 0f 59 cb	 mulss	 xmm1, xmm3
  000f1	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  000f6	f3 0f 11 45 d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm0
  000fb	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 340  : 		aPDTVertex.position.x = c_pv2QuadPoints[0].x;

  00100	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]
  00103	66 0f 6e cf	 movd	 xmm1, edi

; 341  : 		aPDTVertex.position.y = c_pv2QuadPoints[0].y;
; 342  : 		aPDTVertex.position.z = 1.0f - (float)(ucY) / (float)(m_ucVirticalGradientLevelUpper);

  00107	0f 5b c9	 cvtdq2ps xmm1, xmm1

; 343  : 		aPDTVertex.texCoord.x = 0.0f;
; 344  : 		aPDTVertex.texCoord.y = (float)(ucY)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 345  : 		rSkyObjectQuad.SetVertex(1, aPDTVertex);

  0010a	8b 4d ec	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  0010d	c6 45 fe 01	 mov	 BYTE PTR $T7[ebp], 1
  00111	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00115	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  0011a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  00122	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  00127	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
  0012e	66 0f 6e c0	 movd	 xmm0, eax
  00132	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00135	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00138	50		 push	 eax
  00139	8d 45 fe	 lea	 eax, DWORD PTR $T7[ebp]
  0013c	50		 push	 eax
  0013d	f3 0f 5e c8	 divss	 xmm1, xmm0
  00141	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00149	f3 0f 5c c1	 subss	 xmm0, xmm1
  0014d	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00155	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  0015a	f3 0f 11 45 d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm0
  0015f	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 346  : 		aPDTVertex.position.x = c_pv2QuadPoints[1].x;

  00164	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]
  00167	66 0f 6e ce	 movd	 xmm1, esi

; 347  : 		aPDTVertex.position.y = c_pv2QuadPoints[1].y;
; 348  : 		aPDTVertex.position.z = 1.0f - (float)(ucY + 1) / (float)(m_ucVirticalGradientLevelUpper);

  0016b	0f 5b c9	 cvtdq2ps xmm1, xmm1

; 349  : 		aPDTVertex.texCoord.x = 1.0f;

  0016e	c7 45 dc 00 00
	80 3f		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 1065353216 ; 3f800000H

; 350  : 		aPDTVertex.texCoord.y = (float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 351  : 		rSkyObjectQuad.SetVertex(2, aPDTVertex);

  00175	c6 45 fe 02	 mov	 BYTE PTR $T6[ebp], 2
  00179	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0017e	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  00183	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00188	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  0018b	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  00190	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
  00197	66 0f 6e c0	 movd	 xmm0, eax
  0019b	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  0019e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001a1	50		 push	 eax
  001a2	8d 45 fe	 lea	 eax, DWORD PTR $T6[ebp]
  001a5	50		 push	 eax
  001a6	f3 0f 5e c8	 divss	 xmm1, xmm0
  001aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001b2	f3 0f 5c c1	 subss	 xmm0, xmm1
  001b6	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  001be	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  001c3	f3 0f 11 45 d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm0
  001c8	8b 4d ec	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  001cb	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 352  : 		aPDTVertex.position.x = c_pv2QuadPoints[1].x;

  001d0	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]
  001d3	66 0f 6e cf	 movd	 xmm1, edi

; 353  : 		aPDTVertex.position.y = c_pv2QuadPoints[1].y;
; 354  : 		aPDTVertex.position.z = 1.0f - (float)(ucY) / (float)(m_ucVirticalGradientLevelUpper);

  001d7	0f 5b c9	 cvtdq2ps xmm1, xmm1

; 355  : 		aPDTVertex.texCoord.x = 1.0f;
; 356  : 		aPDTVertex.texCoord.y = (float)(ucY)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 357  : 		rSkyObjectQuad.SetVertex(3, aPDTVertex);

  001da	8b 4d ec	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  001dd	c6 45 fe 03	 mov	 BYTE PTR $T5[ebp], 3
  001e1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001e6	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  001eb	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  001f0	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  001f3	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  001f8	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
  001ff	66 0f 6e c0	 movd	 xmm0, eax
  00203	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00206	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00209	50		 push	 eax
  0020a	8d 45 fe	 lea	 eax, DWORD PTR $T5[ebp]
  0020d	50		 push	 eax
  0020e	f3 0f 5e c8	 divss	 xmm1, xmm0
  00212	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0021a	f3 0f 5c c1	 subss	 xmm0, xmm1
  0021e	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00226	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  0022b	f3 0f 11 45 d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm0
  00230	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex
  00235	8a 4d ff	 mov	 cl, BYTE PTR _ucY$1$[ebp]
  00238	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  0023b	fe c1		 inc	 cl
  0023d	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f000000
  00245	8b 75 08	 mov	 esi, DWORD PTR _pSkyObjectQuadVector$[ebp]
  00248	8b 7d f4	 mov	 edi, DWORD PTR _dwIndex$1$[ebp]
  0024b	88 4d ff	 mov	 BYTE PTR _ucY$1$[ebp], cl
  0024e	3a 88 14 02 00
	00		 cmp	 cl, BYTE PTR [eax+532]
  00254	0f 82 06 fe ff
	ff		 jb	 $LL4@SetSkyObje
$LN3@SetSkyObje:

; 358  : 	}
; 359  : 	for (ucY = 0; ucY < m_ucVirticalGradientLevelLower; ++ucY)

  0025a	8a 80 15 02 00
	00		 mov	 al, BYTE PTR [eax+533]
  00260	c6 45 ff 00	 mov	 BYTE PTR _ucY$2$[ebp], 0
  00264	88 45 fe	 mov	 BYTE PTR tv773[ebp], al
  00267	84 c0		 test	 al, al
  00269	0f 84 6f 02 00
	00		 je	 $LN6@SetSkyObje
  0026f	69 c7 2c 01 00
	00		 imul	 eax, edi, 300
  00275	89 45 ec	 mov	 DWORD PTR tv745[ebp], eax
  00278	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL7@SetSkyObje:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1519 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00280	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00283	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00288	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0028a	f7 e9		 imul	 ecx
  0028c	c1 fa 05	 sar	 edx, 5
  0028f	8b c2		 mov	 eax, edx
  00291	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00294	03 c2		 add	 eax, edx
  00296	3b c7		 cmp	 eax, edi
  00298	0f 86 48 02 00
	00		 jbe	 $LN23@SetSkyObje
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 361  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  0029e	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]
  002a1	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  002a2	8b 0e		 mov	 ecx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 361  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  002a4	89 7d f4	 mov	 DWORD PTR _dwIndex$1$[ebp], edi

; 362  : 
; 363  : 		aPDTVertex.position.x = c_pv2QuadPoints[0].x;
; 364  : 		aPDTVertex.position.y = c_pv2QuadPoints[0].y;
; 365  : 		aPDTVertex.position.z = -(float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelLower);

  002a7	0f b6 7d ff	 movzx	 edi, BYTE PTR _ucY$2$[ebp]
  002ab	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002af	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  002b4	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002b9	0f b6 45 fe	 movzx	 eax, BYTE PTR tv773[ebp]
  002bd	8d 77 01	 lea	 esi, DWORD PTR [edi+1]
  002c0	66 0f 6e d6	 movd	 xmm2, esi
  002c4	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  002c9	0f 5b d2	 cvtdq2ps xmm2, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  002cc	8b 55 ec	 mov	 edx, DWORD PTR tv745[ebp]
  002cf	03 ca		 add	 ecx, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 361  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  002d1	81 c2 2c 01 00
	00		 add	 edx, 300		; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1523 :         return _My_data._Myfirst[_Pos];

  002d7	89 4d f0	 mov	 DWORD PTR _rSkyObjectQuad$1$[ebp], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 361  : 		CSkyObjectQuad & rSkyObjectQuad = pSkyObjectQuadVector->at(dwIndex++);

  002da	89 55 ec	 mov	 DWORD PTR tv745[ebp], edx

; 366  : 		aPDTVertex.texCoord.x = 0.0f;

  002dd	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 0
  002e4	66 0f 6e c0	 movd	 xmm0, eax

; 367  : 		aPDTVertex.texCoord.y = 0.5f + (float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;

  002e8	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  002eb	0f 28 ca	 movaps	 xmm1, xmm2
  002ee	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  002f5	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 368  : 		rSkyObjectQuad.SetVertex(0, aPDTVertex);

  002f8	c6 45 fe 00	 mov	 BYTE PTR $T4[ebp], 0
  002fc	0f b6 80 14 02
	00 00		 movzx	 eax, BYTE PTR [eax+532]
  00303	f3 0f 11 4d e8	 movss	 DWORD PTR tv729[ebp], xmm1
  00308	f3 0f 5e c8	 divss	 xmm1, xmm0
  0030c	66 0f 6e c0	 movd	 xmm0, eax
  00310	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00313	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00316	50		 push	 eax
  00317	8d 45 fe	 lea	 eax, DWORD PTR $T4[ebp]
  0031a	50		 push	 eax
  0031b	f3 0f 11 4d d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm1
  00320	0f 28 ca	 movaps	 xmm1, xmm2
  00323	f3 0f 5e c8	 divss	 xmm1, xmm0
  00327	f3 0f 59 cb	 mulss	 xmm1, xmm3
  0032b	f3 0f 58 cb	 addss	 xmm1, xmm3
  0032f	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  00334	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 369  : 		aPDTVertex.position.x = c_pv2QuadPoints[0].x;

  00339	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]

; 370  : 		aPDTVertex.position.y = c_pv2QuadPoints[0].y;
; 371  : 		aPDTVertex.position.z = -(float)(ucY) / (float)(m_ucVirticalGradientLevelLower);

  0033c	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0033f	66 0f 6e d7	 movd	 xmm2, edi
  00343	0f 5b d2	 cvtdq2ps xmm2, xmm2

; 372  : 		aPDTVertex.texCoord.x = 0.0f;
; 373  : 		aPDTVertex.texCoord.y = 0.5f + (float)(ucY)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 374  : 		rSkyObjectQuad.SetVertex(1, aPDTVertex);

  00346	c6 45 fe 01	 mov	 BYTE PTR $T3[ebp], 1
  0034a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0034e	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  00353	0f 28 ca	 movaps	 xmm1, xmm2
  00356	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0035b	0f b6 81 15 02
	00 00		 movzx	 eax, BYTE PTR [ecx+533]
  00362	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00369	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  0036e	f3 0f 11 4d e4	 movss	 DWORD PTR tv739[ebp], xmm1
  00373	66 0f 6e c0	 movd	 xmm0, eax
  00377	0f b6 81 14 02
	00 00		 movzx	 eax, BYTE PTR [ecx+532]
  0037e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00381	8b 4d f0	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  00384	f3 0f 5e c8	 divss	 xmm1, xmm0
  00388	66 0f 6e c0	 movd	 xmm0, eax
  0038c	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  0038f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00392	50		 push	 eax
  00393	8d 45 fe	 lea	 eax, DWORD PTR $T3[ebp]
  00396	50		 push	 eax
  00397	f3 0f 11 4d d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm1
  0039c	0f 28 ca	 movaps	 xmm1, xmm2
  0039f	f3 0f 5e c8	 divss	 xmm1, xmm0
  003a3	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  003ab	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  003b3	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  003b8	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 375  : 		aPDTVertex.position.x = c_pv2QuadPoints[1].x;

  003bd	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]

; 376  : 		aPDTVertex.position.y = c_pv2QuadPoints[1].y;
; 377  : 		aPDTVertex.position.z = -(float)(ucY + 1) / (float)(m_ucVirticalGradientLevelLower);

  003c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  003c3	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003c8	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  003cd	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  003d2	0f b6 81 15 02
	00 00		 movzx	 eax, BYTE PTR [ecx+533]
  003d9	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  003de	66 0f 6e c0	 movd	 xmm0, eax
  003e2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  003e5	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR tv729[ebp]
  003ea	f3 0f 5e c8	 divss	 xmm1, xmm0

; 378  : 		aPDTVertex.texCoord.x = 1.0f;
; 379  : 		aPDTVertex.texCoord.y = 0.5f + (float)(ucY + 1)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;

  003ee	0f b6 81 14 02
	00 00		 movzx	 eax, BYTE PTR [ecx+532]

; 380  : 		rSkyObjectQuad.SetVertex(2, aPDTVertex);

  003f5	8b 4d f0	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  003f8	c7 45 dc 00 00
	80 3f		 mov	 DWORD PTR _aPDTVertex$[ebp+16], 1065353216 ; 3f800000H
  003ff	c6 45 fe 02	 mov	 BYTE PTR $T2[ebp], 2
  00403	66 0f 6e c0	 movd	 xmm0, eax
  00407	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  0040a	f3 0f 11 4d d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm1
  0040f	66 0f 6e ce	 movd	 xmm1, esi
  00413	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00416	50		 push	 eax
  00417	8d 45 fe	 lea	 eax, DWORD PTR $T2[ebp]
  0041a	50		 push	 eax
  0041b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0041e	f3 0f 5e c8	 divss	 xmm1, xmm0
  00422	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  0042a	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  00432	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  00437	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex

; 381  : 		aPDTVertex.position.x = c_pv2QuadPoints[1].x;

  0043c	8b 45 0c	 mov	 eax, DWORD PTR _c_pv2QuadPoints$[ebp]

; 382  : 		aPDTVertex.position.y = c_pv2QuadPoints[1].y;
; 383  : 		aPDTVertex.position.z = -(float)(ucY) / (float)(m_ucVirticalGradientLevelLower);

  0043f	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00442	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR tv739[ebp]

; 384  : 		aPDTVertex.texCoord.x = 1.0f;
; 385  : 		aPDTVertex.texCoord.y = 0.5f + (float)(ucY)/ (float)(m_ucVirticalGradientLevelUpper) * 0.5f;
; 386  : 		rSkyObjectQuad.SetVertex(3, aPDTVertex);

  00447	c6 45 fe 03	 mov	 BYTE PTR $T1[ebp], 3
  0044b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00450	f3 0f 11 45 cc	 movss	 DWORD PTR _aPDTVertex$[ebp], xmm0
  00455	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0045a	0f b6 81 15 02
	00 00		 movzx	 eax, BYTE PTR [ecx+533]
  00461	f3 0f 11 45 d0	 movss	 DWORD PTR _aPDTVertex$[ebp+4], xmm0
  00466	66 0f 6e c0	 movd	 xmm0, eax
  0046a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0046d	0f b6 81 14 02
	00 00		 movzx	 eax, BYTE PTR [ecx+532]
  00474	8b 4d f0	 mov	 ecx, DWORD PTR _rSkyObjectQuad$1$[ebp]
  00477	f3 0f 5e c8	 divss	 xmm1, xmm0
  0047b	66 0f 6e c0	 movd	 xmm0, eax
  0047f	8d 45 cc	 lea	 eax, DWORD PTR _aPDTVertex$[ebp]
  00482	f3 0f 11 4d d4	 movss	 DWORD PTR _aPDTVertex$[ebp+8], xmm1
  00487	66 0f 6e cf	 movd	 xmm1, edi
  0048b	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0048e	50		 push	 eax
  0048f	8d 45 fe	 lea	 eax, DWORD PTR $T1[ebp]
  00492	50		 push	 eax
  00493	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00496	f3 0f 5e c8	 divss	 xmm1, xmm0
  0049a	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  004a2	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f000000
  004aa	f3 0f 11 4d e0	 movss	 DWORD PTR _aPDTVertex$[ebp+20], xmm1
  004af	e8 00 00 00 00	 call	 ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ; CSkyObjectQuad::SetVertex
  004b4	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  004b7	8a 4d ff	 mov	 cl, BYTE PTR _ucY$2$[ebp]
  004ba	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f000000
  004c2	fe c1		 inc	 cl
  004c4	8b 75 08	 mov	 esi, DWORD PTR _pSkyObjectQuadVector$[ebp]
  004c7	8a 80 15 02 00
	00		 mov	 al, BYTE PTR [eax+533]
  004cd	8b 7d f4	 mov	 edi, DWORD PTR _dwIndex$1$[ebp]
  004d0	88 4d ff	 mov	 BYTE PTR _ucY$2$[ebp], cl
  004d3	88 45 fe	 mov	 BYTE PTR tv773[ebp], al
  004d6	3a c8		 cmp	 cl, al
  004d8	0f 82 a2 fd ff
	ff		 jb	 $LL7@SetSkyObje
$LN6@SetSkyObje:
  004de	5f		 pop	 edi

; 388  : }

  004df	5e		 pop	 esi
  004e0	8b e5		 mov	 esp, ebp
  004e2	5d		 pop	 ebp
  004e3	c2 08 00	 ret	 8
$LN23@SetSkyObje:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1520 :             _Xrange();

  004e6	e8 00 00 00 00	 call	 ?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xrange
$LN30@SetSkyObje:
  004eb	cc		 int	 3
?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ENDP ; CSkyBox::SetSkyObjectQuadVertical
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?StartTransition@CSkyBox@@UAEXXZ
_TEXT	SEGMENT
?StartTransition@CSkyBox@@UAEXXZ PROC			; CSkyBox::StartTransition, COMDAT
; _this$ = ecx

; 786  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 787  : 	m_bTransitionStarted = true;

  00005	bf 06 00 00 00	 mov	 edi, 6
  0000a	c6 83 f0 01 00
	00 01		 mov	 BYTE PTR [ebx+496], 1
  00011	8d b3 18 02 00
	00		 lea	 esi, DWORD PTR [ebx+536]
$LL4@StartTrans:

; 788  : 	for (unsigned char ucj = 0; ucj < 6; ++ucj)
; 789  : 		m_Faces[ucj].StartTransition();

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::StartTransition
  0001e	83 c6 3c	 add	 esi, 60			; 0000003cH
  00021	83 ef 01	 sub	 edi, 1
  00024	75 f1		 jne	 SHORT $LL4@StartTrans

; 790  : 	m_FaceCloud.StartTransition();

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  0002b	5b		 pop	 ebx
  0002c	e9 00 00 00 00	 jmp	 ?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::StartTransition
?StartTransition@CSkyBox@@UAEXXZ ENDP			; CSkyBox::StartTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z
_TEXT	SEGMENT
tv2449 = -24						; size = 4
_this$1$ = -20						; size = 4
tv2425 = -16						; size = 4
_uck$2$ = -16						; size = 4
_uck$1$ = -16						; size = 4
tv2409 = -12						; size = 4
tv2405 = -12						; size = 4
_ulVectorGradientColornum$1$ = -12			; size = 4
$T1 = -8						; size = 1
$T2 = -8						; size = 1
$T3 = -8						; size = 1
$T4 = -7						; size = 1
$T5 = -7						; size = 1
$T6 = -7						; size = 1
$T7 = -6						; size = 1
$T8 = -6						; size = 1
$T9 = -6						; size = 1
$T10 = -5						; size = 1
$T11 = -5						; size = 1
$T12 = -5						; size = 1
$T13 = -4						; size = 1
$T14 = -4						; size = 1
$T15 = -4						; size = 1
$T16 = -3						; size = 1
$T17 = -3						; size = 1
$T18 = -3						; size = 1
$T19 = -2						; size = 1
$T20 = -2						; size = 1
$T21 = -2						; size = 1
$T22 = -1						; size = 1
$T23 = -1						; size = 1
_c_rColorVector$ = 8					; size = 4
$T24 = 11						; size = 1
_c_rNextColorVector$ = 12				; size = 4
_lTransitionTime$ = 16					; size = 4
?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z PROC ; CSkyBox::SetSkyColor, COMDAT
; _this$ = ecx

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 620  : 	unsigned long ulVectorGradientColornum = 0;
; 621  : 	unsigned long uck;
; 622  : 	for (unsigned char ucj = 0; ucj < 4; ++ucj)

  00008	bb 04 00 00 00	 mov	 ebx, 4
  0000d	89 4d ec	 mov	 DWORD PTR _this$1$[ebp], ecx
  00010	57		 push	 edi
  00011	8d b1 48 02 00
	00		 lea	 esi, DWORD PTR [ecx+584]
  00017	89 5d e8	 mov	 DWORD PTR tv2449[ebp], ebx
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@SetSkyColo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00020	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 625  : 		ulVectorGradientColornum = 0;

  00022	33 c9		 xor	 ecx, ecx
  00024	89 4d f4	 mov	 DWORD PTR _ulVectorGradientColornum$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  0002c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002f	2b cf		 sub	 ecx, edi
  00031	f7 e9		 imul	 ecx
  00033	c1 fa 05	 sar	 edx, 5
  00036	8b c2		 mov	 eax, edx
  00038	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 626  : 		for (uck = 0; uck < aFace.m_SkyObjectQuadVector.size(); ++uck)

  0003d	0f 84 73 01 00
	00		 je	 $LN2@SetSkyColo

; 630  : 			aSkyObjectQuad.SetSrcColor(0,

  00043	33 db		 xor	 ebx, ebx
  00045	c6 45 ff 00	 mov	 BYTE PTR $T23[ebp], 0
  00049	33 c0		 xor	 eax, eax

; 631  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 632  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 633  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 634  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 635  : 			aSkyObjectQuad.SetTransition(0,

  0004b	c6 45 fe 00	 mov	 BYTE PTR $T21[ebp], 0

; 636  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 637  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 638  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 639  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 640  : 				lTransitionTime);
; 641  : 			aSkyObjectQuad.SetSrcColor(1,

  0004f	c6 45 fd 01	 mov	 BYTE PTR $T18[ebp], 1

; 642  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 643  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 644  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 645  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 646  : 			aSkyObjectQuad.SetTransition(1,

  00053	c6 45 fc 01	 mov	 BYTE PTR $T15[ebp], 1

; 647  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 648  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 649  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 650  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 651  : 				lTransitionTime);
; 652  : 			aSkyObjectQuad.SetSrcColor(2,

  00057	c6 45 fb 02	 mov	 BYTE PTR $T12[ebp], 2

; 653  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 654  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 655  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 656  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 657  : 			aSkyObjectQuad.SetTransition(2,

  0005b	c6 45 fa 02	 mov	 BYTE PTR $T9[ebp], 2

; 658  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 659  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 660  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 661  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 662  : 				lTransitionTime);
; 663  : 			aSkyObjectQuad.SetSrcColor(3,

  0005f	c6 45 f9 03	 mov	 BYTE PTR $T6[ebp], 3

; 664  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 665  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 666  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 667  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 668  : 			aSkyObjectQuad.SetTransition(3,

  00063	c6 45 f8 03	 mov	 BYTE PTR $T3[ebp], 3
  00067	89 45 f0	 mov	 DWORD PTR tv2425[ebp], eax
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL7@SetSkyColo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00070	03 f8		 add	 edi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 630  : 			aSkyObjectQuad.SetSrcColor(0,

  00072	8b 45 08	 mov	 eax, DWORD PTR _c_rColorVector$[ebp]
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	03 cb		 add	 ecx, ebx
  00079	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0007c	50		 push	 eax
  0007d	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00080	50		 push	 eax
  00081	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00084	50		 push	 eax
  00085	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00088	8b cf		 mov	 ecx, edi
  0008a	50		 push	 eax
  0008b	8d 45 ff	 lea	 eax, DWORD PTR $T23[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 631  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 632  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 633  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 634  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 635  : 			aSkyObjectQuad.SetTransition(0,

  00094	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  00097	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  0009a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0009c	03 cb		 add	 ecx, ebx
  0009e	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  000a1	50		 push	 eax
  000a2	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  000a5	50		 push	 eax
  000a6	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  000a9	50		 push	 eax
  000aa	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  000ad	8b cf		 mov	 ecx, edi
  000af	50		 push	 eax
  000b0	8d 45 fe	 lea	 eax, DWORD PTR $T21[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 636  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 637  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 638  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 639  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 640  : 				lTransitionTime);
; 641  : 			aSkyObjectQuad.SetSrcColor(1,

  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _c_rColorVector$[ebp]
  000bc	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000be	03 cb		 add	 ecx, ebx
  000c0	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  000c3	50		 push	 eax
  000c4	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  000c7	50		 push	 eax
  000c8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000cb	50		 push	 eax
  000cc	51		 push	 ecx
  000cd	8d 45 fd	 lea	 eax, DWORD PTR $T18[ebp]
  000d0	8b cf		 mov	 ecx, edi
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 642  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 643  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 644  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 645  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 646  : 			aSkyObjectQuad.SetTransition(1,

  000d8	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  000db	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  000de	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000e0	03 cb		 add	 ecx, ebx
  000e2	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  000e5	50		 push	 eax
  000e6	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  000e9	50		 push	 eax
  000ea	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000ed	50		 push	 eax
  000ee	51		 push	 ecx
  000ef	8d 45 fc	 lea	 eax, DWORD PTR $T15[ebp]
  000f2	8b cf		 mov	 ecx, edi
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 647  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 648  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 649  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 650  : 				c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 651  : 				lTransitionTime);
; 652  : 			aSkyObjectQuad.SetSrcColor(2,

  000fa	8b 4d 08	 mov	 ecx, DWORD PTR _c_rColorVector$[ebp]
  000fd	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000ff	03 cb		 add	 ecx, ebx
  00101	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00104	50		 push	 eax
  00105	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00108	50		 push	 eax
  00109	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0010c	50		 push	 eax
  0010d	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00110	8b cf		 mov	 ecx, edi
  00112	50		 push	 eax
  00113	8d 45 fb	 lea	 eax, DWORD PTR $T12[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 653  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 654  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 655  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 656  : 				c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 657  : 			aSkyObjectQuad.SetTransition(2,

  0011c	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  0011f	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  00122	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00124	03 cb		 add	 ecx, ebx
  00126	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00129	50		 push	 eax
  0012a	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  0012d	50		 push	 eax
  0012e	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00131	50		 push	 eax
  00132	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00135	8b cf		 mov	 ecx, edi
  00137	50		 push	 eax
  00138	8d 45 fa	 lea	 eax, DWORD PTR $T9[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 658  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 659  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 660  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 661  : 				c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 662  : 				lTransitionTime);
; 663  : 			aSkyObjectQuad.SetSrcColor(3,

  00141	8b 4d 08	 mov	 ecx, DWORD PTR _c_rColorVector$[ebp]
  00144	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00146	03 cb		 add	 ecx, ebx
  00148	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  0014b	50		 push	 eax
  0014c	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0014f	50		 push	 eax
  00150	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00153	50		 push	 eax
  00154	51		 push	 ecx
  00155	8d 45 f9	 lea	 eax, DWORD PTR $T6[ebp]
  00158	8b cf		 mov	 ecx, edi
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 664  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 665  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 666  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 667  : 				c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 668  : 			aSkyObjectQuad.SetTransition(3,

  00160	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  00163	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  00166	8b 11		 mov	 edx, DWORD PTR [ecx]
  00168	8b cf		 mov	 ecx, edi
  0016a	03 d3		 add	 edx, ebx
  0016c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0016f	50		 push	 eax
  00170	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00173	50		 push	 eax
  00174	8d 42 04	 lea	 eax, DWORD PTR [edx+4]
  00177	50		 push	 eax
  00178	52		 push	 edx
  00179	8d 45 f8	 lea	 eax, DWORD PTR $T3[ebp]
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00182	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00185	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  0018a	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 675  : 			ulVectorGradientColornum++;

  0018c	83 c3 20	 add	 ebx, 32			; 00000020H
  0018f	ff 45 f4	 inc	 DWORD PTR _ulVectorGradientColornum$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00192	2b cf		 sub	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 675  : 			ulVectorGradientColornum++;

  00194	81 45 f0 2c 01
	00 00		 add	 DWORD PTR tv2425[ebp], 300 ; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0019b	f7 e9		 imul	 ecx
  0019d	c1 fa 05	 sar	 edx, 5
  001a0	8b c2		 mov	 eax, edx
  001a2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001a5	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 626  : 		for (uck = 0; uck < aFace.m_SkyObjectQuadVector.size(); ++uck)

  001a7	39 45 f4	 cmp	 DWORD PTR _ulVectorGradientColornum$1$[ebp], eax
  001aa	8b 45 f0	 mov	 eax, DWORD PTR tv2425[ebp]
  001ad	0f 82 bd fe ff
	ff		 jb	 $LL7@SetSkyColo
  001b3	8b 5d e8	 mov	 ebx, DWORD PTR tv2449[ebp]
$LN2@SetSkyColo:

; 620  : 	unsigned long ulVectorGradientColornum = 0;
; 621  : 	unsigned long uck;
; 622  : 	for (unsigned char ucj = 0; ucj < 4; ++ucj)

  001b6	83 c6 3c	 add	 esi, 60			; 0000003cH
  001b9	83 eb 01	 sub	 ebx, 1
  001bc	89 5d e8	 mov	 DWORD PTR tv2449[ebp], ebx
  001bf	0f 85 5b fe ff
	ff		 jne	 $LL4@SetSkyColo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c5	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 683  : 	for (uck = 0; uck < aFaceTop.m_SkyObjectQuadVector.size(); ++uck)

  001c8	33 c9		 xor	 ecx, ecx
  001ca	8b 5d 08	 mov	 ebx, DWORD PTR _c_rColorVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001cd	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 683  : 	for (uck = 0; uck < aFaceTop.m_SkyObjectQuadVector.size(); ++uck)

  001d2	89 4d f0	 mov	 DWORD PTR _uck$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001d5	8b 8e 3c 03 00
	00		 mov	 ecx, DWORD PTR [esi+828]
  001db	2b 8e 38 03 00
	00		 sub	 ecx, DWORD PTR [esi+824]
  001e1	f7 e9		 imul	 ecx
  001e3	c1 fa 05	 sar	 edx, 5
  001e6	8b c2		 mov	 eax, edx
  001e8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001eb	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 683  : 	for (uck = 0; uck < aFaceTop.m_SkyObjectQuadVector.size(); ++uck)

  001ed	0f 84 4b 01 00
	00		 je	 $LN9@SetSkyColo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  001f3	8b 7d 10	 mov	 edi, DWORD PTR _lTransitionTime$[ebp]
  001f6	33 c0		 xor	 eax, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 687  : 		aSkyObjectQuad.SetSrcColor(0,

  001f8	c6 45 f8 00	 mov	 BYTE PTR $T2[ebp], 0

; 688  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 689  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 690  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 691  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 692  : 		aSkyObjectQuad.SetTransition(0,

  001fc	c6 45 f9 00	 mov	 BYTE PTR $T5[ebp], 0

; 693  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 694  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 695  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 696  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 697  : 			lTransitionTime);
; 698  : 		aSkyObjectQuad.SetSrcColor(1,

  00200	c6 45 fa 01	 mov	 BYTE PTR $T8[ebp], 1

; 699  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 700  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 701  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 702  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 703  : 		aSkyObjectQuad.SetTransition(1,

  00204	c6 45 fb 01	 mov	 BYTE PTR $T11[ebp], 1

; 704  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 705  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 706  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 707  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 708  : 			lTransitionTime);
; 709  : 		aSkyObjectQuad.SetSrcColor(2,

  00208	c6 45 fc 02	 mov	 BYTE PTR $T14[ebp], 2

; 710  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 711  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 712  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 713  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 714  : 		aSkyObjectQuad.SetTransition(2,

  0020c	c6 45 fd 02	 mov	 BYTE PTR $T17[ebp], 2

; 715  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 716  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 717  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 718  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 719  : 			lTransitionTime);
; 720  : 		aSkyObjectQuad.SetSrcColor(3,

  00210	c6 45 fe 03	 mov	 BYTE PTR $T20[ebp], 3

; 721  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 722  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 723  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 724  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 725  : 		aSkyObjectQuad.SetTransition(3,

  00214	c6 45 ff 03	 mov	 BYTE PTR $T22[ebp], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00218	89 45 f4	 mov	 DWORD PTR tv2409[ebp], eax
  0021b	0f 1f 44 00 00	 npad	 5
$LL10@SetSkyColo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 687  : 		aSkyObjectQuad.SetSrcColor(0,

  00220	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00222	8b b6 38 03 00
	00		 mov	 esi, DWORD PTR [esi+824]
  00228	03 f0		 add	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 687  : 		aSkyObjectQuad.SetSrcColor(0,

  0022a	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  0022d	50		 push	 eax
  0022e	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00231	50		 push	 eax
  00232	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00235	50		 push	 eax
  00236	51		 push	 ecx
  00237	8d 45 f8	 lea	 eax, DWORD PTR $T2[ebp]
  0023a	8b ce		 mov	 ecx, esi
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 688  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 689  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 690  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 691  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 692  : 		aSkyObjectQuad.SetTransition(0,

  00242	8b 45 0c	 mov	 eax, DWORD PTR _c_rNextColorVector$[ebp]
  00245	57		 push	 edi
  00246	8b 08		 mov	 ecx, DWORD PTR [eax]
  00248	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  0024b	50		 push	 eax
  0024c	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0024f	50		 push	 eax
  00250	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00253	50		 push	 eax
  00254	51		 push	 ecx
  00255	8d 45 f9	 lea	 eax, DWORD PTR $T5[ebp]
  00258	8b ce		 mov	 ecx, esi
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 693  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 694  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 695  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 696  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 697  : 			lTransitionTime);
; 698  : 		aSkyObjectQuad.SetSrcColor(1,

  00260	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00262	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00265	50		 push	 eax
  00266	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00269	50		 push	 eax
  0026a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0026d	50		 push	 eax
  0026e	51		 push	 ecx
  0026f	8d 45 fa	 lea	 eax, DWORD PTR $T8[ebp]
  00272	8b ce		 mov	 ecx, esi
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 699  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 700  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 701  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 702  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 703  : 		aSkyObjectQuad.SetTransition(1,

  0027a	8b 45 0c	 mov	 eax, DWORD PTR _c_rNextColorVector$[ebp]
  0027d	57		 push	 edi
  0027e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00280	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00283	50		 push	 eax
  00284	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00287	50		 push	 eax
  00288	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0028b	50		 push	 eax
  0028c	51		 push	 ecx
  0028d	8d 45 fb	 lea	 eax, DWORD PTR $T11[ebp]
  00290	8b ce		 mov	 ecx, esi
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 704  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 705  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 706  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 707  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 708  : 			lTransitionTime);
; 709  : 		aSkyObjectQuad.SetSrcColor(2,

  00298	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0029a	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  0029d	50		 push	 eax
  0029e	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  002a1	50		 push	 eax
  002a2	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  002a5	50		 push	 eax
  002a6	51		 push	 ecx
  002a7	8d 45 fc	 lea	 eax, DWORD PTR $T14[ebp]
  002aa	8b ce		 mov	 ecx, esi
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 710  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 711  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 712  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 713  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 714  : 		aSkyObjectQuad.SetTransition(2,

  002b2	8b 45 0c	 mov	 eax, DWORD PTR _c_rNextColorVector$[ebp]
  002b5	57		 push	 edi
  002b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b8	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  002bb	50		 push	 eax
  002bc	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  002bf	50		 push	 eax
  002c0	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  002c3	50		 push	 eax
  002c4	51		 push	 ecx
  002c5	8d 45 fd	 lea	 eax, DWORD PTR $T17[ebp]
  002c8	8b ce		 mov	 ecx, esi
  002ca	50		 push	 eax
  002cb	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 715  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 716  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 717  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 718  : 			c_rNextColorVector[ulVectorGradientColornum].m_FirstColor.a,
; 719  : 			lTransitionTime);
; 720  : 		aSkyObjectQuad.SetSrcColor(3,

  002d0	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  002d2	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  002d5	50		 push	 eax
  002d6	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  002d9	50		 push	 eax
  002da	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  002dd	50		 push	 eax
  002de	51		 push	 ecx
  002df	8d 45 fe	 lea	 eax, DWORD PTR $T20[ebp]
  002e2	8b ce		 mov	 ecx, esi
  002e4	50		 push	 eax
  002e5	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 721  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.r,
; 722  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.g,
; 723  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.b,
; 724  : 			c_rColorVector[ulVectorGradientColornum].m_FirstColor.a);
; 725  : 		aSkyObjectQuad.SetTransition(3,

  002ea	8b 45 0c	 mov	 eax, DWORD PTR _c_rNextColorVector$[ebp]
  002ed	8b ce		 mov	 ecx, esi
  002ef	57		 push	 edi
  002f0	8b 10		 mov	 edx, DWORD PTR [eax]
  002f2	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  002f5	50		 push	 eax
  002f6	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  002f9	50		 push	 eax
  002fa	8d 42 04	 lea	 eax, DWORD PTR [edx+4]
  002fd	50		 push	 eax
  002fe	52		 push	 edx
  002ff	8d 45 ff	 lea	 eax, DWORD PTR $T22[ebp]
  00302	50		 push	 eax
  00303	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00308	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  0030b	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 683  : 	for (uck = 0; uck < aFaceTop.m_SkyObjectQuadVector.size(); ++uck)

  00310	ff 45 f0	 inc	 DWORD PTR _uck$1$[ebp]
  00313	81 45 f4 2c 01
	00 00		 add	 DWORD PTR tv2409[ebp], 300 ; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0031a	8b 8e 3c 03 00
	00		 mov	 ecx, DWORD PTR [esi+828]
  00320	2b 8e 38 03 00
	00		 sub	 ecx, DWORD PTR [esi+824]
  00326	f7 e9		 imul	 ecx
  00328	c1 fa 05	 sar	 edx, 5
  0032b	8b c2		 mov	 eax, edx
  0032d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00330	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 683  : 	for (uck = 0; uck < aFaceTop.m_SkyObjectQuadVector.size(); ++uck)

  00332	39 45 f0	 cmp	 DWORD PTR _uck$1$[ebp], eax
  00335	8b 45 f4	 mov	 eax, DWORD PTR tv2409[ebp]
  00338	0f 82 e2 fe ff
	ff		 jb	 $LL10@SetSkyColo
$LN9@SetSkyColo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0033e	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 734  : 	for (uck = 0; uck < aFaceBottom.m_SkyObjectQuadVector.size(); ++uck)

  00341	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00343	2b 3b		 sub	 edi, DWORD PTR [ebx]
  00345	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 734  : 	for (uck = 0; uck < aFaceBottom.m_SkyObjectQuadVector.size(); ++uck)

  0034a	89 4d f0	 mov	 DWORD PTR _uck$2$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0034d	8b 8e 78 03 00
	00		 mov	 ecx, DWORD PTR [esi+888]
  00353	2b 8e 74 03 00
	00		 sub	 ecx, DWORD PTR [esi+884]
  00359	f7 e9		 imul	 ecx
  0035b	c1 fa 05	 sar	 edx, 5
  0035e	8b c2		 mov	 eax, edx
  00360	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00363	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 734  : 	for (uck = 0; uck < aFaceBottom.m_SkyObjectQuadVector.size(); ++uck)

  00365	0f 84 79 01 00
	00		 je	 $LN12@SetSkyColo

; 738  : 		aSkyObjectQuad.SetSrcColor(0,

  0036b	83 e7 e0	 and	 edi, -32		; ffffffe0H
  0036e	c6 45 0b 00	 mov	 BYTE PTR $T24[ebp], 0
  00372	83 ef 20	 sub	 edi, 32			; 00000020H

; 739  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 740  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 741  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 742  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 743  : 		aSkyObjectQuad.SetTransition(0,

  00375	c6 45 f8 00	 mov	 BYTE PTR $T1[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00379	33 c0		 xor	 eax, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 749  : 		aSkyObjectQuad.SetSrcColor(1,

  0037b	c6 45 f9 01	 mov	 BYTE PTR $T4[ebp], 1

; 750  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 751  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 752  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 753  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 754  : 		aSkyObjectQuad.SetTransition(1,

  0037f	c6 45 fa 01	 mov	 BYTE PTR $T7[ebp], 1

; 755  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 756  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 757  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 758  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 759  : 			lTransitionTime);
; 760  : 		aSkyObjectQuad.SetSrcColor(2,

  00383	c6 45 fb 02	 mov	 BYTE PTR $T10[ebp], 2

; 761  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 762  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 763  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 764  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 765  : 		aSkyObjectQuad.SetTransition(2,

  00387	c6 45 fc 02	 mov	 BYTE PTR $T13[ebp], 2

; 766  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 767  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 768  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 769  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 770  : 			lTransitionTime);
; 771  : 		aSkyObjectQuad.SetSrcColor(3,

  0038b	c6 45 fd 03	 mov	 BYTE PTR $T16[ebp], 3

; 772  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 773  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 774  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 775  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 776  : 		aSkyObjectQuad.SetTransition(3,

  0038f	c6 45 fe 03	 mov	 BYTE PTR $T19[ebp], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00393	89 45 f4	 mov	 DWORD PTR tv2405[ebp], eax
$LL13@SetSkyColo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 738  : 		aSkyObjectQuad.SetSrcColor(0,

  00396	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00398	8b b6 74 03 00
	00		 mov	 esi, DWORD PTR [esi+884]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 738  : 		aSkyObjectQuad.SetSrcColor(0,

  0039e	03 cf		 add	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  003a0	03 f0		 add	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 738  : 		aSkyObjectQuad.SetSrcColor(0,

  003a2	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  003a5	50		 push	 eax
  003a6	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  003a9	50		 push	 eax
  003aa	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  003ad	50		 push	 eax
  003ae	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  003b1	8b ce		 mov	 ecx, esi
  003b3	50		 push	 eax
  003b4	8d 45 0b	 lea	 eax, DWORD PTR $T24[ebp]
  003b7	50		 push	 eax
  003b8	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 739  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 740  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 741  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 742  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 743  : 		aSkyObjectQuad.SetTransition(0,

  003bd	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  003c0	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  003c3	8b 09		 mov	 ecx, DWORD PTR [ecx]
  003c5	03 cf		 add	 ecx, edi
  003c7	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  003ca	50		 push	 eax
  003cb	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  003ce	50		 push	 eax
  003cf	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  003d2	50		 push	 eax
  003d3	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  003d6	8b ce		 mov	 ecx, esi
  003d8	50		 push	 eax
  003d9	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
  003dc	50		 push	 eax
  003dd	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 749  : 		aSkyObjectQuad.SetSrcColor(1,

  003e2	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  003e4	03 cf		 add	 ecx, edi
  003e6	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  003e9	50		 push	 eax
  003ea	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  003ed	50		 push	 eax
  003ee	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  003f1	50		 push	 eax
  003f2	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  003f5	8b ce		 mov	 ecx, esi
  003f7	50		 push	 eax
  003f8	8d 45 f9	 lea	 eax, DWORD PTR $T4[ebp]
  003fb	50		 push	 eax
  003fc	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 750  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 751  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 752  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 753  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 754  : 		aSkyObjectQuad.SetTransition(1,

  00401	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  00404	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  00407	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00409	03 cf		 add	 ecx, edi
  0040b	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0040e	50		 push	 eax
  0040f	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00412	50		 push	 eax
  00413	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00416	50		 push	 eax
  00417	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  0041a	8b ce		 mov	 ecx, esi
  0041c	50		 push	 eax
  0041d	8d 45 fa	 lea	 eax, DWORD PTR $T7[ebp]
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 755  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 756  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 757  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 758  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 759  : 			lTransitionTime);
; 760  : 		aSkyObjectQuad.SetSrcColor(2,

  00426	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00428	03 cf		 add	 ecx, edi
  0042a	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  0042d	50		 push	 eax
  0042e	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00431	50		 push	 eax
  00432	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00435	50		 push	 eax
  00436	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00439	8b ce		 mov	 ecx, esi
  0043b	50		 push	 eax
  0043c	8d 45 fb	 lea	 eax, DWORD PTR $T10[ebp]
  0043f	50		 push	 eax
  00440	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 761  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 762  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 763  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 764  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 765  : 		aSkyObjectQuad.SetTransition(2,

  00445	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  00448	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  0044b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0044d	03 cf		 add	 ecx, edi
  0044f	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00452	50		 push	 eax
  00453	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00456	50		 push	 eax
  00457	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0045a	50		 push	 eax
  0045b	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  0045e	8b ce		 mov	 ecx, esi
  00460	50		 push	 eax
  00461	8d 45 fc	 lea	 eax, DWORD PTR $T13[ebp]
  00464	50		 push	 eax
  00465	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 766  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 767  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 768  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 769  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 770  : 			lTransitionTime);
; 771  : 		aSkyObjectQuad.SetSrcColor(3,

  0046a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0046c	03 cf		 add	 ecx, edi
  0046e	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]
  00471	50		 push	 eax
  00472	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00475	50		 push	 eax
  00476	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00479	50		 push	 eax
  0047a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  0047d	8b ce		 mov	 ecx, esi
  0047f	50		 push	 eax
  00480	8d 45 fd	 lea	 eax, DWORD PTR $T16[ebp]
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 772  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 773  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 774  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 775  : 			c_rColorVector[ulVectorGradientColornum].m_SecondColor.a);
; 776  : 		aSkyObjectQuad.SetTransition(3,

  00489	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rNextColorVector$[ebp]
  0048c	ff 75 10	 push	 DWORD PTR _lTransitionTime$[ebp]
  0048f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00491	8b ce		 mov	 ecx, esi
  00493	03 d7		 add	 edx, edi
  00495	8d 42 1c	 lea	 eax, DWORD PTR [edx+28]
  00498	50		 push	 eax
  00499	8d 42 18	 lea	 eax, DWORD PTR [edx+24]
  0049c	50		 push	 eax
  0049d	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  004a0	50		 push	 eax
  004a1	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  004a4	50		 push	 eax
  004a5	8d 45 fe	 lea	 eax, DWORD PTR $T19[ebp]
  004a8	50		 push	 eax
  004a9	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  004ae	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  004b1	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 734  : 	for (uck = 0; uck < aFaceBottom.m_SkyObjectQuadVector.size(); ++uck)

  004b6	ff 45 f0	 inc	 DWORD PTR _uck$2$[ebp]
  004b9	81 45 f4 2c 01
	00 00		 add	 DWORD PTR tv2405[ebp], 300 ; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  004c0	8b 8e 78 03 00
	00		 mov	 ecx, DWORD PTR [esi+888]
  004c6	2b 8e 74 03 00
	00		 sub	 ecx, DWORD PTR [esi+884]
  004cc	f7 e9		 imul	 ecx
  004ce	c1 fa 05	 sar	 edx, 5
  004d1	8b c2		 mov	 eax, edx
  004d3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  004d6	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 734  : 	for (uck = 0; uck < aFaceBottom.m_SkyObjectQuadVector.size(); ++uck)

  004d8	39 45 f0	 cmp	 DWORD PTR _uck$2$[ebp], eax
  004db	8b 45 f4	 mov	 eax, DWORD PTR tv2405[ebp]
  004de	0f 82 b2 fe ff
	ff		 jb	 $LL13@SetSkyColo
$LN12@SetSkyColo:
  004e4	5f		 pop	 edi

; 777  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.r,
; 778  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.g,
; 779  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.b,
; 780  : 			c_rNextColorVector[ulVectorGradientColornum].m_SecondColor.a,
; 781  : 			lTransitionTime);
; 782  : 	}
; 783  : }

  004e5	5e		 pop	 esi
  004e6	5b		 pop	 ebx
  004e7	8b e5		 mov	 esp, ebp
  004e9	5d		 pop	 ebp
  004ea	c2 0c 00	 ret	 12			; 0000000cH
?SetSkyColor@CSkyBox@@QAEXABV?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@0J@Z ENDP ; CSkyBox::SetSkyColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Refresh@CSkyBox@@QAEXXZ
_TEXT	SEGMENT
tv1361 = -112						; size = 16
tv1362 = -96						; size = 16
_v2QuadPoints$9 = -68					; size = 16
$T10 = -64						; size = 12
$T11 = -64						; size = 12
$T12 = -64						; size = 12
$T13 = -64						; size = 12
$T14 = -64						; size = 12
$T15 = -64						; size = 12
$T16 = -64						; size = 12
$T17 = -64						; size = 12
$T18 = -64						; size = 12
$T19 = -64						; size = 12
$T20 = -64						; size = 12
$T21 = -64						; size = 12
$T22 = -64						; size = 12
$T23 = -64						; size = 12
$T24 = -64						; size = 12
$T25 = -64						; size = 12
$T26 = -64						; size = 12
$T27 = -64						; size = 12
$T28 = -64						; size = 12
$T29 = -64						; size = 12
$T30 = -64						; size = 12
$T31 = -64						; size = 12
$T32 = -64						; size = 12
$T33 = -64						; size = 12
$T34 = -64						; size = 12
$T35 = -64						; size = 12
$T36 = -64						; size = 12
$T37 = -64						; size = 12
$T38 = -64						; size = 12
$T39 = -64						; size = 12
$T40 = -64						; size = 12
$T41 = -64						; size = 12
_v3QuadPoints$ = -52					; size = 48
__$ArrayPad$ = -4					; size = 4
?Refresh@CSkyBox@@QAEXXZ PROC				; CSkyBox::Refresh, COMDAT
; _this$ = ecx

; 431  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 432  : 	D3DXVECTOR3 v3QuadPoints[4];
; 433  : 
; 434  : 	if( m_ucRenderMode == CSkyObject::SKY_RENDER_MODE_DEFAULT ||  m_ucRenderMode == CSkyObject::SKY_RENDER_MODE_DIFFUSE )

  00023	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0002b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@bf800000
  00033	56		 push	 esi
  00034	8b f1		 mov	 esi, ecx
  00036	0f 29 4d a0	 movaps	 XMMWORD PTR tv1362[ebp], xmm1
  0003a	0f 11 55 90	 movups	 XMMWORD PTR tv1361[ebp], xmm2
  0003e	8a 86 d4 01 00
	00		 mov	 al, BYTE PTR [esi+468]
  00044	84 c0		 test	 al, al
  00046	0f 84 e9 02 00
	00		 je	 $LN4@Refresh
  0004c	3c 01		 cmp	 al, 1
  0004e	0f 84 e1 02 00
	00		 je	 $LN4@Refresh

; 478  : 		SetSkyObjectQuadHorizon(&m_Faces[5].m_SkyObjectQuadVector, v3QuadPoints);
; 479  : 		m_Faces[5].m_strfacename = "bottom";
; 480  : 
; 481  : 	}
; 482  : 	else if( m_ucRenderMode == CSkyObject::SKY_RENDER_MODE_TEXTURE )

  00054	3c 02		 cmp	 al, 2
  00056	0f 85 c2 04 00
	00		 jne	 $LN6@Refresh

; 485  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, -1.0f, -1.0f);

  0005c	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0005f	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T33[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 485  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, -1.0f, -1.0f);

  00066	8b 45 c8	 mov	 eax, DWORD PTR $T33[ebp+8]
  00069	0f 14 c2	 unpcklps xmm0, xmm2
  0006c	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 486  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  00071	0f 28 c1	 movaps	 xmm0, xmm1
  00074	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
  00077	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0007a	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T32[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 486  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  00081	8b 45 c8	 mov	 eax, DWORD PTR $T32[ebp+8]
  00084	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  00087	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 487  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, -1.0f);

  0008c	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0008f	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T31[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 487  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, -1.0f);

  00096	8b 45 c8	 mov	 eax, DWORD PTR $T31[ebp+8]
  00099	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  0009c	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0009f	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T30[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 488  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  000a6	8b 45 c8	 mov	 eax, DWORD PTR $T30[ebp+8]
  000a9	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 489  : 
; 490  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 491  : 
; 492  : 		SetSkyObjectQuadHorizon(&m_Faces[0].m_SkyObjectQuadVector, v3QuadPoints);

  000ac	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  000af	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0
  000b4	0f 28 c2	 movaps	 xmm0, xmm2
  000b7	50		 push	 eax
  000b8	8d 86 48 02 00
	00		 lea	 eax, DWORD PTR [esi+584]
  000be	0f 14 c2	 unpcklps xmm0, xmm2
  000c1	50		 push	 eax
  000c2	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  000c7	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_05HJNNLMDJ@front@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 493  : 		m_Faces[0].m_strfacename = "front";

  000d1	8d 8e 18 02 00
	00		 lea	 ecx, DWORD PTR [esi+536]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  000d7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 496  : 		v3QuadPoints[0] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  000dc	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]

; 500  : 
; 501  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 502  : 
; 503  : 		SetSkyObjectQuadHorizon(&m_Faces[1].m_SkyObjectQuadVector, v3QuadPoints);

  000e0	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000e2	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T29[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 496  : 		v3QuadPoints[0] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  000e9	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
  000ed	8b 45 c8	 mov	 eax, DWORD PTR $T29[ebp+8]
  000f0	0f 28 c2	 movaps	 xmm0, xmm2
  000f3	0f 14 c1	 unpcklps xmm0, xmm1
  000f6	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 497  : 		v3QuadPoints[1] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  000fb	0f 28 c2	 movaps	 xmm0, xmm2
  000fe	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
  00101	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00104	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T28[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 497  : 		v3QuadPoints[1] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  0010b	8b 45 c8	 mov	 eax, DWORD PTR $T28[ebp+8]
  0010e	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  00111	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 498  : 		v3QuadPoints[2] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00116	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00119	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T27[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 498  : 		v3QuadPoints[2] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00120	8b 45 c8	 mov	 eax, DWORD PTR $T27[ebp+8]
  00123	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  00126	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00129	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T26[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 499  : 		v3QuadPoints[3] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  00130	8b 45 c8	 mov	 eax, DWORD PTR $T26[ebp+8]
  00133	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 500  : 
; 501  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 502  : 
; 503  : 		SetSkyObjectQuadHorizon(&m_Faces[1].m_SkyObjectQuadVector, v3QuadPoints);

  00136	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  00139	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0
  0013e	0f 28 c1	 movaps	 xmm0, xmm1
  00141	50		 push	 eax
  00142	8d 86 84 02 00
	00		 lea	 eax, DWORD PTR [esi+644]
  00148	0f 14 c1	 unpcklps xmm0, xmm1
  0014b	50		 push	 eax
  0014c	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  00151	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00156	68 00 00 00 00	 push	 OFFSET ??_C@_04JFCNHLLM@back@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 504  : 		m_Faces[1].m_strfacename = "back";

  0015b	8d 8e 54 02 00
	00		 lea	 ecx, DWORD PTR [esi+596]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00161	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 507  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00166	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
  0016a	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0016d	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T25[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 507  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00174	8b 45 c8	 mov	 eax, DWORD PTR $T25[ebp+8]
  00177	0f 14 c1	 unpcklps xmm0, xmm1
  0017a	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 508  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  0017f	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00182	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T24[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 507  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00189	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax

; 508  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  0018c	8b 45 c8	 mov	 eax, DWORD PTR $T24[ebp+8]
  0018f	0f 14 c1	 unpcklps xmm0, xmm1
  00192	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0
  00197	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0019a	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T23[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 509  : 		v3QuadPoints[2] = D3DXVECTOR3(1.0f, -1.0f, -1.0f);

  001a1	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
  001a5	8b 45 c8	 mov	 eax, DWORD PTR $T23[ebp+8]

; 511  : 
; 512  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 513  : 
; 514  : 		SetSkyObjectQuadHorizon(&m_Faces[2].m_SkyObjectQuadVector, v3QuadPoints);

  001a8	8b ce		 mov	 ecx, esi
  001aa	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  001ad	0f 28 c1	 movaps	 xmm0, xmm1
  001b0	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001b3	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T22[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 510  : 		v3QuadPoints[3] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  001ba	8b 45 c8	 mov	 eax, DWORD PTR $T22[ebp+8]
  001bd	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 511  : 
; 512  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 513  : 
; 514  : 		SetSkyObjectQuadHorizon(&m_Faces[2].m_SkyObjectQuadVector, v3QuadPoints);

  001c0	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  001c3	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0
  001c8	0f 28 c1	 movaps	 xmm0, xmm1
  001cb	50		 push	 eax
  001cc	8d 86 c0 02 00
	00		 lea	 eax, DWORD PTR [esi+704]
  001d2	0f 14 c2	 unpcklps xmm0, xmm2
  001d5	50		 push	 eax
  001d6	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  001db	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_04GOOOJOPP@left@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 515  : 		m_Faces[2].m_strfacename = "left";

  001e5	8d 8e 90 02 00
	00		 lea	 ecx, DWORD PTR [esi+656]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  001eb	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 518  : 		v3QuadPoints[0] = D3DXVECTOR3(-1.0f, -1.0f, -1.0f);

  001f0	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]

; 522  : 
; 523  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 524  : 
; 525  : 		SetSkyObjectQuadHorizon(&m_Faces[3].m_SkyObjectQuadVector, v3QuadPoints);

  001f4	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001f6	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T21[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 520  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  001fd	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
  00201	8b 45 c8	 mov	 eax, DWORD PTR $T21[ebp+8]
  00204	0f 28 c2	 movaps	 xmm0, xmm2
  00207	0f 14 c2	 unpcklps xmm0, xmm2
  0020a	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0
  0020f	0f 28 c2	 movaps	 xmm0, xmm2
  00212	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
  00215	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00218	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T20[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 519  : 		v3QuadPoints[1] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  0021f	8b 45 c8	 mov	 eax, DWORD PTR $T20[ebp+8]
  00222	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  00225	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 520  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  0022a	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0022d	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T19[ebp+8], -1082130432 ; bf800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 520  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  00234	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp+8]
  00237	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  0023a	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0023d	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T18[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 521  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  00244	8b 45 c8	 mov	 eax, DWORD PTR $T18[ebp+8]
  00247	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 522  : 
; 523  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 524  : 
; 525  : 		SetSkyObjectQuadHorizon(&m_Faces[3].m_SkyObjectQuadVector, v3QuadPoints);

  0024a	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  0024d	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0
  00252	0f 28 c2	 movaps	 xmm0, xmm2
  00255	50		 push	 eax
  00256	8d 86 fc 02 00
	00		 lea	 eax, DWORD PTR [esi+764]
  0025c	0f 14 c1	 unpcklps xmm0, xmm1
  0025f	50		 push	 eax
  00260	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  00265	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_05DHJDAOHK@right@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 526  : 		m_Faces[3].m_strfacename = "right";

  0026f	8d 8e cc 02 00
	00		 lea	 ecx, DWORD PTR [esi+716]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00275	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 529  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  0027a	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
  0027e	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00282	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T17[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 529  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  00289	8b 45 c8	 mov	 eax, DWORD PTR $T17[ebp+8]
  0028c	0f 28 c1	 movaps	 xmm0, xmm1
  0028f	0f 14 c2	 unpcklps xmm0, xmm2
  00292	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 530  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  00297	0f 28 c1	 movaps	 xmm0, xmm1
  0029a	0f 14 c1	 unpcklps xmm0, xmm1
  0029d	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 531  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  002a2	0f 28 c2	 movaps	 xmm0, xmm2
  002a5	0f 14 c2	 unpcklps xmm0, xmm2
  002a8	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002ab	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T16[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 530  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  002b2	8b 45 c8	 mov	 eax, DWORD PTR $T16[ebp+8]

; 531  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  002b5	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0

; 532  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  002ba	0f 28 c2	 movaps	 xmm0, xmm2
  002bd	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002c0	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T15[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 531  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  002c7	8b 45 c8	 mov	 eax, DWORD PTR $T15[ebp+8]

; 532  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  002ca	0f 14 c1	 unpcklps xmm0, xmm1
  002cd	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002d0	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T14[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 532  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  002d7	8b 45 c8	 mov	 eax, DWORD PTR $T14[ebp+8]
  002da	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  002df	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 533  : 
; 534  : 		//UpdateSkyFaceQuadTransform(v3QuadPoints);
; 535  : 
; 536  : 		SetSkyObjectQuadHorizon(&m_Faces[4].m_SkyObjectQuadVector, v3QuadPoints);

  002e2	8b ce		 mov	 ecx, esi
  002e4	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  002e7	50		 push	 eax
  002e8	8d 86 38 03 00
	00		 lea	 eax, DWORD PTR [esi+824]
  002ee	50		 push	 eax
  002ef	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_03FGFCOCMD@top@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 537  : 		m_Faces[4].m_strfacename = "top";

  002f9	8d 8e 08 03 00
	00		 lea	 ecx, DWORD PTR [esi+776]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  002ff	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 545  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  00304	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]

; 546  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, -1.0f, -1.0f);

  00308	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
  0030c	0f 28 c1	 movaps	 xmm0, xmm1
  0030f	0f 14 c1	 unpcklps xmm0, xmm1
  00312	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0
  00317	0f 28 c1	 movaps	 xmm0, xmm1
  0031a	0f 14 c2	 unpcklps xmm0, xmm2
  0031d	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 547  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  00322	0f 28 c2	 movaps	 xmm0, xmm2
  00325	0f 14 c1	 unpcklps xmm0, xmm1
  00328	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0

; 548  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, -1.0f, -1.0f);

  0032d	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00330	e9 83 01 00 00	 jmp	 $LN139@Refresh
$LN4@Refresh:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 436  : 		if (m_ucVirticalGradientLevelUpper + m_ucVirticalGradientLevelLower <= 0)

  00335	0f b6 8e 15 02
	00 00		 movzx	 ecx, BYTE PTR [esi+533]
  0033c	0f b6 86 14 02
	00 00		 movzx	 eax, BYTE PTR [esi+532]
  00343	03 c8		 add	 ecx, eax
  00345	0f 84 3c 02 00
	00		 je	 $LN1@Refresh

; 437  : 			return;
; 438  : 
; 439  : 		D3DXVECTOR2 v2QuadPoints[2];
; 440  : 
; 441  : 		//// Face 0: FRONT
; 442  : 		v2QuadPoints[0] = D3DXVECTOR2(1.0f, -1.0f);

  0034b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@bf800000bf800000bf8000003f800000

; 443  : 		v2QuadPoints[1] = D3DXVECTOR2(-1.0f, -1.0f);
; 444  : 		SetSkyObjectQuadVertical(&m_Faces[0].m_SkyObjectQuadVector, v2QuadPoints);

  00352	8d 45 bc	 lea	 eax, DWORD PTR _v2QuadPoints$9[ebp]
  00355	50		 push	 eax
  00356	8d 86 48 02 00
	00		 lea	 eax, DWORD PTR [esi+584]
  0035c	8b ce		 mov	 ecx, esi
  0035e	50		 push	 eax
  0035f	0f 11 45 bc	 movups	 XMMWORD PTR _v2QuadPoints$9[ebp], xmm0
  00363	e8 00 00 00 00	 call	 ?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ; CSkyBox::SetSkyObjectQuadVertical
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00368	68 00 00 00 00	 push	 OFFSET ??_C@_05HJNNLMDJ@front@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 445  : 		m_Faces[0].m_strfacename = "front";

  0036d	8d 8e 18 02 00
	00		 lea	 ecx, DWORD PTR [esi+536]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00373	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 448  : 		v2QuadPoints[0] = D3DXVECTOR2(-1.0f, 1.0f);

  00378	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f800000bf800000

; 449  : 		v2QuadPoints[1] = D3DXVECTOR2(1.0f, 1.0f);
; 450  : 		SetSkyObjectQuadVertical(&m_Faces[1].m_SkyObjectQuadVector, v2QuadPoints);

  0037f	8d 45 bc	 lea	 eax, DWORD PTR _v2QuadPoints$9[ebp]
  00382	50		 push	 eax
  00383	8d 86 84 02 00
	00		 lea	 eax, DWORD PTR [esi+644]
  00389	8b ce		 mov	 ecx, esi
  0038b	50		 push	 eax
  0038c	0f 11 45 bc	 movups	 XMMWORD PTR _v2QuadPoints$9[ebp], xmm0
  00390	e8 00 00 00 00	 call	 ?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ; CSkyBox::SetSkyObjectQuadVertical
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00395	68 00 00 00 00	 push	 OFFSET ??_C@_04JFCNHLLM@back@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 451  : 		m_Faces[1].m_strfacename = "back";

  0039a	8d 8e 54 02 00
	00		 lea	 ecx, DWORD PTR [esi+596]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  003a0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 456  : 		SetSkyObjectQuadVertical(&m_Faces[2].m_SkyObjectQuadVector, v2QuadPoints);

  003a5	8d 45 bc	 lea	 eax, DWORD PTR _v2QuadPoints$9[ebp]
  003a8	c7 45 c0 00 00
	80 bf		 mov	 DWORD PTR _v2QuadPoints$9[ebp+4], -1082130432 ; bf800000H
  003af	50		 push	 eax
  003b0	8d 86 c0 02 00
	00		 lea	 eax, DWORD PTR [esi+704]
  003b6	c7 45 c4 00 00
	80 bf		 mov	 DWORD PTR _v2QuadPoints$9[ebp+8], -1082130432 ; bf800000H
  003bd	50		 push	 eax
  003be	8b ce		 mov	 ecx, esi
  003c0	e8 00 00 00 00	 call	 ?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ; CSkyBox::SetSkyObjectQuadVertical
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  003c5	68 00 00 00 00	 push	 OFFSET ??_C@_04GOOOJOPP@left@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 457  : 		m_Faces[2].m_strfacename = "left";

  003ca	8d 8e 90 02 00
	00		 lea	 ecx, DWORD PTR [esi+656]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  003d0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 460  : 		v2QuadPoints[0] = D3DXVECTOR2(1.0f, 1.0f);

  003d5	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@bf8000003f8000003f8000003f800000

; 461  : 		v2QuadPoints[1] = D3DXVECTOR2(1.0f, -1.0f);
; 462  : 		SetSkyObjectQuadVertical(&m_Faces[3].m_SkyObjectQuadVector, v2QuadPoints);

  003dc	8d 45 bc	 lea	 eax, DWORD PTR _v2QuadPoints$9[ebp]
  003df	50		 push	 eax
  003e0	8d 86 fc 02 00
	00		 lea	 eax, DWORD PTR [esi+764]
  003e6	8b ce		 mov	 ecx, esi
  003e8	50		 push	 eax
  003e9	0f 11 45 bc	 movups	 XMMWORD PTR _v2QuadPoints$9[ebp], xmm0
  003ed	e8 00 00 00 00	 call	 ?SetSkyObjectQuadVertical@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR2@@@Z ; CSkyBox::SetSkyObjectQuadVertical
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  003f2	68 00 00 00 00	 push	 OFFSET ??_C@_05DHJDAOHK@right@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 463  : 		m_Faces[3].m_strfacename = "right";

  003f7	8d 8e cc 02 00
	00		 lea	 ecx, DWORD PTR [esi+716]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  003fd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 466  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  00402	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]

; 470  : 		SetSkyObjectQuadHorizon(&m_Faces[4].m_SkyObjectQuadVector, v3QuadPoints);

  00406	8b ce		 mov	 ecx, esi
  00408	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0040c	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T41[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 466  : 		v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, 1.0f);

  00413	8b 45 c8	 mov	 eax, DWORD PTR $T41[ebp+8]
  00416	0f 28 c1	 movaps	 xmm0, xmm1
  00419	0f 14 c1	 unpcklps xmm0, xmm1
  0041c	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 467  : 		v3QuadPoints[1] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  00421	0f 28 c2	 movaps	 xmm0, xmm2
  00424	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
  00427	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0042a	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T40[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 467  : 		v3QuadPoints[1] = D3DXVECTOR3(-1.0f, 1.0f, 1.0f);

  00431	8b 45 c8	 mov	 eax, DWORD PTR $T40[ebp+8]
  00434	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  00437	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 468  : 		v3QuadPoints[2] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  0043c	0f 28 c1	 movaps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0043f	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T39[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 468  : 		v3QuadPoints[2] = D3DXVECTOR3(1.0f, -1.0f, 1.0f);

  00446	8b 45 c8	 mov	 eax, DWORD PTR $T39[ebp+8]
  00449	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  0044c	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0044f	c7 45 c8 00 00
	80 3f		 mov	 DWORD PTR $T38[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 469  : 		v3QuadPoints[3] = D3DXVECTOR3(-1.0f, -1.0f, 1.0f);

  00456	8b 45 c8	 mov	 eax, DWORD PTR $T38[ebp+8]
  00459	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 470  : 		SetSkyObjectQuadHorizon(&m_Faces[4].m_SkyObjectQuadVector, v3QuadPoints);

  0045c	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  0045f	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0
  00464	0f 28 c2	 movaps	 xmm0, xmm2
  00467	50		 push	 eax
  00468	8d 86 38 03 00
	00		 lea	 eax, DWORD PTR [esi+824]
  0046e	0f 14 c2	 unpcklps xmm0, xmm2
  00471	50		 push	 eax
  00472	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  00477	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  0047c	68 00 00 00 00	 push	 OFFSET ??_C@_03FGFCOCMD@top@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 471  : 		m_Faces[4].m_strfacename = "top";

  00481	8d 8e 08 03 00
	00		 lea	 ecx, DWORD PTR [esi+776]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  00487	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 474  : 		v3QuadPoints[0] = D3DXVECTOR3(-1.0f, 1.0f, -1.0f);

  0048c	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
  00490	0f 28 c2	 movaps	 xmm0, xmm2
  00493	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
  00497	0f 14 c1	 unpcklps xmm0, xmm1
  0049a	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0

; 475  : 		v3QuadPoints[1] = D3DXVECTOR3(1.0f, 1.0f, -1.0f);

  0049f	0f 28 c1	 movaps	 xmm0, xmm1
  004a2	0f 14 c1	 unpcklps xmm0, xmm1
  004a5	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0

; 476  : 		v3QuadPoints[2] = D3DXVECTOR3(-1.0f, -1.0f, -1.0f);

  004aa	0f 28 c2	 movaps	 xmm0, xmm2
  004ad	0f 14 c2	 unpcklps xmm0, xmm2
  004b0	66 0f d6 45 e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm0

; 477  : 		v3QuadPoints[3] = D3DXVECTOR3(1.0f, -1.0f, -1.0f);

  004b5	0f 28 c1	 movaps	 xmm0, xmm1
$LN139@Refresh:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  004b8	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T37[ebp+8], -1082130432 ; bf800000H
  004bf	8b ce		 mov	 ecx, esi
  004c1	8b 45 c8	 mov	 eax, DWORD PTR $T37[ebp+8]
  004c4	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
  004c7	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T36[ebp+8], -1082130432 ; bf800000H
  004ce	8b 45 c8	 mov	 eax, DWORD PTR $T36[ebp+8]
  004d1	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  004d4	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T35[ebp+8], -1082130432 ; bf800000H
  004db	8b 45 c8	 mov	 eax, DWORD PTR $T35[ebp+8]
  004de	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  004e1	c7 45 c8 00 00
	80 bf		 mov	 DWORD PTR $T34[ebp+8], -1082130432 ; bf800000H
  004e8	8b 45 c8	 mov	 eax, DWORD PTR $T34[ebp+8]
  004eb	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax
  004ee	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  004f1	50		 push	 eax
  004f2	8d 86 74 03 00
	00		 lea	 eax, DWORD PTR [esi+884]
  004f8	0f 14 c2	 unpcklps xmm0, xmm2
  004fb	50		 push	 eax
  004fc	66 0f d6 45 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm0
  00501	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
  00506	68 00 00 00 00	 push	 OFFSET ??_C@_06PMMPCIPB@bottom@
  0050b	8d 8e 44 03 00
	00		 lea	 ecx, DWORD PTR [esi+836]
  00511	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00516	0f 10 55 90	 movups	 xmm2, XMMWORD PTR tv1361[ebp]
  0051a	0f 28 4d a0	 movaps	 xmm1, XMMWORD PTR tv1362[ebp]
$LN6@Refresh:
  0051e	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 557  : 	v3QuadPoints[0] = D3DXVECTOR3(1.0f, 1.0f, 0.0f);

  00525	0f 28 c1	 movaps	 xmm0, xmm1
  00528	8b 45 c8	 mov	 eax, DWORD PTR $T13[ebp+8]

; 561  : 	SetSkyObjectQuadHorizon(&m_FaceCloud.m_SkyObjectQuadVector, v3QuadPoints);

  0052b	8b ce		 mov	 ecx, esi
  0052d	89 45 d4	 mov	 DWORD PTR _v3QuadPoints$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00530	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 558  : 	v3QuadPoints[1] = D3DXVECTOR3(-1.0f, 1.0f, 0.0f);

  00537	8b 45 c8	 mov	 eax, DWORD PTR $T12[ebp+8]
  0053a	89 45 e0	 mov	 DWORD PTR _v3QuadPoints$[ebp+20], eax
  0053d	0f 14 c1	 unpcklps xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00540	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 559  : 	v3QuadPoints[2] = D3DXVECTOR3(1.0f, -1.0f, 0.0f);

  00547	8b 45 c8	 mov	 eax, DWORD PTR $T11[ebp+8]
  0054a	89 45 ec	 mov	 DWORD PTR _v3QuadPoints$[ebp+32], eax
  0054d	66 0f d6 45 cc	 movq	 QWORD PTR _v3QuadPoints$[ebp], xmm0
  00552	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00555	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 560  : 	v3QuadPoints[3] = D3DXVECTOR3(-1.0f, -1.0f, 0.0f);

  0055c	8b 45 c8	 mov	 eax, DWORD PTR $T10[ebp+8]
  0055f	89 45 f8	 mov	 DWORD PTR _v3QuadPoints$[ebp+44], eax

; 561  : 	SetSkyObjectQuadHorizon(&m_FaceCloud.m_SkyObjectQuadVector, v3QuadPoints);

  00562	8d 45 cc	 lea	 eax, DWORD PTR _v3QuadPoints$[ebp]
  00565	0f 14 c1	 unpcklps xmm0, xmm1
  00568	50		 push	 eax
  00569	0f 14 ca	 unpcklps xmm1, xmm2
  0056c	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
  0056f	0f 14 d2	 unpcklps xmm2, xmm2
  00572	50		 push	 eax
  00573	66 0f d6 45 d8	 movq	 QWORD PTR _v3QuadPoints$[ebp+12], xmm0
  00578	66 0f d6 4d e4	 movq	 QWORD PTR _v3QuadPoints$[ebp+24], xmm1
  0057d	66 0f d6 55 f0	 movq	 QWORD PTR _v3QuadPoints$[ebp+36], xmm2
  00582	e8 00 00 00 00	 call	 ?SetSkyObjectQuadHorizon@CSkyBox@@IAEXPAV?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@PBUD3DXVECTOR3@@@Z ; CSkyBox::SetSkyObjectQuadHorizon
$LN1@Refresh:

; 562  : }

  00587	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0058a	33 cd		 xor	 ecx, ebp
  0058c	5e		 pop	 esi
  0058d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00592	8b e5		 mov	 esp, ebp
  00594	5d		 pop	 ebp
  00595	8b e3		 mov	 esp, ebx
  00597	5b		 pop	 ebx
  00598	c3		 ret	 0
?Refresh@CSkyBox@@QAEXXZ ENDP				; CSkyBox::Refresh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z
_TEXT	SEGMENT
_this$1$ = -20						; size = 4
_dwk$1$ = -16						; size = 4
tv320 = -12						; size = 4
$T1 = -6						; size = 1
$T2 = -5						; size = 1
$T3 = -4						; size = 1
$T4 = -3						; size = 1
$T5 = -2						; size = 1
$T6 = -1						; size = 1
_c_rColor$ = 8						; size = 4
$T7 = 11						; size = 1
_c_rNextColor$ = 12					; size = 4
$T8 = 15						; size = 1
_dwTransitionTime$ = 16					; size = 4
?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z PROC ; CSkyBox::SetCloudColor, COMDAT
; _this$ = ecx

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00009	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 567  : 	for (DWORD dwk = 0; dwk < aFaceCloud.m_SkyObjectQuadVector.size(); ++dwk)

  0000e	33 c9		 xor	 ecx, ecx
  00010	89 75 ec	 mov	 DWORD PTR _this$1$[ebp], esi
  00013	89 4d f0	 mov	 DWORD PTR _dwk$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	8b 56 38	 mov	 edx, DWORD PTR [esi+56]
  00019	2b 56 34	 sub	 edx, DWORD PTR [esi+52]
  0001c	f7 ea		 imul	 edx
  0001e	c1 fa 05	 sar	 edx, 5
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 567  : 	for (DWORD dwk = 0; dwk < aFaceCloud.m_SkyObjectQuadVector.size(); ++dwk)

  00028	0f 84 40 01 00
	00		 je	 $LN3@SetCloudCo

; 571  : 		aSkyObjectQuad.SetSrcColor(0,

  0002e	53		 push	 ebx

; 572  : 			c_rColor.m_FirstColor.r,
; 573  : 			c_rColor.m_FirstColor.g,
; 574  : 			c_rColor.m_FirstColor.b,
; 575  : 			c_rColor.m_FirstColor.a);
; 576  : 		aSkyObjectQuad.SetTransition(0,

  0002f	8b 5d 0c	 mov	 ebx, DWORD PTR _c_rNextColor$[ebp]
  00032	57		 push	 edi
  00033	8b 7d 08	 mov	 edi, DWORD PTR _c_rColor$[ebp]
  00036	88 4d ff	 mov	 BYTE PTR $T6[ebp], cl
  00039	c6 45 0b 00	 mov	 BYTE PTR $T7[ebp], 0

; 577  : 			c_rNextColor.m_FirstColor.r,
; 578  : 			c_rNextColor.m_FirstColor.g,
; 579  : 			c_rNextColor.m_FirstColor.b,
; 580  : 			c_rNextColor.m_FirstColor.a,
; 581  : 			dwTransitionTime);
; 582  : 		aSkyObjectQuad.SetSrcColor(1,

  0003d	c6 45 0f 01	 mov	 BYTE PTR $T8[ebp], 1
  00041	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]

; 583  : 			c_rColor.m_FirstColor.r,
; 584  : 			c_rColor.m_FirstColor.g,
; 585  : 			c_rColor.m_FirstColor.b,
; 586  : 			c_rColor.m_FirstColor.a);
; 587  : 		aSkyObjectQuad.SetTransition(1,

  00044	c6 45 fe 01	 mov	 BYTE PTR $T5[ebp], 1
  00048	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]

; 588  : 			c_rNextColor.m_FirstColor.r,
; 589  : 			c_rNextColor.m_FirstColor.g,
; 590  : 			c_rNextColor.m_FirstColor.b,
; 591  : 			c_rNextColor.m_FirstColor.a,
; 592  : 			dwTransitionTime);
; 593  : 		aSkyObjectQuad.SetSrcColor(2,

  0004b	c6 45 fd 02	 mov	 BYTE PTR $T4[ebp], 2
  0004f	8d 57 04	 lea	 edx, DWORD PTR [edi+4]

; 594  : 			c_rColor.m_FirstColor.r,
; 595  : 			c_rColor.m_FirstColor.g,
; 596  : 			c_rColor.m_FirstColor.b,
; 597  : 			c_rColor.m_FirstColor.a);
; 598  : 		aSkyObjectQuad.SetTransition(2,

  00052	c6 45 fc 02	 mov	 BYTE PTR $T3[ebp], 2

; 599  : 			c_rNextColor.m_FirstColor.r,
; 600  : 			c_rNextColor.m_FirstColor.g,
; 601  : 			c_rNextColor.m_FirstColor.b,
; 602  : 			c_rNextColor.m_FirstColor.a,
; 603  : 			dwTransitionTime);
; 604  : 		aSkyObjectQuad.SetSrcColor(3,

  00056	c6 45 fb 03	 mov	 BYTE PTR $T2[ebp], 3

; 605  : 			c_rColor.m_FirstColor.r,
; 606  : 			c_rColor.m_FirstColor.g,
; 607  : 			c_rColor.m_FirstColor.b,
; 608  : 			c_rColor.m_FirstColor.a);
; 609  : 		aSkyObjectQuad.SetTransition(3,

  0005a	c6 45 fa 03	 mov	 BYTE PTR $T1[ebp], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0005e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv320[ebp], 0
$LL4@SetCloudCo:

; 1504 :         return _My_data._Myfirst[_Pos];

  00065	8b 76 34	 mov	 esi, DWORD PTR [esi+52]
  00068	03 75 f4	 add	 esi, DWORD PTR tv320[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 571  : 		aSkyObjectQuad.SetSrcColor(0,

  0006b	50		 push	 eax
  0006c	51		 push	 ecx
  0006d	52		 push	 edx
  0006e	57		 push	 edi
  0006f	8d 45 ff	 lea	 eax, DWORD PTR $T6[ebp]
  00072	8b ce		 mov	 ecx, esi
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 572  : 			c_rColor.m_FirstColor.r,
; 573  : 			c_rColor.m_FirstColor.g,
; 574  : 			c_rColor.m_FirstColor.b,
; 575  : 			c_rColor.m_FirstColor.a);
; 576  : 		aSkyObjectQuad.SetTransition(0,

  0007a	8b 45 10	 mov	 eax, DWORD PTR _dwTransitionTime$[ebp]
  0007d	8b ce		 mov	 ecx, esi
  0007f	ff 30		 push	 DWORD PTR [eax]
  00081	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00084	50		 push	 eax
  00085	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00088	50		 push	 eax
  00089	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0008c	50		 push	 eax
  0008d	53		 push	 ebx
  0008e	8d 45 0b	 lea	 eax, DWORD PTR $T7[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 577  : 			c_rNextColor.m_FirstColor.r,
; 578  : 			c_rNextColor.m_FirstColor.g,
; 579  : 			c_rNextColor.m_FirstColor.b,
; 580  : 			c_rNextColor.m_FirstColor.a,
; 581  : 			dwTransitionTime);
; 582  : 		aSkyObjectQuad.SetSrcColor(1,

  00097	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  0009a	8b ce		 mov	 ecx, esi
  0009c	50		 push	 eax
  0009d	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000a0	50		 push	 eax
  000a1	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  000a4	50		 push	 eax
  000a5	57		 push	 edi
  000a6	8d 45 0f	 lea	 eax, DWORD PTR $T8[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 583  : 			c_rColor.m_FirstColor.r,
; 584  : 			c_rColor.m_FirstColor.g,
; 585  : 			c_rColor.m_FirstColor.b,
; 586  : 			c_rColor.m_FirstColor.a);
; 587  : 		aSkyObjectQuad.SetTransition(1,

  000af	8b 45 10	 mov	 eax, DWORD PTR _dwTransitionTime$[ebp]
  000b2	8b ce		 mov	 ecx, esi
  000b4	ff 30		 push	 DWORD PTR [eax]
  000b6	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000b9	50		 push	 eax
  000ba	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  000bd	50		 push	 eax
  000be	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000c1	50		 push	 eax
  000c2	53		 push	 ebx
  000c3	8d 45 fe	 lea	 eax, DWORD PTR $T5[ebp]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 588  : 			c_rNextColor.m_FirstColor.r,
; 589  : 			c_rNextColor.m_FirstColor.g,
; 590  : 			c_rNextColor.m_FirstColor.b,
; 591  : 			c_rNextColor.m_FirstColor.a,
; 592  : 			dwTransitionTime);
; 593  : 		aSkyObjectQuad.SetSrcColor(2,

  000cc	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  000cf	8b ce		 mov	 ecx, esi
  000d1	50		 push	 eax
  000d2	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000d5	50		 push	 eax
  000d6	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  000d9	50		 push	 eax
  000da	57		 push	 edi
  000db	8d 45 fd	 lea	 eax, DWORD PTR $T4[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 594  : 			c_rColor.m_FirstColor.r,
; 595  : 			c_rColor.m_FirstColor.g,
; 596  : 			c_rColor.m_FirstColor.b,
; 597  : 			c_rColor.m_FirstColor.a);
; 598  : 		aSkyObjectQuad.SetTransition(2,

  000e4	8b 45 10	 mov	 eax, DWORD PTR _dwTransitionTime$[ebp]
  000e7	8b ce		 mov	 ecx, esi
  000e9	ff 30		 push	 DWORD PTR [eax]
  000eb	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000ee	50		 push	 eax
  000ef	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  000f2	50		 push	 eax
  000f3	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000f6	50		 push	 eax
  000f7	53		 push	 ebx
  000f8	8d 45 fc	 lea	 eax, DWORD PTR $T3[ebp]
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition

; 599  : 			c_rNextColor.m_FirstColor.r,
; 600  : 			c_rNextColor.m_FirstColor.g,
; 601  : 			c_rNextColor.m_FirstColor.b,
; 602  : 			c_rNextColor.m_FirstColor.a,
; 603  : 			dwTransitionTime);
; 604  : 		aSkyObjectQuad.SetSrcColor(3,

  00101	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00104	8b ce		 mov	 ecx, esi
  00106	50		 push	 eax
  00107	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0010a	50		 push	 eax
  0010b	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0010e	50		 push	 eax
  0010f	57		 push	 edi
  00110	8d 45 fb	 lea	 eax, DWORD PTR $T2[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ; CSkyObjectQuad::SetSrcColor

; 605  : 			c_rColor.m_FirstColor.r,
; 606  : 			c_rColor.m_FirstColor.g,
; 607  : 			c_rColor.m_FirstColor.b,
; 608  : 			c_rColor.m_FirstColor.a);
; 609  : 		aSkyObjectQuad.SetTransition(3,

  00119	8b 45 10	 mov	 eax, DWORD PTR _dwTransitionTime$[ebp]
  0011c	8b ce		 mov	 ecx, esi
  0011e	ff 30		 push	 DWORD PTR [eax]
  00120	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00123	50		 push	 eax
  00124	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00127	50		 push	 eax
  00128	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0012b	50		 push	 eax
  0012c	53		 push	 ebx
  0012d	8d 45 fa	 lea	 eax, DWORD PTR $T1[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ; CSkyObjectQuad::SetTransition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00136	8b 75 ec	 mov	 esi, DWORD PTR _this$1$[ebp]
  00139	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 567  : 	for (DWORD dwk = 0; dwk < aFaceCloud.m_SkyObjectQuadVector.size(); ++dwk)

  0013e	ff 45 f0	 inc	 DWORD PTR _dwk$1$[ebp]
  00141	81 45 f4 2c 01
	00 00		 add	 DWORD PTR tv320[ebp], 300 ; 0000012cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00148	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  0014b	2b 4e 34	 sub	 ecx, DWORD PTR [esi+52]
  0014e	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 567  : 	for (DWORD dwk = 0; dwk < aFaceCloud.m_SkyObjectQuadVector.size(); ++dwk)

  00150	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00153	c1 fa 05	 sar	 edx, 5
  00156	8b c2		 mov	 eax, edx
  00158	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0015b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 567  : 	for (DWORD dwk = 0; dwk < aFaceCloud.m_SkyObjectQuadVector.size(); ++dwk)

  0015d	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  00160	39 45 f0	 cmp	 DWORD PTR _dwk$1$[ebp], eax
  00163	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00166	0f 82 f9 fe ff
	ff		 jb	 $LL4@SetCloudCo
  0016c	5f		 pop	 edi
  0016d	5b		 pop	 ebx
$LN3@SetCloudCo:
  0016e	5e		 pop	 esi

; 610  : 			c_rNextColor.m_FirstColor.r,
; 611  : 			c_rNextColor.m_FirstColor.g,
; 612  : 			c_rNextColor.m_FirstColor.b,
; 613  : 			c_rNextColor.m_FirstColor.a,
; 614  : 			dwTransitionTime);
; 615  : 	}
; 616  : }

  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c2 0c 00	 ret	 12			; 0000000cH
?SetCloudColor@CSkyBox@@QAEXABUTGradientColor@@0ABK@Z ENDP ; CSkyBox::SetCloudColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z
_TEXT	SEGMENT
_c_rv2CloudScrollSpeed$ = 8				; size = 4
?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z PROC ; CSkyBox::SetCloudScrollSpeed, COMDAT
; _this$ = ecx

; 302  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 303  : 	m_fCloudScrollSpeedU = c_rv2CloudScrollSpeed.x;

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_rv2CloudScrollSpeed$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	89 81 20 01 00
	00		 mov	 DWORD PTR [ecx+288], eax

; 304  : 	m_fCloudScrollSpeedV = c_rv2CloudScrollSpeed.y;

  0000e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00011	89 81 24 01 00
	00		 mov	 DWORD PTR [ecx+292], eax

; 305  : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?SetCloudScrollSpeed@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ENDP ; CSkyBox::SetCloudScrollSpeed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z
_TEXT	SEGMENT
_c_rv2CloudTextureScale$ = 8				; size = 4
?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z PROC ; CSkyBox::SetCloudTextureScale, COMDAT
; _this$ = ecx

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 294  : 	m_fCloudTextureScaleX = c_rv2CloudTextureScale.x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rv2CloudTextureScale$[ebp]
  00006	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0000a	f3 0f 11 89 18
	01 00 00	 movss	 DWORD PTR [ecx+280], xmm1

; 295  : 	m_fCloudTextureScaleY = c_rv2CloudTextureScale.y;

  00012	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00017	f3 0f 11 81 1c
	01 00 00	 movss	 DWORD PTR [ecx+284], xmm0

; 296  : 
; 297  : 	m_matTextureCloud._11 = m_fCloudTextureScaleX;

  0001f	f3 0f 11 89 c0
	00 00 00	 movss	 DWORD PTR [ecx+192], xmm1

; 298  : 	m_matTextureCloud._22 = m_fCloudTextureScaleY;

  00027	f3 0f 11 81 d4
	00 00 00	 movss	 DWORD PTR [ecx+212], xmm0

; 299  : }

  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SetCloudTextureScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ENDP ; CSkyBox::SetCloudTextureScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudHeight@CSkyBox@@QAEXM@Z
_TEXT	SEGMENT
_fHeight$ = 8						; size = 4
?SetCloudHeight@CSkyBox@@QAEXM@Z PROC			; CSkyBox::SetCloudHeight, COMDAT
; _this$ = ecx

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 289  : 	m_fCloudHeight = fHeight;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fHeight$[ebp]
  00008	f3 0f 11 81 14
	01 00 00	 movss	 DWORD PTR [ecx+276], xmm0

; 290  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetCloudHeight@CSkyBox@@QAEXM@Z ENDP			; CSkyBox::SetCloudHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z
_TEXT	SEGMENT
_c_rv2CloudScale$ = 8					; size = 4
?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z PROC	; CSkyBox::SetCloudScale, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 281  : 	m_fCloudScaleX = c_rv2CloudScale.x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rv2CloudScale$[ebp]

; 282  : 	m_fCloudScaleY = c_rv2CloudScale.y;
; 283  : 
; 284  : 	D3DXMatrixScaling(&m_matWorldCloud, m_fCloudScaleX, m_fCloudScaleY, 1.0f);

  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0000d	f3 0f 11 89 0c
	01 00 00	 movss	 DWORD PTR [ecx+268], xmm1
  00015	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0001a	8d 41 40	 lea	 eax, DWORD PTR [ecx+64]
  0001d	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00025	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0002b	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00030	50		 push	 eax
  00031	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0
  00039	e8 00 00 00 00	 call	 _D3DXMatrixScaling@16

; 285  : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?SetCloudScale@CSkyBox@@QAEXABUD3DXVECTOR2@@@Z ENDP	; CSkyBox::SetCloudScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetCloudTexture@CSkyBox@@QAEXPBD@Z
_TEXT	SEGMENT
__Loc$2 = -68						; size = 12
$T3 = -56						; size = 8
_this$GSCopy$1$ = -52					; size = 4
_c_szFileName$GSCopy$1$ = -48				; size = 4
$T4 = -44						; size = 28
$T5 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?SetCloudTexture@CSkyBox@@QAEXPBD@Z PROC		; CSkyBox::SetCloudTexture, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetCloudTexture@CSkyBox@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d cc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00030	8b 45 08	 mov	 eax, DWORD PTR _c_szFileName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00036	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 266  : {

  00037	89 45 d0	 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00041	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00048	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2339 :         assign(_Ptr);

  0004c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00051	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00054	50		 push	 eax
  00055	8d 45 bc	 lea	 eax, DWORD PTR __Loc$2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 267  : 	TGraphicImageInstanceMap::iterator itor = m_GraphicImageInstanceMap.find(c_szFileName);

  00058	8d 9f 34 01 00
	00		 lea	 ebx, DWORD PTR [edi+308]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0005e	50		 push	 eax
  0005f	8b cb		 mov	 ecx, ebx
  00061	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00066	8b 75 c4	 mov	 esi, DWORD PTR __Loc$2[ebp+8]
  00069	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0006d	75 14		 jne	 SHORT $LN17@SetCloudTe
  0006f	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00072	50		 push	 eax
  00073	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0007c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0007f	84 c0		 test	 al, al
  00081	74 02		 je	 SHORT $LN16@SetCloudTe
$LN17@SetCloudTe:

; 1463 :         return _Get_scary()->_Myhead;

  00083	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN16@SetCloudTe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	72 0d		 jb	 SHORT $LN35@SetCloudTe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008e	50		 push	 eax
  0008f	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00092	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00097	83 c4 08	 add	 esp, 8
$LN35@SetCloudTe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  0009a	39 33		 cmp	 DWORD PTR [ebx], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 268  : 	if (m_GraphicImageInstanceMap.end() != itor)

  0009c	75 50		 jne	 SHORT $LN65@SetCloudTe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  0009e	8b 75 d0	 mov	 esi, DWORD PTR _c_szFileName$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 271  : 	m_FaceCloud.m_strfacename = c_szFileName;

  000a1	83 c7 04	 add	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  000a4	56		 push	 esi
  000a5	8b cf		 mov	 ecx, edi
  000a7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 272  : 	CGraphicImageInstance * pGraphicImageInstance = GenerateTexture(c_szFileName);

  000ac	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  000af	56		 push	 esi
  000b0	e8 00 00 00 00	 call	 ?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z ; CSkyObject::GenerateTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000b5	57		 push	 edi
  000b6	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 272  : 	CGraphicImageInstance * pGraphicImageInstance = GenerateTexture(c_szFileName);

  000b9	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000bb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c0	89 75 ec	 mov	 DWORD PTR $T4[ebp+24], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 273  : 	m_GraphicImageInstanceMap.insert(TGraphicImageInstanceMap::value_type(m_FaceCloud.m_strfacename, pGraphicImageInstance));

  000c3	8d 45 d4	 lea	 eax, DWORD PTR $T4[ebp]
  000c6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000cd	50		 push	 eax
  000ce	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  000d1	8b cb		 mov	 ecx, ebx
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000d9	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp+20]
  000dc	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000df	72 0d		 jb	 SHORT $LN65@SetCloudTe

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000e1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e2	50		 push	 eax
  000e3	ff 75 d4	 push	 DWORD PTR $T4[ebp]
  000e6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000eb	83 c4 08	 add	 esp, 8
$LN65@SetCloudTe:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 277  : }

  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ff	33 cd		 xor	 ecx, ebp
  00101	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetCloudTexture@CSkyBox@@QAEXPBD@Z$1:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetCloudTexture@CSkyBox@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetCloudTexture@CSkyBox@@QAEXPBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetCloudTexture@CSkyBox@@QAEXPBD@Z ENDP		; CSkyBox::SetCloudTexture
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetFaceTexture@CSkyBox@@QAEXPBDH@Z
_TEXT	SEGMENT
__Loc$2 = -68						; size = 12
$T3 = -56						; size = 8
_this$GSCopy$1$ = -52					; size = 4
_iFaceIndex$GSCopy$1$ = -48				; size = 4
$T4 = -44						; size = 28
$T5 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
_iFaceIndex$ = 12					; size = 4
?SetFaceTexture@CSkyBox@@QAEXPBDH@Z PROC		; CSkyBox::SetFaceTexture, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 cc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00030	8b 45 0c	 mov	 eax, DWORD PTR _iFaceIndex$[ebp]
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _c_szFileName$[ebp]
  00036	89 45 d0	 mov	 DWORD PTR _iFaceIndex$GSCopy$1$[ebp], eax

; 251  : 	if( iFaceIndex < 0 || iFaceIndex > 5 )

  00039	83 f8 05	 cmp	 eax, 5
  0003c	0f 87 d5 00 00
	00		 ja	 $LN75@SetFaceTex
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  00042	53		 push	 ebx
  00043	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00046	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00054	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2339 :         assign(_Ptr);

  00058	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0005d	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00060	50		 push	 eax
  00061	8d 45 bc	 lea	 eax, DWORD PTR __Loc$2[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 254  : 	TGraphicImageInstanceMap::iterator itor = m_GraphicImageInstanceMap.find(c_szFileName);

  00064	8d be 34 01 00
	00		 lea	 edi, DWORD PTR [esi+308]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0006a	50		 push	 eax
  0006b	8b cf		 mov	 ecx, edi
  0006d	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00072	8b 75 c4	 mov	 esi, DWORD PTR __Loc$2[ebp+8]
  00075	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00079	75 14		 jne	 SHORT $LN19@SetFaceTex
  0007b	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0007e	50		 push	 eax
  0007f	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0008b	84 c0		 test	 al, al
  0008d	74 02		 je	 SHORT $LN18@SetFaceTex
$LN19@SetFaceTex:

; 1463 :         return _Get_scary()->_Myhead;

  0008f	8b 37		 mov	 esi, DWORD PTR [edi]
$LN18@SetFaceTex:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00091	8b 45 ec	 mov	 eax, DWORD PTR $T5[ebp+20]
  00094	83 f8 10	 cmp	 eax, 16			; 00000010H
  00097	72 0d		 jb	 SHORT $LN37@SetFaceTex

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00099	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009a	50		 push	 eax
  0009b	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  0009e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a3	83 c4 08	 add	 esp, 8
$LN37@SetFaceTex:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  000a6	39 37		 cmp	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 255  : 	if (m_GraphicImageInstanceMap.end() != itor)

  000a8	75 6d		 jne	 SHORT $LN75@SetFaceTex

; 258  : 	m_Faces[iFaceIndex].m_strFaceTextureFileName = c_szFileName;

  000aa	8b 45 d0	 mov	 eax, DWORD PTR _iFaceIndex$GSCopy$1$[ebp]
  000ad	8b 75 cc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  000b0	c1 e0 04	 shl	 eax, 4
  000b3	2b 45 d0	 sub	 eax, DWORD PTR _iFaceIndex$GSCopy$1$[ebp]
  000b6	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  000bb	53		 push	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 258  : 	m_Faces[iFaceIndex].m_strFaceTextureFileName = c_szFileName;

  000bc	8d 0c 86	 lea	 ecx, DWORD PTR [esi+eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2800 :         return assign(_Ptr);

  000bf	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 260  : 	CGraphicImageInstance * pGraphicImageInstance = GenerateTexture(c_szFileName);

  000c4	53		 push	 ebx
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z ; CSkyObject::GenerateTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2339 :         assign(_Ptr);

  000cc	53		 push	 ebx
  000cd	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000d0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 260  : 	CGraphicImageInstance * pGraphicImageInstance = GenerateTexture(c_szFileName);

  000d7	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000d9	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000e0	c6 45 d4 00	 mov	 BYTE PTR $T4[ebp], 0

; 2339 :         assign(_Ptr);

  000e4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000e9	89 75 ec	 mov	 DWORD PTR $T4[ebp+24], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 261  : 	m_GraphicImageInstanceMap.insert(TGraphicImageInstanceMap::value_type(c_szFileName, pGraphicImageInstance));

  000ec	8d 45 d4	 lea	 eax, DWORD PTR $T4[ebp]
  000ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000f6	50		 push	 eax
  000f7	8d 45 c8	 lea	 eax, DWORD PTR $T3[ebp]
  000fa	8b cf		 mov	 ecx, edi
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00102	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp+20]
  00105	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00108	72 0d		 jb	 SHORT $LN75@SetFaceTex

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010b	50		 push	 eax
  0010c	ff 75 d4	 push	 DWORD PTR $T4[ebp]
  0010f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00114	83 c4 08	 add	 esp, 8
$LN75@SetFaceTex:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 262  : }

  00117	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00121	59		 pop	 ecx
  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00128	33 cd		 xor	 ecx, ebp
  0012a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z$1:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFaceTexture@CSkyBox@@QAEXPBDH@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFaceTexture@CSkyBox@@QAEXPBDH@Z ENDP		; CSkyBox::SetFaceTexture
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetGradientLevel@CSkyBox@@QAEXEE@Z
_TEXT	SEGMENT
_byUpper$ = 8						; size = 1
_byLower$ = 12						; size = 1
?SetGradientLevel@CSkyBox@@QAEXEE@Z PROC		; CSkyBox::SetGradientLevel, COMDAT
; _this$ = ecx

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 245  : 	m_ucVirticalGradientLevelUpper = byUpper;

  00003	8a 45 08	 mov	 al, BYTE PTR _byUpper$[ebp]
  00006	88 81 14 02 00
	00		 mov	 BYTE PTR [ecx+532], al

; 246  : 	m_ucVirticalGradientLevelLower = byLower;

  0000c	8a 45 0c	 mov	 al, BYTE PTR _byLower$[ebp]
  0000f	88 81 15 02 00
	00		 mov	 BYTE PTR [ecx+533], al

; 247  : }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?SetGradientLevel@CSkyBox@@QAEXEE@Z ENDP		; CSkyBox::SetGradientLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rv3Scale$ = 8					; size = 4
?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z PROC	; CSkyBox::SetSkyBoxScale, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 235  : 	m_fScaleX = c_rv3Scale.x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Scale$[ebp]

; 236  : 	m_fScaleY = c_rv3Scale.y;
; 237  : 	m_fScaleZ = c_rv3Scale.z;
; 238  : 
; 239  : 	m_bSkyMatrixUpdated = true;
; 240  : 	D3DXMatrixScaling(&m_matWorld, m_fScaleX, m_fScaleY, m_fScaleZ);

  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0000d	f3 0f 11 91 c8
	01 00 00	 movss	 DWORD PTR [ecx+456], xmm2
  00015	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0001a	f3 0f 11 89 cc
	01 00 00	 movss	 DWORD PTR [ecx+460], xmm1
  00022	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00027	8d 81 3c 01 00
	00		 lea	 eax, DWORD PTR [ecx+316]
  0002d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00033	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00039	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  0003e	50		 push	 eax
  0003f	f3 0f 11 81 d0
	01 00 00	 movss	 DWORD PTR [ecx+464], xmm0
  00047	c6 81 f1 01 00
	00 01		 mov	 BYTE PTR [ecx+497], 1
  0004e	e8 00 00 00 00	 call	 _D3DXMatrixScaling@16

; 241  : }

  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?SetSkyBoxScale@CSkyBox@@QAEXABUD3DXVECTOR3@@@Z ENDP	; CSkyBox::SetSkyBoxScale
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Unload@CSkyBox@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?Unload@CSkyBox@@QAEXXZ PROC				; CSkyBox::Unload, COMDAT
; _this$ = ecx

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	53		 push	 ebx
  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00008	8d 98 34 01 00
	00		 lea	 ebx, DWORD PTR [eax+308]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 308  : {

  0000e	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  00011	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00012	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00014	8b 37		 mov	 esi, DWORD PTR [edi]
  00016	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 311  : 	while (itor != m_GraphicImageInstanceMap.end())

  00018	74 5b		 je	 SHORT $LN3@Unload
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Unload:

; 312  : 	{
; 313  : 		DeleteTexture(itor->second);

  00020	ff 76 28	 push	 DWORD PTR [esi+40]
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?DeleteTexture@CSkyObject@@IAEXPAVCGraphicImageInstance@@@Z ; CSkyObject::DeleteTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0002a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0002d	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00031	74 21		 je	 SHORT $LN38@Unload

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00033	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00036	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003a	75 14		 jne	 SHORT $LN58@Unload
  0003c	0f 1f 40 00	 npad	 4
$LL36@Unload:
  00040	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00043	75 0b		 jne	 SHORT $LN58@Unload

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00045	8b f0		 mov	 esi, eax
  00047	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004e	74 f0		 je	 SHORT $LL36@Unload
$LN58@Unload:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00050	8b f0		 mov	 esi, eax

; 59   :         } else {

  00052	eb 18		 jmp	 SHORT $LN43@Unload
$LN38@Unload:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00054	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00058	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0005c	75 0e		 jne	 SHORT $LN43@Unload
  0005e	66 90		 npad	 2
$LL42@Unload:
  00060	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00062	8b f1		 mov	 esi, ecx
  00064	8b c8		 mov	 ecx, eax
  00066	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0006a	74 f4		 je	 SHORT $LL42@Unload
$LN43@Unload:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0006c	8b 3b		 mov	 edi, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 311  : 	while (itor != m_GraphicImageInstanceMap.end())

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00071	3b f7		 cmp	 esi, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 311  : 	while (itor != m_GraphicImageInstanceMap.end())

  00073	75 ab		 jne	 SHORT $LL2@Unload
$LN3@Unload:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00075	ff 77 04	 push	 DWORD PTR [edi+4]
  00078	8b cb		 mov	 ecx, ebx
  0007a	53		 push	 ebx
  0007b	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >

; 1449 :         _Head->_Parent  = _Head;

  00080	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00083	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00085	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00091	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 318  : }

  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?Unload@CSkyBox@@QAEXXZ ENDP				; CSkyBox::Unload
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Destroy@CSkyBox@@UAEXXZ
_TEXT	SEGMENT
?Destroy@CSkyBox@@UAEXXZ PROC				; CSkyBox::Destroy, COMDAT
; _this$ = ecx

; 230  : 	Unload();

  00000	e9 00 00 00 00	 jmp	 ?Unload@CSkyBox@@QAEXXZ	; CSkyBox::Unload
?Destroy@CSkyBox@@UAEXXZ ENDP				; CSkyBox::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?RenderCloud@CSkyBox@@QAEXXZ
_TEXT	SEGMENT
_matProjCloud$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?RenderCloud@CSkyBox@@QAEXXZ PROC			; CSkyBox::RenderCloud, COMDAT
; _this$ = ecx

; 873  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b f1		 mov	 esi, ecx
  00014	57		 push	 edi

; 874  : 	CGraphicImageInstance * pCloudGraphicImageInstance = m_GraphicImageInstanceMap[m_FaceCloud.m_strfacename];

  00015	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00018	57		 push	 edi
  00019	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  0001f	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::operator[]
  00024	8b 18		 mov	 ebx, DWORD PTR [eax]

; 875  : 	if (!pCloudGraphicImageInstance)

  00026	85 db		 test	 ebx, ebx
  00028	0f 84 97 02 00
	00		 je	 $LN1@RenderClou

; 876  : 		return;
; 877  : 
; 878  : 	STATEMANAGER.SaveRenderState(D3DRS_ZENABLE,	TRUE);

  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00034	6a 01		 push	 1
  00036	6a 07		 push	 7
  00038	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 879  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, FALSE);

  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00043	6a 00		 push	 0
  00045	6a 0e		 push	 14			; 0000000eH
  00047	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 880  : 	STATEMANAGER.SaveRenderState(D3DRS_LIGHTING, FALSE);

  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00052	6a 00		 push	 0
  00054	68 89 00 00 00	 push	 137			; 00000089H
  00059	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 881  : 	STATEMANAGER.SaveRenderState(D3DRS_FOGENABLE, FALSE);

  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00064	6a 00		 push	 0
  00066	6a 1c		 push	 28			; 0000001cH
  00068	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 882  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00073	6a 01		 push	 1
  00075	6a 1b		 push	 27			; 0000001bH
  00077	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 883  : 	STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_ONE);

  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00082	6a 02		 push	 2
  00084	6a 13		 push	 19			; 00000013H
  00086	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 884  : 	STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCCOLOR);

  0008b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00091	6a 04		 push	 4
  00093	6a 14		 push	 20			; 00000014H
  00095	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 885  : 
; 886  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a0	6a 02		 push	 2
  000a2	6a 18		 push	 24			; 00000018H
  000a4	6a 00		 push	 0
  000a6	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 887  : 
; 888  : 	m_matTextureCloud._31 = m_fCloudPositionU;

  000ab	8b 86 28 01 00
	00		 mov	 eax, DWORD PTR [esi+296]
  000b1	89 86 e0 00 00
	00		 mov	 DWORD PTR [esi+224], eax

; 889  : 	m_matTextureCloud._32 = m_fCloudPositionV;

  000b7	8b 86 2c 01 00
	00		 mov	 eax, DWORD PTR [esi+300]
  000bd	89 86 e4 00 00
	00		 mov	 DWORD PTR [esi+228], eax

; 890  : 
; 891  : 	DWORD dwCurTime = CTimer::Instance().GetCurrentMillisecond();

  000c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  000c9	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond

; 892  : 
; 893  : 	m_fCloudPositionU += m_fCloudScrollSpeedU * (float)( dwCurTime - m_dwlastTime ) * 0.001f;

  000ce	8b c8		 mov	 ecx, eax
  000d0	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3a83126f
  000d8	2b 8e 30 01 00
	00		 sub	 ecx, DWORD PTR [esi+304]

; 894  : 	if (m_fCloudPositionU >= 1.0f)

  000de	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  000e6	66 0f 6e c1	 movd	 xmm0, ecx
  000ea	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000ee	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000f1	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  000fa	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  000fe	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  00106	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0010a	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0010e	f3 0f 58 86 28
	01 00 00	 addss	 xmm0, DWORD PTR [esi+296]
  00116	0f 2f c3	 comiss	 xmm0, xmm3
  00119	f3 0f 11 86 28
	01 00 00	 movss	 DWORD PTR [esi+296], xmm0
  00121	72 0a		 jb	 SHORT $LN3@RenderClou

; 895  : 		m_fCloudPositionU = 0.0f;

  00123	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0
$LN3@RenderClou:

; 896  : 
; 897  : 	m_fCloudPositionV += m_fCloudScrollSpeedV * (float)( dwCurTime - m_dwlastTime ) * 0.001f;

  0012d	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  00135	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00139	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0013d	f3 0f 58 86 2c
	01 00 00	 addss	 xmm0, DWORD PTR [esi+300]

; 898  : 	if (m_fCloudPositionV >= 1.0f)

  00145	0f 2f c3	 comiss	 xmm0, xmm3
  00148	f3 0f 11 86 2c
	01 00 00	 movss	 DWORD PTR [esi+300], xmm0
  00150	72 0a		 jb	 SHORT $LN4@RenderClou

; 899  : 		m_fCloudPositionV = 0.0f;

  00152	c7 86 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+300], 0
$LN4@RenderClou:

; 900  : 
; 901  : 	m_dwlastTime = dwCurTime;

  0015c	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax

; 902  : 
; 903  : 	STATEMANAGER.SaveTransform(D3DTS_TEXTURE0, &m_matTextureCloud);

  00162	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  00168	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0016e	50		 push	 eax
  0016f	6a 10		 push	 16			; 00000010H
  00171	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 904  : 
; 905  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATEINVALPHA_ADDCOLOR);

  00176	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0017c	6a 14		 push	 20			; 00000014H
  0017e	6a 01		 push	 1
  00180	6a 00		 push	 0
  00182	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 906  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00187	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0018d	6a 02		 push	 2
  0018f	6a 02		 push	 2
  00191	6a 00		 push	 0
  00193	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 907  :  	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0019e	6a 00		 push	 0
  001a0	6a 03		 push	 3
  001a2	6a 00		 push	 0
  001a4	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 908  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001af	6a 02		 push	 2
  001b1	6a 04		 push	 4
  001b3	6a 00		 push	 0
  001b5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 909  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  001ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c0	6a 02		 push	 2
  001c2	6a 05		 push	 5
  001c4	6a 00		 push	 0
  001c6	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 910  : 
; 911  : 	D3DXMATRIX matProjCloud;
; 912  : 	D3DXMatrixPerspectiveFovRH(&matProjCloud, D3DX_PI * 0.25f, 1.33333f, 50.0f, 999999.0f);

  001cb	83 ec 10	 sub	 esp, 16			; 00000010H
  001ce	8d 45 bc	 lea	 eax, DWORD PTR _matProjCloud$[ebp]
  001d1	c7 44 24 0c f0
	23 74 49	 mov	 DWORD PTR [esp+12], 1232348144 ; 497423f0H
  001d9	c7 44 24 08 00
	00 48 42	 mov	 DWORD PTR [esp+8], 1112014848 ; 42480000H
  001e1	c7 44 24 04 8f
	aa aa 3f	 mov	 DWORD PTR [esp+4], 1068149391 ; 3faaaa8fH
  001e9	c7 04 24 db 0f
	49 3f		 mov	 DWORD PTR [esp], 1061752795 ; 3f490fdbH
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 _D3DXMatrixPerspectiveFovRH@20

; 913  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorldCloud);

  001f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001fc	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  001ff	50		 push	 eax
  00200	68 00 01 00 00	 push	 256			; 00000100H
  00205	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 914  : 	STATEMANAGER.SaveTransform(D3DTS_PROJECTION, &matProjCloud);

  0020a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00210	8d 45 bc	 lea	 eax, DWORD PTR _matProjCloud$[ebp]
  00213	50		 push	 eax
  00214	6a 03		 push	 3
  00216	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 915  : 	STATEMANAGER.SetTexture(0, pCloudGraphicImageInstance->GetTexturePointer()->GetD3DTexture());

  0021b	8b cb		 mov	 ecx, ebx
  0021d	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  00222	8b c8		 mov	 ecx, eax
  00224	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00229	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0022f	50		 push	 eax
  00230	6a 00		 push	 0
  00232	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 916  : 	m_FaceCloud.Render();

  00237	8b cf		 mov	 ecx, edi
  00239	e8 00 00 00 00	 call	 ?Render@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::Render

; 917  : 	STATEMANAGER.RestoreTransform(D3DTS_PROJECTION);

  0023e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00244	6a 03		 push	 3
  00246	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 918  : 
; 919  : 	STATEMANAGER.RestoreTransform(D3DTS_TEXTURE0);

  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00251	6a 10		 push	 16			; 00000010H
  00253	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 920  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS);

  00258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0025e	6a 18		 push	 24			; 00000018H
  00260	6a 00		 push	 0
  00262	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 921  : 
; 922  : 	STATEMANAGER.RestoreRenderState(D3DRS_LIGHTING);

  00267	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0026d	68 89 00 00 00	 push	 137			; 00000089H
  00272	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 923  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZENABLE);

  00277	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0027d	6a 07		 push	 7
  0027f	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 924  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  00284	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0028a	6a 0e		 push	 14			; 0000000eH
  0028c	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 925  : 	STATEMANAGER.RestoreRenderState(D3DRS_FOGENABLE);

  00291	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00297	6a 1c		 push	 28			; 0000001cH
  00299	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 926  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  0029e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a4	6a 1b		 push	 27			; 0000001bH
  002a6	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 927  : 	STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  002ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b1	6a 13		 push	 19			; 00000013H
  002b3	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 928  : 	STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  002b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002be	6a 14		 push	 20			; 00000014H
  002c0	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN1@RenderClou:

; 929  : }

  002c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	33 cd		 xor	 ecx, ebp
  002cc	5b		 pop	 ebx
  002cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002d2	8b e5		 mov	 esp, ebp
  002d4	5d		 pop	 ebp
  002d5	c3		 ret	 0
?RenderCloud@CSkyBox@@QAEXXZ ENDP			; CSkyBox::RenderCloud
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Render@CSkyBox@@UAEXXZ
_TEXT	SEGMENT
__Loc$3 = -40						; size = 12
$T4 = -28						; size = 8
_i$1$ = -20						; size = 4
__Myhead$5 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Render@CSkyBox@@UAEXXZ PROC				; CSkyBox::Render, COMDAT
; _this$ = ecx

; 809  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Render@CSkyBox@@UAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 810  : 	STATEMANAGER.SaveRenderState(D3DRS_ZENABLE,	TRUE);

  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00030	6a 01		 push	 1
  00032	6a 07		 push	 7
  00034	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 811  : 	STATEMANAGER.SaveRenderState(D3DRS_ZWRITEENABLE, FALSE);

  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0003f	6a 00		 push	 0
  00041	6a 0e		 push	 14			; 0000000eH
  00043	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 812  : 	STATEMANAGER.SaveRenderState(D3DRS_LIGHTING, FALSE);

  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004e	6a 00		 push	 0
  00050	68 89 00 00 00	 push	 137			; 00000089H
  00055	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 813  : 	STATEMANAGER.SaveRenderState(D3DRS_FOGENABLE, FALSE);

  0005a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00060	6a 00		 push	 0
  00062	6a 1c		 push	 28			; 0000001cH
  00064	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 814  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, FALSE);

  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0006f	6a 00		 push	 0
  00071	6a 1b		 push	 27			; 0000001bH
  00073	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 815  : 
; 816  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG2);

  00078	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0007e	6a 03		 push	 3
  00080	6a 01		 push	 1
  00082	6a 00		 push	 0
  00084	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 817  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0008f	6a 02		 push	 2
  00091	6a 02		 push	 2
  00093	6a 00		 push	 0
  00095	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 818  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a0	6a 00		 push	 0
  000a2	6a 03		 push	 3
  000a4	6a 00		 push	 0
  000a6	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 819  : 
; 820  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  000ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000b1	6a 01		 push	 1
  000b3	6a 04		 push	 4
  000b5	6a 00		 push	 0
  000b7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 821  : 
; 822  : 	STATEMANAGER.SetTexture(1, NULL);

  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000c2	6a 00		 push	 0
  000c4	6a 01		 push	 1
  000c6	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 823  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d1	6a 01		 push	 1
  000d3	6a 01		 push	 1
  000d5	6a 01		 push	 1
  000d7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 824  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e2	6a 01		 push	 1
  000e4	6a 04		 push	 4
  000e6	6a 01		 push	 1
  000e8	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 825  : 
; 826  :  	STATEMANAGER.SetVertexShader(D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX1);

  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f3	68 42 01 00 00	 push	 322			; 00000142H
  000f8	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 827  : 
; 828  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorld);

  000fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00103	8d 86 3c 01 00
	00		 lea	 eax, DWORD PTR [esi+316]
  00109	50		 push	 eax
  0010a	68 00 01 00 00	 push	 256			; 00000100H
  0010f	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 829  : 
; 830  : 	//Render Face
; 831  : 	if( m_ucRenderMode == CSkyObject::SKY_RENDER_MODE_TEXTURE )

  00114	80 be d4 01 00
	00 02		 cmp	 BYTE PTR [esi+468], 2
  0011b	0f 85 62 01 00
	00		 jne	 $LN8@Render

; 832  : 	{
; 833  : 		STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  00121	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00127	6a 02		 push	 2
  00129	6a 01		 push	 1
  0012b	6a 00		 push	 0
  0012d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 834  : 		STATEMANAGER.SaveTextureStageState(0, D3DTSS_ADDRESSU,	D3DTADDRESS_CLAMP);

  00132	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00138	6a 03		 push	 3
  0013a	6a 0d		 push	 13			; 0000000dH
  0013c	6a 00		 push	 0
  0013e	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 835  : 		STATEMANAGER.SaveTextureStageState(0, D3DTSS_ADDRESSV,	D3DTADDRESS_CLAMP);

  00143	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00149	6a 03		 push	 3
  0014b	6a 0e		 push	 14			; 0000000eH
  0014d	6a 00		 push	 0
  0014f	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 836  : 
; 837  : 		for (unsigned int i = 0; i < 6; ++i)

  00154	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
  0015b	8d 9e 34 01 00
	00		 lea	 ebx, DWORD PTR [esi+308]
  00161	8d be 30 02 00
	00		 lea	 edi, DWORD PTR [esi+560]
$LL4@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  00167	57		 push	 edi
  00168	8d 45 d8	 lea	 eax, DWORD PTR __Loc$3[ebp]
  0016b	8b cb		 mov	 ecx, ebx
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00173	8b 75 e0	 mov	 esi, DWORD PTR __Loc$3[ebp+8]
  00176	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0017a	75 15		 jne	 SHORT $LN15@Render
  0017c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  0017f	50		 push	 eax
  00180	57		 push	 edi
  00181	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  00186	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00189	84 c0		 test	 al, al
  0018b	0f 84 96 00 00
	00		 je	 $LN14@Render
$LN15@Render:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00191	81 7b 04 5d 74
	d1 05		 cmp	 DWORD PTR [ebx+4], 97612893 ; 05d1745dH
  00198	0f 84 84 01 00
	00		 je	 $LN101@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  0019e	8b 03		 mov	 eax, DWORD PTR [ebx]
  001a0	89 45 f0	 mov	 DWORD PTR __Myhead$5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  001a3	89 5d e4	 mov	 DWORD PTR $T4[ebp], ebx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001a6	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  001a8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  001af	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001b6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  001bb	8b f0		 mov	 esi, eax
  001bd	89 75 e8	 mov	 DWORD PTR $T4[ebp+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  001c0	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  001c3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  001ca	51		 push	 ecx
  001cb	8b c4		 mov	 eax, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

  001cd	89 38		 mov	 DWORD PTR [eax], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  001cf	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  001dc	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  001df	50		 push	 eax
  001e0	56		 push	 esi
  001e1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  001e6	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  001e9	50		 push	 eax
  001ea	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  001f3	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$5[ebp]
  001f6	50		 push	 eax
  001f7	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>
  00200	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  00203	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00209	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 812  :     }

  0020b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00212	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00219	56		 push	 esi
  0021a	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp+4]
  0021d	ff 75 d8	 push	 DWORD PTR __Loc$3[ebp]
  00220	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node
  00225	8b f0		 mov	 esi, eax
$LN14@Render:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 839  : 			CGraphicImageInstance * pFaceImageInstance = m_GraphicImageInstanceMap[m_Faces[i].m_strFaceTextureFileName];

  00227	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]

; 840  : 			if (!pFaceImageInstance)

  0022a	85 c9		 test	 ecx, ecx
  0022c	74 35		 je	 SHORT $LN102@Render

; 841  : 				break;
; 842  : 
; 843  : 			STATEMANAGER.SetTexture( 0, pFaceImageInstance->GetTextureReference().GetD3DTexture() );

  0022e	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
  00233	8b c8		 mov	 ecx, eax
  00235	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00240	50		 push	 eax
  00241	6a 00		 push	 0
  00243	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 844  : 
; 845  : 			m_Faces[i].Render();

  00248	8d 4f e8	 lea	 ecx, DWORD PTR [edi-24]
  0024b	e8 00 00 00 00	 call	 ?Render@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::Render
  00250	8b 45 ec	 mov	 eax, DWORD PTR _i$1$[ebp]
  00253	83 c7 3c	 add	 edi, 60			; 0000003cH
  00256	40		 inc	 eax
  00257	89 45 ec	 mov	 DWORD PTR _i$1$[ebp], eax
  0025a	83 f8 06	 cmp	 eax, 6
  0025d	0f 82 04 ff ff
	ff		 jb	 $LL4@Render
$LN102@Render:

; 846  : 		}
; 847  : 
; 848  : 		//STATEMANAGER.SetTexture( 0, NULL );
; 849  : 
; 850  : 		STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ADDRESSU);

  00263	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00269	6a 0d		 push	 13			; 0000000dH
  0026b	6a 00		 push	 0
  0026d	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 851  : 		STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ADDRESSV);

  00272	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00278	6a 0e		 push	 14			; 0000000eH
  0027a	6a 00		 push	 0
  0027c	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 852  : 	}

  00281	eb 1c		 jmp	 SHORT $LN6@Render
$LN8@Render:

; 853  : 	else
; 854  : 	{
; 855  : 		for (unsigned int i = 0; i < 6; ++i)

  00283	81 c6 18 02 00
	00		 add	 esi, 536		; 00000218H
  00289	bf 06 00 00 00	 mov	 edi, 6
  0028e	66 90		 npad	 2
$LL7@Render:

; 856  : 		{
; 857  : 			m_Faces[i].Render();

  00290	8b ce		 mov	 ecx, esi
  00292	e8 00 00 00 00	 call	 ?Render@TSkyObjectFace@CSkyObject@@QAEXXZ ; CSkyObject::TSkyObjectFace::Render
  00297	83 c6 3c	 add	 esi, 60			; 0000003cH
  0029a	83 ef 01	 sub	 edi, 1
  0029d	75 f1		 jne	 SHORT $LL7@Render
$LN6@Render:

; 858  : 		}
; 859  : 	}
; 860  : 
; 861  : 	STATEMANAGER.RestoreRenderState(D3DRS_LIGHTING);

  0029f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a5	68 89 00 00 00	 push	 137			; 00000089H
  002aa	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 862  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZENABLE);

  002af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b5	6a 07		 push	 7
  002b7	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 863  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);

  002bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002c2	6a 0e		 push	 14			; 0000000eH
  002c4	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 864  : 	STATEMANAGER.RestoreRenderState(D3DRS_FOGENABLE);

  002c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002cf	6a 1c		 push	 28			; 0000001cH
  002d1	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 865  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  002d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002dc	6a 1b		 push	 27			; 0000001bH
  002de	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 866  : 
; 867  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLOROP);

  002e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002e9	6a 01		 push	 1
  002eb	6a 00		 push	 0
  002ed	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 868  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG1);

  002f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002f8	6a 02		 push	 2
  002fa	6a 00		 push	 0
  002fc	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 869  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG2);

  00301	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00307	6a 03		 push	 3
  00309	6a 00		 push	 0
  0030b	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 870  : }

  00310	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00313	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0031a	59		 pop	 ecx
  0031b	5f		 pop	 edi
  0031c	5e		 pop	 esi
  0031d	5b		 pop	 ebx
  0031e	8b e5		 mov	 esp, ebp
  00320	5d		 pop	 ebp
  00321	c3		 ret	 0
$LN101@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  00322	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN111@Render:
  00327	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Render@CSkyBox@@UAEXXZ$2:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
__unwindfunclet$?Render@CSkyBox@@UAEXXZ$1:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Render@CSkyBox@@UAEXXZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Render@CSkyBox@@UAEXXZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Render@CSkyBox@@UAEXXZ ENDP				; CSkyBox::Render
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Update@CSkyBox@@UAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?Update@CSkyBox@@UAEXXZ PROC				; CSkyBox::Update, COMDAT
; _this$ = ecx

; 794  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi

; 795  : 	CSkyObject::Update();

  0000a	e8 00 00 00 00	 call	 ?Update@CSkyObject@@UAEXXZ ; CSkyObject::Update

; 796  : 
; 797  : 	if (!m_bTransitionStarted)

  0000f	80 be f0 01 00
	00 00		 cmp	 BYTE PTR [esi+496], 0
  00016	74 52		 je	 SHORT $LN1@Update

; 798  : 		return;
; 799  : 
; 800  : 	bool bResult = false;

  00018	53		 push	 ebx
  00019	57		 push	 edi
  0001a	32 db		 xor	 bl, bl

; 801  : 	for (unsigned char uci = 0; uci < 6; ++uci)

  0001c	bf 06 00 00 00	 mov	 edi, 6
  00021	81 c6 18 02 00
	00		 add	 esi, 536		; 00000218H
$LL4@Update:

; 802  :  		bResult = m_Faces[uci].Update() || bResult;

  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ ; CSkyObject::TSkyObjectFace::Update
  0002e	84 c0		 test	 al, al
  00030	75 04		 jne	 SHORT $LN7@Update
  00032	84 db		 test	 bl, bl
  00034	74 02		 je	 SHORT $LN8@Update
$LN7@Update:
  00036	b3 01		 mov	 bl, 1
$LN8@Update:

; 801  : 	for (unsigned char uci = 0; uci < 6; ++uci)

  00038	83 c6 3c	 add	 esi, 60			; 0000003cH
  0003b	83 ef 01	 sub	 edi, 1
  0003e	75 e7		 jne	 SHORT $LL4@Update

; 803  :  	bResult = m_FaceCloud.Update() || bResult;

  00040	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  00043	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00046	e8 00 00 00 00	 call	 ?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ ; CSkyObject::TSkyObjectFace::Update
  0004b	84 c0		 test	 al, al
  0004d	75 11		 jne	 SHORT $LN9@Update
  0004f	84 db		 test	 bl, bl
  00051	75 0d		 jne	 SHORT $LN9@Update

; 804  : 
; 805  : 	m_bTransitionStarted = bResult;

  00053	5f		 pop	 edi
  00054	5b		 pop	 ebx
  00055	88 86 f0 01 00
	00		 mov	 BYTE PTR [esi+496], al
  0005b	5e		 pop	 esi

; 806  : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN9@Update:

; 803  :  	bResult = m_FaceCloud.Update() || bResult;

  00060	b0 01		 mov	 al, 1

; 804  : 
; 805  : 	m_bTransitionStarted = bResult;

  00062	5f		 pop	 edi
  00063	88 86 f0 01 00
	00		 mov	 BYTE PTR [esi+496], al
  00069	5b		 pop	 ebx
$LN1@Update:
  0006a	5e		 pop	 esi

; 806  : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?Update@CSkyBox@@UAEXXZ ENDP				; CSkyBox::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??1CSkyBox@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSkyBox@@UAE@XZ PROC					; CSkyBox::~CSkyBox, COMDAT
; _this$ = ecx

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSkyBox@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSkyBox@@6B@

; 225  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CSkyBox@@UAEXXZ ; CSkyBox::Destroy

; 226  : }

  00030	68 00 00 00 00	 push	 OFFSET ??1TSkyObjectFace@CSkyObject@@QAE@XZ
  00035	6a 06		 push	 6
  00037	6a 3c		 push	 60			; 0000003cH
  00039	8d 86 18 02 00
	00		 lea	 eax, DWORD PTR [esi+536]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ??1CSkyObject@@UAE@XZ	; CSkyObject::~CSkyObject
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	5e		 pop	 esi
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
  0005f	cc		 int	 3
  00060	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSkyBox@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSkyBox@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSkyBox@@UAE@XZ ENDP					; CSkyBox::~CSkyBox
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??0CSkyBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSkyBox@@QAE@XZ PROC					; CSkyBox::CSkyBox, COMDAT
; _this$ = ecx

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSkyBox@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CSkyObject@@QAE@XZ	; CSkyObject::CSkyObject
  0002e	68 00 00 00 00	 push	 OFFSET ??1TSkyObjectFace@CSkyObject@@QAE@XZ
  00033	68 00 00 00 00	 push	 OFFSET ??0TSkyObjectFace@CSkyObject@@QAE@XZ
  00038	6a 06		 push	 6
  0003a	6a 3c		 push	 60			; 0000003cH
  0003c	8d 86 18 02 00
	00		 lea	 eax, DWORD PTR [esi+536]
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00049	50		 push	 eax
  0004a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSkyBox@@6B@
  00050	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 219  : 	m_ucVirticalGradientLevelUpper = 0;

  00055	66 c7 86 14 02
	00 00 00 00	 mov	 WORD PTR [esi+532], 0

; 220  : 	m_ucVirticalGradientLevelLower = 0;
; 221  : }

  0005e	8b c6		 mov	 eax, esi
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSkyBox@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CSkyObject@@UAE@XZ	; CSkyObject::~CSkyObject
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CSkyBox@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSkyBox@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSkyBox@@QAE@XZ ENDP					; CSkyBox::CSkyBox
; Function compile flags: /Ogtp
;	COMDAT ??_GCSkyObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSkyObject@@UAEPAXI@Z PROC				; CSkyObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSkyObject@@UAE@XZ	; CSkyObject::~CSkyObject
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 14 02 00 00	 push	 532			; 00000214H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSkyObject@@UAEPAXI@Z ENDP				; CSkyObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 70 04	 push	 DWORD PTR [eax+4]
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0000e	6a 2c		 push	 44			; 0000002cH
  00010	ff 36		 push	 DWORD PTR [esi]
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Loc$3 = -32						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Myhead$ = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::operator[], COMDAT
; _this$ = ecx

; 324  :     mapped_type& operator[](const key_type& _Keyval) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 176  :         const auto _Loc = _Mybase::_Find_lower_bound(_Keyval);

  0002a	8b 5d 08	 mov	 ebx, DWORD PTR __Keyval$[ebp]
  0002d	8d 45 e0	 lea	 eax, DWORD PTR __Loc$3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00037	8b 75 e8	 mov	 esi, DWORD PTR __Loc$3[ebp+8]
  0003a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0003e	75 15		 jne	 SHORT $LN4@operator
  00040	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef

; 127  :         return _Left < _Right;

  00043	50		 push	 eax
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0004a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004d	84 c0		 test	 al, al
  0004f	0f 84 88 00 00
	00		 je	 $LN3@operator
$LN4@operator:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00055	81 7f 04 5d 74
	d1 05		 cmp	 DWORD PTR [edi+4], 97612893 ; 05d1745dH
  0005c	0f 84 92 00 00
	00		 je	 $LN91@operator
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 184  :         const auto _Inserted = _Tree_temp_node<_Alnode>(_Mybase::_Getal(), _Scary->_Myhead, piecewise_construct,

  00062	8b 07		 mov	 eax, DWORD PTR [edi]
  00064	89 45 08	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00067	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006a	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00073	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  0007f	8b f0		 mov	 esi, eax
  00081	89 75 f0	 mov	 DWORD PTR $T4[ebp+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00084	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00087	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0008e	51		 push	 ecx
  0008f	8b c4		 mov	 eax, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

  00091	89 18		 mov	 DWORD PTR [eax], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00093	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?piecewise_construct@std@@3Upiecewise_construct_t@1@B
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000a0	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000a3	50		 push	 eax
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000aa	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000ad	50		 push	 eax
  000ae	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000b7	8d 45 08	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000ba	50		 push	 eax
  000bb	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * &>
  000c4	83 c4 18	 add	 esp, 24			; 00000018H

; 810  :         this->_Ptr->_Color = _Red;

  000c7	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000cd	8b cf		 mov	 ecx, edi
  000cf	56		 push	 esi
  000d0	ff 75 e4	 push	 DWORD PTR __Loc$3[ebp+4]
  000d3	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node
  000db	8b f0		 mov	 esi, eax
$LN3@operator:

; 325  :         return _Try_emplace(_Keyval).first->_Myval.second;

  000dd	8d 46 28	 lea	 eax, DWORD PTR [esi+40]

; 326  :     }

  000e0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ea	59		 pop	 ecx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 04 00	 ret	 4
$LN91@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 1720 :             _Throw_tree_length_error();

  000f4	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN89@operator:
  000f9	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
  00008	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAEAAPAVCGraphicImageInstance@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,CGraphicImageInstance *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::operator[]
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1TSkyObjectFace@CSkyObject@@QAE@XZ
_TEXT	SEGMENT
??1TSkyObjectFace@CSkyObject@@QAE@XZ PROC		; CSkyObject::TSkyObjectFace::~TSkyObjectFace, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00000	53		 push	 ebx
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  00007	8d 5f 30	 lea	 ebx, DWORD PTR [edi+48]
  0000a	85 c0		 test	 eax, eax
  0000c	74 45		 je	 SHORT $LN6@TSkyObject

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000e	53		 push	 ebx
  0000f	ff 73 04	 push	 DWORD PTR [ebx+4]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00018	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0001b	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx
  00024	c1 fa 05	 sar	 edx, 5
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	69 c0 2c 01 00
	00		 imul	 eax, eax, 300
  00034	50		 push	 eax
  00035	ff 33		 push	 DWORD PTR [ebx]
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003c	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00045	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  0004c	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN6@TSkyObject:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00053	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  00056	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00059	72 0d		 jb	 SHORT $LN16@TSkyObject

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0005b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005c	50		 push	 eax
  0005d	ff 77 18	 push	 DWORD PTR [edi+24]
  00060	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00065	83 c4 08	 add	 esp, 8
$LN16@TSkyObject:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00068	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006f	c7 47 2c 0f 00
	00 00		 mov	 DWORD PTR [edi+44], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00076	c6 47 18 00	 mov	 BYTE PTR [edi+24], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0007a	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0007d	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00080	72 0c		 jb	 SHORT $LN26@TSkyObject

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00082	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	50		 push	 eax
  00084	ff 37		 push	 DWORD PTR [edi]
  00086	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008b	83 c4 08	 add	 esp, 8
$LN26@TSkyObject:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  0008e	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00095	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009c	c6 07 00	 mov	 BYTE PTR [edi], 0
  0009f	5f		 pop	 edi
  000a0	5b		 pop	 ebx
  000a1	c3		 ret	 0
??1TSkyObjectFace@CSkyObject@@QAE@XZ ENDP		; CSkyObject::TSkyObjectFace::~TSkyObjectFace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??0TSkyObjectFace@CSkyObject@@QAE@XZ
_TEXT	SEGMENT
??0TSkyObjectFace@CSkyObject@@QAE@XZ PROC		; CSkyObject::TSkyObjectFace::TSkyObjectFace, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00000	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00007	8b c1		 mov	 eax, ecx

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00009	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00010	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00013	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001a	c7 41 2c 0f 00
	00 00		 mov	 DWORD PTR [ecx+44], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00021	c6 41 18 00	 mov	 BYTE PTR [ecx+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00025	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0
  0002c	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0
  00033	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0
  0003a	c3		 ret	 0
??0TSkyObjectFace@CSkyObject@@QAE@XZ ENDP		; CSkyObject::TSkyObjectFace::TSkyObjectFace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Render@TSkyObjectFace@CSkyObject@@QAEXXZ
_TEXT	SEGMENT
?Render@TSkyObjectFace@CSkyObject@@QAEXXZ PROC		; CSkyObject::TSkyObjectFace::Render, COMDAT
; _this$ = ecx

; 206  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 207  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  00009	32 db		 xor	 bl, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000b	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
  0000e	2b 56 30	 sub	 edx, DWORD PTR [esi+48]
  00011	f7 ea		 imul	 edx
  00013	c1 fa 05	 sar	 edx, 5
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 207  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0001d	74 32		 je	 SHORT $LN3@Render
  0001f	57		 push	 edi
  00020	33 ff		 xor	 edi, edi
$LL4@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00022	69 cf 2c 01 00
	00		 imul	 ecx, edi, 300
  00028	03 4e 30	 add	 ecx, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 209  : 		m_SkyObjectQuadVector[uci].Render();

  0002b	e8 00 00 00 00	 call	 ?Render@CSkyObjectQuad@@QAEXXZ ; CSkyObjectQuad::Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00030	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00033	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00038	2b 4e 30	 sub	 ecx, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 207  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0003b	fe c3		 inc	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003d	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 207  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0003f	0f b6 fb	 movzx	 edi, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00042	c1 fa 05	 sar	 edx, 5
  00045	8b c2		 mov	 eax, edx
  00047	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004a	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 207  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0004c	3b f8		 cmp	 edi, eax
  0004e	72 d2		 jb	 SHORT $LL4@Render
  00050	5f		 pop	 edi
$LN3@Render:
  00051	5e		 pop	 esi

; 210  : 	}
; 211  : }

  00052	5b		 pop	 ebx
  00053	c3		 ret	 0
?Render@TSkyObjectFace@CSkyObject@@QAEXXZ ENDP		; CSkyObject::TSkyObjectFace::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
_dwi$1$ = -4						; size = 4
?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ PROC		; CSkyObject::TSkyObjectFace::Update, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 200  : 	for (DWORD dwi = 0; dwi < m_SkyObjectQuadVector.size(); ++dwi)

  00006	33 d2		 xor	 edx, edx
  00008	89 4d f8	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000b	89 55 fc	 mov	 DWORD PTR _dwi$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000e	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00013	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 198  : {

  00016	53		 push	 ebx
  00017	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	8b 71 30	 mov	 esi, DWORD PTR [ecx+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 199  : 	bool bResult = false;

  0001b	32 db		 xor	 bl, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001d	2b d6		 sub	 edx, esi
  0001f	f7 ea		 imul	 edx
  00021	c1 fa 05	 sar	 edx, 5
  00024	8b c2		 mov	 eax, edx
  00026	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00029	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 200  : 	for (DWORD dwi = 0; dwi < m_SkyObjectQuadVector.size(); ++dwi)

  0002b	74 40		 je	 SHORT $LN16@Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0002d	57		 push	 edi
  0002e	33 ff		 xor	 edi, edi
$LL4@Update:

; 1504 :         return _My_data._Myfirst[_Pos];

  00030	8d 0c 37	 lea	 ecx, DWORD PTR [edi+esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 201  :  		bResult = m_SkyObjectQuadVector[dwi].Update() || bResult;

  00033	e8 00 00 00 00	 call	 ?Update@CSkyObjectQuad@@QAE_NXZ ; CSkyObjectQuad::Update
  00038	84 c0		 test	 al, al
  0003a	75 04		 jne	 SHORT $LN6@Update
  0003c	84 db		 test	 bl, bl
  0003e	74 02		 je	 SHORT $LN7@Update
$LN6@Update:
  00040	b3 01		 mov	 bl, 1
$LN7@Update:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 200  : 	for (DWORD dwi = 0; dwi < m_SkyObjectQuadVector.size(); ++dwi)

  00045	81 c7 2c 01 00
	00		 add	 edi, 300		; 0000012cH
  0004b	ff 45 fc	 inc	 DWORD PTR _dwi$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004e	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00051	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  00054	2b ce		 sub	 ecx, esi
  00056	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  0005b	f7 e9		 imul	 ecx
  0005d	c1 fa 05	 sar	 edx, 5
  00060	8b c2		 mov	 eax, edx
  00062	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00065	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 200  : 	for (DWORD dwi = 0; dwi < m_SkyObjectQuadVector.size(); ++dwi)

  00067	39 45 fc	 cmp	 DWORD PTR _dwi$1$[ebp], eax
  0006a	72 c4		 jb	 SHORT $LL4@Update

; 202  :  	return bResult;

  0006c	5f		 pop	 edi
$LN16@Update:
  0006d	5e		 pop	 esi

; 203  : }

  0006e	8a c3		 mov	 al, bl
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?Update@TSkyObjectFace@CSkyObject@@QAE_NXZ ENDP		; CSkyObject::TSkyObjectFace::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ
_TEXT	SEGMENT
?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ PROC	; CSkyObject::TSkyObjectFace::StartTransition, COMDAT
; _this$ = ecx

; 190  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 191  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  00009	32 db		 xor	 bl, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000b	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
  0000e	2b 56 30	 sub	 edx, DWORD PTR [esi+48]
  00011	f7 ea		 imul	 edx
  00013	c1 fa 05	 sar	 edx, 5
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 191  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0001d	74 32		 je	 SHORT $LN3@StartTrans
  0001f	57		 push	 edi
  00020	33 ff		 xor	 edi, edi
$LL4@StartTrans:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00022	69 cf 2c 01 00
	00		 imul	 ecx, edi, 300
  00028	03 4e 30	 add	 ecx, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 193  : 		m_SkyObjectQuadVector[uci].StartTransition();

  0002b	e8 00 00 00 00	 call	 ?StartTransition@CSkyObjectQuad@@QAEXXZ ; CSkyObjectQuad::StartTransition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00030	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00033	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  00038	2b 4e 30	 sub	 ecx, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 191  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0003b	fe c3		 inc	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003d	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 191  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0003f	0f b6 fb	 movzx	 edi, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00042	c1 fa 05	 sar	 edx, 5
  00045	8b c2		 mov	 eax, edx
  00047	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004a	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 191  : 	for (unsigned char uci = 0; uci < m_SkyObjectQuadVector.size(); ++uci)

  0004c	3b f8		 cmp	 edi, eax
  0004e	72 d2		 jb	 SHORT $LL4@StartTrans
  00050	5f		 pop	 edi
$LN3@StartTrans:
  00051	5e		 pop	 esi

; 194  : 	}
; 195  : }

  00052	5b		 pop	 ebx
  00053	c3		 ret	 0
?StartTransition@TSkyObjectFace@CSkyObject@@QAEXXZ ENDP	; CSkyObject::TSkyObjectFace::StartTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Getal@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEAAV?$allocator@VCSkyObjectQuad@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEAAV?$allocator@VCSkyObjectQuad@@@2@XZ PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Getal, COMDAT
; _this$ = ecx

; 1732 :         return _Mypair._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 1733 :     }

  00002	c3		 ret	 0
?_Getal@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEAAV?$allocator@VCSkyObjectQuad@@@2@XZ ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xrange, COMDAT

; 1708 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@CAXXZ ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXPAVCSkyObjectQuad@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXPAVCSkyObjectQuad@@0@Z PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXPAVCSkyObjectQuad@@0@Z ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
$T1 = 11						; size = 1
?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z PROC ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::resize, COMDAT
; _this$ = ecx

; 1240 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00005	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00008	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H

; 1240 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00010	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00013	8b d1		 mov	 edx, ecx
  00015	2b 17		 sub	 edx, DWORD PTR [edi]
  00017	f7 ea		 imul	 edx
  00019	c1 fa 05	 sar	 edx, 5
  0001c	8b da		 mov	 ebx, edx
  0001e	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00021	03 da		 add	 ebx, edx

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00023	3b f3		 cmp	 esi, ebx
  00025	73 1d		 jae	 SHORT $LN4@resize

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00027	69 f6 2c 01 00
	00		 imul	 esi, esi, 300

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0002d	57		 push	 edi
  0002e	51		 push	 ecx

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  0002f	03 37		 add	 esi, DWORD PTR [edi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAXPAVCSkyObjectQuad@@QAV1@AAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Destroy_range<std::allocator<CSkyObjectQuad> >

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1220 :             _Mylast = _Newlast;

  0003a	89 77 04	 mov	 DWORD PTR [edi+4], esi
  0003d	5f		 pop	 edi

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
$LN4@resize:

; 1224 :         if (_Newsize > _Oldsize) { // append

  00044	76 3f		 jbe	 SHORT $LN5@resize

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00046	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00049	b8 b5 81 4e 1b	 mov	 eax, 458129845		; 1b4e81b5H
  0004e	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00050	f7 e9		 imul	 ecx
  00052	c1 fa 05	 sar	 edx, 5
  00055	8b c2		 mov	 eax, edx
  00057	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005a	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  0005c	3b f0		 cmp	 esi, eax
  0005e	76 13		 jbe	 SHORT $LN6@resize

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00060	8d 45 0b	 lea	 eax, DWORD PTR $T1[ebp]
  00063	8b cf		 mov	 ecx, edi
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::_Resize_reallocate<std::_Value_init_tag>
  0006c	5f		 pop	 edi

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN6@resize:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00073	57		 push	 edi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00074	2b f3		 sub	 esi, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00076	56		 push	 esi
  00077	ff 77 04	 push	 DWORD PTR [edi+4]
  0007a	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@VCSkyObjectQuad@@@std@@@std@@YAPAVCSkyObjectQuad@@PAV1@IAAV?$allocator@VCSkyObjectQuad@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CSkyObjectQuad> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0007f	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00082	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@resize:
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?resize@?$vector@VCSkyObjectQuad@@V?$allocator@VCSkyObjectQuad@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CSkyObjectQuad,std::allocator<CSkyObjectQuad> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@VCSkyObjectQuad@@@std@@QAEXQAVCSkyObjectQuad@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@VCSkyObjectQuad@@@std@@QAEXQAVCSkyObjectQuad@@I@Z PROC ; std::allocator<CSkyObjectQuad>::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	69 45 0c 2c 01
	00 00		 imul	 eax, DWORD PTR __Count$[ebp], 300
  0000a	50		 push	 eax
  0000b	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00013	83 c4 08	 add	 esp, 8

; 804  :     }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?deallocate@?$allocator@VCSkyObjectQuad@@@std@@QAEXQAVCSkyObjectQuad@@I@Z ENDP ; std::allocator<CSkyObjectQuad>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?DeleteTexture@CSkyObject@@IAEXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pImageInstance$ = 8					; size = 4
?DeleteTexture@CSkyObject@@IAEXPAVCGraphicImageInstance@@@Z PROC ; CSkyObject::DeleteTexture, COMDAT
; _this$ = ecx

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  : 	if (pImageInstance)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pImageInstance$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $LN2@DeleteText

; 178  : 		CGraphicImageInstance::Delete(pImageInstance);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00010	83 c4 04	 add	 esp, 4
$LN2@DeleteText:

; 179  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?DeleteTexture@CSkyObject@@IAEXPAVCGraphicImageInstance@@@Z ENDP ; CSkyObject::DeleteTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z
_TEXT	SEGMENT
_szfilename$ = 8					; size = 4
?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z PROC ; CSkyObject::GenerateTexture, COMDAT
; _this$ = ecx

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  : 	assert(szfilename != NULL);
; 158  : 
; 159  : 	if (strlen(szfilename) <= 0)
; 160  : 		assert(false);
; 161  : 
; 162  : 	CResource * pResource = CResourceManager::Instance().GetResourcePointer(szfilename);

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00009	57		 push	 edi
  0000a	ff 75 08	 push	 DWORD PTR _szfilename$[ebp]
  0000d	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00012	8b f8		 mov	 edi, eax

; 163  : 
; 164  : 	if (!pResource->IsType(CGraphicImage::Type()))

  00014	e8 00 00 00 00	 call	 ?Type@CGraphicImage@@SAKXZ ; CGraphicImage::Type
  00019	50		 push	 eax
  0001a	8b cf		 mov	 ecx, edi
  0001c	e8 00 00 00 00	 call	 ?IsType@CResource@@QAE_NK@Z ; CResource::IsType
  00021	84 c0		 test	 al, al
  00023	75 07		 jne	 SHORT $LN3@GenerateTe

; 165  : 	{
; 166  : 		assert(false);
; 167  : 		return NULL;

  00025	33 c0		 xor	 eax, eax
  00027	5f		 pop	 edi

; 173  : }

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
$LN3@GenerateTe:
  0002c	56		 push	 esi

; 168  : 	}
; 169  : 
; 170  : 	CGraphicImageInstance * pImageInstance = CGraphicImageInstance::New();

  0002d	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New
  00032	8b f0		 mov	 esi, eax

; 171  : 	pImageInstance->SetImagePointer(static_cast<CGraphicImage *>(pResource));

  00034	57		 push	 edi
  00035	8b ce		 mov	 ecx, esi
  00037	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 172  : 	return (pImageInstance);

  0003c	8b c6		 mov	 eax, esi
  0003e	5e		 pop	 esi
  0003f	5f		 pop	 edi

; 173  : }

  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?GenerateTexture@CSkyObject@@IAEPAVCGraphicImageInstance@@PBD@Z ENDP ; CSkyObject::GenerateTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?StartTransition@CSkyObject@@UAEXXZ
_TEXT	SEGMENT
?StartTransition@CSkyObject@@UAEXXZ PROC		; CSkyObject::StartTransition, COMDAT
; _this$ = ecx

; 183  : }

  00000	c2 00 00	 ret	 0
?StartTransition@CSkyObject@@UAEXXZ ENDP		; CSkyObject::StartTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Update@CSkyObject@@UAEXXZ
_TEXT	SEGMENT
_v3Eye$ = -12						; size = 12
?Update@CSkyObject@@UAEXXZ PROC				; CSkyObject::Update, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 131  : 	D3DXVECTOR3 v3Eye = CCameraManager::Instance().GetCurrentCamera()->GetEye();

  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0000f	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 290  :     return x == v.x && y == v.y && z == v.z;

  00014	f3 0f 10 86 bc
	01 00 00	 movss	 xmm0, DWORD PTR [esi+444]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 131  : 	D3DXVECTOR3 v3Eye = CCameraManager::Instance().GetCurrentCamera()->GetEye();

  0001c	f3 0f 7e 48 30	 movq	 xmm1, QWORD PTR [eax+48]
  00021	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00024	66 0f d6 4d f4	 movq	 QWORD PTR _v3Eye$[ebp], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 290  :     return x == v.x && y == v.y && z == v.z;

  00029	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _v3Eye$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 131  : 	D3DXVECTOR3 v3Eye = CCameraManager::Instance().GetCurrentCamera()->GetEye();

  0002d	89 4d fc	 mov	 DWORD PTR _v3Eye$[ebp+8], ecx
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 290  :     return x == v.x && y == v.y && z == v.z;

  00030	9f		 lahf
  00031	f6 c4 44	 test	 ah, 68			; 00000044H
  00034	7a 30		 jp	 SHORT $LN8@Update
  00036	f3 0f 10 86 c0
	01 00 00	 movss	 xmm0, DWORD PTR [esi+448]
  0003e	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _v3Eye$[ebp+4]
  00042	9f		 lahf
  00043	f6 c4 44	 test	 ah, 68			; 00000044H
  00046	7a 1e		 jp	 SHORT $LN8@Update
  00048	f3 0f 10 86 c4
	01 00 00	 movss	 xmm0, DWORD PTR [esi+452]
  00050	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _v3Eye$[ebp+8]
  00054	9f		 lahf
  00055	f6 c4 44	 test	 ah, 68			; 00000044H
  00058	7a 0c		 jp	 SHORT $LN8@Update
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 134  : 		if (m_bSkyMatrixUpdated == false)

  0005a	8a 86 f1 01 00
	00		 mov	 al, BYTE PTR [esi+497]
  00060	84 c0		 test	 al, al
  00062	74 6c		 je	 SHORT $LN4@Update
  00064	eb 06		 jmp	 SHORT $LN10@Update
$LN8@Update:

; 132  : 
; 133  : 	if (m_v3Position == v3Eye)

  00066	8a 86 f1 01 00
	00		 mov	 al, BYTE PTR [esi+497]
$LN10@Update:

; 135  : 			return;
; 136  : 
; 137  : 	m_v3Position = v3Eye;

  0006c	66 0f d6 8e bc
	01 00 00	 movq	 QWORD PTR [esi+444], xmm1
  00074	89 8e c4 01 00
	00		 mov	 DWORD PTR [esi+452], ecx

; 138  : 
; 139  : 	m_matWorld._41 = m_v3Position.x;
; 140  : 	m_matWorld._42 = m_v3Position.y;

  0007a	f3 0f 10 86 c0
	01 00 00	 movss	 xmm0, DWORD PTR [esi+448]

; 141  : 	m_matWorld._43 = m_v3Position.z;

  00082	f3 0f 10 8e c4
	01 00 00	 movss	 xmm1, DWORD PTR [esi+452]
  0008a	f3 0f 10 96 bc
	01 00 00	 movss	 xmm2, DWORD PTR [esi+444]
  00092	f3 0f 11 86 70
	01 00 00	 movss	 DWORD PTR [esi+368], xmm0

; 142  : 
; 143  : 	m_matWorldCloud._41 = m_v3Position.x;
; 144  : 	m_matWorldCloud._42 = m_v3Position.y;

  0009a	f3 0f 11 46 74	 movss	 DWORD PTR [esi+116], xmm0

; 145  : 	m_matWorldCloud._43 = m_v3Position.z + m_fCloudHeight;

  0009f	f3 0f 10 86 14
	01 00 00	 movss	 xmm0, DWORD PTR [esi+276]
  000a7	f3 0f 11 96 6c
	01 00 00	 movss	 DWORD PTR [esi+364], xmm2
  000af	f3 0f 58 c1	 addss	 xmm0, xmm1
  000b3	f3 0f 11 8e 74
	01 00 00	 movss	 DWORD PTR [esi+372], xmm1
  000bb	f3 0f 11 56 70	 movss	 DWORD PTR [esi+112], xmm2
  000c0	f3 0f 11 46 78	 movss	 DWORD PTR [esi+120], xmm0

; 146  : 
; 147  : 	if (m_bSkyMatrixUpdated)

  000c5	84 c0		 test	 al, al
  000c7	74 07		 je	 SHORT $LN4@Update

; 148  : 		m_bSkyMatrixUpdated = false;

  000c9	c6 86 f1 01 00
	00 00		 mov	 BYTE PTR [esi+497], 0
$LN4@Update:
  000d0	5e		 pop	 esi

; 149  : }

  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?Update@CSkyObject@@UAEXXZ ENDP				; CSkyObject::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Render@CSkyObject@@UAEXXZ
_TEXT	SEGMENT
?Render@CSkyObject@@UAEXXZ PROC				; CSkyObject::Render, COMDAT
; _this$ = ecx

; 153  : }

  00000	c2 00 00	 ret	 0
?Render@CSkyObject@@UAEXXZ ENDP				; CSkyObject::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Destroy@CSkyObject@@UAEXXZ
_TEXT	SEGMENT
?Destroy@CSkyObject@@UAEXXZ PROC			; CSkyObject::Destroy, COMDAT
; _this$ = ecx

; 127  : }

  00000	c2 00 00	 ret	 0
?Destroy@CSkyObject@@UAEXXZ ENDP			; CSkyObject::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??1CSkyObject@@UAE@XZ
_TEXT	SEGMENT
??1CSkyObject@@UAE@XZ PROC				; CSkyObject::~CSkyObject, COMDAT
; _this$ = ecx

; 121  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 123  : }

  00004	8d 8f f4 01 00
	00		 lea	 ecx, DWORD PTR [edi+500]
  0000a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CSkyObject@@6B@
  00010	e8 00 00 00 00	 call	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00015	8b 87 ec 01 00
	00		 mov	 eax, DWORD PTR [edi+492]
  0001b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0001e	72 10		 jb	 SHORT $LN7@CSkyObject

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00020	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00021	50		 push	 eax
  00022	ff b7 d8 01 00
	00		 push	 DWORD PTR [edi+472]
  00028	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002d	83 c4 08	 add	 esp, 8
$LN7@CSkyObject:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 123  : }

  00030	8d b7 34 01 00
	00		 lea	 esi, DWORD PTR [edi+308]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00036	c7 87 e8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+488], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 87 ec 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [edi+492], 15	; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  0004a	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004c	c6 87 d8 01 00
	00 00		 mov	 BYTE PTR [edi+472], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00053	8b 06		 mov	 eax, DWORD PTR [esi]
  00055	ff 70 04	 push	 DWORD PTR [eax+4]
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0005e	6a 2c		 push	 44			; 0000002cH
  00060	ff 36		 push	 DWORD PTR [esi]
  00062	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00067	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 123  : }

  0006a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0006d	e8 00 00 00 00	 call	 ??1TSkyObjectFace@CSkyObject@@QAE@XZ
  00072	8b cf		 mov	 ecx, edi
  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
??1CSkyObject@@UAE@XZ ENDP				; CSkyObject::~CSkyObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??0CSkyObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSkyObject@@QAE@XZ PROC				; CSkyObject::CSkyObject, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSkyObject@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$[ebp], ebx
  0002d	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  00032	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CSkyObject@@6B@
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003f	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004d	c6 43 04 00	 mov	 BYTE PTR [ebx+4], 0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00051	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00058	c7 43 30 0f 00
	00 00		 mov	 DWORD PTR [ebx+48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0005f	c6 43 1c 00	 mov	 BYTE PTR [ebx+28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00063	c7 43 34 00 00
	00 00		 mov	 DWORD PTR [ebx+52], 0
  0006a	c7 43 38 00 00
	00 00		 mov	 DWORD PTR [ebx+56], 0
  00071	c7 43 3c 00 00
	00 00		 mov	 DWORD PTR [ebx+60], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 106  : {

  00078	8d bb 34 01 00
	00		 lea	 edi, DWORD PTR [ebx+308]
  0007e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00082	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00085	6a 2c		 push	 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00087	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0008d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00094	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00099	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0009b	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0009e	50		 push	 eax
  0009f	56		 push	 esi
  000a0	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  000a3	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  000a8	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  000ab	50		 push	 eax
  000ac	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000af	51		 push	 ecx
  000b0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  000b5	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  000b8	50		 push	 eax
  000b9	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,CGraphicImageInstance *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  000c2	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  000c8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000cb	89 37		 mov	 DWORD PTR [edi], esi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  000cd	c7 83 bc 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+444], 0

; 181  :     y = fy;

  000d7	c7 83 c0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+448], 0

; 182  :     z = fz;

  000e1	c7 83 c4 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+452], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 103  : 	m_fScaleX(1.0f),

  000eb	c7 83 c8 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+456], 1065353216 ; 3f800000H

; 104  : 	m_fScaleY(1.0f),

  000f5	c7 83 cc 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+460], 1065353216 ; 3f800000H

; 105  : 	m_fScaleZ(1.0f)

  000ff	c7 83 d0 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+464], 1065353216 ; 3f800000H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00109	c7 83 e8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+488], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00113	c7 83 ec 01 00
	00 0f 00 00 00	 mov	 DWORD PTR [ebx+492], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0011d	c6 83 d8 01 00
	00 00		 mov	 BYTE PTR [ebx+472], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 106  : {

  00124	8d 8b f4 01 00
	00		 lea	 ecx, DWORD PTR [ebx+500]
  0012a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0012e	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00133	c7 83 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+372], 0
  0013d	c7 83 70 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+368], 0
  00147	c7 83 6c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+364], 0
  00151	c7 83 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+360], 0
  0015b	c7 83 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+352], 0
  00165	c7 83 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+348], 0
  0016f	c7 83 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+344], 0
  00179	c7 83 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+340], 0
  00183	c7 83 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+332], 0
  0018d	c7 83 48 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+328], 0
  00197	c7 83 44 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+324], 0
  001a1	c7 83 40 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+320], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  001ab	c7 83 78 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+376], 1065353216 ; 3f800000H
  001b5	c7 83 64 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+356], 1065353216 ; 3f800000H
  001bf	c7 83 50 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+336], 1065353216 ; 3f800000H
  001c9	c7 83 3c 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+316], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 106  : {

  001d3	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  001d7	c7 83 b4 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+436], 0
  001e1	c7 83 b0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+432], 0
  001eb	c7 83 ac 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+428], 0
  001f5	c7 83 a8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+424], 0
  001ff	c7 83 a0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+416], 0
  00209	c7 83 9c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+412], 0
  00213	c7 83 98 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+408], 0
  0021d	c7 83 94 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+404], 0
  00227	c7 83 8c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+396], 0
  00231	c7 83 88 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+392], 0
  0023b	c7 83 84 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+388], 0
  00245	c7 83 80 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+384], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  0024f	c7 83 b8 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+440], 1065353216 ; 3f800000H
  00259	c7 83 a4 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+420], 1065353216 ; 3f800000H
  00263	c7 83 90 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+400], 1065353216 ; 3f800000H
  0026d	c7 83 7c 01 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+380], 1065353216 ; 3f800000H

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00277	c7 83 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+248], 0
  00281	c7 83 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+244], 0
  0028b	c7 83 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+240], 0
  00295	c7 83 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+236], 0
  0029f	c7 83 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+228], 0
  002a9	c7 83 e0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+224], 0
  002b3	c7 83 dc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+220], 0
  002bd	c7 83 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+216], 0
  002c7	c7 83 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+208], 0
  002d1	c7 83 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+204], 0
  002db	c7 83 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+200], 0
  002e5	c7 83 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+196], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  002ef	c7 83 fc 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+252], 1065353216 ; 3f800000H
  002f9	c7 83 e8 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+232], 1065353216 ; 3f800000H
  00303	c7 83 d4 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+212], 1065353216 ; 3f800000H
  0030d	c7 83 c0 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ebx+192], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp

; 111  : 	m_dwlastTime = CTimer::Instance().GetCurrentMillisecond();

  00317	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0031d	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  00322	89 83 30 01 00
	00		 mov	 DWORD PTR [ebx+304], eax

; 112  : 
; 113  : 	m_fCloudPositionU = 0.0f;
; 114  : 	m_fCloudPositionV = 0.0f;
; 115  : 
; 116  : 	m_bTransitionStarted = false;
; 117  : 	m_bSkyMatrixUpdated = false;
; 118  : }

  00328	8b c3		 mov	 eax, ebx
  0032a	c7 83 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+296], 0
  00334	c7 83 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+300], 0
  0033e	66 c7 83 f0 01
	00 00 00 00	 mov	 WORD PTR [ebx+496], 0
  00347	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0034a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00351	59		 pop	 ecx
  00352	5f		 pop	 edi
  00353	5e		 pop	 esi
  00354	5b		 pop	 ebx
  00355	8b e5		 mov	 esp, ebp
  00357	5d		 pop	 ebp
  00358	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSkyObject@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
__unwindfunclet$??0CSkyObject@@QAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1TSkyObjectFace@CSkyObject@@QAE@XZ
__unwindfunclet$??0CSkyObject@@QAE@XZ$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVCGraphicImageInstance@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0CSkyObject@@QAE@XZ$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 d8 01 00
	00		 add	 ecx, 472		; 000001d8H
  0002a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0CSkyObject@@QAE@XZ$4:
  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00038	e9 00 00 00 00	 jmp	 ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
  00041	cc		 int	 3
__ehhandler$??0CSkyObject@@QAE@XZ:
  00042	90		 npad	 1
  00043	90		 npad	 1
  00044	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00048	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004b	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0004e	33 c8		 xor	 ecx, eax
  00050	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00055	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSkyObject@@QAE@XZ
  0005a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSkyObject@@QAE@XZ ENDP				; CSkyObject::CSkyObject
; Function compile flags: /Ogtp
;	COMDAT ??_GCSkyObjectQuad@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSkyObjectQuad@@UAEPAXI@Z PROC			; CSkyObjectQuad::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSkyObjectQuad@@UAE@XZ ; CSkyObjectQuad::~CSkyObjectQuad
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 2c 01 00 00	 push	 300			; 0000012cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCSkyObjectQuad@@UAEPAXI@Z ENDP			; CSkyObjectQuad::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Render@CSkyObjectQuad@@QAEXXZ
_TEXT	SEGMENT
?Render@CSkyObjectQuad@@QAEXXZ PROC			; CSkyObjectQuad::Render, COMDAT
; _this$ = ecx

; 93   : 	if (CGraphicBase::SetPDTStream(m_Vertex, 4))

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	6a 04		 push	 4
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  0000b	83 c4 08	 add	 esp, 8
  0000e	84 c0		 test	 al, al
  00010	74 11		 je	 SHORT $LN2@Render

; 94   : 		STATEMANAGER.DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);

  00012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00018	6a 02		 push	 2
  0001a	6a 00		 push	 0
  0001c	6a 05		 push	 5
  0001e	e8 00 00 00 00	 call	 ?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z ; CStateManager::DrawPrimitive
$LN2@Render:

; 95   : 	//STATEMANAGER.DrawIndexedPrimitiveUP(D3DPT_TRIANGLESTRIP, 0, 4, 2, m_Indices, D3DFMT_INDEX16, &m_Vertex, sizeof(TPDTVertex));
; 96   : }

  00023	c3		 ret	 0
?Render@CSkyObjectQuad@@QAEXXZ ENDP			; CSkyObjectQuad::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Update@CSkyObjectQuad@@QAE_NXZ
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
tv339 = -4						; size = 4
?Update@CSkyObjectQuad@@QAE_NXZ PROC			; CSkyObjectQuad::Update, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b c1		 mov	 eax, ecx

; 82   : 	bool bResult = false;
; 83   : 	for (unsigned char uci = 0; uci < 4; ++uci)

  00009	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR tv339[ebp], 4
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 45 f8	 mov	 DWORD PTR _this$1$[ebp], eax
  00015	32 db		 xor	 bl, bl
  00017	8d 78 64	 lea	 edi, DWORD PTR [eax+100]
  0001a	8d 70 6c	 lea	 esi, DWORD PTR [eax+108]
  0001d	0f 1f 00	 npad	 3
$LL4@Update:

; 84   : 	{
; 85   : 		bResult = m_Helper[uci].Update() || bResult;

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?Update@CColorTransitionHelper@@QAE_NXZ ; CColorTransitionHelper::Update
  00027	84 c0		 test	 al, al
  00029	75 04		 jne	 SHORT $LN6@Update
  0002b	84 db		 test	 bl, bl
  0002d	74 02		 je	 SHORT $LN7@Update
$LN6@Update:
  0002f	b3 01		 mov	 bl, 1
$LN7@Update:

; 86   : 		m_Vertex[m_Indices[uci]].diffuse = m_Helper[uci].GetCurColor();

  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?GetCurColor@CColorTransitionHelper@@QAEABKXZ ; CColorTransitionHelper::GetCurColor
  00038	0f b7 0f	 movzx	 ecx, WORD PTR [edi]
  0003b	83 c6 30	 add	 esi, 48			; 00000030H
  0003e	83 c7 02	 add	 edi, 2
  00041	83 6d fc 01	 sub	 DWORD PTR tv339[ebp], 1
  00045	8d 14 49	 lea	 edx, DWORD PTR [ecx+ecx*2]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  0004d	89 4c d0 10	 mov	 DWORD PTR [eax+edx*8+16], ecx
  00051	75 cd		 jne	 SHORT $LL4@Update

; 87   : 	}
; 88   :  	return bResult;

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	8a c3		 mov	 al, bl
  00057	5b		 pop	 ebx

; 89   : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?Update@CSkyObjectQuad@@QAE_NXZ ENDP			; CSkyObjectQuad::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?StartTransition@CSkyObjectQuad@@QAEXXZ
_TEXT	SEGMENT
?StartTransition@CSkyObjectQuad@@QAEXXZ PROC		; CSkyObjectQuad::StartTransition, COMDAT
; _this$ = ecx

; 73   : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 74   : 	for (unsigned char uci = 0; uci < 4; ++uci)

  00002	8d 71 6c	 lea	 esi, DWORD PTR [ecx+108]
  00005	bf 04 00 00 00	 mov	 edi, 4
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@StartTrans:

; 75   : 	{
; 76   : 		m_Helper[uci].StartTransition();

  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?StartTransition@CColorTransitionHelper@@QAEXXZ ; CColorTransitionHelper::StartTransition
  00017	83 c6 30	 add	 esi, 48			; 00000030H
  0001a	83 ef 01	 sub	 edi, 1
  0001d	75 f1		 jne	 SHORT $LL4@StartTrans

; 77   : 	}
; 78   : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?StartTransition@CSkyObjectQuad@@QAEXXZ ENDP		; CSkyObjectQuad::StartTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z
_TEXT	SEGMENT
_c_rucNumVertex$ = 8					; size = 4
_c_rPDTVertex$ = 12					; size = 4
?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z PROC ; CSkyObjectQuad::SetVertex, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	if (c_rucNumVertex > 3)

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucNumVertex$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 03		 cmp	 al, 3
  0000a	77 22		 ja	 SHORT $LN1@SetVertex

; 68   : 		return;
; 69   : 	memcpy (&m_Vertex[m_Indices[c_rucNumVertex]], &c_rPDTVertex, sizeof(TPDTVertex));

  0000c	0f b6 c0	 movzx	 eax, al
  0000f	0f b7 44 41 64	 movzx	 eax, WORD PTR [ecx+eax*2+100]
  00014	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00017	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _c_rPDTVertex$[ebp]
  0001d	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00020	0f 11 41 04	 movups	 XMMWORD PTR [ecx+4], xmm0
  00024	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00029	66 0f d6 41 14	 movq	 QWORD PTR [ecx+20], xmm0
$LN1@SetVertex:

; 70   : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?SetVertex@CSkyObjectQuad@@QAEXABEABUSPDTVertex@@@Z ENDP ; CSkyObjectQuad::SetVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z
_TEXT	SEGMENT
_c_rucNumVertex$ = 8					; size = 4
_c_rfRed$ = 12						; size = 4
_c_rfGreen$ = 16					; size = 4
_c_rfBlue$ = 20						; size = 4
_c_rfAlpha$ = 24					; size = 4
_dwDuration$ = 28					; size = 4
?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z PROC	; CSkyObjectQuad::SetTransition, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   : 	if (c_rucNumVertex > 3)

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucNumVertex$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 03		 cmp	 al, 3
  0000a	77 23		 ja	 SHORT $LN1@SetTransit

; 61   : 		return;
; 62   : 	m_Helper[c_rucNumVertex].SetTransition(c_rfRed, c_rfGreen, c_rfBlue, c_rfAlpha, dwDuration);

  0000c	8d 55 1c	 lea	 edx, DWORD PTR _dwDuration$[ebp]
  0000f	0f b6 c0	 movzx	 eax, al
  00012	52		 push	 edx
  00013	ff 75 18	 push	 DWORD PTR _c_rfAlpha$[ebp]
  00016	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00019	ff 75 14	 push	 DWORD PTR _c_rfBlue$[ebp]
  0001c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0001f	ff 75 10	 push	 DWORD PTR _c_rfGreen$[ebp]
  00022	c1 e0 04	 shl	 eax, 4
  00025	ff 75 0c	 push	 DWORD PTR _c_rfRed$[ebp]
  00028	03 c8		 add	 ecx, eax
  0002a	e8 00 00 00 00	 call	 ?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z ; CColorTransitionHelper::SetTransition
$LN1@SetTransit:

; 63   : }

  0002f	5d		 pop	 ebp
  00030	c2 18 00	 ret	 24			; 00000018H
?SetTransition@CSkyObjectQuad@@QAEXABEABM111K@Z ENDP	; CSkyObjectQuad::SetTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z
_TEXT	SEGMENT
_c_rucNumVertex$ = 8					; size = 4
_c_rfRed$ = 12						; size = 4
_c_rfGreen$ = 16					; size = 4
_c_rfBlue$ = 20						; size = 4
_c_rfAlpha$ = 24					; size = 4
?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z PROC	; CSkyObjectQuad::SetSrcColor, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   : 	if (c_rucNumVertex > 3)

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucNumVertex$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 03		 cmp	 al, 3
  0000a	77 1f		 ja	 SHORT $LN1@SetSrcColo

; 49   : 		return;
; 50   : 	m_Helper[c_rucNumVertex].SetSrcColor(c_rfRed, c_rfGreen, c_rfBlue, c_rfAlpha);

  0000c	ff 75 18	 push	 DWORD PTR _c_rfAlpha$[ebp]
  0000f	0f b6 c0	 movzx	 eax, al
  00012	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00015	ff 75 14	 push	 DWORD PTR _c_rfBlue$[ebp]
  00018	ff 75 10	 push	 DWORD PTR _c_rfGreen$[ebp]
  0001b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0001e	ff 75 0c	 push	 DWORD PTR _c_rfRed$[ebp]
  00021	c1 e0 04	 shl	 eax, 4
  00024	03 c8		 add	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::SetSrcColor
$LN1@SetSrcColo:

; 51   : }

  0002b	5d		 pop	 ebp
  0002c	c2 14 00	 ret	 20			; 00000014H
?SetSrcColor@CSkyObjectQuad@@QAEXABEABM111@Z ENDP	; CSkyObjectQuad::SetSrcColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ?Clear@CSkyObjectQuad@@QAEXABEABM111@Z
_TEXT	SEGMENT
_c_rucNumVertex$ = 8					; size = 4
_c_rfRed$ = 12						; size = 4
_c_rfGreen$ = 16					; size = 4
_c_rfBlue$ = 20						; size = 4
_c_rfAlpha$ = 24					; size = 4
?Clear@CSkyObjectQuad@@QAEXABEABM111@Z PROC		; CSkyObjectQuad::Clear, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	if (c_rucNumVertex > 3)

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rucNumVertex$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	3c 03		 cmp	 al, 3
  0000a	77 1f		 ja	 SHORT $LN1@Clear

; 38   : 		return;
; 39   : 	m_Helper[c_rucNumVertex].Clear(c_rfRed, c_rfGreen, c_rfBlue, c_rfAlpha);

  0000c	ff 75 18	 push	 DWORD PTR _c_rfAlpha$[ebp]
  0000f	0f b6 c0	 movzx	 eax, al
  00012	83 c1 6c	 add	 ecx, 108		; 0000006cH
  00015	ff 75 14	 push	 DWORD PTR _c_rfBlue$[ebp]
  00018	ff 75 10	 push	 DWORD PTR _c_rfGreen$[ebp]
  0001b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0001e	ff 75 0c	 push	 DWORD PTR _c_rfRed$[ebp]
  00021	c1 e0 04	 shl	 eax, 4
  00024	03 c8		 add	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?Clear@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::Clear
$LN1@Clear:

; 40   : }

  0002b	5d		 pop	 ebp
  0002c	c2 14 00	 ret	 20			; 00000014H
?Clear@CSkyObjectQuad@@QAEXABEABM111@Z ENDP		; CSkyObjectQuad::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??1CSkyObjectQuad@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CSkyObjectQuad@@UAE@XZ PROC				; CSkyObjectQuad::~CSkyObjectQuad, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSkyObjectQuad@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 29   : }

  00022	68 00 00 00 00	 push	 OFFSET ??1CColorTransitionHelper@@QAE@XZ ; CColorTransitionHelper::~CColorTransitionHelper
  00027	6a 04		 push	 4
  00029	6a 30		 push	 48			; 00000030H
  0002b	8d 41 6c	 lea	 eax, DWORD PTR [ecx+108]
  0002e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSkyObjectQuad@@6B@
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00044	59		 pop	 ecx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
  0004c	cc		 int	 3
  0004d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSkyObjectQuad@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSkyObjectQuad@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSkyObjectQuad@@UAE@XZ ENDP				; CSkyObjectQuad::~CSkyObjectQuad
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\SkyBox.cpp
;	COMDAT ??0CSkyObjectQuad@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSkyObjectQuad@@QAE@XZ PROC				; CSkyObjectQuad::CSkyObjectQuad, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	68 00 00 00 00	 push	 OFFSET ??1CColorTransitionHelper@@QAE@XZ ; CColorTransitionHelper::~CColorTransitionHelper
  0000a	8b f1		 mov	 esi, ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0CColorTransitionHelper@@QAE@XZ ; CColorTransitionHelper::CColorTransitionHelper
  00011	6a 04		 push	 4
  00013	6a 30		 push	 48			; 00000030H
  00015	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  00018	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0001b	50		 push	 eax
  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSkyObjectQuad@@6B@
  00022	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00027	6a 60		 push	 96			; 00000060H
  00029	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 15   : 	// Index buffer
; 16   : 	m_Indices[0] = 0;

  0002c	c7 46 64 00 00
	02 00		 mov	 DWORD PTR [esi+100], 131072 ; 00020000H
  00033	6a 00		 push	 0
  00035	50		 push	 eax

; 17   : 	m_Indices[1] = 2;
; 18   : 	m_Indices[2] = 1;

  00036	c7 46 68 01 00
	03 00		 mov	 DWORD PTR [esi+104], 196609 ; 00030001H
  0003d	e8 00 00 00 00	 call	 _memset
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : 	m_Indices[3] = 3;
; 20   : 
; 21   : 	for (unsigned char uci = 0; uci < 4; ++uci)
; 22   : 	{
; 23   : 		memset(&m_Vertex[uci], 0, sizeof(TPDTVertex));
; 24   : 	}
; 25   : }

  00045	8b c6		 mov	 eax, esi
  00047	5e		 pop	 esi
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0CSkyObjectQuad@@QAE@XZ ENDP				; CSkyObjectQuad::CSkyObjectQuad
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
__New_ptr$1 = -4					; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx

; 2983 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL38@assign:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL38@assign
  0001a	2b f1		 sub	 esi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN6@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00026	8b df		 mov	 ebx, edi

; 2153 :         return _BUF_SIZE <= _Myres;

  00028	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0002b	72 02		 jb	 SHORT $LN9@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 1f		 mov	 ebx, DWORD PTR [edi]
$LN9@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	53		 push	 ebx

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	8b c7		 mov	 eax, edi
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 2985 :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN6@assign:

; 4221 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 91 00 00
	00		 ja	 $LN42@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b de		 mov	 ebx, esi
  0005a	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0005d	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 07		 jbe	 SHORT $LN23@assign

; 4203 :             return _Max;

  00065	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0006a	eb 1e		 jmp	 SHORT $LN22@assign
$LN23@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 07		 jbe	 SHORT $LN24@assign

; 4207 :             return _Max;

  0007b	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00080	eb 08		 jmp	 SHORT $LN22@assign
$LN24@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00082	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00085	3b d8		 cmp	 ebx, eax
  00087	0f 42 d8	 cmovb	 ebx, eax
$LN22@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0008a	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	56		 push	 esi
  00094	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00097	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009a	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0009e	89 5f 14	 mov	 DWORD PTR [edi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a1	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a6	8b 5d fc	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a9	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000ac	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000af	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000b3	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b6	72 19		 jb	 SHORT $LN17@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000b8	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b9	50		 push	 eax
  000ba	ff 37		 push	 DWORD PTR [edi]
  000bc	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c1	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000c4	89 1f		 mov	 DWORD PTR [edi], ebx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c6	8b c7		 mov	 eax, edi
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx

; 2985 :     }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 04 00	 ret	 4
$LN17@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000d1	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000d4	50		 push	 eax
  000d5	57		 push	 edi
  000d6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000db	83 c4 08	 add	 esp, 8
  000de	8b c7		 mov	 eax, edi
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx

; 2985 :     }

  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
$LN42@assign:

; 4222 :             _Xlen_string(); // result too long

  000e9	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN39@assign:
  000ee	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN11@basic_stri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@basic_stri:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN8@basic_stri

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN8@basic_stri:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00090	5e		 pop	 esi

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR2@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR2@@QAE@XZ PROC				; D3DXVECTOR2::D3DXVECTOR2, COMDAT
; _this$ = ecx

; 46   :     D3DXVECTOR2() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR2@@QAE@XZ ENDP				; D3DXVECTOR2::D3DXVECTOR2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
