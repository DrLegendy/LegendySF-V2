; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CReferenceObject@@QAE@XZ			; CReferenceObject::CReferenceObject
PUBLIC	??1CReferenceObject@@UAE@XZ			; CReferenceObject::~CReferenceObject
PUBLIC	?AddReference@CReferenceObject@@QAEXXZ		; CReferenceObject::AddReference
PUBLIC	?AddReferenceOnly@CReferenceObject@@QAEXXZ	; CReferenceObject::AddReferenceOnly
PUBLIC	?Release@CReferenceObject@@QAEXXZ		; CReferenceObject::Release
PUBLIC	?GetReferenceCount@CReferenceObject@@QAEHXZ	; CReferenceObject::GetReferenceCount
PUBLIC	?canDestroy@CReferenceObject@@QAE_NXZ		; CReferenceObject::canDestroy
PUBLIC	?OnConstruct@CReferenceObject@@MAEXXZ		; CReferenceObject::OnConstruct
PUBLIC	?OnSelfDestruct@CReferenceObject@@MAEXXZ	; CReferenceObject::OnSelfDestruct
PUBLIC	??_GCReferenceObject@@UAEPAXI@Z			; CReferenceObject::`scalar deleting destructor'
PUBLIC	??_7CReferenceObject@@6B@			; CReferenceObject::`vftable'
PUBLIC	??_R4CReferenceObject@@6B@			; CReferenceObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_ECReferenceObject@@UAEPAXI@Z:PROC		; CReferenceObject::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$r	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$r	ENDS
;	COMDAT ??_R4CReferenceObject@@6B@
rdata$r	SEGMENT
??_R4CReferenceObject@@6B@ DD 00H			; CReferenceObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCReferenceObject@@@8
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_7CReferenceObject@@6B@
CONST	SEGMENT
??_7CReferenceObject@@6B@ DD FLAT:??_R4CReferenceObject@@6B@ ; CReferenceObject::`vftable'
	DD	FLAT:??_ECReferenceObject@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CReferenceObject@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CReferenceObject@@MAEXXZ
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCReferenceObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCReferenceObject@@UAEPAXI@Z PROC			; CReferenceObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CReferenceObject@@UAE@XZ ; CReferenceObject::~CReferenceObject
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 0c		 push	 12			; 0000000cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCReferenceObject@@UAEPAXI@Z ENDP			; CReferenceObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?OnSelfDestruct@CReferenceObject@@MAEXXZ
_TEXT	SEGMENT
?OnSelfDestruct@CReferenceObject@@MAEXXZ PROC		; CReferenceObject::OnSelfDestruct, COMDAT
; _this$ = ecx

; 51   : 	m_destructed = true;
; 52   : 	delete this;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	6a 01		 push	 1
  00004	c6 41 08 01	 mov	 BYTE PTR [ecx+8], 1
  00008	ff 10		 call	 DWORD PTR [eax]

; 53   : }

  0000a	c3		 ret	 0
?OnSelfDestruct@CReferenceObject@@MAEXXZ ENDP		; CReferenceObject::OnSelfDestruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?OnConstruct@CReferenceObject@@MAEXXZ
_TEXT	SEGMENT
?OnConstruct@CReferenceObject@@MAEXXZ PROC		; CReferenceObject::OnConstruct, COMDAT
; _this$ = ecx

; 46   : 	m_destructed = false;

  00000	c6 41 08 00	 mov	 BYTE PTR [ecx+8], 0

; 47   : }

  00004	c3		 ret	 0
?OnConstruct@CReferenceObject@@MAEXXZ ENDP		; CReferenceObject::OnConstruct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?canDestroy@CReferenceObject@@QAE_NXZ
_TEXT	SEGMENT
?canDestroy@CReferenceObject@@QAE_NXZ PROC		; CReferenceObject::canDestroy, COMDAT
; _this$ = ecx

; 57   : 	if (m_refCount > 0)

  00000	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00004	0f 9e c0	 setle	 al

; 58   : 		return false;
; 59   : 
; 60   : 	return true;
; 61   : }

  00007	c3		 ret	 0
?canDestroy@CReferenceObject@@QAE_NXZ ENDP		; CReferenceObject::canDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?GetReferenceCount@CReferenceObject@@QAEHXZ
_TEXT	SEGMENT
?GetReferenceCount@CReferenceObject@@QAEHXZ PROC	; CReferenceObject::GetReferenceCount, COMDAT
; _this$ = ecx

; 22   : 	return m_refCount;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 23   : }

  00003	c3		 ret	 0
?GetReferenceCount@CReferenceObject@@QAEHXZ ENDP	; CReferenceObject::GetReferenceCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?Release@CReferenceObject@@QAEXXZ
_TEXT	SEGMENT
?Release@CReferenceObject@@QAEXXZ PROC			; CReferenceObject::Release, COMDAT
; _this$ = ecx

; 32   : 	if (m_refCount > 1)

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 f8 01	 cmp	 eax, 1
  00006	7e 05		 jle	 SHORT $LN2@Release

; 33   : 	{
; 34   : 		--m_refCount;

  00008	48		 dec	 eax
  00009	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 42   : }

  0000c	c3		 ret	 0
$LN2@Release:

; 35   : 		return;
; 36   : 	}
; 37   : 
; 38   : 	assert(m_destructed == false);
; 39   : 	assert(m_refCount >= 0);
; 40   : 	m_refCount = 0;

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 41   : 	OnSelfDestruct();

  00016	ff 60 08	 jmp	 DWORD PTR [eax+8]
?Release@CReferenceObject@@QAEXXZ ENDP			; CReferenceObject::Release
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?AddReferenceOnly@CReferenceObject@@QAEXXZ
_TEXT	SEGMENT
?AddReferenceOnly@CReferenceObject@@QAEXXZ PROC		; CReferenceObject::AddReferenceOnly, COMDAT
; _this$ = ecx

; 27   : 	++m_refCount;

  00000	ff 41 04	 inc	 DWORD PTR [ecx+4]

; 28   : }

  00003	c3		 ret	 0
?AddReferenceOnly@CReferenceObject@@QAEXXZ ENDP		; CReferenceObject::AddReferenceOnly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ?AddReference@CReferenceObject@@QAEXXZ
_TEXT	SEGMENT
?AddReference@CReferenceObject@@QAEXXZ PROC		; CReferenceObject::AddReference, COMDAT
; _this$ = ecx

; 13   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 14   : 	if (m_refCount == 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	75 0a		 jne	 SHORT $LN4@AddReferen

; 15   : 		OnConstruct();

  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	ff 50 04	 call	 DWORD PTR [eax+4]

; 16   : 
; 17   : 	++m_refCount;

  0000f	ff 46 04	 inc	 DWORD PTR [esi+4]
  00012	5e		 pop	 esi

; 18   : }

  00013	c3		 ret	 0
$LN4@AddReferen:

; 16   : 
; 17   : 	++m_refCount;

  00014	40		 inc	 eax
  00015	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00018	5e		 pop	 esi

; 18   : }

  00019	c3		 ret	 0
?AddReference@CReferenceObject@@QAEXXZ ENDP		; CReferenceObject::AddReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ??1CReferenceObject@@UAE@XZ
_TEXT	SEGMENT
??1CReferenceObject@@UAE@XZ PROC			; CReferenceObject::~CReferenceObject, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CReferenceObject@@6B@

; 10   : }

  00006	c3		 ret	 0
??1CReferenceObject@@UAE@XZ ENDP			; CReferenceObject::~CReferenceObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ReferenceObject.cpp
;	COMDAT ??0CReferenceObject@@QAE@XZ
_TEXT	SEGMENT
??0CReferenceObject@@QAE@XZ PROC			; CReferenceObject::CReferenceObject, COMDAT
; _this$ = ecx

; 5    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CReferenceObject@@6B@

; 6    : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c6 41 08 00	 mov	 BYTE PTR [ecx+8], 0
  00013	c3		 ret	 0
??0CReferenceObject@@QAE@XZ ENDP			; CReferenceObject::CReferenceObject
_TEXT	ENDS
END
