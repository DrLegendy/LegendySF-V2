; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CColorTransitionHelper@@QAE@XZ		; CColorTransitionHelper::CColorTransitionHelper
PUBLIC	??1CColorTransitionHelper@@QAE@XZ		; CColorTransitionHelper::~CColorTransitionHelper
PUBLIC	?Clear@CColorTransitionHelper@@QAEXABM000@Z	; CColorTransitionHelper::Clear
PUBLIC	?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::SetSrcColor
PUBLIC	?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z ; CColorTransitionHelper::SetTransition
PUBLIC	?GetCurColor@CColorTransitionHelper@@QAEABKXZ	; CColorTransitionHelper::GetCurColor
PUBLIC	?StartTransition@CColorTransitionHelper@@QAEXXZ	; CColorTransitionHelper::StartTransition
PUBLIC	?Update@CColorTransitionHelper@@QAE_NXZ		; CColorTransitionHelper::Update
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__ftoui3:PROC
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?Update@CColorTransitionHelper@@QAE_NXZ
_TEXT	SEGMENT
_fCurRed$1$ = -20					; size = 4
_fpercent$1$ = -16					; size = 4
_fCurBlue$1$ = -12					; size = 4
_fCurGreen$1$ = -8					; size = 4
_fCurAlpha$1$ = -4					; size = 4
?Update@CColorTransitionHelper@@QAE_NXZ PROC		; CColorTransitionHelper::Update, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 58   : //	if (!m_bTransitionStarted)
; 59   : //		return false;
; 60   : 
; 61   : 	DWORD dwCurTime = GetCurrentTime();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 62   : 	DWORD dwElapsedTime = dwCurTime - m_dwStartTime;

  00010	2b 47 04	 sub	 eax, DWORD PTR [edi+4]

; 63   : 
; 64   : 	float fpercent = (float)(dwElapsedTime) / (float)(m_dwDuration);
; 65   : 	if (fpercent <= 0.0f)
; 66   : 		fpercent = 0.0f;
; 67   : 	if (fpercent >= 1.0f)
; 68   : 		fpercent = 1.0f;
; 69   : 	float fCurRed, fCurGreen, fCurBlue, fCurAlpha;
; 70   : 	fCurRed		= m_fSrcRed + (m_fDstRed - m_fSrcRed) * fpercent;
; 71   : 	fCurGreen	= m_fSrcGreen + (m_fDstGreen - m_fSrcGreen) * fpercent;

  00013	f3 0f 10 57 24	 movss	 xmm2, DWORD PTR [edi+36]
  00018	f3 0f 5c 57 14	 subss	 xmm2, DWORD PTR [edi+20]
  0001d	f3 0f 10 5f 20	 movss	 xmm3, DWORD PTR [edi+32]
  00022	66 0f 6e c0	 movd	 xmm0, eax
  00026	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0002a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002d	f3 0f 5c 5f 10	 subss	 xmm3, DWORD PTR [edi+16]
  00032	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0003b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0003e	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  00042	66 0f 6e c0	 movd	 xmm0, eax
  00046	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0004a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004d	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00056	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0005a	f3 0f 5e c8	 divss	 xmm1, xmm0
  0005e	0f 57 c0	 xorps	 xmm0, xmm0
  00061	f3 0f 5f c1	 maxss	 xmm0, xmm1
  00065	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0006d	f3 0f 5d c8	 minss	 xmm1, xmm0
  00071	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00075	f3 0f 59 d9	 mulss	 xmm3, xmm1
  00079	f3 0f 58 57 14	 addss	 xmm2, DWORD PTR [edi+20]
  0007e	f3 0f 11 4d f0	 movss	 DWORD PTR _fpercent$1$[ebp], xmm1
  00083	f3 0f 58 5f 10	 addss	 xmm3, DWORD PTR [edi+16]
  00088	f3 0f 11 55 f8	 movss	 DWORD PTR _fCurGreen$1$[ebp], xmm2

; 72   : 	fCurBlue	= m_fSrcBlue + (m_fDstBlue - m_fSrcBlue) * fpercent;

  0008d	f3 0f 10 57 28	 movss	 xmm2, DWORD PTR [edi+40]
  00092	f3 0f 5c 57 18	 subss	 xmm2, DWORD PTR [edi+24]

; 73   : 	fCurAlpha	= m_fSrcAlpha + (m_fDstAlpha - m_fSrcAlpha) * fpercent;
; 74   : 
; 75   : // 	Tracef("%f, %f, %f, %f\n", fCurRed, fCurGreen, fCurBlue, fCurAlpha);
; 76   : 
; 77   : 	m_dwCurColor = (((DWORD)(fCurAlpha * 255.0f)&0xff)<< 24) |

  00097	0f 28 c3	 movaps	 xmm0, xmm3
  0009a	f3 0f 11 5d ec	 movss	 DWORD PTR _fCurRed$1$[ebp], xmm3
  0009f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000a7	f3 0f 59 d1	 mulss	 xmm2, xmm1
  000ab	f3 0f 58 57 18	 addss	 xmm2, DWORD PTR [edi+24]
  000b0	f3 0f 11 55 f4	 movss	 DWORD PTR _fCurBlue$1$[ebp], xmm2
  000b5	f3 0f 10 57 2c	 movss	 xmm2, DWORD PTR [edi+44]
  000ba	f3 0f 5c 57 1c	 subss	 xmm2, DWORD PTR [edi+28]
  000bf	f3 0f 59 d1	 mulss	 xmm2, xmm1
  000c3	f3 0f 58 57 1c	 addss	 xmm2, DWORD PTR [edi+28]
  000c8	f3 0f 11 55 fc	 movss	 DWORD PTR _fCurAlpha$1$[ebp], xmm2
  000cd	e8 00 00 00 00	 call	 __ftoui3
  000d2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurAlpha$1$[ebp]
  000d7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000df	0f b6 f0	 movzx	 esi, al
  000e2	e8 00 00 00 00	 call	 __ftoui3
  000e7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fCurGreen$1$[ebp]
  000ec	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000f4	c1 e0 08	 shl	 eax, 8
  000f7	0b f0		 or	 esi, eax
  000f9	c1 e6 08	 shl	 esi, 8
  000fc	e8 00 00 00 00	 call	 __ftoui3
  00101	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fCurBlue$1$[ebp]
  00106	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0010e	0f b6 c0	 movzx	 eax, al
  00111	0b f0		 or	 esi, eax
  00113	c1 e6 08	 shl	 esi, 8
  00116	e8 00 00 00 00	 call	 __ftoui3

; 78   : 		(((DWORD)(fCurRed * 255.0f)&0xff) << 16) |
; 79   : 		(((DWORD)(fCurGreen * 255.0f)&0xff) << 8) |
; 80   : 		((DWORD)(fCurBlue * 255.0f)&0xff);
; 81   : 
; 82   : 	if ( (1.0f == fpercent) && (fCurAlpha == m_fDstAlpha) && (fCurRed == m_fDstRed) && (fCurGreen == m_fDstGreen) && (fCurBlue == m_fDstBlue) )

  0011b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00123	0f b6 c0	 movzx	 eax, al
  00126	0b f0		 or	 esi, eax
  00128	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _fpercent$1$[ebp]
  0012c	89 37		 mov	 DWORD PTR [edi], esi
  0012e	9f		 lahf
  0012f	f6 c4 44	 test	 ah, 68			; 00000044H
  00132	7a 48		 jp	 SHORT $LN4@Update
  00134	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCurAlpha$1$[ebp]
  00139	0f 2e 47 2c	 ucomiss xmm0, DWORD PTR [edi+44]
  0013d	9f		 lahf
  0013e	f6 c4 44	 test	 ah, 68			; 00000044H
  00141	7a 39		 jp	 SHORT $LN4@Update
  00143	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fCurRed$1$[ebp]
  00148	0f 2e 47 20	 ucomiss xmm0, DWORD PTR [edi+32]
  0014c	9f		 lahf
  0014d	f6 c4 44	 test	 ah, 68			; 00000044H
  00150	7a 2a		 jp	 SHORT $LN4@Update
  00152	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fCurGreen$1$[ebp]
  00157	0f 2e 47 24	 ucomiss xmm0, DWORD PTR [edi+36]
  0015b	9f		 lahf
  0015c	f6 c4 44	 test	 ah, 68			; 00000044H
  0015f	7a 1b		 jp	 SHORT $LN4@Update
  00161	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fCurBlue$1$[ebp]
  00166	0f 2e 47 28	 ucomiss xmm0, DWORD PTR [edi+40]
  0016a	9f		 lahf
  0016b	f6 c4 44	 test	 ah, 68			; 00000044H
  0016e	7a 0c		 jp	 SHORT $LN4@Update

; 83   : 	{
; 84   : 		m_bTransitionStarted = false;

  00170	c6 47 0c 00	 mov	 BYTE PTR [edi+12], 0

; 85   : 		return false;

  00174	32 c0		 xor	 al, al
  00176	5f		 pop	 edi

; 89   : }

  00177	5e		 pop	 esi
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c3		 ret	 0
$LN4@Update:
  0017c	5f		 pop	 edi

; 86   : 	}
; 87   : 
; 88   : 	return true;

  0017d	b0 01		 mov	 al, 1

; 89   : }

  0017f	5e		 pop	 esi
  00180	8b e5		 mov	 esp, ebp
  00182	5d		 pop	 ebp
  00183	c3		 ret	 0
?Update@CColorTransitionHelper@@QAE_NXZ ENDP		; CColorTransitionHelper::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?StartTransition@CColorTransitionHelper@@QAEXXZ
_TEXT	SEGMENT
?StartTransition@CColorTransitionHelper@@QAEXXZ PROC	; CColorTransitionHelper::StartTransition, COMDAT
; _this$ = ecx

; 51   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 52   : 	m_bTransitionStarted = true;

  00003	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 53   : 	m_dwStartTime = GetCurrentTime();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0000d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00010	5e		 pop	 esi

; 54   : }

  00011	c3		 ret	 0
?StartTransition@CColorTransitionHelper@@QAEXXZ ENDP	; CColorTransitionHelper::StartTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?GetCurColor@CColorTransitionHelper@@QAEABKXZ
_TEXT	SEGMENT
?GetCurColor@CColorTransitionHelper@@QAEABKXZ PROC	; CColorTransitionHelper::GetCurColor, COMDAT
; _this$ = ecx

; 93   : 	return m_dwCurColor;

  00000	8b c1		 mov	 eax, ecx

; 94   : }

  00002	c3		 ret	 0
?GetCurColor@CColorTransitionHelper@@QAEABKXZ ENDP	; CColorTransitionHelper::GetCurColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z
_TEXT	SEGMENT
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
_dwDuration$ = 24					; size = 4
?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z PROC ; CColorTransitionHelper::SetTransition, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   : 	m_fDstRed	= c_rfRed;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rfRed$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 43   : 	m_fDstGreen	= c_rfGreen;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _c_rfGreen$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 44   : 	m_fDstBlue	= c_rfBlue;

  00013	8b 45 10	 mov	 eax, DWORD PTR _c_rfBlue$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 41 28	 mov	 DWORD PTR [ecx+40], eax

; 45   : 	m_fDstAlpha	= c_rfAlpha;

  0001b	8b 45 14	 mov	 eax, DWORD PTR _c_rfAlpha$[ebp]
  0001e	8b 00		 mov	 eax, DWORD PTR [eax]
  00020	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 46   : 
; 47   : 	m_dwDuration = dwDuration;

  00023	8b 45 18	 mov	 eax, DWORD PTR _dwDuration$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 48   : }

  0002b	5d		 pop	 ebp
  0002c	c2 14 00	 ret	 20			; 00000014H
?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z ENDP ; CColorTransitionHelper::SetTransition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z
_TEXT	SEGMENT
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z PROC	; CColorTransitionHelper::SetSrcColor, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 30   : 	m_fSrcRed	= c_rfRed;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rfRed$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 31   : 	m_fSrcGreen	= c_rfGreen;

  0000b	8b 45 0c	 mov	 eax, DWORD PTR _c_rfGreen$[ebp]
  0000e	8b 00		 mov	 eax, DWORD PTR [eax]
  00010	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 32   : 	m_fSrcBlue	= c_rfBlue;

  00013	8b 45 10	 mov	 eax, DWORD PTR _c_rfBlue$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 33   : 	m_fSrcAlpha	= c_rfAlpha;

  0001b	8b 45 14	 mov	 eax, DWORD PTR _c_rfAlpha$[ebp]
  0001e	8b 00		 mov	 eax, DWORD PTR [eax]
  00020	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 34   : }

  00023	5d		 pop	 ebp
  00024	c2 10 00	 ret	 16			; 00000010H
?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z ENDP	; CColorTransitionHelper::SetSrcColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?Clear@CColorTransitionHelper@@QAEXABM000@Z
_TEXT	SEGMENT
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
?Clear@CColorTransitionHelper@@QAEXABM000@Z PROC	; CColorTransitionHelper::Clear, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 9    : 
; 10   : 	m_fSrcRed	= c_rfRed;
; 11   : 	m_fSrcGreen	= c_rfGreen;
; 12   : 	m_fSrcBlue	= c_rfBlue;

  00003	8b 55 10	 mov	 edx, DWORD PTR _c_rfBlue$[ebp]
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 13   : 	m_fSrcAlpha	= c_rfAlpha;

  00009	8b 4d 14	 mov	 ecx, DWORD PTR _c_rfAlpha$[ebp]
  0000c	56		 push	 esi
  0000d	8b 75 0c	 mov	 esi, DWORD PTR _c_rfGreen$[ebp]
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _c_rfRed$[ebp]
  00014	8b 07		 mov	 eax, DWORD PTR [edi]
  00016	89 43 10	 mov	 DWORD PTR [ebx+16], eax
  00019	8b 06		 mov	 eax, DWORD PTR [esi]
  0001b	89 43 14	 mov	 DWORD PTR [ebx+20], eax
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	89 43 18	 mov	 DWORD PTR [ebx+24], eax
  00023	8b 01		 mov	 eax, DWORD PTR [ecx]
  00025	89 43 1c	 mov	 DWORD PTR [ebx+28], eax

; 14   : 
; 15   : 	m_fDstRed	= c_rfRed;

  00028	8b 07		 mov	 eax, DWORD PTR [edi]
  0002a	89 43 20	 mov	 DWORD PTR [ebx+32], eax

; 16   : 	m_fDstGreen	= c_rfGreen;

  0002d	8b 06		 mov	 eax, DWORD PTR [esi]
  0002f	89 43 24	 mov	 DWORD PTR [ebx+36], eax

; 17   : 	m_fDstBlue	= c_rfBlue;

  00032	8b 02		 mov	 eax, DWORD PTR [edx]

; 18   : 	m_fDstAlpha	= c_rfAlpha;
; 19   : 
; 20   : 	m_dwCurColor = 0x00000000;
; 21   : 
; 22   : 	m_dwStartTime = m_dwDuration = 0;

  00034	5f		 pop	 edi
  00035	89 43 28	 mov	 DWORD PTR [ebx+40], eax
  00038	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003a	5e		 pop	 esi
  0003b	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
  0003e	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00044	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  0004b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00052	5b		 pop	 ebx

; 23   : }

  00053	5d		 pop	 ebp
  00054	c2 10 00	 ret	 16			; 00000010H
?Clear@CColorTransitionHelper@@QAEXABM000@Z ENDP	; CColorTransitionHelper::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ??1CColorTransitionHelper@@QAE@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
$T4 = -4						; size = 4
??1CColorTransitionHelper@@QAE@XZ PROC			; CColorTransitionHelper::~CColorTransitionHelper, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 103  : 	Clear(0.0f, 0.0f, 0.0f, 0.0f);

  00006	8d 45 fc	 lea	 eax, DWORD PTR $T4[ebp]
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  00010	50		 push	 eax
  00011	8d 45 f8	 lea	 eax, DWORD PTR $T3[ebp]
  00014	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR $T2[ebp]
  0001f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00026	50		 push	 eax
  00027	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?Clear@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::Clear

; 104  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??1CColorTransitionHelper@@QAE@XZ ENDP			; CColorTransitionHelper::~CColorTransitionHelper
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ??0CColorTransitionHelper@@QAE@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
$T4 = -4						; size = 4
??0CColorTransitionHelper@@QAE@XZ PROC			; CColorTransitionHelper::CColorTransitionHelper, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 98   : 	Clear(0.0f, 0.0f, 0.0f, 0.0f);

  00007	8d 45 fc	 lea	 eax, DWORD PTR $T4[ebp]
  0000a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  00011	50		 push	 eax
  00012	8d 45 f8	 lea	 eax, DWORD PTR $T3[ebp]
  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR $T2[ebp]
  00020	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00027	8b f1		 mov	 esi, ecx
  00029	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00030	50		 push	 eax
  00031	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  00034	50		 push	 eax
  00035	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
  00039	e8 00 00 00 00	 call	 ?Clear@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::Clear

; 99   : }

  0003e	8b c6		 mov	 eax, esi
  00040	5e		 pop	 esi
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??0CColorTransitionHelper@@QAE@XZ ENDP			; CColorTransitionHelper::CColorTransitionHelper
_TEXT	ENDS
END
