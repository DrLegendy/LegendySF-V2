; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	?GetHostName@CNetworkAddress@@SA_NPADH@Z	; CNetworkAddress::GetHostName
PUBLIC	??0CNetworkAddress@@QAE@XZ			; CNetworkAddress::CNetworkAddress
PUBLIC	??1CNetworkAddress@@QAE@XZ			; CNetworkAddress::~CNetworkAddress
PUBLIC	?Clear@CNetworkAddress@@QAEXXZ			; CNetworkAddress::Clear
PUBLIC	?Set@CNetworkAddress@@QAE_NPBDH@Z		; CNetworkAddress::Set
PUBLIC	?SetLocalIP@CNetworkAddress@@QAEXXZ		; CNetworkAddress::SetLocalIP
PUBLIC	?SetIP@CNetworkAddress@@QAEXK@Z			; CNetworkAddress::SetIP
PUBLIC	?SetIP@CNetworkAddress@@QAEXPBD@Z		; CNetworkAddress::SetIP
PUBLIC	?SetDNS@CNetworkAddress@@QAE_NPBD@Z		; CNetworkAddress::SetDNS
PUBLIC	?SetPort@CNetworkAddress@@QAEXH@Z		; CNetworkAddress::SetPort
PUBLIC	?GetPort@CNetworkAddress@@QAEHXZ		; CNetworkAddress::GetPort
PUBLIC	?GetSize@CNetworkAddress@@QAEHXZ		; CNetworkAddress::GetSize
PUBLIC	?GetIP@CNetworkAddress@@QAEXPADH@Z		; CNetworkAddress::GetIP
PUBLIC	?GetIP@CNetworkAddress@@QAEKXZ			; CNetworkAddress::GetIP
PUBLIC	??BCNetworkAddress@@QBEABUsockaddr_in@@XZ	; CNetworkAddress::operator sockaddr_in const &
PUBLIC	?IsIP@CNetworkAddress@@AAE_NPBD@Z		; CNetworkAddress::IsIP
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@	; `string'
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_htonl@4:PROC
EXTRN	_htons@4:PROC
EXTRN	_inet_addr@4:PROC
EXTRN	_ntohl@4:PROC
EXTRN	_ntohs@4:PROC
EXTRN	_gethostbyname@4:PROC
EXTRN	_gethostname@8:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
CONST	SEGMENT
??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@ DB '%d.%d.%d.%d', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?IsIP@CNetworkAddress@@AAE_NPBD@Z
_TEXT	SEGMENT
_c_szAddr$ = 8						; size = 4
?IsIP@CNetworkAddress@@AAE_NPBD@Z PROC			; CNetworkAddress::IsIP, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 35   : 	if (c_szAddr[0]<'0' || c_szAddr[0]>'9')

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_szAddr$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
  00008	2c 30		 sub	 al, 48			; 00000030H
  0000a	3c 09		 cmp	 al, 9
  0000c	0f 96 c0	 setbe	 al

; 36   : 		return false;
; 37   : 	return true;
; 38   : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?IsIP@CNetworkAddress@@AAE_NPBD@Z ENDP			; CNetworkAddress::IsIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ??BCNetworkAddress@@QBEABUsockaddr_in@@XZ
_TEXT	SEGMENT
??BCNetworkAddress@@QBEABUsockaddr_in@@XZ PROC		; CNetworkAddress::operator sockaddr_in const &, COMDAT
; _this$ = ecx

; 24   : 	return m_sockAddrIn;

  00000	8b c1		 mov	 eax, ecx

; 25   : }

  00002	c3		 ret	 0
??BCNetworkAddress@@QBEABUsockaddr_in@@XZ ENDP		; CNetworkAddress::operator sockaddr_in const &
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?GetIP@CNetworkAddress@@QAEKXZ
_TEXT	SEGMENT
?GetIP@CNetworkAddress@@QAEKXZ PROC			; CNetworkAddress::GetIP, COMDAT
; _this$ = ecx

; 91   : 	return ntohl(m_sockAddrIn.sin_addr.s_addr);

  00000	ff 71 04	 push	 DWORD PTR [ecx+4]
  00003	e8 00 00 00 00	 call	 _ntohl@4

; 92   : }

  00008	c3		 ret	 0
?GetIP@CNetworkAddress@@QAEKXZ ENDP			; CNetworkAddress::GetIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?GetIP@CNetworkAddress@@QAEXPADH@Z
_TEXT	SEGMENT
_szIP$ = 8						; size = 4
_len$ = 12						; size = 4
?GetIP@CNetworkAddress@@QAEXPADH@Z PROC			; CNetworkAddress::GetIP, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 96   : 	BYTE IPs[4];
; 97   : 	*((DWORD*)IPs)=m_sockAddrIn.sin_addr.s_addr;

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b c1		 mov	 eax, ecx
  00008	c1 e8 18	 shr	 eax, 24			; 00000018H

; 98   : 
; 99   : 	_snprintf(szIP, len, "%d.%d.%d.%d", IPs[0], IPs[1], IPs[2], IPs[3]);

  0000b	50		 push	 eax
  0000c	8b c1		 mov	 eax, ecx
  0000e	c1 e8 10	 shr	 eax, 16			; 00000010H
  00011	0f b6 c0	 movzx	 eax, al
  00014	50		 push	 eax
  00015	8b c1		 mov	 eax, ecx
  00017	c1 e8 08	 shr	 eax, 8
  0001a	0f b6 c0	 movzx	 eax, al
  0001d	50		 push	 eax
  0001e	0f b6 c1	 movzx	 eax, cl
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
  00027	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  0002a	ff 75 08	 push	 DWORD PTR _szIP$[ebp]
  0002d	e8 00 00 00 00	 call	 __snprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH

; 100  : }

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?GetIP@CNetworkAddress@@QAEXPADH@Z ENDP			; CNetworkAddress::GetIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?GetSize@CNetworkAddress@@QAEHXZ
_TEXT	SEGMENT
?GetSize@CNetworkAddress@@QAEHXZ PROC			; CNetworkAddress::GetSize, COMDAT
; _this$ = ecx

; 86   : 	return sizeof(m_sockAddrIn);

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H

; 87   : }

  00005	c3		 ret	 0
?GetSize@CNetworkAddress@@QAEHXZ ENDP			; CNetworkAddress::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?GetPort@CNetworkAddress@@QAEHXZ
_TEXT	SEGMENT
?GetPort@CNetworkAddress@@QAEHXZ PROC			; CNetworkAddress::GetPort, COMDAT
; _this$ = ecx

; 104  : 	return ntohs(m_sockAddrIn.sin_port);

  00000	0f b7 41 02	 movzx	 eax, WORD PTR [ecx+2]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 _ntohs@4
  0000a	0f b7 c0	 movzx	 eax, ax

; 105  : }

  0000d	c3		 ret	 0
?GetPort@CNetworkAddress@@QAEHXZ ENDP			; CNetworkAddress::GetPort
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?SetPort@CNetworkAddress@@QAEXH@Z
_TEXT	SEGMENT
_port$ = 8						; size = 4
?SetPort@CNetworkAddress@@QAEXH@Z PROC			; CNetworkAddress::SetPort, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 81   : 	m_sockAddrIn.sin_port = htons(port);

  00004	ff 75 08	 push	 DWORD PTR _port$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 _htons@4
  0000e	66 89 46 02	 mov	 WORD PTR [esi+2], ax
  00012	5e		 pop	 esi

; 82   : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?SetPort@CNetworkAddress@@QAEXH@Z ENDP			; CNetworkAddress::SetPort
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?SetDNS@CNetworkAddress@@QAE_NPBD@Z
_TEXT	SEGMENT
_c_szDNS$ = 8						; size = 4
?SetDNS@CNetworkAddress@@QAE_NPBD@Z PROC		; CNetworkAddress::SetDNS, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 73   : 	HOSTENT* pHostent=gethostbyname(c_szDNS);

  00004	ff 75 08	 push	 DWORD PTR _c_szDNS$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 _gethostbyname@4

; 74   : 	if (!pHostent) return false;

  0000e	85 c0		 test	 eax, eax
  00010	75 07		 jne	 SHORT $LN2@SetDNS
  00012	32 c0		 xor	 al, al
  00014	5e		 pop	 esi

; 77   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@SetDNS:

; 75   : 	memcpy(&m_sockAddrIn.sin_addr, pHostent->h_addr, sizeof(m_sockAddrIn.sin_addr));

  00019	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	8b 00		 mov	 eax, DWORD PTR [eax]
  00020	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 76   : 	return true;

  00023	b0 01		 mov	 al, 1
  00025	5e		 pop	 esi

; 77   : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetDNS@CNetworkAddress@@QAE_NPBD@Z ENDP		; CNetworkAddress::SetDNS
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?SetIP@CNetworkAddress@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szIP$ = 8						; size = 4
?SetIP@CNetworkAddress@@QAEXPBD@Z PROC			; CNetworkAddress::SetIP, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 68   : 	m_sockAddrIn.sin_addr.s_addr=inet_addr(c_szIP);

  00004	ff 75 08	 push	 DWORD PTR _c_szIP$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 _inet_addr@4
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	5e		 pop	 esi

; 69   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetIP@CNetworkAddress@@QAEXPBD@Z ENDP			; CNetworkAddress::SetIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?SetIP@CNetworkAddress@@QAEXK@Z
_TEXT	SEGMENT
_ip$ = 8						; size = 4
?SetIP@CNetworkAddress@@QAEXK@Z PROC			; CNetworkAddress::SetIP, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 63   : 	m_sockAddrIn.sin_addr.s_addr=htonl(ip);

  00004	ff 75 08	 push	 DWORD PTR _ip$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 _htonl@4
  0000e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00011	5e		 pop	 esi

; 64   : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetIP@CNetworkAddress@@QAEXK@Z ENDP			; CNetworkAddress::SetIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?SetLocalIP@CNetworkAddress@@QAEXXZ
_TEXT	SEGMENT
?SetLocalIP@CNetworkAddress@@QAEXXZ PROC		; CNetworkAddress::SetLocalIP, COMDAT
; _this$ = ecx

; 58   : 	SetIP(INADDR_ANY);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetIP@CNetworkAddress@@QAEXK@Z ; CNetworkAddress::SetIP

; 59   : }

  00007	c3		 ret	 0
?SetLocalIP@CNetworkAddress@@QAEXXZ ENDP		; CNetworkAddress::SetLocalIP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?Set@CNetworkAddress@@QAE_NPBDH@Z
_TEXT	SEGMENT
_c_szAddr$ = 8						; size = 4
_port$ = 12						; size = 4
?Set@CNetworkAddress@@QAE_NPBDH@Z PROC			; CNetworkAddress::Set, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 42   : 	if (IsIP(c_szAddr))

  00005	8b 7d 08	 mov	 edi, DWORD PTR _c_szAddr$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?IsIP@CNetworkAddress@@AAE_NPBD@Z ; CNetworkAddress::IsIP
  00010	8b ce		 mov	 ecx, esi
  00012	57		 push	 edi
  00013	84 c0		 test	 al, al
  00015	74 17		 je	 SHORT $LN2@Set

; 43   : 	{
; 44   : 		SetIP(c_szAddr);

  00017	e8 00 00 00 00	 call	 ?SetIP@CNetworkAddress@@QAEXPBD@Z ; CNetworkAddress::SetIP
$LN4@Set:

; 49   : 			return false;
; 50   : 	}
; 51   : 
; 52   : 	SetPort(port);

  0001c	ff 75 0c	 push	 DWORD PTR _port$[ebp]
  0001f	8b ce		 mov	 ecx, esi
  00021	e8 00 00 00 00	 call	 ?SetPort@CNetworkAddress@@QAEXH@Z ; CNetworkAddress::SetPort
  00026	5f		 pop	 edi

; 53   : 	return true;

  00027	b0 01		 mov	 al, 1

; 54   : }

  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
$LN2@Set:

; 45   : 	}
; 46   : 	else
; 47   : 	{
; 48   : 		if (!SetDNS(c_szAddr))

  0002e	e8 00 00 00 00	 call	 ?SetDNS@CNetworkAddress@@QAE_NPBD@Z ; CNetworkAddress::SetDNS
  00033	84 c0		 test	 al, al
  00035	75 e5		 jne	 SHORT $LN4@Set

; 54   : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?Set@CNetworkAddress@@QAE_NPBDH@Z ENDP			; CNetworkAddress::Set
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?Clear@CNetworkAddress@@QAEXXZ
_TEXT	SEGMENT
?Clear@CNetworkAddress@@QAEXXZ PROC			; CNetworkAddress::Clear, COMDAT
; _this$ = ecx

; 28   : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 29   : 	memset(&m_sockAddrIn, 0, sizeof(m_sockAddrIn));
; 30   : 	m_sockAddrIn.sin_family=AF_INET;

  00003	b8 02 00 00 00	 mov	 eax, 2
  00008	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0000b	66 89 01	 mov	 WORD PTR [ecx], ax

; 31   : }

  0000e	c3		 ret	 0
?Clear@CNetworkAddress@@QAEXXZ ENDP			; CNetworkAddress::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ??1CNetworkAddress@@QAE@XZ
_TEXT	SEGMENT
??1CNetworkAddress@@QAE@XZ PROC				; CNetworkAddress::~CNetworkAddress, COMDAT
; _this$ = ecx

; 20   : }

  00000	c2 00 00	 ret	 0
??1CNetworkAddress@@QAE@XZ ENDP				; CNetworkAddress::~CNetworkAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ??0CNetworkAddress@@QAE@XZ
_TEXT	SEGMENT
??0CNetworkAddress@@QAE@XZ PROC				; CNetworkAddress::CNetworkAddress, COMDAT
; _this$ = ecx

; 14   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 15   : 	Clear();

  00003	e8 00 00 00 00	 call	 ?Clear@CNetworkAddress@@QAEXXZ ; CNetworkAddress::Clear

; 16   : }

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi
  0000b	c3		 ret	 0
??0CNetworkAddress@@QAE@XZ ENDP				; CNetworkAddress::CNetworkAddress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetAddress.cpp
;	COMDAT ?GetHostName@CNetworkAddress@@SA_NPADH@Z
_TEXT	SEGMENT
_szName$ = 8						; size = 4
_size$ = 12						; size = 4
?GetHostName@CNetworkAddress@@SA_NPADH@Z PROC		; CNetworkAddress::GetHostName, COMDAT

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8    : 	if (gethostname(szName, size)==SOCKET_ERROR)

  00003	ff 75 0c	 push	 DWORD PTR _size$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _szName$[ebp]
  00009	e8 00 00 00 00	 call	 _gethostname@8
  0000e	83 f8 ff	 cmp	 eax, -1
  00011	0f 95 c0	 setne	 al

; 9    : 		return false;
; 10   : 	return true;
; 11   : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?GetHostName@CNetworkAddress@@SA_NPADH@Z ENDP		; CNetworkAddress::GetHostName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
