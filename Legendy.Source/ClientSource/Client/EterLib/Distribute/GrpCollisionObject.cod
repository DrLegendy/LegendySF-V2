; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0CGraphicCollisionObject@@QAE@XZ		; CGraphicCollisionObject::CGraphicCollisionObject
PUBLIC	??1CGraphicCollisionObject@@UAE@XZ		; CGraphicCollisionObject::~CGraphicCollisionObject
PUBLIC	?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
PUBLIC	?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z ; CGraphicCollisionObject::IntersectBoundBox
PUBLIC	?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ; CGraphicCollisionObject::IntersectCube
PUBLIC	?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectIndexedMesh
PUBLIC	?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectMesh
PUBLIC	?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ; CGraphicCollisionObject::IntersectSphere
PUBLIC	?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ; CGraphicCollisionObject::IntersectCylinder
PUBLIC	?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z ; CGraphicCollisionObject::IntersectSphere
PUBLIC	?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z ; CGraphicCollisionObject::IntersectCylinder
PUBLIC	??_GCGraphicCollisionObject@@UAEPAXI@Z		; CGraphicCollisionObject::`scalar deleting destructor'
PUBLIC	??_7CGraphicCollisionObject@@6B@		; CGraphicCollisionObject::`vftable'
PUBLIC	??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5@ ; `string'
PUBLIC	??_R4CGraphicCollisionObject@@6B@		; CGraphicCollisionObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3f800000
PUBLIC	__real@40800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	??_ECGraphicCollisionObject@@UAEPAXI@Z:PROC	; CGraphicCollisionObject::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A:BYTE ; CGraphicBase::ms_vtPickRayOrig
EXTRN	?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A:BYTE ; CGraphicBase::ms_vtPickRayDir
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A
_BSS	SEGMENT
?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A DB 03000H DUP (?) ; `CGraphicCollisionObject::IntersectIndexedMesh'::`2'::s_v3PositionArray
_BSS	ENDS
;	COMDAT ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA
_BSS	SEGMENT
?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA DD 01H DUP (?) ; `CGraphicCollisionObject::IntersectIndexedMesh'::`2'::s_dwPositionCount
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicCollisionObject@@6B@
rdata$r	SEGMENT
??_R4CGraphicCollisionObject@@6B@ DD 00H		; CGraphicCollisionObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicCollisionObject@@@8
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5@
CONST	SEGMENT
??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5@ DB 'The vertex '
	DB	'count of mesh which is worked collision detection is too much'
	DB	' : %d / %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB
CONST	SEGMENT
?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB DW 00H ; `CGraphicCollisionObject::IntersectCube'::`2'::c_awFillCubeIndices
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	00H
	DW	06H
	DW	00H
	DW	04H
	DW	06H
	DW	00H
	DW	01H
	DW	04H
	DW	01H
	DW	05H
	DW	04H
	DW	01H
	DW	03H
	DW	05H
	DW	03H
	DW	07H
	DW	05H
	DW	03H
	DW	02H
	DW	07H
	DW	02H
	DW	06H
	DW	07H
	DW	04H
	DW	05H
	DW	06H
	DW	05H
	DW	07H
	DW	06H
CONST	ENDS
;	COMDAT ??_7CGraphicCollisionObject@@6B@
CONST	SEGMENT
??_7CGraphicCollisionObject@@6B@ DD FLAT:??_R4CGraphicCollisionObject@@6B@ ; CGraphicCollisionObject::`vftable'
	DD	FLAT:??_ECGraphicCollisionObject@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicCollisionObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicCollisionObject@@UAEPAXI@Z PROC		; CGraphicCollisionObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicCollisionObject@@UAE@XZ ; CGraphicCollisionObject::~CGraphicCollisionObject
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicCollisionObject@@UAEPAXI@Z ENDP		; CGraphicCollisionObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_fHeight$ = 16						; size = 4
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z PROC ; CGraphicCollisionObject::IntersectCylinder, COMDAT
; _this$ = ecx

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  : 	return CGraphicCollisionObject::IntersectCylinder(c_rv3Position, fRadius, fHeight, ms_vtPickRayOrig, ms_vtPickRayDir);

  00003	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fHeight$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  0000d	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	ff 75 08	 push	 DWORD PTR _c_rv3Position$[ebp]
  00028	e8 00 00 00 00	 call	 ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ; CGraphicCollisionObject::IntersectCylinder

; 232  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z ENDP ; CGraphicCollisionObject::IntersectCylinder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z PROC ; CGraphicCollisionObject::IntersectSphere, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	return CGraphicCollisionObject::IntersectSphere(c_rv3Position, fRadius, ms_vtPickRayOrig, ms_vtPickRayDir);

  00003	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  0000d	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  00012	51		 push	 ecx
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	ff 75 08	 push	 DWORD PTR _c_rv3Position$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ; CGraphicCollisionObject::IntersectSphere

; 227  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z ENDP ; CGraphicCollisionObject::IntersectSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z
_TEXT	SEGMENT
_a$1$ = -12						; size = 4
_fzMinus$1$ = -8					; size = 4
tv413 = -4						; size = 4
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_fHeight$ = 16						; size = 4
_c_rv3RayOriginal$ = 20					; size = 4
_c_rv3RayDirection$ = 24				; size = 4
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z PROC ; CGraphicCollisionObject::IntersectCylinder, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00009	8b 4d 14	 mov	 ecx, DWORD PTR _c_rv3RayOriginal$[ebp]
  0000c	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Position$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 197  : {

  0000f	56		 push	 esi

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  00010	8b 75 18	 mov	 esi, DWORD PTR _c_rv3RayDirection$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00013	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00018	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0001d	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  00021	f3 0f 10 59 04	 movss	 xmm3, DWORD PTR [ecx+4]
  00026	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  0002b	f3 0f 10 66 04	 movss	 xmm4, DWORD PTR [esi+4]
  00030	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00034	f3 0f 5c 10	 subss	 xmm2, DWORD PTR [eax]
  00038	f3 0f 11 44 24
	0c		 movss	 DWORD PTR tv413[esp+16], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  0003e	0f 28 e9	 movaps	 xmm5, xmm1
  00041	0f 28 c4	 movaps	 xmm0, xmm4
  00044	f3 0f 59 e9	 mulss	 xmm5, xmm1
  00048	f3 0f 59 c4	 mulss	 xmm0, xmm4

; 201  : 	float b = 2 * (v3RayOriginal.x * c_rv3RayDirection.x + v3RayOriginal.y * c_rv3RayDirection.y);

  0004c	f3 0f 59 e3	 mulss	 xmm4, xmm3
  00050	f3 0f 59 ca	 mulss	 xmm1, xmm2
  00054	f3 0f 58 e8	 addss	 xmm5, xmm0

; 202  : 	float c = v3RayOriginal.x * v3RayOriginal.x + v3RayOriginal.y * v3RayOriginal.y - fRadius*fRadius;

  00058	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]

; 203  : 
; 204  : 	float D = b * b - 4 * a * c;

  0005d	f3 0f 59 db	 mulss	 xmm3, xmm3
  00061	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00065	f3 0f 58 e1	 addss	 xmm4, xmm1
  00069	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0006d	f3 0f 58 da	 addss	 xmm3, xmm2
  00071	f3 0f 11 6c 24
	04		 movss	 DWORD PTR _a$1$[esp+16], xmm5
  00077	f3 0f 58 e4	 addss	 xmm4, xmm4
  0007b	f3 0f 5c d8	 subss	 xmm3, xmm0
  0007f	0f 28 c5	 movaps	 xmm0, xmm5
  00082	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  0008a	0f 28 cc	 movaps	 xmm1, xmm4
  0008d	f3 0f 59 cc	 mulss	 xmm1, xmm4
  00091	f3 0f 59 d8	 mulss	 xmm3, xmm0
  00095	0f 57 c0	 xorps	 xmm0, xmm0
  00098	f3 0f 11 64 24
	08		 movss	 DWORD PTR _fzMinus$1$[esp+16], xmm4
  0009e	f3 0f 5c cb	 subss	 xmm1, xmm3

; 205  : 	if (D > 0)

  000a2	0f 2f c8	 comiss	 xmm1, xmm0
  000a5	0f 86 99 00 00
	00		 jbe	 $LN6@IntersectC

; 206  : 	if (0.0f != a)

  000ab	0f 2e c5	 ucomiss xmm0, xmm5
  000ae	9f		 lahf
  000af	f6 c4 44	 test	 ah, 68			; 00000044H
  000b2	0f 8b 8c 00 00
	00		 jnp	 $LN6@IntersectC
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000b8	0f 5a c1	 cvtps2pd xmm0, xmm1
  000bb	0f 57 c9	 xorps	 xmm1, xmm1
  000be	66 0f 2e c8	 ucomisd xmm1, xmm0
  000c2	77 06		 ja	 SHORT $LN17@IntersectC
  000c4	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000c8	eb 05		 jmp	 SHORT $LN18@IntersectC
$LN17@IntersectC:
  000ca	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN18@IntersectC:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 208  : 		float tPlus = (-b + sqrtf(D)) / (2 * a);

  000cf	f3 0f 10 54 24
	08		 movss	 xmm2, DWORD PTR _fzMinus$1$[esp+16]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000d5	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 208  : 		float tPlus = (-b + sqrtf(D)) / (2 * a);

  000d8	f3 0f 10 64 24
	04		 movss	 xmm4, DWORD PTR _a$1$[esp+16]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000de	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 208  : 		float tPlus = (-b + sqrtf(D)) / (2 * a);

  000e2	f3 0f 58 e4	 addss	 xmm4, xmm4
  000e6	0f 57 c0	 xorps	 xmm0, xmm0
  000e9	0f 28 d9	 movaps	 xmm3, xmm1
  000ec	f3 0f 5c da	 subss	 xmm3, xmm2

; 209  : 		float tMinus = (-b - sqrtf(D)) / (2 * a);

  000f0	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  000f7	f3 0f 5c d1	 subss	 xmm2, xmm1

; 210  : 		float fzPlus = v3RayOriginal.z + tPlus * c_rv3RayDirection.z;
; 211  : 		float fzMinus = v3RayOriginal.z + tMinus * c_rv3RayDirection.z;
; 212  : 
; 213  : 		if (fzPlus > 0.0f && fzPlus <= fHeight)

  000fb	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _fHeight$[ebp]
  00100	f3 0f 5e dc	 divss	 xmm3, xmm4
  00104	f3 0f 5e d4	 divss	 xmm2, xmm4
  00108	f3 0f 59 5e 08	 mulss	 xmm3, DWORD PTR [esi+8]
  0010d	f3 0f 59 56 08	 mulss	 xmm2, DWORD PTR [esi+8]
  00112	f3 0f 58 5c 24
	0c		 addss	 xmm3, DWORD PTR tv413[esp+16]
  00118	f3 0f 58 54 24
	0c		 addss	 xmm2, DWORD PTR tv413[esp+16]
  0011e	0f 2f d8	 comiss	 xmm3, xmm0
  00121	76 05		 jbe	 SHORT $LN4@IntersectC
  00123	0f 2f cb	 comiss	 xmm1, xmm3
  00126	73 13		 jae	 SHORT $LN16@IntersectC
$LN4@IntersectC:

; 214  : 			return true;
; 215  : 		if (fzMinus > 0.0f && fzMinus <= fHeight)

  00128	0f 2f d0	 comiss	 xmm2, xmm0
  0012b	76 05		 jbe	 SHORT $LN5@IntersectC
  0012d	0f 2f ca	 comiss	 xmm1, xmm2
  00130	73 09		 jae	 SHORT $LN16@IntersectC
$LN5@IntersectC:

; 216  : 			return true;
; 217  : 		if (fzMinus * fzPlus < 0.0f)

  00132	f3 0f 59 d3	 mulss	 xmm2, xmm3
  00136	0f 2f c2	 comiss	 xmm0, xmm2
  00139	76 09		 jbe	 SHORT $LN6@IntersectC
$LN16@IntersectC:

; 218  : 			return true;

  0013b	b0 01		 mov	 al, 1

; 222  : }

  0013d	5e		 pop	 esi
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c2 14 00	 ret	 20			; 00000014H
$LN6@IntersectC:

; 219  : 	}
; 220  : 
; 221  : 	return false;

  00144	32 c0		 xor	 al, al

; 222  : }

  00146	5e		 pop	 esi
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 14 00	 ret	 20			; 00000014H
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ENDP ; CGraphicCollisionObject::IntersectCylinder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_c_rv3RayOriginal$ = 16					; size = 4
_c_rv3RayDirection$ = 20				; size = 4
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z PROC ; CGraphicCollisionObject::IntersectSphere, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _c_rv3RayOriginal$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Position$[ebp]
  00009	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  0000d	f3 0f 5c 10	 subss	 xmm2, DWORD PTR [eax]
  00011	f3 0f 10 79 04	 movss	 xmm7, DWORD PTR [ecx+4]
  00016	f3 0f 5c 78 04	 subss	 xmm7, DWORD PTR [eax+4]
  0001b	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  00020	f3 0f 5c 48 08	 subss	 xmm1, DWORD PTR [eax+8]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00025	8b 45 14	 mov	 eax, DWORD PTR _c_rv3RayDirection$[ebp]
  00028	f3 0f 10 60 04	 movss	 xmm4, DWORD PTR [eax+4]
  0002d	f3 0f 10 30	 movss	 xmm6, DWORD PTR [eax]
  00031	0f 28 ec	 movaps	 xmm5, xmm4
  00034	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
  00039	0f 28 c6	 movaps	 xmm0, xmm6
  0003c	f3 0f 59 ef	 mulss	 xmm5, xmm7
  00040	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00044	f3 0f 59 ff	 mulss	 xmm7, xmm7
  00048	f3 0f 58 e8	 addss	 xmm5, xmm0
  0004c	f3 0f 59 f6	 mulss	 xmm6, xmm6
  00050	0f 28 c3	 movaps	 xmm0, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 188  : 	float D = b * b - 4 * a * c;

  00053	f3 0f 59 d2	 mulss	 xmm2, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00057	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0005b	f3 0f 59 e4	 mulss	 xmm4, xmm4
  0005f	f3 0f 58 fa	 addss	 xmm7, xmm2
  00063	f3 0f 58 e8	 addss	 xmm5, xmm0
  00067	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 186  : 	float c = D3DXVec3Dot(&v3RayOriginal, &v3RayOriginal) - fRadius * fRadius;

  0006b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00070	f3 0f 58 f4	 addss	 xmm6, xmm4
  00074	f3 0f 59 db	 mulss	 xmm3, xmm3
  00078	f3 0f 58 f9	 addss	 xmm7, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 186  : 	float c = D3DXVec3Dot(&v3RayOriginal, &v3RayOriginal) - fRadius * fRadius;

  0007c	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00080	f3 0f 58 f3	 addss	 xmm6, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  00084	f3 0f 58 ed	 addss	 xmm5, xmm5

; 186  : 	float c = D3DXVec3Dot(&v3RayOriginal, &v3RayOriginal) - fRadius * fRadius;

  00088	f3 0f 5c f8	 subss	 xmm7, xmm0

; 188  : 	float D = b * b - 4 * a * c;

  0008c	f3 0f 59 35 00
	00 00 00	 mulss	 xmm6, DWORD PTR __real@40800000
  00094	f3 0f 59 ed	 mulss	 xmm5, xmm5
  00098	f3 0f 59 fe	 mulss	 xmm7, xmm6
  0009c	f3 0f 5c ef	 subss	 xmm5, xmm7

; 189  : 
; 190  : 	if (D >= 0)

  000a0	0f 2f 2d 00 00
	00 00		 comiss	 xmm5, DWORD PTR __real@00000000
  000a7	0f 93 c0	 setae	 al

; 191  : 		return true;
; 192  : 
; 193  : 	return false;
; 194  : }

  000aa	5d		 pop	 ebp
  000ab	c2 10 00	 ret	 16			; 00000010H
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ENDP ; CGraphicCollisionObject::IntersectSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z
_TEXT	SEGMENT
_this$1$ = -64						; size = 4
_pu$GSCopy$1$ = -60					; size = 4
_pv$GSCopy$1$ = -56					; size = 4
_pt$GSCopy$1$ = -52					; size = 4
_c_pmatWorld$GSCopy$1$ = -48				; size = 4
_dwStep$GSCopy$1$ = -44					; size = 4
_v3Vertex$ = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_c_pmatWorld$ = 8					; size = 4
_vertices$ = 12						; size = 4
_dwStep$ = 16						; size = 4
_dwvtxCount$ = 20					; size = 4
_RayOriginal$ = 24					; size = 4
_RayDirection$ = 28					; size = 4
_pu$ = 32						; size = 4
_pv$ = 36						; size = 4
_pt$ = 40						; size = 4
?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z PROC ; CGraphicCollisionObject::IntersectMesh, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _c_pmatWorld$[ebp]
  00013	89 4d c0	 mov	 DWORD PTR _this$1$[ebp], ecx
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _dwStep$[ebp]
  00019	53		 push	 ebx

; 96   : 	char * pcurVtx = (char *) vertices;
; 97   : 
; 98   : 	D3DXVECTOR3 v3Vertex[3];
; 99   : 
; 100  : 	for (DWORD i = 0; i < dwvtxCount; i += 3)

  0001a	8b 5d 14	 mov	 ebx, DWORD PTR _dwvtxCount$[ebp]
  0001d	89 4d d4	 mov	 DWORD PTR _dwStep$GSCopy$1$[ebp], ecx
  00020	8b 4d 20	 mov	 ecx, DWORD PTR _pu$[ebp]
  00023	56		 push	 esi
  00024	8b 75 0c	 mov	 esi, DWORD PTR _vertices$[ebp]
  00027	89 4d c4	 mov	 DWORD PTR _pu$GSCopy$1$[ebp], ecx
  0002a	8b 4d 24	 mov	 ecx, DWORD PTR _pv$[ebp]
  0002d	57		 push	 edi
  0002e	89 4d c8	 mov	 DWORD PTR _pv$GSCopy$1$[ebp], ecx
  00031	33 ff		 xor	 edi, edi
  00033	8b 4d 28	 mov	 ecx, DWORD PTR _pt$[ebp]
  00036	89 45 d0	 mov	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp], eax
  00039	89 4d cc	 mov	 DWORD PTR _pt$GSCopy$1$[ebp], ecx
  0003c	85 db		 test	 ebx, ebx
  0003e	74 5f		 je	 SHORT $LN3@IntersectM
$LL4@IntersectM:

; 101  : 	{
; 102  : 		D3DXVec3TransformCoord(&v3Vertex[0], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  00040	50		 push	 eax
  00041	56		 push	 esi
  00042	8d 45 d8	 lea	 eax, DWORD PTR _v3Vertex$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 103  : 		pcurVtx += dwStep;
; 104  : 
; 105  : 		D3DXVec3TransformCoord(&v3Vertex[1], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  0004b	ff 75 d0	 push	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  0004e	03 75 d4	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  00051	8d 45 e4	 lea	 eax, DWORD PTR _v3Vertex$[ebp+12]
  00054	56		 push	 esi
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 106  : 		pcurVtx += dwStep;
; 107  : 
; 108  : 		D3DXVec3TransformCoord(&v3Vertex[2], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  0005b	ff 75 d0	 push	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  0005e	03 75 d4	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  00061	8d 45 f0	 lea	 eax, DWORD PTR _v3Vertex$[ebp+24]
  00064	56		 push	 esi
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 109  : 		pcurVtx += dwStep;
; 110  : 
; 111  : 		if (IntersectTriangle(RayOriginal, RayDirection,

  0006b	ff 75 cc	 push	 DWORD PTR _pt$GSCopy$1$[ebp]
  0006e	8b 4d c0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00071	8d 45 f0	 lea	 eax, DWORD PTR _v3Vertex$[ebp+24]
  00074	ff 75 c8	 push	 DWORD PTR _pv$GSCopy$1$[ebp]
  00077	03 75 d4	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  0007a	ff 75 c4	 push	 DWORD PTR _pu$GSCopy$1$[ebp]
  0007d	50		 push	 eax
  0007e	8d 45 e4	 lea	 eax, DWORD PTR _v3Vertex$[ebp+12]
  00081	50		 push	 eax
  00082	8d 45 d8	 lea	 eax, DWORD PTR _v3Vertex$[ebp]
  00085	50		 push	 eax
  00086	ff 75 1c	 push	 DWORD PTR _RayDirection$[ebp]
  00089	ff 75 18	 push	 DWORD PTR _RayOriginal$[ebp]
  0008c	e8 00 00 00 00	 call	 ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
  00091	84 c0		 test	 al, al
  00093	75 1f		 jne	 SHORT $LN13@IntersectM

; 96   : 	char * pcurVtx = (char *) vertices;
; 97   : 
; 98   : 	D3DXVECTOR3 v3Vertex[3];
; 99   : 
; 100  : 	for (DWORD i = 0; i < dwvtxCount; i += 3)

  00095	8b 45 d0	 mov	 eax, DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  00098	83 c7 03	 add	 edi, 3
  0009b	3b fb		 cmp	 edi, ebx
  0009d	72 a1		 jb	 SHORT $LL4@IntersectM
$LN3@IntersectM:
  0009f	5f		 pop	 edi

; 112  : 							  v3Vertex[0], v3Vertex[1], v3Vertex[2],
; 113  : 							  pu, pv, pt))
; 114  : 		{
; 115  : 			return true;
; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	return false;
; 120  : }

  000a0	5e		 pop	 esi
  000a1	32 c0		 xor	 al, al
  000a3	5b		 pop	 ebx
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a7	33 cd		 xor	 ecx, ebp
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 24 00	 ret	 36			; 00000024H
$LN13@IntersectM:
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b7	b0 01		 mov	 al, 1
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	33 cd		 xor	 ecx, ebp
  000bd	5b		 pop	 ebx
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 24 00	 ret	 36			; 00000024H
?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z ENDP ; CGraphicCollisionObject::IntersectMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_c_pmatWorld$ = 8					; size = 4
_vertices$ = 12						; size = 4
_step$ = 16						; size = 4
_vtxCount$ = 20						; size = 4
_indices$ = 24						; size = 4
_idxCount$ = 28						; size = 4
_RayOriginal$ = 32					; size = 4
_RayDirection$ = 36					; size = 4
_pu$ = 40						; size = 4
_pv$ = 44						; size = 4
_pt$ = 48						; size = 4
?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z PROC ; CGraphicCollisionObject::IntersectIndexedMesh, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 52   : 	static D3DXVECTOR3 s_v3PositionArray[c_iLimitVertexCount];
; 53   : 	static DWORD s_dwPositionCount;
; 54   : 
; 55   : 	if (vtxCount > c_iLimitVertexCount)

  00005	8b 75 14	 mov	 esi, DWORD PTR _vtxCount$[ebp]
  00008	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000b	81 fe 00 04 00
	00		 cmp	 esi, 1024		; 00000400H
  00011	7e 1c		 jle	 SHORT $LN7@IntersectI

; 56   : 	{
; 57   : 		Tracef("The vertex count of mesh which is worked collision detection is too much : %d / %d", vtxCount, c_iLimitVertexCount);

  00013	68 00 04 00 00	 push	 1024			; 00000400H
  00018	56		 push	 esi
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5@
  0001e	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 58   : 		return false;

  00026	32 c0		 xor	 al, al
  00028	5e		 pop	 esi

; 92   : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 2c 00	 ret	 44			; 0000002cH
$LN7@IntersectI:
  0002f	53		 push	 ebx

; 59   : 	}
; 60   : 
; 61   : 	s_dwPositionCount = 0;

  00030	33 c0		 xor	 eax, eax
  00032	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA, eax
  00037	57		 push	 edi

; 62   : 
; 63   : 	char* pcurVtx = (char*)vertices;

  00038	8b 7d 0c	 mov	 edi, DWORD PTR _vertices$[ebp]

; 64   : 
; 65   : 	while (vtxCount--)

  0003b	85 f6		 test	 esi, esi
  0003d	74 2e		 je	 SHORT $LN34@IntersectI
  0003f	8b 5d 10	 mov	 ebx, DWORD PTR _step$[ebp]
$LL3@IntersectI:

; 66   : 	{
; 67   : 		float* pos = (float*)pcurVtx;
; 68   : 
; 69   : 		D3DXVec3TransformCoord(&s_v3PositionArray[s_dwPositionCount++], (D3DXVECTOR3*)pos, c_pmatWorld);

  00042	ff 75 08	 push	 DWORD PTR _c_pmatWorld$[ebp]
  00045	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00048	40		 inc	 eax
  00049	8d 0c 8d 00 00
	00 00		 lea	 ecx, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[ecx*4]
  00050	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA, eax
  00055	57		 push	 edi
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 70   : 
; 71   : 		pcurVtx += step;

  0005c	03 fb		 add	 edi, ebx
  0005e	83 ee 01	 sub	 esi, 1
  00061	74 07		 je	 SHORT $LN35@IntersectI

; 64   : 
; 65   : 	while (vtxCount--)

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA
  00068	eb d8		 jmp	 SHORT $LL3@IntersectI
$LN35@IntersectI:
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN34@IntersectI:

; 75   : 
; 76   : 	int triCount = idxCount / 3;

  0006d	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  00072	f7 6d 1c	 imul	 DWORD PTR _idxCount$[ebp]
  00075	8b fa		 mov	 edi, edx
  00077	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  0007a	03 fa		 add	 edi, edx

; 77   : 	while (triCount--)

  0007c	74 56		 je	 SHORT $LN23@IntersectI

; 72   : 	}
; 73   : 
; 74   : 	WORD* pcurIdx = (WORD*)indices;

  0007e	8b 75 18	 mov	 esi, DWORD PTR _indices$[ebp]
  00081	8b 5d 30	 mov	 ebx, DWORD PTR _pt$[ebp]
  00084	83 c6 02	 add	 esi, 2
$LL5@IntersectI:

; 78   : 	{
; 79   : 		if (IntersectTriangle(RayOriginal, RayDirection,

  00087	0f b7 46 02	 movzx	 eax, WORD PTR [esi+2]
  0008b	4f		 dec	 edi
  0008c	53		 push	 ebx
  0008d	ff 75 2c	 push	 DWORD PTR _pv$[ebp]
  00090	ff 75 28	 push	 DWORD PTR _pu$[ebp]
  00093	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00096	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  0009d	50		 push	 eax
  0009e	0f b7 06	 movzx	 eax, WORD PTR [esi]
  000a1	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000a4	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  000ab	50		 push	 eax
  000ac	0f b7 46 fe	 movzx	 eax, WORD PTR [esi-2]
  000b0	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000b3	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  000ba	50		 push	 eax
  000bb	ff 75 24	 push	 DWORD PTR _RayDirection$[ebp]
  000be	ff 75 20	 push	 DWORD PTR _RayOriginal$[ebp]
  000c1	e8 00 00 00 00	 call	 ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
  000c6	84 c0		 test	 al, al
  000c8	75 15		 jne	 SHORT $LN18@IntersectI

; 86   : 		}
; 87   : 
; 88   : 		pcurIdx += 3;

  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000cd	83 c6 06	 add	 esi, 6
  000d0	85 ff		 test	 edi, edi
  000d2	75 b3		 jne	 SHORT $LL5@IntersectI
$LN23@IntersectI:
  000d4	5f		 pop	 edi
  000d5	5b		 pop	 ebx

; 89   : 	}
; 90   : 
; 91   : 	return false;

  000d6	32 c0		 xor	 al, al
  000d8	5e		 pop	 esi

; 92   : }

  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 2c 00	 ret	 44			; 0000002cH
$LN18@IntersectI:
  000df	5f		 pop	 edi
  000e0	5b		 pop	 ebx

; 80   : 							  s_v3PositionArray[pcurIdx[0]],
; 81   : 							  s_v3PositionArray[pcurIdx[1]],
; 82   : 							  s_v3PositionArray[pcurIdx[2]],
; 83   : 							  pu, pv, pt))
; 84   : 		{
; 85   : 			return true;

  000e1	b0 01		 mov	 al, 1
  000e3	5e		 pop	 esi

; 92   : }

  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 2c 00	 ret	 44			; 0000002cH
?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ENDP ; CGraphicCollisionObject::IntersectIndexedMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z
_TEXT	SEGMENT
$T1 = -112						; size = 12
$T2 = -112						; size = 12
$T3 = -112						; size = 12
$T4 = -112						; size = 12
$T5 = -112						; size = 12
$T6 = -112						; size = 12
$T7 = -112						; size = 12
$T8 = -112						; size = 12
_posVertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
_c_pmatWorld$ = 8					; size = 4
_sx$ = 12						; size = 4
_sy$ = 16						; size = 4
_sz$ = 20						; size = 4
_ex$ = 24						; size = 4
_ey$ = 28						; size = 4
_ez$ = 32						; size = 4
_RayOriginal$ = 36					; size = 4
_RayDirection$ = 40					; size = 4
_pu$ = 44						; size = 4
_pv$ = 48						; size = 4
_pt$ = 52						; size = 4
?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z PROC ; CGraphicCollisionObject::IntersectCube, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR _sx$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00015	f3 0f 10 5d 10	 movss	 xmm3, DWORD PTR _sy$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  0001a	0f 28 c4	 movaps	 xmm0, xmm4
  0001d	f3 0f 10 6d 18	 movss	 xmm5, DWORD PTR _ex$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00022	f3 0f 10 4d 14	 movss	 xmm1, DWORD PTR _sz$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 11   : {

  00027	8b 55 30	 mov	 edx, DWORD PTR _pv$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0002a	f3 0f 10 55 1c	 movss	 xmm2, DWORD PTR _ey$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 11   : {

  0002f	53		 push	 ebx
  00030	56		 push	 esi
  00031	8b 75 2c	 mov	 esi, DWORD PTR _pu$[ebp]
  00034	8b d9		 mov	 ebx, ecx
  00036	8b 4d 34	 mov	 ecx, DWORD PTR _pt$[ebp]

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  00039	0f 14 c3	 unpcklps xmm0, xmm3
  0003c	57		 push	 edi
  0003d	66 0f d6 45 9c	 movq	 QWORD PTR _posVertices$[ebp], xmm0

; 15   : 	posVertices[1] = TPosition(ex, sy, sz);

  00042	0f 28 c5	 movaps	 xmm0, xmm5
  00045	8b 7d 08	 mov	 edi, DWORD PTR _c_pmatWorld$[ebp]

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  00048	51		 push	 ecx
  00049	0f 14 c3	 unpcklps xmm0, xmm3
  0004c	8b cb		 mov	 ecx, ebx
  0004e	52		 push	 edx
  0004f	66 0f d6 45 a8	 movq	 QWORD PTR _posVertices$[ebp+12], xmm0
  00054	0f 28 c4	 movaps	 xmm0, xmm4
  00057	56		 push	 esi
  00058	ff 75 28	 push	 DWORD PTR _RayDirection$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0005b	f3 0f 11 4d 98	 movss	 DWORD PTR $T8[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  00060	8b 45 98	 mov	 eax, DWORD PTR $T8[ebp+8]

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  00063	ff 75 24	 push	 DWORD PTR _RayOriginal$[ebp]
  00066	89 45 a4	 mov	 DWORD PTR _posVertices$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00069	f3 0f 11 4d 98	 movss	 DWORD PTR $T7[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 15   : 	posVertices[1] = TPosition(ex, sy, sz);

  0006e	8b 45 98	 mov	 eax, DWORD PTR $T7[ebp+8]
  00071	89 45 b0	 mov	 DWORD PTR _posVertices$[ebp+20], eax

; 16   : 	posVertices[2] = TPosition(sx, ey, sz);

  00074	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00077	f3 0f 11 4d 98	 movss	 DWORD PTR $T6[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 16   : 	posVertices[2] = TPosition(sx, ey, sz);

  0007c	8b 45 98	 mov	 eax, DWORD PTR $T6[ebp+8]
  0007f	89 45 bc	 mov	 DWORD PTR _posVertices$[ebp+32], eax
  00082	66 0f d6 45 b4	 movq	 QWORD PTR _posVertices$[ebp+24], xmm0

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  00087	0f 28 c5	 movaps	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0008a	f3 0f 11 4d 98	 movss	 DWORD PTR $T5[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  0008f	8b 45 98	 mov	 eax, DWORD PTR $T5[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00092	f3 0f 10 4d 20	 movss	 xmm1, DWORD PTR _ez$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  00097	89 45 c8	 mov	 DWORD PTR _posVertices$[ebp+44], eax
  0009a	0f 14 c2	 unpcklps xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0009d	f3 0f 11 4d 98	 movss	 DWORD PTR $T4[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 18   : 	posVertices[4] = TPosition(sx, sy, ez);

  000a2	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp+8]
  000a5	89 45 d4	 mov	 DWORD PTR _posVertices$[ebp+56], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  000a8	6a 24		 push	 36			; 00000024H
  000aa	66 0f d6 45 c0	 movq	 QWORD PTR _posVertices$[ebp+36], xmm0
  000af	0f 28 c4	 movaps	 xmm0, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000b2	f3 0f 11 4d 98	 movss	 DWORD PTR $T3[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 19   : 	posVertices[5] = TPosition(ex, sy, ez);

  000b7	8b 45 98	 mov	 eax, DWORD PTR $T3[ebp+8]
  000ba	89 45 e0	 mov	 DWORD PTR _posVertices$[ebp+68], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  000bd	68 00 00 00 00	 push	 OFFSET ?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c2	f3 0f 11 4d 98	 movss	 DWORD PTR $T2[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 20   : 	posVertices[6] = TPosition(sx, ey, ez);

  000c7	8b 45 98	 mov	 eax, DWORD PTR $T2[ebp+8]
  000ca	0f 14 c3	 unpcklps xmm0, xmm3
  000cd	89 45 ec	 mov	 DWORD PTR _posVertices$[ebp+80], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  000d0	6a 08		 push	 8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000d2	f3 0f 11 4d 98	 movss	 DWORD PTR $T1[ebp+8], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 21   : 	posVertices[7] = TPosition(ex, ey, ez);

  000d7	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp+8]
  000da	66 0f d6 45 cc	 movq	 QWORD PTR _posVertices$[ebp+48], xmm0
  000df	0f 28 c5	 movaps	 xmm0, xmm5
  000e2	89 45 f8	 mov	 DWORD PTR _posVertices$[ebp+92], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = {
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(

  000e5	8d 45 9c	 lea	 eax, DWORD PTR _posVertices$[ebp]
  000e8	6a 0c		 push	 12			; 0000000cH
  000ea	50		 push	 eax
  000eb	0f 14 c3	 unpcklps xmm0, xmm3
  000ee	0f 14 e2	 unpcklps xmm4, xmm2
  000f1	0f 14 ea	 unpcklps xmm5, xmm2
  000f4	57		 push	 edi
  000f5	66 0f d6 45 d8	 movq	 QWORD PTR _posVertices$[ebp+60], xmm0
  000fa	66 0f d6 65 e4	 movq	 QWORD PTR _posVertices$[ebp+72], xmm4
  000ff	66 0f d6 6d f0	 movq	 QWORD PTR _posVertices$[ebp+84], xmm5
  00104	e8 00 00 00 00	 call	 ?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectIndexedMesh

; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);
; 45   : }

  00109	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	33 cd		 xor	 ecx, ebp
  00110	5b		 pop	 ebx
  00111	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 30 00	 ret	 48			; 00000030H
?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ENDP ; CGraphicCollisionObject::IntersectCube
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z
_TEXT	SEGMENT
_c_pmatWorld$ = 8					; size = 4
_c_rboundBox$ = 12					; size = 4
_pu$ = 16						; size = 4
_pv$ = 20						; size = 4
_pt$ = 24						; size = 4
?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z PROC ; CGraphicCollisionObject::IntersectBoundBox, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6    : 	return IntersectCube(c_pmatWorld, c_rboundBox.sx, c_rboundBox.sy, c_rboundBox.sz, c_rboundBox.ex, c_rboundBox.ey, c_rboundBox.ez, ms_vtPickRayOrig, ms_vtPickRayDir, pu, pv, pt);

  00003	ff 75 18	 push	 DWORD PTR _pt$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _c_rboundBox$[ebp]
  00009	ff 75 14	 push	 DWORD PTR _pv$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR _pu$[ebp]
  0000f	0f 10 40 08	 movups	 xmm0, XMMWORD PTR [eax+8]
  00013	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  00018	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  0001d	83 ec 18	 sub	 esp, 24			; 00000018H
  00020	0f 11 44 24 08	 movups	 XMMWORD PTR [esp+8], xmm0
  00025	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0002a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00030	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	ff 75 08	 push	 DWORD PTR _c_pmatWorld$[ebp]
  0003c	e8 00 00 00 00	 call	 ?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ; CGraphicCollisionObject::IntersectCube

; 7    : }

  00041	5d		 pop	 ebp
  00042	c2 14 00	 ret	 20			; 00000014H
?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z ENDP ; CGraphicCollisionObject::IntersectBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z
_TEXT	SEGMENT
tv1234 = -20						; size = 4
tv1236 = -16						; size = 4
tv1250 = -12						; size = 4
tv1266 = -8						; size = 4
tv1268 = -4						; size = 4
_c_orig$ = 8						; size = 4
tv1249 = 12						; size = 4
_c_dir$ = 12						; size = 4
tv1259 = 16						; size = 4
tv1247 = 16						; size = 4
_c_v0$ = 16						; size = 4
_v$1$ = 20						; size = 4
tv1238 = 20						; size = 4
_c_v1$ = 20						; size = 4
tv1233 = 24						; size = 4
_c_v2$ = 24						; size = 4
_pu$ = 28						; size = 4
_pv$ = 32						; size = 4
_pt$ = 36						; size = 4
?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z PROC ; CGraphicCollisionObject::IntersectTriangle, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00006	8b 45 14	 mov	 eax, DWORD PTR _c_v1$[ebp]
  00009	8b 55 10	 mov	 edx, DWORD PTR _c_v0$[ebp]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _c_dir$[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0000f	f3 0f 10 28	 movss	 xmm5, DWORD PTR [eax]
  00013	f3 0f 10 70 04	 movss	 xmm6, DWORD PTR [eax+4]
  00018	f3 0f 10 50 08	 movss	 xmm2, DWORD PTR [eax+8]
  0001d	8b 45 18	 mov	 eax, DWORD PTR _c_v2$[ebp]
  00020	f3 0f 10 4a 08	 movss	 xmm1, DWORD PTR [edx+8]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00025	f3 0f 10 61 04	 movss	 xmm4, DWORD PTR [ecx+4]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0002a	f3 0f 5c d1	 subss	 xmm2, xmm1
  0002e	f3 0f 5c 2a	 subss	 xmm5, DWORD PTR [edx]
  00032	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00037	0f 28 c4	 movaps	 xmm0, xmm4

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0003a	f3 0f 10 78 04	 movss	 xmm7, DWORD PTR [eax+4]
  0003f	f3 0f 5c d9	 subss	 xmm3, xmm1
  00043	f3 0f 5c 7a 04	 subss	 xmm7, DWORD PTR [edx+4]
  00048	f3 0f 5c 72 04	 subss	 xmm6, DWORD PTR [edx+4]
  0004d	f3 0f 11 6d fc	 movss	 DWORD PTR tv1268[ebp], xmm5
  00052	f3 0f 11 55 14	 movss	 DWORD PTR tv1238[ebp], xmm2
  00057	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  0005b	f3 0f 5c 12	 subss	 xmm2, DWORD PTR [edx]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0005f	f3 0f 59 c3	 mulss	 xmm0, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 136  :     FLOAT det = D3DXVec3Dot(&edge1, &pvec);

  00063	8b 45 08	 mov	 eax, DWORD PTR _c_orig$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00066	f3 0f 11 5d ec	 movss	 DWORD PTR tv1234[ebp], xmm3
  0006b	f3 0f 11 75 f8	 movss	 DWORD PTR tv1266[ebp], xmm6

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00070	f3 0f 11 45 10	 movss	 DWORD PTR tv1247[ebp], xmm0
  00075	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0007a	f3 0f 10 6d 10	 movss	 xmm5, DWORD PTR tv1247[ebp]
  0007f	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00083	f3 0f 11 55 18	 movss	 DWORD PTR tv1233[ebp], xmm2
  00088	f3 0f 11 7d f0	 movss	 DWORD PTR tv1236[ebp], xmm7

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0008d	f3 0f 5c e8	 subss	 xmm5, xmm0

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00091	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00095	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00099	f3 0f 10 19	 movss	 xmm3, DWORD PTR [ecx]
  0009d	f3 0f 59 df	 mulss	 xmm3, xmm7
  000a1	f3 0f 11 6d 10	 movss	 DWORD PTR tv1247[ebp], xmm5
  000a6	f3 0f 10 69 08	 movss	 xmm5, DWORD PTR [ecx+8]
  000ab	f3 0f 59 ea	 mulss	 xmm5, xmm2
  000af	f3 0f 5c e8	 subss	 xmm5, xmm0
  000b3	0f 28 c4	 movaps	 xmm0, xmm4
  000b6	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000ba	f3 0f 5c d8	 subss	 xmm3, xmm0
  000be	f3 0f 11 6d 0c	 movss	 DWORD PTR tv1249[ebp], xmm5

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000c3	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR tv1247[ebp]

; 1281 :     *pOut = v;

  000c8	0f 28 d5	 movaps	 xmm2, xmm5

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000cb	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR tv1268[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 136  :     FLOAT det = D3DXVec3Dot(&edge1, &pvec);

  000d0	f3 0f 10 28	 movss	 xmm5, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1281 :     *pOut = v;

  000d4	f3 0f 59 d6	 mulss	 xmm2, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 136  :     FLOAT det = D3DXVec3Dot(&edge1, &pvec);

  000d8	f3 0f 10 70 08	 movss	 xmm6, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000dd	f3 0f 11 5d f4	 movss	 DWORD PTR tv1250[ebp], xmm3

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000e2	f3 0f 58 d0	 addss	 xmm2, xmm0
  000e6	0f 28 c3	 movaps	 xmm0, xmm3
  000e9	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR tv1238[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 136  :     FLOAT det = D3DXVec3Dot(&edge1, &pvec);

  000ee	f3 0f 10 58 04	 movss	 xmm3, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000f3	f3 0f 58 d0	 addss	 xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 139  :     if (det > 0)

  000f7	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@00000000
  000fe	76 0f		 jbe	 SHORT $LN2@IntersectT
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00100	f3 0f 5c 2a	 subss	 xmm5, DWORD PTR [edx]
  00104	f3 0f 5c 5a 04	 subss	 xmm3, DWORD PTR [edx+4]
  00109	f3 0f 5c f1	 subss	 xmm6, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 142  :     }

  0010d	eb 25		 jmp	 SHORT $LN3@IntersectT
$LN2@IntersectT:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0010f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00113	f3 0f 5c ce	 subss	 xmm1, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 146  : 		det = -det;

  00117	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0011e	f3 0f 5c c5	 subss	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 146  : 		det = -det;

  00122	0f 28 f1	 movaps	 xmm6, xmm1
  00125	0f 28 e8	 movaps	 xmm5, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00128	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0012d	f3 0f 5c c3	 subss	 xmm0, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 146  : 		det = -det;

  00131	0f 28 d8	 movaps	 xmm3, xmm0
$LN3@IntersectT:

; 147  :     }
; 148  : 
; 149  :     if (det < 0.0001f)

  00134	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@38d1b717
  0013c	0f 2f c2	 comiss	 xmm0, xmm2
  0013f	0f 87 3f 01 00
	00		 ja	 $LN6@IntersectT
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00145	0f 28 c5	 movaps	 xmm0, xmm5
  00148	0f 28 cb	 movaps	 xmm1, xmm3
  0014b	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR tv1247[ebp]
  00150	f3 0f 59 4d 0c	 mulss	 xmm1, DWORD PTR tv1249[ebp]
  00155	f3 0f 58 c8	 addss	 xmm1, xmm0
  00159	0f 28 c6	 movaps	 xmm0, xmm6
  0015c	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR tv1250[ebp]
  00161	f3 0f 58 c8	 addss	 xmm1, xmm0
  00165	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 154  :     if (u < 0.0f || u > det)

  00168	0f 2f c1	 comiss	 xmm0, xmm1
  0016b	0f 87 13 01 00
	00		 ja	 $LN6@IntersectT
  00171	0f 2f ca	 comiss	 xmm1, xmm2
  00174	0f 87 0a 01 00
	00		 ja	 $LN6@IntersectT
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0017a	0f 28 c3	 movaps	 xmm0, xmm3

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  0017d	f3 0f 59 5d fc	 mulss	 xmm3, DWORD PTR tv1268[ebp]
  00182	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR tv1238[ebp]
  00187	f3 0f 11 45 10	 movss	 DWORD PTR tv1259[ebp], xmm0
  0018c	0f 28 c6	 movaps	 xmm0, xmm6
  0018f	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR tv1266[ebp]
  00194	f3 0f 10 7d 10	 movss	 xmm7, DWORD PTR tv1259[ebp]
  00199	f3 0f 59 75 fc	 mulss	 xmm6, DWORD PTR tv1268[ebp]
  0019e	f3 0f 5c f8	 subss	 xmm7, xmm0
  001a2	0f 28 c5	 movaps	 xmm0, xmm5
  001a5	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR tv1238[ebp]
  001aa	f3 0f 59 6d f8	 mulss	 xmm5, DWORD PTR tv1266[ebp]
  001af	f3 0f 5c f0	 subss	 xmm6, xmm0
  001b3	f3 0f 11 7d 10	 movss	 DWORD PTR tv1259[ebp], xmm7

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001b8	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  001bc	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  001c0	f3 0f 5c eb	 subss	 xmm5, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 161  :     if (v < 0.0f || u + v > det)

  001c4	f3 0f 10 7d f0	 movss	 xmm7, DWORD PTR tv1236[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001c9	f3 0f 59 e6	 mulss	 xmm4, xmm6
  001cd	f3 0f 58 e0	 addss	 xmm4, xmm0
  001d1	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  001d6	f3 0f 59 c5	 mulss	 xmm0, xmm5
  001da	f3 0f 58 e0	 addss	 xmm4, xmm0
  001de	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 161  :     if (v < 0.0f || u + v > det)

  001e1	0f 2f c4	 comiss	 xmm0, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001e4	f3 0f 11 65 14	 movss	 DWORD PTR _v$1$[ebp], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 161  :     if (v < 0.0f || u + v > det)

  001e9	0f 87 95 00 00
	00		 ja	 $LN6@IntersectT
  001ef	0f 28 c4	 movaps	 xmm0, xmm4
  001f2	f3 0f 58 c1	 addss	 xmm0, xmm1
  001f6	0f 2f c2	 comiss	 xmm0, xmm2
  001f9	0f 87 85 00 00
	00		 ja	 $LN6@IntersectT

; 162  : 		return false;
; 163  : 
; 164  :     t = D3DXVec3Dot(&edge2, &qvec);
; 165  :     FLOAT fInvDet = 1.0f / det;

  001ff	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00207	f3 0f 5e e2	 divss	 xmm4, xmm2

; 173  : 	*pu = spot.x;

  0020b	8b 45 1c	 mov	 eax, DWORD PTR _pu$[ebp]
  0020e	0f 28 d4	 movaps	 xmm2, xmm4
  00211	0f 28 dc	 movaps	 xmm3, xmm4
  00214	f3 0f 59 5d 14	 mulss	 xmm3, DWORD PTR _v$1$[ebp]
  00219	f3 0f 59 d1	 mulss	 xmm2, xmm1
  0021d	0f 28 cb	 movaps	 xmm1, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00220	f3 0f 59 df	 mulss	 xmm3, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 168  :     v *= fInvDet;

  00224	f3 0f 59 4d 18	 mulss	 xmm1, DWORD PTR tv1233[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00229	0f 28 c2	 movaps	 xmm0, xmm2
  0022c	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR tv1268[ebp]

; 180  :     x = fx;

  00231	f3 0f 59 55 f8	 mulss	 xmm2, DWORD PTR tv1266[ebp]

; 181  :     y = fy;

  00236	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 174  : 	*pv = spot.y;

  0023a	f3 0f 59 fe	 mulss	 xmm7, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0023e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR tv1233[ebp]

; 180  :     x = fx;

  00243	f3 0f 58 da	 addss	 xmm3, xmm2

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00247	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR tv1259[ebp]

; 204  :     x += v.x;

  0024c	f3 0f 58 0a	 addss	 xmm1, DWORD PTR [edx]

; 205  :     y += v.y;

  00250	f3 0f 58 5a 04	 addss	 xmm3, DWORD PTR [edx+4]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00255	f3 0f 58 f8	 addss	 xmm7, xmm0
  00259	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv1234[ebp]
  0025e	f3 0f 59 c5	 mulss	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 173  : 	*pu = spot.x;

  00262	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 174  : 	*pv = spot.y;

  00266	8b 45 20	 mov	 eax, DWORD PTR _pv$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00269	f3 0f 58 f8	 addss	 xmm7, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp

; 174  : 	*pv = spot.y;

  0026d	f3 0f 11 18	 movss	 DWORD PTR [eax], xmm3

; 175  : 	*pt = t;

  00271	8b 45 24	 mov	 eax, DWORD PTR _pt$[ebp]
  00274	f3 0f 59 fc	 mulss	 xmm7, xmm4
  00278	f3 0f 11 38	 movss	 DWORD PTR [eax], xmm7

; 176  : 
; 177  : 	return true;

  0027c	b0 01		 mov	 al, 1

; 178  : }

  0027e	8b e5		 mov	 esp, ebp
  00280	5d		 pop	 ebp
  00281	c2 20 00	 ret	 32			; 00000020H
$LN6@IntersectT:

; 155  : 		return false;

  00284	32 c0		 xor	 al, al

; 178  : }

  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 20 00	 ret	 32			; 00000020H
?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ENDP ; CGraphicCollisionObject::IntersectTriangle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ??1CGraphicCollisionObject@@UAE@XZ
_TEXT	SEGMENT
??1CGraphicCollisionObject@@UAE@XZ PROC			; CGraphicCollisionObject::~CGraphicCollisionObject, COMDAT
; _this$ = ecx

; 239  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGraphicCollisionObject@@6B@

; 240  : }

  00006	e9 00 00 00 00	 jmp	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
??1CGraphicCollisionObject@@UAE@XZ ENDP			; CGraphicCollisionObject::~CGraphicCollisionObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpCollisionObject.cpp
;	COMDAT ??0CGraphicCollisionObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGraphicCollisionObject@@QAE@XZ PROC			; CGraphicCollisionObject::CGraphicCollisionObject, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicCollisionObject@@6B@

; 236  : }

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??0CGraphicCollisionObject@@QAE@XZ ENDP			; CGraphicCollisionObject::CGraphicCollisionObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
