; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CNetDatagramSender@@QAE@XZ			; CNetDatagramSender::CNetDatagramSender
PUBLIC	??1CNetDatagramSender@@UAE@XZ			; CNetDatagramSender::~CNetDatagramSender
PUBLIC	?isSocket@CNetDatagramSender@@QAEHXZ		; CNetDatagramSender::isSocket
PUBLIC	?SetSocket@CNetDatagramSender@@QAEHPBDG@Z	; CNetDatagramSender::SetSocket
PUBLIC	?SetSocket@CNetDatagramSender@@QAEHKG@Z		; CNetDatagramSender::SetSocket
PUBLIC	?Send@CNetDatagramSender@@QAEHPBXH@Z		; CNetDatagramSender::Send
PUBLIC	??_GCNetDatagramSender@@UAEPAXI@Z		; CNetDatagramSender::`scalar deleting destructor'
PUBLIC	??_7CNetDatagramSender@@6B@			; CNetDatagramSender::`vftable'
PUBLIC	??_C@_0BH@MOCHFCJJ@Failed?5sending?5packet?6@	; `string'
PUBLIC	??_R4CNetDatagramSender@@6B@			; CNetDatagramSender::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNetDatagramSender@@@8			; CNetDatagramSender `RTTI Type Descriptor'
PUBLIC	??_R3CNetDatagramSender@@8			; CNetDatagramSender::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNetDatagramSender@@8			; CNetDatagramSender::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNetDatagramSender@@8		; CNetDatagramSender::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	_htons@4:PROC
EXTRN	_inet_addr@4:PROC
EXTRN	_sendto@24:PROC
EXTRN	_socket@12:PROC
EXTRN	??_ECNetDatagramSender@@UAEPAXI@Z:PROC		; CNetDatagramSender::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CNetDatagramSender@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNetDatagramSender@@8 DD FLAT:??_R0?AVCNetDatagramSender@@@8 ; CNetDatagramSender::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNetDatagramSender@@8
rdata$r	ENDS
;	COMDAT ??_R2CNetDatagramSender@@8
rdata$r	SEGMENT
??_R2CNetDatagramSender@@8 DD FLAT:??_R1A@?0A@EA@CNetDatagramSender@@8 ; CNetDatagramSender::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CNetDatagramSender@@8
rdata$r	SEGMENT
??_R3CNetDatagramSender@@8 DD 00H			; CNetDatagramSender::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CNetDatagramSender@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNetDatagramSender@@@8
data$r	SEGMENT
??_R0?AVCNetDatagramSender@@@8 DD FLAT:??_7type_info@@6B@ ; CNetDatagramSender `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNetDatagramSender@@', 00H
data$r	ENDS
;	COMDAT ??_R4CNetDatagramSender@@6B@
rdata$r	SEGMENT
??_R4CNetDatagramSender@@6B@ DD 00H			; CNetDatagramSender::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNetDatagramSender@@@8
	DD	FLAT:??_R3CNetDatagramSender@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BH@MOCHFCJJ@Failed?5sending?5packet?6@
CONST	SEGMENT
??_C@_0BH@MOCHFCJJ@Failed?5sending?5packet?6@ DB 'Failed sending packet', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7CNetDatagramSender@@6B@
CONST	SEGMENT
??_7CNetDatagramSender@@6B@ DD FLAT:??_R4CNetDatagramSender@@6B@ ; CNetDatagramSender::`vftable'
	DD	FLAT:??_ECNetDatagramSender@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCNetDatagramSender@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNetDatagramSender@@UAEPAXI@Z PROC			; CNetDatagramSender::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CNetDatagramSender@@UAE@XZ ; CNetDatagramSender::~CNetDatagramSender
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 20		 push	 32			; 00000020H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCNetDatagramSender@@UAEPAXI@Z ENDP			; CNetDatagramSender::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ?Send@CNetDatagramSender@@QAEHPBXH@Z
_TEXT	SEGMENT
_pBuffer$ = 8						; size = 4
_iSize$ = 12						; size = 4
?Send@CNetDatagramSender@@QAEHPBXH@Z PROC		; CNetDatagramSender::Send, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 	assert(isSocket());
; 29   : 
; 30   : 	int iSendingLength = sendto(m_Socket, (const char *)pBuffer, iSize, 0, (PSOCKADDR)&m_SockAddr, sizeof(SOCKADDR_IN));

  00003	6a 10		 push	 16			; 00000010H
  00005	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _iSize$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _pBuffer$[ebp]
  00011	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00014	e8 00 00 00 00	 call	 _sendto@24

; 31   : 	if (iSendingLength < 0)

  00019	85 c0		 test	 eax, eax
  0001b	79 13		 jns	 SHORT $LN2@Send

; 32   : 	{
; 33   : 		Tracef("Failed sending packet\n");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MOCHFCJJ@Failed?5sending?5packet?6@
  00022	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00027	83 c4 04	 add	 esp, 4

; 34   : 		return FALSE;

  0002a	33 c0		 xor	 eax, eax

; 38   : }

  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
$LN2@Send:

; 35   : 	}
; 36   : 
; 37   : 	return TRUE;

  00030	b8 01 00 00 00	 mov	 eax, 1

; 38   : }

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?Send@CNetDatagramSender@@QAEHPBXH@Z ENDP		; CNetDatagramSender::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ?SetSocket@CNetDatagramSender@@QAEHKG@Z
_TEXT	SEGMENT
_dwAddress$ = 8						; size = 4
_wPortIndex$ = 12					; size = 2
?SetSocket@CNetDatagramSender@@QAEHKG@Z PROC		; CNetDatagramSender::SetSocket, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 11   : 	m_isSocket = TRUE;
; 12   : 
; 13   : 	m_dwAddress = dwAddress;
; 14   : 	m_wPortIndex = wPortIndex;

  00005	8b 75 0c	 mov	 esi, DWORD PTR _wPortIndex$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _dwAddress$[ebp]

; 15   : 
; 16   : 	m_Socket = socket(AF_INET, SOCK_DGRAM, 0);

  0000e	6a 00		 push	 0
  00010	6a 02		 push	 2
  00012	6a 02		 push	 2
  00014	c7 43 04 01 00
	00 00		 mov	 DWORD PTR [ebx+4], 1
  0001b	66 89 7b 08	 mov	 WORD PTR [ebx+8], di
  0001f	66 89 73 0a	 mov	 WORD PTR [ebx+10], si
  00023	e8 00 00 00 00	 call	 _socket@12
  00028	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  0002b	0f 57 c0	 xorps	 xmm0, xmm0

; 17   : 
; 18   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));

  0002e	0f 11 43 10	 movups	 XMMWORD PTR [ebx+16], xmm0

; 19   : 	m_SockAddr.sin_family = AF_INET;

  00032	b8 02 00 00 00	 mov	 eax, 2

; 20   : 	m_SockAddr.sin_addr.s_addr = dwAddress;

  00037	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 21   : 	m_SockAddr.sin_port = htons(wPortIndex);

  0003a	56		 push	 esi
  0003b	66 89 43 10	 mov	 WORD PTR [ebx+16], ax
  0003f	e8 00 00 00 00	 call	 _htons@4

; 22   : 
; 23   : 	return TRUE;

  00044	5f		 pop	 edi
  00045	66 89 43 12	 mov	 WORD PTR [ebx+18], ax
  00049	b8 01 00 00 00	 mov	 eax, 1
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx

; 24   : }

  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?SetSocket@CNetDatagramSender@@QAEHKG@Z ENDP		; CNetDatagramSender::SetSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ?SetSocket@CNetDatagramSender@@QAEHPBDG@Z
_TEXT	SEGMENT
_c_szIP$ = 8						; size = 4
_wPortIndex$ = 12					; size = 2
?SetSocket@CNetDatagramSender@@QAEHPBDG@Z PROC		; CNetDatagramSender::SetSocket, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 6    : 	return SetSocket(inet_addr(c_szIP), wPortIndex);

  00004	ff 75 0c	 push	 DWORD PTR _wPortIndex$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 08	 push	 DWORD PTR _c_szIP$[ebp]
  0000c	e8 00 00 00 00	 call	 _inet_addr@4
  00011	50		 push	 eax
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?SetSocket@CNetDatagramSender@@QAEHKG@Z ; CNetDatagramSender::SetSocket
  00019	5e		 pop	 esi

; 7    : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?SetSocket@CNetDatagramSender@@QAEHPBDG@Z ENDP		; CNetDatagramSender::SetSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ?isSocket@CNetDatagramSender@@QAEHXZ
_TEXT	SEGMENT
?isSocket@CNetDatagramSender@@QAEHXZ PROC		; CNetDatagramSender::isSocket, COMDAT
; _this$ = ecx

; 42   : 	return m_isSocket;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 43   : }

  00003	c3		 ret	 0
?isSocket@CNetDatagramSender@@QAEHXZ ENDP		; CNetDatagramSender::isSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ??1CNetDatagramSender@@UAE@XZ
_TEXT	SEGMENT
??1CNetDatagramSender@@UAE@XZ PROC			; CNetDatagramSender::~CNetDatagramSender, COMDAT
; _this$ = ecx

; 57   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CNetDatagramSender@@6B@

; 58   : }

  00006	c3		 ret	 0
??1CNetDatagramSender@@UAE@XZ ENDP			; CNetDatagramSender::~CNetDatagramSender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\NetDatagramSender.cpp
;	COMDAT ??0CNetDatagramSender@@QAE@XZ
_TEXT	SEGMENT
??0CNetDatagramSender@@QAE@XZ PROC			; CNetDatagramSender::CNetDatagramSender, COMDAT
; _this$ = ecx

; 46   : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CNetDatagramSender@@6B@

; 47   : 	m_isSocket = FALSE;

  00009	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 48   : 
; 49   : 	m_dwAddress = 0;
; 50   : 	m_wPortIndex = 1000;
; 51   : 
; 52   : 	m_Socket = 0;
; 53   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));
; 54   : }

  00010	8b c1		 mov	 eax, ecx
  00012	c7 41 08 00 00
	e8 03		 mov	 DWORD PTR [ecx+8], 65536000 ; 03e80000H
  00019	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00020	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00024	c3		 ret	 0
??0CNetDatagramSender@@QAE@XZ ENDP			; CNetDatagramSender::CNetDatagramSender
_TEXT	ENDS
END
