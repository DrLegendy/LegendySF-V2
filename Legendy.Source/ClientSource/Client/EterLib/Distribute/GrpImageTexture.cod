; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CGraphicImageTexture@@QAE@XZ			; CGraphicImageTexture::CGraphicImageTexture
PUBLIC	??1CGraphicImageTexture@@UAE@XZ			; CGraphicImageTexture::~CGraphicImageTexture
PUBLIC	?Destroy@CGraphicImageTexture@@QAEXXZ		; CGraphicImageTexture::Destroy
PUBLIC	?Create@CGraphicImageTexture@@QAE_NIIW4_D3DFORMAT@@K@Z ; CGraphicImageTexture::Create
PUBLIC	?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ ; CGraphicImageTexture::CreateDeviceObjects
PUBLIC	?CreateFromTexturePointer@CGraphicImageTexture@@QAEXPBVCGraphicTexture@@@Z ; CGraphicImageTexture::CreateFromTexturePointer
PUBLIC	?CreateFromDiskFile@CGraphicImageTexture@@QAE_NPBDW4_D3DFORMAT@@K@Z ; CGraphicImageTexture::CreateFromDiskFile
PUBLIC	?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z ; CGraphicImageTexture::CreateFromMemoryFile
PUBLIC	?CreateDDSTexture@CGraphicImageTexture@@QAE_NAAVCDXTCImage@@PBE@Z ; CGraphicImageTexture::CreateDDSTexture
PUBLIC	?SetFileName@CGraphicImageTexture@@QAEXPBD@Z	; CGraphicImageTexture::SetFileName
PUBLIC	?Lock@CGraphicImageTexture@@QAE_NPAHPAPAXH@Z	; CGraphicImageTexture::Lock
PUBLIC	?Unlock@CGraphicImageTexture@@QAEXH@Z		; CGraphicImageTexture::Unlock
PUBLIC	?Initialize@CGraphicImageTexture@@IAEXXZ	; CGraphicImageTexture::Initialize
PUBLIC	??_GCGraphicImageTexture@@UAEPAXI@Z		; CGraphicImageTexture::`scalar deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
PUBLIC	??_7CGraphicImageTexture@@6B@			; CGraphicImageTexture::`vftable'
PUBLIC	??_C@_0FH@IIELBMJN@CGraphicImageTexture?3?3CreateDev@ ; `string'
PUBLIC	??_C@_0CJ@GNAMCJFH@CreateDDSTexture?3?5Cannot?5creatr@ ; `string'
PUBLIC	??_C@_0CG@GKMBNFBC@CreateDDSTexture?3?5Cannot?5lock?5t@ ; `string'
PUBLIC	??_C@_0CM@KHEEHJBJ@CreateFromMemoryFile?3?5Cannot?5cr@ ; `string'
PUBLIC	??_R4CGraphicImageTexture@@6B@			; CGraphicImageTexture::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicImageTexture@@@8		; CGraphicImageTexture `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicImageTexture@@8			; CGraphicImageTexture::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicImageTexture@@8			; CGraphicImageTexture::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicImageTexture@@8		; CGraphicImageTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicTexture@@8		; CGraphicTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicTexture@@@8			; CGraphicTexture `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicTexture@@8				; CGraphicTexture::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicTexture@@8				; CGraphicTexture::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXLoadSurfaceFromSurface@32:PROC
EXTRN	_D3DXCreateTexture@32:PROC
EXTRN	_D3DXCreateTextureFromFileInMemoryEx@60:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPackManager::Get
EXTRN	?IsLowTextureMemory@CGraphicBase@@SA_NXZ:PROC	; CGraphicBase::IsLowTextureMemory
EXTRN	?IsEmpty@CGraphicTexture@@UBE_NXZ:PROC		; CGraphicTexture::IsEmpty
EXTRN	?GetWidth@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetWidth
EXTRN	?GetHeight@CGraphicTexture@@QBEHXZ:PROC		; CGraphicTexture::GetHeight
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	??0CGraphicTexture@@IAE@XZ:PROC			; CGraphicTexture::CGraphicTexture
EXTRN	??1CGraphicTexture@@MAE@XZ:PROC			; CGraphicTexture::~CGraphicTexture
EXTRN	?Destroy@CGraphicTexture@@IAEXXZ:PROC		; CGraphicTexture::Destroy
EXTRN	?Initialize@CGraphicTexture@@IAEXXZ:PROC	; CGraphicTexture::Initialize
EXTRN	??0CDXTCImage@@QAE@XZ:PROC			; CDXTCImage::CDXTCImage
EXTRN	??1CDXTCImage@@UAE@XZ:PROC			; CDXTCImage::~CDXTCImage
EXTRN	?LoadHeaderFromMemory@CDXTCImage@@QAE_NPBE@Z:PROC ; CDXTCImage::LoadHeaderFromMemory
EXTRN	?Copy@CDXTCImage@@QAE_NHPAEJ@Z:PROC		; CDXTCImage::Copy
EXTRN	??_ECGraphicImageTexture@@UAEPAXI@Z:PROC	; CGraphicImageTexture::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	?ms_bSupportDXT@CGraphicBase@@1_NA:BYTE		; CGraphicBase::ms_bSupportDXT
EXTRN	?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA:BYTE	; GRAPHICS_CAPS_HALF_SIZE_IMAGE
EXTRN	?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA:BYTE	; GRAPHICS_CAPS_HALF_SIZE_IMAGE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A DD 01H DUP (?) ; CSingleton<CEterPackManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A
_BSS	SEGMENT
?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A DB 0128H DUP (?) ; `CGraphicImageTexture::CreateFromMemoryFile'::`2'::image
_BSS	ENDS
;	COMDAT ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA DD 01H DUP (?) ; `CGraphicImageTexture::CreateFromMemoryFile'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicTexture@@8
rdata$r	SEGMENT
??_R2CGraphicTexture@@8 DD FLAT:??_R1A@?0A@EA@CGraphicTexture@@8 ; CGraphicTexture::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicTexture@@8
rdata$r	SEGMENT
??_R3CGraphicTexture@@8 DD 00H				; CGraphicTexture::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicTexture@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicTexture@@@8
data$r	SEGMENT
??_R0?AVCGraphicTexture@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicTexture `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicTexture@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicTexture@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicTexture@@8 DD FLAT:??_R0?AVCGraphicTexture@@@8 ; CGraphicTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicTexture@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicImageTexture@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicImageTexture@@8 DD FLAT:??_R0?AVCGraphicImageTexture@@@8 ; CGraphicImageTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicImageTexture@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicImageTexture@@8
rdata$r	SEGMENT
??_R2CGraphicImageTexture@@8 DD FLAT:??_R1A@?0A@EA@CGraphicImageTexture@@8 ; CGraphicImageTexture::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicTexture@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicImageTexture@@8
rdata$r	SEGMENT
??_R3CGraphicImageTexture@@8 DD 00H			; CGraphicImageTexture::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicImageTexture@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicImageTexture@@@8
data$r	SEGMENT
??_R0?AVCGraphicImageTexture@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicImageTexture `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicImageTexture@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicImageTexture@@6B@
rdata$r	SEGMENT
??_R4CGraphicImageTexture@@6B@ DD 00H			; CGraphicImageTexture::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicImageTexture@@@8
	DD	FLAT:??_R3CGraphicImageTexture@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CM@KHEEHJBJ@CreateFromMemoryFile?3?5Cannot?5cr@
CONST	SEGMENT
??_C@_0CM@KHEEHJBJ@CreateFromMemoryFile?3?5Cannot?5cr@ DB 'CreateFromMemo'
	DB	'ryFile: Cannot create texture', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GKMBNFBC@CreateDDSTexture?3?5Cannot?5lock?5t@
CONST	SEGMENT
??_C@_0CG@GKMBNFBC@CreateDDSTexture?3?5Cannot?5lock?5t@ DB 'CreateDDSText'
	DB	'ure: Cannot lock texture', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GNAMCJFH@CreateDDSTexture?3?5Cannot?5creatr@
CONST	SEGMENT
??_C@_0CJ@GNAMCJFH@CreateDDSTexture?3?5Cannot?5creatr@ DB 'CreateDDSTextu'
	DB	're: Cannot creatre texture', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IIELBMJN@CGraphicImageTexture?3?3CreateDev@
CONST	SEGMENT
??_C@_0FH@IIELBMJN@CGraphicImageTexture?3?3CreateDev@ DB 'CGraphicImageTe'
	DB	'xture::CreateDeviceObjects: CreateFromMemoryFile: texture not'
	DB	' found(%s)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicImageTexture@@6B@
CONST	SEGMENT
??_7CGraphicImageTexture@@6B@ DD FLAT:??_R4CGraphicImageTexture@@6B@ ; CGraphicImageTexture::`vftable'
	DD	FLAT:??_ECGraphicImageTexture@@UAEPAXI@Z
	DD	FLAT:?IsEmpty@CGraphicTexture@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z$0
__ehfuncinfo$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ$0
__ehfuncinfo$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGraphicImageTexture@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicImageTexture@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicImageTexture@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGraphicImageTexture@@QAE@XZ$1
__ehfuncinfo$??0CGraphicImageTexture@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CGraphicImageTexture@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fimage@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@YAXXZ
text$yd	SEGMENT
??__Fimage@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@YAXXZ PROC ; `CGraphicImageTexture::CreateFromMemoryFile'::`2'::`dynamic atexit destructor for 'image'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A
  00005	e9 00 00 00 00	 jmp	 ??1CDXTCImage@@UAE@XZ	; CDXTCImage::~CDXTCImage
??__Fimage@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@YAXXZ ENDP ; `CGraphicImageTexture::CreateFromMemoryFile'::`2'::`dynamic atexit destructor for 'image''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicImageTexture@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicImageTexture@@UAEPAXI@Z PROC		; CGraphicImageTexture::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicImageTexture@@UAE@XZ ; CGraphicImageTexture::~CGraphicImageTexture
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 34		 push	 52			; 00000034H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGraphicImageTexture@@UAEPAXI@Z ENDP		; CGraphicImageTexture::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?Initialize@CGraphicImageTexture@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGraphicImageTexture@@IAEXXZ PROC		; CGraphicImageTexture::Initialize, COMDAT
; _this$ = ecx

; 24   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 25   : 	CGraphicTexture::Initialize();

  00003	e8 00 00 00 00	 call	 ?Initialize@CGraphicTexture@@IAEXXZ ; CGraphicTexture::Initialize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00008	6a 00		 push	 0
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 27   : 	m_stFileName = "";

  0000f	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00012	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 29   : 	m_d3dFmt=D3DFMT_UNKNOWN;

  00017	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 30   : 	m_dwFilter=0;

  0001e	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00025	5e		 pop	 esi

; 31   : }

  00026	c3		 ret	 0
?Initialize@CGraphicImageTexture@@IAEXXZ ENDP		; CGraphicImageTexture::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?Unlock@CGraphicImageTexture@@QAEXH@Z
_TEXT	SEGMENT
_level$ = 8						; size = 4
?Unlock@CGraphicImageTexture@@QAEXH@Z PROC		; CGraphicImageTexture::Unlock, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 19   : 	assert(m_lpd3dTexture != NULL);
; 20   : 	m_lpd3dTexture->UnlockRect(level);

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	ff 75 08	 push	 DWORD PTR _level$[ebp]
  00009	50		 push	 eax
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	ff 51 44	 call	 DWORD PTR [ecx+68]

; 21   : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?Unlock@CGraphicImageTexture@@QAEXH@Z ENDP		; CGraphicImageTexture::Unlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?Lock@CGraphicImageTexture@@QAE_NPAHPAPAXH@Z
_TEXT	SEGMENT
_lockedRect$ = -8					; size = 8
_pRetPitch$ = 8						; size = 4
_ppRetPixels$ = 12					; size = 4
_level$ = 16						; size = 4
?Lock@CGraphicImageTexture@@QAE_NPAHPAPAXH@Z PROC	; CGraphicImageTexture::Lock, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8    : 	D3DLOCKED_RECT lockedRect;
; 9    : 	if (FAILED(m_lpd3dTexture->LockRect(level, &lockedRect, NULL, 0)))

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	8d 55 f8	 lea	 edx, DWORD PTR _lockedRect$[ebp]
  00009	83 ec 08	 sub	 esp, 8
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	6a 00		 push	 0
  00010	6a 00		 push	 0
  00012	52		 push	 edx
  00013	ff 75 10	 push	 DWORD PTR _level$[ebp]
  00016	50		 push	 eax
  00017	ff 51 40	 call	 DWORD PTR [ecx+64]
  0001a	85 c0		 test	 eax, eax
  0001c	79 08		 jns	 SHORT $LN2@Lock

; 10   : 		return false;

  0001e	32 c0		 xor	 al, al

; 15   : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Lock:

; 11   : 
; 12   : 	*pRetPitch = lockedRect.Pitch;

  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pRetPitch$[ebp]
  00029	8b 45 f8	 mov	 eax, DWORD PTR _lockedRect$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax

; 13   : 	*ppRetPixels = (void*)lockedRect.pBits;

  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _ppRetPixels$[ebp]
  00031	8b 45 fc	 mov	 eax, DWORD PTR _lockedRect$[ebp+4]
  00034	89 01		 mov	 DWORD PTR [ecx], eax

; 14   : 	return true;

  00036	b0 01		 mov	 al, 1

; 15   : }

  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?Lock@CGraphicImageTexture@@QAE_NPAHPAPAXH@Z ENDP	; CGraphicImageTexture::Lock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?SetFileName@CGraphicImageTexture@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?SetFileName@CGraphicImageTexture@@QAEXPBD@Z PROC	; CGraphicImageTexture::SetFileName, COMDAT
; _this$ = ecx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR _c_szFileName$[ebp]
  00006	8b c2		 mov	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 312  : {

  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000f	90		 npad	 1
$LL9@SetFileNam:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL9@SetFileNam
  00017	2b c7		 sub	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 313  : 	m_stFileName=c_szFileName;

  00019	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 314  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?SetFileName@CGraphicImageTexture@@QAEXPBD@Z ENDP	; CGraphicImageTexture::SetFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?CreateDDSTexture@CGraphicImageTexture@@QAE_NAAVCDXTCImage@@PBE@Z
_TEXT	SEGMENT
_lockedRect$1 = -28					; size = 8
_pkTexDst$1$ = -24					; size = 4
_pool$1$ = -24						; size = 4
_format$2$ = -20					; size = 4
_format$1$ = -20					; size = 4
_uTexBias$1$ = -16					; size = 4
_ppsDst$2 = -16						; size = 4
_uMinMipMapIndex$1$ = -12				; size = 4
_ppsSrc$3 = -12						; size = 4
_this$1$ = -8						; size = 4
_lpd3dTexture$ = -4					; size = 4
_image$ = 8						; size = 4
___formal$ = 12						; size = 4
?CreateDDSTexture@CGraphicImageTexture@@QAE_NAAVCDXTCImage@@PBE@Z PROC ; CGraphicImageTexture::CreateDDSTexture, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	53		 push	 ebx

; 102  : 	int mipmapCount = image.m_dwMipMapCount == 0 ? 1 : image.m_dwMipMapCount;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _image$[ebp]
  0000a	b8 01 00 00 00	 mov	 eax, 1
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	89 4d f8	 mov	 DWORD PTR _this$1$[ebp], ecx
  00014	8b bb f4 00 00
	00		 mov	 edi, DWORD PTR [ebx+244]
  0001a	85 ff		 test	 edi, edi
  0001c	0f 44 f8	 cmove	 edi, eax

; 103  : 
; 104  : 	D3DFORMAT format;
; 105  : 	LPDIRECT3DTEXTURE8 lpd3dTexture;
; 106  : 	D3DPOOL pool = ms_bSupportDXT ? D3DPOOL_MANAGED : D3DPOOL_SCRATCH;;

  0001f	33 c0		 xor	 eax, eax
  00021	38 05 00 00 00
	00		 cmp	 BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA, al ; CGraphicBase::ms_bSupportDXT
  00027	0f 94 c0	 sete	 al
  0002a	8d 04 45 01 00
	00 00		 lea	 eax, DWORD PTR [eax*2+1]
  00031	89 45 e8	 mov	 DWORD PTR _pool$1$[ebp], eax

; 107  : 
; 108  : 	if(image.m_CompFormat == PF_DXT5)

  00034	8b 83 ec 00 00
	00		 mov	 eax, DWORD PTR [ebx+236]
  0003a	83 f8 05	 cmp	 eax, 5
  0003d	75 09		 jne	 SHORT $LN8@CreateDDST

; 109  : 		format = D3DFMT_DXT5;

  0003f	c7 45 ec 44 58
	54 35		 mov	 DWORD PTR _format$1$[ebp], 894720068 ; 35545844H
  00046	eb 13		 jmp	 SHORT $LN10@CreateDDST
$LN8@CreateDDST:

; 110  : 	else if(image.m_CompFormat == PF_DXT3)

  00048	83 f8 03	 cmp	 eax, 3
  0004b	be 44 58 54 31	 mov	 esi, 827611204		; 31545844H
  00050	b9 44 58 54 33	 mov	 ecx, 861165636		; 33545844H
  00055	0f 44 f1	 cmove	 esi, ecx
  00058	89 75 ec	 mov	 DWORD PTR _format$1$[ebp], esi
$LN10@CreateDDST:

; 111  : 		format = D3DFMT_DXT3;
; 112  : 	else
; 113  : 		format = D3DFMT_DXT1;
; 114  : 
; 115  : 	UINT uTexBias=0;
; 116  : 	if (IsLowTextureMemory())

  0005b	e8 00 00 00 00	 call	 ?IsLowTextureMemory@CGraphicBase@@SA_NXZ ; CGraphicBase::IsLowTextureMemory
  00060	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _uMinMipMapIndex$1$[ebp], 0
  00067	84 c0		 test	 al, al
  00069	74 24		 je	 SHORT $LN12@CreateDDST

; 117  : 		uTexBias=1;

  0006b	be 01 00 00 00	 mov	 esi, 1
  00070	89 75 f0	 mov	 DWORD PTR _uTexBias$1$[ebp], esi

; 120  : 	if (uTexBias>0)
; 121  : 	{
; 122  : 		if (mipmapCount>uTexBias)

  00073	3b fe		 cmp	 edi, esi
  00075	76 1f		 jbe	 SHORT $LN14@CreateDDST

; 123  : 		{
; 124  : 			uMinMipMapIndex=uTexBias;
; 125  : 			image.m_nWidth>>=uTexBias;

  00077	8b ce		 mov	 ecx, esi
  00079	89 75 f4	 mov	 DWORD PTR _uMinMipMapIndex$1$[ebp], esi
  0007c	d3 bb 00 01 00
	00		 sar	 DWORD PTR [ebx+256], cl

; 126  : 			image.m_nHeight>>=uTexBias;

  00082	d3 bb 04 01 00
	00		 sar	 DWORD PTR [ebx+260], cl

; 127  : 			mipmapCount-=uTexBias;

  00088	2b fe		 sub	 edi, esi
  0008a	89 75 f0	 mov	 DWORD PTR _uTexBias$1$[ebp], esi
  0008d	eb 07		 jmp	 SHORT $LN14@CreateDDST
$LN12@CreateDDST:

; 118  : 
; 119  : 	UINT uMinMipMapIndex=0;

  0008f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _uTexBias$1$[ebp], 0
$LN14@CreateDDST:

; 128  : 		}
; 129  : 	}
; 130  : 
; 131  : 	if (FAILED(D3DXCreateTexture(	ms_lpd3dDevice, image.m_nWidth, image.m_nHeight,

  00096	8d 45 fc	 lea	 eax, DWORD PTR _lpd3dTexture$[ebp]
  00099	50		 push	 eax
  0009a	ff 75 e8	 push	 DWORD PTR _pool$1$[ebp]
  0009d	ff 75 ec	 push	 DWORD PTR _format$1$[ebp]
  000a0	6a 00		 push	 0
  000a2	57		 push	 edi
  000a3	ff b3 04 01 00
	00		 push	 DWORD PTR [ebx+260]
  000a9	ff b3 00 01 00
	00		 push	 DWORD PTR [ebx+256]
  000af	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  000b5	e8 00 00 00 00	 call	 _D3DXCreateTexture@32
  000ba	85 c0		 test	 eax, eax
  000bc	0f 88 6b 01 00
	00		 js	 $LN39@CreateDDST

; 132  : 									mipmapCount, 0, format, pool, &lpd3dTexture)))
; 133  : 	{
; 134  : 		TraceError("CreateDDSTexture: Cannot creatre texture");
; 135  : 		return false;
; 136  : 	}
; 137  : 
; 138  : 	for (DWORD i = 0; i < mipmapCount; ++i)

  000c2	33 f6		 xor	 esi, esi
  000c4	85 ff		 test	 edi, edi
  000c6	74 47		 je	 SHORT $LN3@CreateDDST
$LL4@CreateDDST:

; 139  : 	{
; 140  : 		D3DLOCKED_RECT lockedRect;
; 141  : 
; 142  : 		if (FAILED(lpd3dTexture->LockRect(i, &lockedRect, NULL, 0)))

  000c8	8b 45 fc	 mov	 eax, DWORD PTR _lpd3dTexture$[ebp]
  000cb	8d 55 e4	 lea	 edx, DWORD PTR _lockedRect$1[ebp]
  000ce	6a 00		 push	 0
  000d0	6a 00		 push	 0
  000d2	52		 push	 edx
  000d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d5	56		 push	 esi
  000d6	50		 push	 eax
  000d7	ff 51 40	 call	 DWORD PTR [ecx+64]
  000da	85 c0		 test	 eax, eax
  000dc	79 0f		 jns	 SHORT $LN16@CreateDDST

; 143  : 		{
; 144  : 			TraceError("CreateDDSTexture: Cannot lock texture");

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GKMBNFBC@CreateDDSTexture?3?5Cannot?5lock?5t@
  000e3	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000e8	83 c4 04	 add	 esp, 4

; 145  : 		}

  000eb	eb 1d		 jmp	 SHORT $LN2@CreateDDST
$LN16@CreateDDST:

; 146  : 		else
; 147  : 		{
; 148  : 			image.Copy(i+uMinMipMapIndex, (BYTE*)lockedRect.pBits, lockedRect.Pitch);

  000ed	ff 75 e4	 push	 DWORD PTR _lockedRect$1[ebp]
  000f0	8b 45 f4	 mov	 eax, DWORD PTR _uMinMipMapIndex$1$[ebp]
  000f3	8b cb		 mov	 ecx, ebx
  000f5	ff 75 e8	 push	 DWORD PTR _lockedRect$1[ebp+4]
  000f8	03 c6		 add	 eax, esi
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ?Copy@CDXTCImage@@QAE_NHPAEJ@Z ; CDXTCImage::Copy

; 149  : 			lpd3dTexture->UnlockRect(i);

  00100	8b 45 fc	 mov	 eax, DWORD PTR _lpd3dTexture$[ebp]
  00103	56		 push	 esi
  00104	50		 push	 eax
  00105	8b 08		 mov	 ecx, DWORD PTR [eax]
  00107	ff 51 44	 call	 DWORD PTR [ecx+68]
$LN2@CreateDDST:

; 132  : 									mipmapCount, 0, format, pool, &lpd3dTexture)))
; 133  : 	{
; 134  : 		TraceError("CreateDDSTexture: Cannot creatre texture");
; 135  : 		return false;
; 136  : 	}
; 137  : 
; 138  : 	for (DWORD i = 0; i < mipmapCount; ++i)

  0010a	46		 inc	 esi
  0010b	3b f7		 cmp	 esi, edi
  0010d	72 b9		 jb	 SHORT $LL4@CreateDDST
$LN3@CreateDDST:

; 150  : 		}
; 151  : 	}
; 152  : 
; 153  : 	if(ms_bSupportDXT)

  0010f	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?ms_bSupportDXT@CGraphicBase@@1_NA, 0 ; CGraphicBase::ms_bSupportDXT
  00116	74 0e		 je	 SHORT $LN18@CreateDDST

; 154  : 	{
; 155  : 		m_lpd3dTexture = lpd3dTexture;

  00118	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0011b	8b 45 fc	 mov	 eax, DWORD PTR _lpd3dTexture$[ebp]
  0011e	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 156  : 	}

  00121	e9 e6 00 00 00	 jmp	 $LN19@CreateDDST
$LN18@CreateDDST:

; 157  : 	else
; 158  : 	{
; 159  : 		if(image.m_CompFormat == PF_DXT3 || image.m_CompFormat == PF_DXT5)

  00126	8b 83 ec 00 00
	00		 mov	 eax, DWORD PTR [ebx+236]
  0012c	83 f8 03	 cmp	 eax, 3
  0012f	74 0c		 je	 SHORT $LN22@CreateDDST

; 161  : 		else
; 162  : 			format = D3DFMT_A1R5G5B5;

  00131	c7 45 ec 19 00
	00 00		 mov	 DWORD PTR _format$2$[ebp], 25 ; 00000019H
  00138	83 f8 05	 cmp	 eax, 5
  0013b	75 07		 jne	 SHORT $LN21@CreateDDST
$LN22@CreateDDST:

; 160  : 			format = D3DFMT_A4R4G4B4;

  0013d	c7 45 ec 1a 00
	00 00		 mov	 DWORD PTR _format$2$[ebp], 26 ; 0000001aH
$LN21@CreateDDST:

; 163  : 
; 164  : 		UINT imgWidth=image.m_nWidth;
; 165  : 		UINT imgHeight=image.m_nHeight;
; 166  : 
; 167  : 		extern bool GRAPHICS_CAPS_HALF_SIZE_IMAGE;
; 168  : 
; 169  : 		if (GRAPHICS_CAPS_HALF_SIZE_IMAGE && uTexBias>0 && mipmapCount==0)

  00144	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA, 0 ; GRAPHICS_CAPS_HALF_SIZE_IMAGE
  0014b	8b 93 00 01 00
	00		 mov	 edx, DWORD PTR [ebx+256]
  00151	8b b3 04 01 00
	00		 mov	 esi, DWORD PTR [ebx+260]
  00157	74 11		 je	 SHORT $LN23@CreateDDST
  00159	8b 45 f0	 mov	 eax, DWORD PTR _uTexBias$1$[ebp]
  0015c	85 c0		 test	 eax, eax
  0015e	74 0a		 je	 SHORT $LN23@CreateDDST
  00160	85 ff		 test	 edi, edi
  00162	75 06		 jne	 SHORT $LN23@CreateDDST

; 170  : 		{
; 171  : 			imgWidth>>=uTexBias;

  00164	8b c8		 mov	 ecx, eax
  00166	d3 ea		 shr	 edx, cl

; 172  : 			imgHeight>>=uTexBias;

  00168	d3 ee		 shr	 esi, cl
$LN23@CreateDDST:

; 173  : 		}
; 174  : 
; 175  : 		if (FAILED(D3DXCreateTexture(	ms_lpd3dDevice, imgWidth, imgHeight,

  0016a	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  0016d	83 c0 10	 add	 eax, 16			; 00000010H
  00170	50		 push	 eax
  00171	6a 01		 push	 1
  00173	ff 75 ec	 push	 DWORD PTR _format$2$[ebp]
  00176	6a 00		 push	 0
  00178	57		 push	 edi
  00179	56		 push	 esi
  0017a	52		 push	 edx
  0017b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00181	e8 00 00 00 00	 call	 _D3DXCreateTexture@32
  00186	85 c0		 test	 eax, eax
  00188	0f 88 9f 00 00
	00		 js	 $LN39@CreateDDST

; 180  : 		}
; 181  : 
; 182  : 		IDirect3DTexture8* pkTexSrc=lpd3dTexture;
; 183  : 		IDirect3DTexture8* pkTexDst=m_lpd3dTexture;

  0018e	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  00191	33 f6		 xor	 esi, esi
  00193	8b 5d fc	 mov	 ebx, DWORD PTR _lpd3dTexture$[ebp]
  00196	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00199	89 45 e8	 mov	 DWORD PTR _pkTexDst$1$[ebp], eax

; 184  : 
; 185  : 		for(int i=0; i<mipmapCount; ++i) {

  0019c	85 ff		 test	 edi, edi
  0019e	7e 60		 jle	 SHORT $LN6@CreateDDST
$LL7@CreateDDST:

; 186  : 
; 187  : 			IDirect3DSurface8* ppsSrc = NULL;
; 188  : 			IDirect3DSurface8* ppsDst = NULL;
; 189  : 
; 190  : 			if (SUCCEEDED(pkTexSrc->GetSurfaceLevel(i, &ppsSrc)))

  001a0	8b 03		 mov	 eax, DWORD PTR [ebx]
  001a2	8d 4d f4	 lea	 ecx, DWORD PTR _ppsSrc$3[ebp]
  001a5	51		 push	 ecx
  001a6	56		 push	 esi
  001a7	53		 push	 ebx
  001a8	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _ppsSrc$3[ebp], 0
  001af	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ppsDst$2[ebp], 0
  001b6	ff 50 3c	 call	 DWORD PTR [eax+60]
  001b9	85 c0		 test	 eax, eax
  001bb	78 3b		 js	 SHORT $LN5@CreateDDST

; 191  : 			{
; 192  : 				if (SUCCEEDED(pkTexDst->GetSurfaceLevel(i, &ppsDst)))

  001bd	8b 4d e8	 mov	 ecx, DWORD PTR _pkTexDst$1$[ebp]
  001c0	8d 55 f0	 lea	 edx, DWORD PTR _ppsDst$2[ebp]
  001c3	52		 push	 edx
  001c4	56		 push	 esi
  001c5	51		 push	 ecx
  001c6	8b 01		 mov	 eax, DWORD PTR [ecx]
  001c8	ff 50 3c	 call	 DWORD PTR [eax+60]
  001cb	85 c0		 test	 eax, eax
  001cd	78 20		 js	 SHORT $LN26@CreateDDST

; 193  : 				{
; 194  : 					D3DXLoadSurfaceFromSurface(ppsDst, NULL, NULL, ppsSrc, NULL, NULL, D3DX_FILTER_NONE, 0);

  001cf	6a 00		 push	 0
  001d1	6a 01		 push	 1
  001d3	6a 00		 push	 0
  001d5	6a 00		 push	 0
  001d7	ff 75 f4	 push	 DWORD PTR _ppsSrc$3[ebp]
  001da	6a 00		 push	 0
  001dc	6a 00		 push	 0
  001de	ff 75 f0	 push	 DWORD PTR _ppsDst$2[ebp]
  001e1	e8 00 00 00 00	 call	 _D3DXLoadSurfaceFromSurface@32

; 195  : 					ppsDst->Release();

  001e6	8b 45 f0	 mov	 eax, DWORD PTR _ppsDst$2[ebp]
  001e9	50		 push	 eax
  001ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ec	ff 51 08	 call	 DWORD PTR [ecx+8]
$LN26@CreateDDST:

; 196  : 				}
; 197  : 				ppsSrc->Release();

  001ef	8b 45 f4	 mov	 eax, DWORD PTR _ppsSrc$3[ebp]
  001f2	50		 push	 eax
  001f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f5	ff 51 08	 call	 DWORD PTR [ecx+8]
$LN5@CreateDDST:

; 184  : 
; 185  : 		for(int i=0; i<mipmapCount; ++i) {

  001f8	46		 inc	 esi
  001f9	3b f7		 cmp	 esi, edi
  001fb	7c a3		 jl	 SHORT $LL7@CreateDDST
  001fd	8b 5d fc	 mov	 ebx, DWORD PTR _lpd3dTexture$[ebp]
$LN6@CreateDDST:

; 198  : 			}
; 199  : 		}
; 200  : 
; 201  : 		lpd3dTexture->Release();

  00200	8b 03		 mov	 eax, DWORD PTR [ebx]
  00202	53		 push	 ebx
  00203	ff 50 08	 call	 DWORD PTR [eax+8]
  00206	8b 5d 08	 mov	 ebx, DWORD PTR _image$[ebp]
  00209	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN19@CreateDDST:

; 202  : 	}
; 203  : 
; 204  : 	m_width = image.m_nWidth;

  0020c	8b 83 00 01 00
	00		 mov	 eax, DWORD PTR [ebx+256]
  00212	5f		 pop	 edi
  00213	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 205  : 	m_height = image.m_nHeight;

  00216	8b 83 04 01 00
	00		 mov	 eax, DWORD PTR [ebx+260]

; 206  : 	m_bEmpty = false;
; 207  : 
; 208  : 	return true;
; 209  : }

  0021c	5e		 pop	 esi
  0021d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00220	b0 01		 mov	 al, 1
  00222	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 08 00	 ret	 8
$LN39@CreateDDST:

; 176  : 										mipmapCount, 0, format, D3DPOOL_MANAGED, &m_lpd3dTexture)))
; 177  : 		{
; 178  : 				TraceError("CreateDDSTexture: Cannot creatre texture");

  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@GNAMCJFH@CreateDDSTexture?3?5Cannot?5creatr@
  00232	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00237	83 c4 04	 add	 esp, 4

; 179  : 				return false;

  0023a	32 c0		 xor	 al, al
  0023c	5f		 pop	 edi

; 206  : 	m_bEmpty = false;
; 207  : 
; 208  : 	return true;
; 209  : }

  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx
  0023f	8b e5		 mov	 esp, ebp
  00241	5d		 pop	 ebp
  00242	c2 08 00	 ret	 8
?CreateDDSTexture@CGraphicImageTexture@@QAE_NAAVCDXTCImage@@PBE@Z ENDP ; CGraphicImageTexture::CreateDDSTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -60					; size = 4
_pkTexDst$2 = -56					; size = 4
_ppsDst$3 = -52						; size = 4
tv286 = -48						; size = 4
_ppsSrc$4 = -48						; size = 4
_imageInfo$5 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bufSize$ = 8						; size = 4
_c_pvBuf$ = 12						; size = 4
_d3dFmt$ = 16						; size = 4
_dwFilter$ = 20						; size = 4
?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z PROC ; CGraphicImageTexture::CreateFromMemoryFile, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d c4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx

; 213  : 	assert(ms_lpd3dDevice != NULL);
; 214  : 	assert(m_lpd3dTexture == NULL);
; 215  : 
; 216  : 	static CDXTCImage image;

  00030	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0003c	8b 75 0c	 mov	 esi, DWORD PTR _c_pvBuf$[ebp]
  0003f	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA
  00047	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0004d	0f 8f 92 01 00
	00		 jg	 $LN28@CreateFrom
$LN2@CreateFrom:

; 217  : 
; 218  : 	if (image.LoadHeaderFromMemory((const BYTE *) c_pvBuf))

  00053	56		 push	 esi
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET ?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A
  00059	e8 00 00 00 00	 call	 ?LoadHeaderFromMemory@CDXTCImage@@QAE_NPBE@Z ; CDXTCImage::LoadHeaderFromMemory
  0005e	84 c0		 test	 al, al
  00060	74 12		 je	 SHORT $LN8@CreateFrom

; 219  : 	{
; 220  : 		return (CreateDDSTexture(image, (const BYTE *) c_pvBuf));

  00062	56		 push	 esi
  00063	68 00 00 00 00	 push	 OFFSET ?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A
  00068	8b cb		 mov	 ecx, ebx
  0006a	e8 00 00 00 00	 call	 ?CreateDDSTexture@CGraphicImageTexture@@QAE_NAAVCDXTCImage@@PBE@Z ; CGraphicImageTexture::CreateDDSTexture
  0006f	e9 49 01 00 00	 jmp	 $LN1@CreateFrom
$LN8@CreateFrom:

; 221  : 	}
; 222  : 	else
; 223  : 	{
; 224  : 		D3DXIMAGE_INFO imageInfo;
; 225  : 		if (FAILED(D3DXCreateTextureFromFileInMemoryEx(

  00074	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
  00077	57		 push	 edi
  00078	6a 00		 push	 0
  0007a	8d 45 d4	 lea	 eax, DWORD PTR _imageInfo$5[ebp]
  0007d	89 7d d0	 mov	 DWORD PTR tv286[ebp], edi
  00080	50		 push	 eax
  00081	8b 45 14	 mov	 eax, DWORD PTR _dwFilter$[ebp]
  00084	68 ff 00 ff ff	 push	 -65281			; ffff00ffH
  00089	50		 push	 eax
  0008a	50		 push	 eax
  0008b	6a 01		 push	 1
  0008d	ff 75 10	 push	 DWORD PTR _d3dFmt$[ebp]
  00090	6a 00		 push	 0
  00092	6a ff		 push	 -1
  00094	6a ff		 push	 -1
  00096	6a ff		 push	 -1
  00098	ff 75 08	 push	 DWORD PTR _bufSize$[ebp]
  0009b	56		 push	 esi
  0009c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  000a2	e8 00 00 00 00	 call	 _D3DXCreateTextureFromFileInMemoryEx@60
  000a7	85 c0		 test	 eax, eax
  000a9	79 14		 jns	 SHORT $LN10@CreateFrom

; 226  : 					ms_lpd3dDevice,
; 227  : 					c_pvBuf,
; 228  : 					bufSize,
; 229  : 					D3DX_DEFAULT,
; 230  : 					D3DX_DEFAULT,
; 231  : 					D3DX_DEFAULT,
; 232  : 					0,
; 233  : 					d3dFmt,
; 234  : 					D3DPOOL_MANAGED,
; 235  : 					dwFilter,
; 236  : 					dwFilter,
; 237  : 					0xffff00ff,
; 238  : 					&imageInfo,
; 239  : 					NULL,
; 240  : 					&m_lpd3dTexture)))
; 241  : 		{
; 242  : 			TraceError("CreateFromMemoryFile: Cannot create texture");

  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@KHEEHJBJ@CreateFromMemoryFile?3?5Cannot?5cr@
  000b0	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000b5	83 c4 04	 add	 esp, 4

; 243  : 			return false;

  000b8	32 c0		 xor	 al, al
  000ba	e9 fe 00 00 00	 jmp	 $LN1@CreateFrom
$LN10@CreateFrom:

; 244  : 		}
; 245  : 
; 246  : 		m_width = imageInfo.Width;

  000bf	8b 45 d4	 mov	 eax, DWORD PTR _imageInfo$5[ebp]

; 247  : 		m_height = imageInfo.Height;
; 248  : 
; 249  : 		D3DFORMAT format=imageInfo.Format;

  000c2	8b 75 e4	 mov	 esi, DWORD PTR _imageInfo$5[ebp+16]
  000c5	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000c8	8b 45 d8	 mov	 eax, DWORD PTR _imageInfo$5[ebp+4]
  000cb	89 43 0c	 mov	 DWORD PTR [ebx+12], eax

; 250  : 		switch(imageInfo.Format) {

  000ce	8b c6		 mov	 eax, esi
  000d0	83 e8 14	 sub	 eax, 20			; 00000014H
  000d3	74 0e		 je	 SHORT $LN12@CreateFrom
  000d5	83 e8 01	 sub	 eax, 1
  000d8	0f 84 fd 00 00
	00		 je	 $LN11@CreateFrom
  000de	83 e8 01	 sub	 eax, 1
  000e1	75 05		 jne	 SHORT $LN3@CreateFrom
$LN12@CreateFrom:

; 254  : 
; 255  : 			case D3DFMT_X8R8G8B8:
; 256  : 			case D3DFMT_R8G8B8:
; 257  : 				format = D3DFMT_A1R5G5B5;

  000e3	be 19 00 00 00	 mov	 esi, 25			; 00000019H
$LN3@CreateFrom:

; 258  : 				break;
; 259  : 		}
; 260  : 
; 261  : 		UINT uTexBias=0;

  000e8	33 db		 xor	 ebx, ebx

; 262  : 
; 263  : 		extern bool GRAPHICS_CAPS_HALF_SIZE_IMAGE;
; 264  : 		if (GRAPHICS_CAPS_HALF_SIZE_IMAGE)

  000ea	b8 01 00 00 00	 mov	 eax, 1
  000ef	38 1d 00 00 00
	00		 cmp	 BYTE PTR ?GRAPHICS_CAPS_HALF_SIZE_IMAGE@@3_NA, bl ; GRAPHICS_CAPS_HALF_SIZE_IMAGE
  000f5	0f 45 d8	 cmovne	 ebx, eax

; 265  : 			uTexBias=1;
; 266  : 
; 267  : 		if (IsLowTextureMemory())

  000f8	e8 00 00 00 00	 call	 ?IsLowTextureMemory@CGraphicBase@@SA_NXZ ; CGraphicBase::IsLowTextureMemory
  000fd	84 c0		 test	 al, al
  000ff	0f 84 af 00 00
	00		 je	 $LN17@CreateFrom

; 268  : 		if (uTexBias || format!=imageInfo.Format)

  00105	85 db		 test	 ebx, ebx
  00107	75 09		 jne	 SHORT $LN16@CreateFrom
  00109	3b 75 e4	 cmp	 esi, DWORD PTR _imageInfo$5[ebp+16]
  0010c	0f 84 a2 00 00
	00		 je	 $LN17@CreateFrom
$LN16@CreateFrom:

; 269  : 		{
; 270  : 			IDirect3DTexture8* pkTexSrc=m_lpd3dTexture;

  00112	8b 3f		 mov	 edi, DWORD PTR [edi]

; 271  : 			IDirect3DTexture8* pkTexDst;
; 272  : 
; 273  : 
; 274  : 			if (SUCCEEDED(D3DXCreateTexture(

  00114	8d 45 c8	 lea	 eax, DWORD PTR _pkTexDst$2[ebp]
  00117	50		 push	 eax
  00118	8b 45 d8	 mov	 eax, DWORD PTR _imageInfo$5[ebp+4]
  0011b	8b cb		 mov	 ecx, ebx
  0011d	6a 01		 push	 1
  0011f	56		 push	 esi
  00120	6a 00		 push	 0
  00122	ff 75 e0	 push	 DWORD PTR _imageInfo$5[ebp+12]
  00125	d3 e8		 shr	 eax, cl
  00127	50		 push	 eax
  00128	8b 45 d4	 mov	 eax, DWORD PTR _imageInfo$5[ebp]
  0012b	d3 e8		 shr	 eax, cl
  0012d	50		 push	 eax
  0012e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00134	e8 00 00 00 00	 call	 _D3DXCreateTexture@32
  00139	85 c0		 test	 eax, eax
  0013b	78 77		 js	 SHORT $LN17@CreateFrom

; 275  : 				ms_lpd3dDevice,
; 276  : 				imageInfo.Width>>uTexBias,
; 277  : 				imageInfo.Height>>uTexBias,
; 278  : 				imageInfo.MipLevels,
; 279  : 				0,
; 280  : 				format,
; 281  : 				D3DPOOL_MANAGED,
; 282  : 				&pkTexDst)))
; 283  : 			{
; 284  : 				m_lpd3dTexture=pkTexDst;

  0013d	8b 4d d0	 mov	 ecx, DWORD PTR tv286[ebp]

; 285  : 
; 286  : 				for(int i=0; i<imageInfo.MipLevels; ++i) {

  00140	33 f6		 xor	 esi, esi
  00142	8b 45 c8	 mov	 eax, DWORD PTR _pkTexDst$2[ebp]
  00145	89 01		 mov	 DWORD PTR [ecx], eax
  00147	39 75 e0	 cmp	 DWORD PTR _imageInfo$5[ebp+12], esi
  0014a	76 62		 jbe	 SHORT $LN6@CreateFrom
  0014c	0f 1f 40 00	 npad	 4
$LL7@CreateFrom:

; 287  : 
; 288  : 					IDirect3DSurface8* ppsSrc = NULL;
; 289  : 					IDirect3DSurface8* ppsDst = NULL;
; 290  : 
; 291  : 					if (SUCCEEDED(pkTexSrc->GetSurfaceLevel(i, &ppsSrc)))

  00150	8b 07		 mov	 eax, DWORD PTR [edi]
  00152	8d 4d d0	 lea	 ecx, DWORD PTR _ppsSrc$4[ebp]
  00155	51		 push	 ecx
  00156	56		 push	 esi
  00157	57		 push	 edi
  00158	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _ppsSrc$4[ebp], 0
  0015f	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _ppsDst$3[ebp], 0
  00166	ff 50 3c	 call	 DWORD PTR [eax+60]
  00169	85 c0		 test	 eax, eax
  0016b	78 3b		 js	 SHORT $LN5@CreateFrom

; 292  : 					{
; 293  : 						if (SUCCEEDED(pkTexDst->GetSurfaceLevel(i, &ppsDst)))

  0016d	8b 45 c8	 mov	 eax, DWORD PTR _pkTexDst$2[ebp]
  00170	8d 55 cc	 lea	 edx, DWORD PTR _ppsDst$3[ebp]
  00173	52		 push	 edx
  00174	56		 push	 esi
  00175	50		 push	 eax
  00176	8b 08		 mov	 ecx, DWORD PTR [eax]
  00178	ff 51 3c	 call	 DWORD PTR [ecx+60]
  0017b	85 c0		 test	 eax, eax
  0017d	78 20		 js	 SHORT $LN19@CreateFrom

; 294  : 						{
; 295  : 							D3DXLoadSurfaceFromSurface(ppsDst, NULL, NULL, ppsSrc, NULL, NULL, D3DX_FILTER_LINEAR, 0);

  0017f	6a 00		 push	 0
  00181	6a 03		 push	 3
  00183	6a 00		 push	 0
  00185	6a 00		 push	 0
  00187	ff 75 d0	 push	 DWORD PTR _ppsSrc$4[ebp]
  0018a	6a 00		 push	 0
  0018c	6a 00		 push	 0
  0018e	ff 75 cc	 push	 DWORD PTR _ppsDst$3[ebp]
  00191	e8 00 00 00 00	 call	 _D3DXLoadSurfaceFromSurface@32

; 296  : 							ppsDst->Release();

  00196	8b 45 cc	 mov	 eax, DWORD PTR _ppsDst$3[ebp]
  00199	50		 push	 eax
  0019a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019c	ff 51 08	 call	 DWORD PTR [ecx+8]
$LN19@CreateFrom:

; 297  : 						}
; 298  : 						ppsSrc->Release();

  0019f	8b 45 d0	 mov	 eax, DWORD PTR _ppsSrc$4[ebp]
  001a2	50		 push	 eax
  001a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a5	ff 51 08	 call	 DWORD PTR [ecx+8]
$LN5@CreateFrom:

; 285  : 
; 286  : 				for(int i=0; i<imageInfo.MipLevels; ++i) {

  001a8	46		 inc	 esi
  001a9	3b 75 e0	 cmp	 esi, DWORD PTR _imageInfo$5[ebp+12]
  001ac	72 a2		 jb	 SHORT $LL7@CreateFrom
$LN6@CreateFrom:

; 299  : 					}
; 300  : 				}
; 301  : 
; 302  : 				pkTexSrc->Release();

  001ae	8b 07		 mov	 eax, DWORD PTR [edi]
  001b0	57		 push	 edi
  001b1	ff 50 08	 call	 DWORD PTR [eax+8]
$LN17@CreateFrom:

; 303  : 			}
; 304  : 		}
; 305  : 	}
; 306  : 
; 307  : 	m_bEmpty = false;

  001b4	8b 45 c4	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  001b7	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 308  : 	return true;

  001bb	b0 01		 mov	 al, 1
$LN1@CreateFrom:

; 309  : }

  001bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c7	59		 pop	 ecx
  001c8	5f		 pop	 edi
  001c9	5e		 pop	 esi
  001ca	5b		 pop	 ebx
  001cb	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ce	33 cd		 xor	 ecx, ebp
  001d0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d5	8b e5		 mov	 esp, ebp
  001d7	5d		 pop	 ebp
  001d8	c2 10 00	 ret	 16			; 00000010H
$LN11@CreateFrom:

; 251  : 			case D3DFMT_A8R8G8B8:
; 252  : 				format = D3DFMT_A4R4G4B4;

  001db	be 1a 00 00 00	 mov	 esi, 26			; 0000001aH

; 253  : 				break;

  001e0	e9 03 ff ff ff	 jmp	 $LN3@CreateFrom
$LN28@CreateFrom:

; 213  : 	assert(ms_lpd3dDevice != NULL);
; 214  : 	assert(m_lpd3dTexture == NULL);
; 215  : 
; 216  : 	static CDXTCImage image;

  001e5	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA
  001ea	e8 00 00 00 00	 call	 __Init_thread_header
  001ef	83 c4 04	 add	 esp, 4
  001f2	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA, -1
  001f9	0f 85 54 fe ff
	ff		 jne	 $LN2@CreateFrom
  001ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?image@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4VCDXTCImage@@A
  00204	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0020b	e8 00 00 00 00	 call	 ??0CDXTCImage@@QAE@XZ	; CDXTCImage::CDXTCImage
  00210	68 00 00 00 00	 push	 OFFSET ??__Fimage@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@YAXXZ ; `CGraphicImageTexture::CreateFromMemoryFile'::`2'::`dynamic atexit destructor for 'image''
  00215	e8 00 00 00 00	 call	 _atexit
  0021a	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA
  0021f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00226	e8 00 00 00 00	 call	 __Init_thread_footer
  0022b	83 c4 08	 add	 esp, 8
  0022e	e9 20 fe ff ff	 jmp	 $LN2@CreateFrom
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z ENDP ; CGraphicImageTexture::CreateFromMemoryFile
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?CreateFromDiskFile@CGraphicImageTexture@@QAE_NPBDW4_D3DFORMAT@@K@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
_d3dFmt$ = 12						; size = 4
_dwFilter$ = 16						; size = 4
?CreateFromDiskFile@CGraphicImageTexture@@QAE_NPBDW4_D3DFORMAT@@K@Z PROC ; CGraphicImageTexture::CreateFromDiskFile, COMDAT
; _this$ = ecx

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 318  : 	Destroy();

  00006	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageTexture@@QAEXXZ ; CGraphicImageTexture::Destroy

; 319  : 
; 320  : 	SetFileName(c_szFileName);

  0000b	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?SetFileName@CGraphicImageTexture@@QAEXPBD@Z ; CGraphicImageTexture::SetFileName

; 321  : 
; 322  : 	m_d3dFmt = d3dFmt;

  00015	8b 45 0c	 mov	 eax, DWORD PTR _d3dFmt$[ebp]

; 323  : 	m_dwFilter = dwFilter;
; 324  : 	return CreateDeviceObjects();

  00018	8b ce		 mov	 ecx, esi
  0001a	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0001d	8b 45 10	 mov	 eax, DWORD PTR _dwFilter$[ebp]
  00020	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00023	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ ; CGraphicImageTexture::CreateDeviceObjects
  00028	5e		 pop	 esi

; 325  : }

  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
?CreateFromDiskFile@CGraphicImageTexture@@QAE_NPBDW4_D3DFORMAT@@K@Z ENDP ; CGraphicImageTexture::CreateFromDiskFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?CreateFromTexturePointer@CGraphicImageTexture@@QAEXPBVCGraphicTexture@@@Z
_TEXT	SEGMENT
_c_pSrcTexture$ = 8					; size = 4
?CreateFromTexturePointer@CGraphicImageTexture@@QAEXPBVCGraphicTexture@@@Z PROC ; CGraphicImageTexture::CreateFromTexturePointer, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 87   : 	if (m_lpd3dTexture)

  00006	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 06		 je	 SHORT $LN2@CreateFrom

; 88   : 		m_lpd3dTexture->Release();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	51		 push	 ecx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]
$LN2@CreateFrom:

; 89   : 
; 90   : 	m_width = c_pSrcTexture->GetWidth();

  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _c_pSrcTexture$[ebp]
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?GetWidth@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetWidth

; 91   : 	m_height = c_pSrcTexture->GetHeight();

  0001e	8b ce		 mov	 ecx, esi
  00020	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00023	e8 00 00 00 00	 call	 ?GetHeight@CGraphicTexture@@QBEHXZ ; CGraphicTexture::GetHeight

; 92   : 	m_lpd3dTexture = c_pSrcTexture->GetD3DTexture();

  00028	8b ce		 mov	 ecx, esi
  0002a	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0002d	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00032	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00035	5e		 pop	 esi

; 93   : 
; 94   : 	if (m_lpd3dTexture)

  00036	85 c0		 test	 eax, eax
  00038	74 06		 je	 SHORT $LN5@CreateFrom

; 95   : 		m_lpd3dTexture->AddRef();

  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	50		 push	 eax
  0003d	ff 51 04	 call	 DWORD PTR [ecx+4]
$LN5@CreateFrom:

; 96   : 
; 97   : 	m_bEmpty = false;
; 98   : }

  00040	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  00044	5f		 pop	 edi
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?CreateFromTexturePointer@CGraphicImageTexture@@QAEXPBVCGraphicTexture@@@Z ENDP ; CGraphicImageTexture::CreateFromTexturePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ
_TEXT	SEGMENT
_c_pvMap$2 = -344					; size = 4
_mappedFile$3 = -340					; size = 324
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ PROC	; CGraphicImageTexture::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx

; 42   : 	assert(ms_lpd3dDevice != NULL);
; 43   : 	assert(m_lpd3dTexture == NULL);
; 44   : 
; 45   : 	if (m_stFileName.empty())

  00030	83 7f 2c 00	 cmp	 DWORD PTR [edi+44], 0
  00034	75 35		 jne	 SHORT $LN2@CreateDevi

; 46   : 	{
; 47   : 		if (FAILED(ms_lpd3dDevice->CreateTexture(m_width, m_height, 1, 0, m_d3dFmt, D3DPOOL_MANAGED, &m_lpd3dTexture)))

  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0003c	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0003f	50		 push	 eax
  00040	6a 01		 push	 1
  00042	ff 77 14	 push	 DWORD PTR [edi+20]
  00045	8b 11		 mov	 edx, DWORD PTR [ecx]
  00047	6a 00		 push	 0
  00049	6a 01		 push	 1
  0004b	ff 77 0c	 push	 DWORD PTR [edi+12]
  0004e	ff 77 08	 push	 DWORD PTR [edi+8]
  00051	51		 push	 ecx
  00052	ff 52 50	 call	 DWORD PTR [edx+80]
  00055	85 c0		 test	 eax, eax
  00057	79 07		 jns	 SHORT $LN4@CreateDevi

; 48   : 			return false;

  00059	32 c0		 xor	 al, al
  0005b	e9 90 00 00 00	 jmp	 $LN1@CreateDevi
$LN4@CreateDevi:

; 65   : 		// return CreateFromMemoryFile(mappedFile.Size(), c_pvMap, m_d3dFmt, m_dwFilter);
; 66   : 	}
; 67   : 
; 68   : 	m_bEmpty = false;

  00060	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0

; 69   : 	return true;

  00064	b0 01		 mov	 al, 1
  00066	e9 85 00 00 00	 jmp	 $LN1@CreateDevi
$LN2@CreateDevi:

; 52   : 		CMappedFile	mappedFile;

  0006b	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _mappedFile$3[ebp]
  00071	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00076	83 7f 30 10	 cmp	 DWORD PTR [edi+48], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  0007a	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 52   : 		CMappedFile	mappedFile;

  0007d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2144 :         const value_type* _Result = _Bx._Buf;

  00084	8b c6		 mov	 eax, esi

; 2145 :         if (_Large_string_engaged()) {

  00086	72 02		 jb	 SHORT $LN28@CreateDevi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00088	8b 06		 mov	 eax, DWORD PTR [esi]
$LN28@CreateDevi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 55   : 		if (!CEterPackManager::Instance().Get(mappedFile, m_stFileName.c_str(), &c_pvMap))

  0008a	8d 8d a8 fe ff
	ff		 lea	 ecx, DWORD PTR _c_pvMap$2[ebp]
  00090	51		 push	 ecx
  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00097	50		 push	 eax
  00098	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _mappedFile$3[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  000a4	84 c0		 test	 al, al
  000a6	74 39		 je	 SHORT $LN9@CreateDevi

; 56   : 			return false;
; 57   : 
; 58   : 		//@fixme002
; 59   : 		if (!CreateFromMemoryFile(mappedFile.Size(), c_pvMap, m_d3dFmt, m_dwFilter))

  000a8	ff 77 18	 push	 DWORD PTR [edi+24]
  000ab	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _mappedFile$3[ebp]
  000b1	ff 77 14	 push	 DWORD PTR [edi+20]
  000b4	ff b5 a8 fe ff
	ff		 push	 DWORD PTR _c_pvMap$2[ebp]
  000ba	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  000bf	50		 push	 eax
  000c0	8b cf		 mov	 ecx, edi
  000c2	e8 00 00 00 00	 call	 ?CreateFromMemoryFile@CGraphicImageTexture@@QAE_NIPBXW4_D3DFORMAT@@K@Z ; CGraphicImageTexture::CreateFromMemoryFile
  000c7	84 c0		 test	 al, al
  000c9	75 41		 jne	 SHORT $LN6@CreateDevi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000cb	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  000cf	72 02		 jb	 SHORT $LN23@CreateDevi

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  000d1	8b 36		 mov	 esi, DWORD PTR [esi]
$LN23@CreateDevi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 61   : 			TraceError("CGraphicImageTexture::CreateDeviceObjects: CreateFromMemoryFile: texture not found(%s)", m_stFileName.c_str());

  000d3	56		 push	 esi
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@IIELBMJN@CGraphicImageTexture?3?3CreateDev@
  000d9	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000de	83 c4 08	 add	 esp, 8
$LN9@CreateDevi:
  000e1	32 db		 xor	 bl, bl
$LN10@CreateDevi:

; 62   : 			return false;
; 63   : 		}
; 64   : 		return true;

  000e3	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _mappedFile$3[ebp]
  000e9	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  000ee	8a c3		 mov	 al, bl
$LN1@CreateDevi:

; 70   : }

  000f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fa	59		 pop	 ecx
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00101	33 cd		 xor	 ecx, ebp
  00103	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
$LN6@CreateDevi:

; 62   : 			return false;
; 63   : 		}
; 64   : 		return true;

  0010c	b3 01		 mov	 bl, 1
  0010e	eb d3		 jmp	 SHORT $LN10@CreateDevi
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ$0:
  00000	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _mappedFile$3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ ENDP	; CGraphicImageTexture::CreateDeviceObjects
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?Create@CGraphicImageTexture@@QAE_NIIW4_D3DFORMAT@@K@Z
_TEXT	SEGMENT
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_d3dFmt$ = 16						; size = 4
_dwFilter$ = 20						; size = 4
?Create@CGraphicImageTexture@@QAE_NIIW4_D3DFORMAT@@K@Z PROC ; CGraphicImageTexture::Create, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 74   : 	assert(ms_lpd3dDevice != NULL);
; 75   : 	Destroy();

  00006	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageTexture@@QAEXXZ ; CGraphicImageTexture::Destroy

; 76   : 
; 77   : 	m_width = width;

  0000b	8b 45 08	 mov	 eax, DWORD PTR _width$[ebp]

; 78   : 	m_height = height;
; 79   : 	m_d3dFmt = d3dFmt;
; 80   : 	m_dwFilter = dwFilter;
; 81   : 
; 82   : 	return CreateDeviceObjects();

  0000e	8b ce		 mov	 ecx, esi
  00010	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00013	8b 45 0c	 mov	 eax, DWORD PTR _height$[ebp]
  00016	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00019	8b 45 10	 mov	 eax, DWORD PTR _d3dFmt$[ebp]
  0001c	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0001f	8b 45 14	 mov	 eax, DWORD PTR _dwFilter$[ebp]
  00022	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00025	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGraphicImageTexture@@QAE_NXZ ; CGraphicImageTexture::CreateDeviceObjects
  0002a	5e		 pop	 esi

; 83   : }

  0002b	5d		 pop	 ebp
  0002c	c2 10 00	 ret	 16			; 00000010H
?Create@CGraphicImageTexture@@QAE_NIIW4_D3DFORMAT@@K@Z ENDP ; CGraphicImageTexture::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ?Destroy@CGraphicImageTexture@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CGraphicImageTexture@@QAEXXZ PROC		; CGraphicImageTexture::Destroy, COMDAT
; _this$ = ecx

; 34   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 35   : 	CGraphicTexture::Destroy();

  00003	e8 00 00 00 00	 call	 ?Destroy@CGraphicTexture@@IAEXXZ ; CGraphicTexture::Destroy

; 36   : 
; 37   : 	Initialize();

  00008	8b ce		 mov	 ecx, esi
  0000a	5e		 pop	 esi
  0000b	e9 00 00 00 00	 jmp	 ?Initialize@CGraphicImageTexture@@IAEXXZ ; CGraphicImageTexture::Initialize
?Destroy@CGraphicImageTexture@@QAEXXZ ENDP		; CGraphicImageTexture::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ??1CGraphicImageTexture@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGraphicImageTexture@@UAE@XZ PROC			; CGraphicImageTexture::~CGraphicImageTexture, COMDAT
; _this$ = ecx

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGraphicImageTexture@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicImageTexture@@6B@

; 334  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageTexture@@QAEXXZ ; CGraphicImageTexture::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00033	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00036	72 0d		 jb	 SHORT $LN7@CGraphicIm

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00038	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	50		 push	 eax
  0003a	ff 76 1c	 push	 DWORD PTR [esi+28]
  0003d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00042	83 c4 08	 add	 esp, 8
$LN7@CGraphicIm:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 335  : }

  00045	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00047	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004e	c7 46 30 0f 00
	00 00		 mov	 DWORD PTR [esi+48], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00055	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 335  : }

  00059	e8 00 00 00 00	 call	 ??1CGraphicTexture@@MAE@XZ ; CGraphicTexture::~CGraphicTexture
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	5e		 pop	 esi
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
  0006e	cc		 int	 3
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
  00072	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGraphicImageTexture@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGraphicImageTexture@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGraphicImageTexture@@UAE@XZ ENDP			; CGraphicImageTexture::~CGraphicImageTexture
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp
;	COMDAT ??0CGraphicImageTexture@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGraphicImageTexture@@QAE@XZ PROC			; CGraphicImageTexture::CGraphicImageTexture, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicImageTexture@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CGraphicTexture@@IAE@XZ ; CGraphicTexture::CGraphicTexture
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicImageTexture@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0003b	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00042	c7 46 30 0f 00
	00 00		 mov	 DWORD PTR [esi+48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00049	c6 46 1c 00	 mov	 BYTE PTR [esi+28], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\GrpImageTexture.cpp

; 329  : 	Initialize();

  0004d	8b ce		 mov	 ecx, esi
  0004f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00053	e8 00 00 00 00	 call	 ?Initialize@CGraphicImageTexture@@IAEXXZ ; CGraphicImageTexture::Initialize

; 330  : }

  00058	8b c6		 mov	 eax, esi
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicImageTexture@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicTexture@@MAE@XZ ; CGraphicTexture::~CGraphicTexture
__unwindfunclet$??0CGraphicImageTexture@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CGraphicImageTexture@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicImageTexture@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicImageTexture@@QAE@XZ ENDP			; CGraphicImageTexture::CGraphicImageTexture
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
