; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CMSApplication@@QAE@XZ			; CMSApplication::CMSApplication
PUBLIC	??1CMSApplication@@UAE@XZ			; CMSApplication::~CMSApplication
PUBLIC	?Initialize@CMSApplication@@QAEXPAUHINSTANCE__@@@Z ; CMSApplication::Initialize
PUBLIC	?MessageLoop@CMSApplication@@QAEXXZ		; CMSApplication::MessageLoop
PUBLIC	?IsMessage@CMSApplication@@QAE_NXZ		; CMSApplication::IsMessage
PUBLIC	?MessageProcess@CMSApplication@@QAE_NXZ		; CMSApplication::MessageProcess
PUBLIC	?WindowProcedure@CMSApplication@@MAEJPAUHWND__@@IIJ@Z ; CMSApplication::WindowProcedure
PUBLIC	??_GCMSApplication@@UAEPAXI@Z			; CMSApplication::`scalar deleting destructor'
PUBLIC	??_7CMSApplication@@6B@				; CMSApplication::`vftable'
PUBLIC	??_R4CMSApplication@@6B@			; CMSApplication::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMSApplication@@@8			; CMSApplication `RTTI Type Descriptor'
PUBLIC	??_R3CMSApplication@@8				; CMSApplication::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMSApplication@@8				; CMSApplication::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMSApplication@@8			; CMSApplication::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CMSWindow@@8			; CMSWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMSWindow@@@8				; CMSWindow `RTTI Type Descriptor'
PUBLIC	??_R3CMSWindow@@8				; CMSWindow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMSWindow@@8				; CMSWindow::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	??0CMSWindow@@QAE@XZ:PROC			; CMSWindow::CMSWindow
EXTRN	??1CMSWindow@@UAE@XZ:PROC			; CMSWindow::~CMSWindow
EXTRN	?WindowProcedure@CMSWindow@@UAEJPAUHWND__@@IIJ@Z:PROC ; CMSWindow::WindowProcedure
EXTRN	?OnSize@CMSWindow@@UAEXIJ@Z:PROC		; CMSWindow::OnSize
EXTRN	??_ECMSApplication@@UAEPAXI@Z:PROC		; CMSApplication::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_hInstance@CMSWindow@@1PAUHINSTANCE__@@A:DWORD ; CMSWindow::ms_hInstance
;	COMDAT ??_R2CMSWindow@@8
rdata$r	SEGMENT
??_R2CMSWindow@@8 DD FLAT:??_R1A@?0A@EA@CMSWindow@@8	; CMSWindow::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMSWindow@@8
rdata$r	SEGMENT
??_R3CMSWindow@@8 DD 00H				; CMSWindow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMSWindow@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMSWindow@@@8
data$r	SEGMENT
??_R0?AVCMSWindow@@@8 DD FLAT:??_7type_info@@6B@	; CMSWindow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMSWindow@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMSWindow@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMSWindow@@8 DD FLAT:??_R0?AVCMSWindow@@@8 ; CMSWindow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMSWindow@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMSApplication@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMSApplication@@8 DD FLAT:??_R0?AVCMSApplication@@@8 ; CMSApplication::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMSApplication@@8
rdata$r	ENDS
;	COMDAT ??_R2CMSApplication@@8
rdata$r	SEGMENT
??_R2CMSApplication@@8 DD FLAT:??_R1A@?0A@EA@CMSApplication@@8 ; CMSApplication::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CMSWindow@@8
rdata$r	ENDS
;	COMDAT ??_R3CMSApplication@@8
rdata$r	SEGMENT
??_R3CMSApplication@@8 DD 00H				; CMSApplication::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMSApplication@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMSApplication@@@8
data$r	SEGMENT
??_R0?AVCMSApplication@@@8 DD FLAT:??_7type_info@@6B@	; CMSApplication `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMSApplication@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMSApplication@@6B@
rdata$r	SEGMENT
??_R4CMSApplication@@6B@ DD 00H				; CMSApplication::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMSApplication@@@8
	DD	FLAT:??_R3CMSApplication@@8
rdata$r	ENDS
;	COMDAT ??_7CMSApplication@@6B@
CONST	SEGMENT
??_7CMSApplication@@6B@ DD FLAT:??_R4CMSApplication@@6B@ ; CMSApplication::`vftable'
	DD	FLAT:??_ECMSApplication@@UAEPAXI@Z
	DD	FLAT:?WindowProcedure@CMSApplication@@MAEJPAUHWND__@@IIJ@Z
	DD	FLAT:?OnSize@CMSWindow@@UAEXIJ@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCMSApplication@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMSApplication@@UAEPAXI@Z PROC			; CMSApplication::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMSApplication@@UAE@XZ ; CMSApplication::~CMSApplication
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCMSApplication@@UAEPAXI@Z ENDP			; CMSApplication::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ?WindowProcedure@CMSApplication@@MAEJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uiMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WindowProcedure@CMSApplication@@MAEJPAUHWND__@@IIJ@Z PROC ; CMSApplication::WindowProcedure, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   : 	switch (uiMsg)

  00003	83 7d 0c 10	 cmp	 DWORD PTR _uiMsg$[ebp], 16 ; 00000010H
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	75 08		 jne	 SHORT $LN2@WindowProc

; 49   : 	{
; 50   : 		case WM_CLOSE:
; 51   : 			PostQuitMessage(0);

  0000c	6a 00		 push	 0
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@WindowProc:

; 52   : 			break;
; 53   : 	}
; 54   : 
; 55   : 	return CMSWindow::WindowProcedure(hWnd, uiMsg, wParam, lParam);

  00014	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00017	8b cf		 mov	 ecx, edi
  00019	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  0001c	ff 75 0c	 push	 DWORD PTR _uiMsg$[ebp]
  0001f	ff 75 08	 push	 DWORD PTR _hWnd$[ebp]
  00022	e8 00 00 00 00	 call	 ?WindowProcedure@CMSWindow@@UAEJPAUHWND__@@IIJ@Z ; CMSWindow::WindowProcedure
  00027	5f		 pop	 edi

; 56   : }

  00028	5d		 pop	 ebp
  00029	c2 10 00	 ret	 16			; 00000010H
?WindowProcedure@CMSApplication@@MAEJPAUHWND__@@IIJ@Z ENDP ; CMSApplication::WindowProcedure
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ?MessageProcess@CMSApplication@@QAE_NXZ
_TEXT	SEGMENT
_msg$ = -28						; size = 28
?MessageProcess@CMSApplication@@QAE_NXZ PROC		; CMSApplication::MessageProcess, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 36   : 	MSG msg;
; 37   : 
; 38   : 	if (!GetMessage(&msg, NULL, 0, 0))

  00006	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  00016	85 c0		 test	 eax, eax
  00018	75 06		 jne	 SHORT $LN2@MessagePro

; 39   : 		return false;

  0001a	32 c0		 xor	 al, al

; 44   : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN2@MessagePro:

; 40   : 
; 41   : 	TranslateMessage(&msg);

  00020	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00023	50		 push	 eax
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4

; 42   : 	DispatchMessage(&msg);

  0002a	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  0002d	50		 push	 eax
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4

; 43   : 	return true;

  00034	b0 01		 mov	 al, 1

; 44   : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?MessageProcess@CMSApplication@@QAE_NXZ ENDP		; CMSApplication::MessageProcess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ?IsMessage@CMSApplication@@QAE_NXZ
_TEXT	SEGMENT
_msg$ = -28						; size = 28
?IsMessage@CMSApplication@@QAE_NXZ PROC			; CMSApplication::IsMessage, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 26   : 	MSG msg;
; 27   : 
; 28   : 	if (!PeekMessage(&msg, NULL, 0, 0, PM_NOREMOVE))

  00006	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	6a 00		 push	 0
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  00018	85 c0		 test	 eax, eax
  0001a	0f 95 c0	 setne	 al

; 29   : 		return false;
; 30   : 
; 31   : 	return true;
; 32   : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?IsMessage@CMSApplication@@QAE_NXZ ENDP			; CMSApplication::IsMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ?MessageLoop@CMSApplication@@QAEXXZ
_TEXT	SEGMENT
?MessageLoop@CMSApplication@@QAEXXZ PROC		; CMSApplication::MessageLoop, COMDAT
; _this$ = ecx

; 20   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
$LL2@MessageLoo:

; 21   : 	while (MessageProcess());

  00003	8b ce		 mov	 ecx, esi
  00005	e8 00 00 00 00	 call	 ?MessageProcess@CMSApplication@@QAE_NXZ ; CMSApplication::MessageProcess
  0000a	84 c0		 test	 al, al
  0000c	75 f5		 jne	 SHORT $LL2@MessageLoo

; 22   : }

  0000e	5e		 pop	 esi
  0000f	c3		 ret	 0
?MessageLoop@CMSApplication@@QAEXXZ ENDP		; CMSApplication::MessageLoop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ?Initialize@CMSApplication@@QAEXPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
?Initialize@CMSApplication@@QAEXPAUHINSTANCE__@@@Z PROC	; CMSApplication::Initialize, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 16   : 	ms_hInstance = hInstance;

  00003	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00006	a3 00 00 00 00	 mov	 DWORD PTR ?ms_hInstance@CMSWindow@@1PAUHINSTANCE__@@A, eax ; CMSWindow::ms_hInstance

; 17   : }

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?Initialize@CMSApplication@@QAEXPAUHINSTANCE__@@@Z ENDP	; CMSApplication::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ??1CMSApplication@@UAE@XZ
_TEXT	SEGMENT
??1CMSApplication@@UAE@XZ PROC				; CMSApplication::~CMSApplication, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CMSApplication@@6B@

; 10   : //	for (TWindowClassSet::iterator i=ms_stWCSet.begin(); i!=ms_stWCSet.end(); ++i)
; 11   : //		UnregisterClass(*i, ms_hInstance);
; 12   : }

  00006	e9 00 00 00 00	 jmp	 ??1CMSWindow@@UAE@XZ	; CMSWindow::~CMSWindow
??1CMSApplication@@UAE@XZ ENDP				; CMSApplication::~CMSApplication
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLib\MSApplication.cpp
;	COMDAT ??0CMSApplication@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMSApplication@@QAE@XZ PROC				; CMSApplication::CMSApplication, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CMSWindow@@QAE@XZ	; CMSWindow::CMSWindow
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMSApplication@@6B@

; 6    : }

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??0CMSApplication@@QAE@XZ ENDP				; CMSApplication::CMSApplication
_TEXT	ENDS
END
