; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ms_isMinLODModeEnable@@3_NA			; ms_isMinLODModeEnable
_BSS	SEGMENT
?ms_isMinLODModeEnable@@3_NA DB 01H DUP (?)		; ms_isMinLODModeEnable
_BSS	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?SetMinLODMode@CGrannyLODController@@SAX_N@Z	; CGrannyLODController::SetMinLODMode
PUBLIC	??0CGrannyLODController@@QAE@XZ			; CGrannyLODController::CGrannyLODController
PUBLIC	??1CGrannyLODController@@UAE@XZ			; CGrannyLODController::~CGrannyLODController
PUBLIC	?Clear@CGrannyLODController@@QAEXXZ		; CGrannyLODController::Clear
PUBLIC	?CreateDeviceObjects@CGrannyLODController@@QAEXXZ ; CGrannyLODController::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ ; CGrannyLODController::DestroyDeviceObjects
PUBLIC	?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z ; CGrannyLODController::AddModel
PUBLIC	?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z ; CGrannyLODController::AttachModelInstance
PUBLIC	?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z ; CGrannyLODController::DetachModelInstance
PUBLIC	?SetLODLimits@CGrannyLODController@@QAEXMM@Z	; CGrannyLODController::SetLODLimits
PUBLIC	?SetLODLevel@CGrannyLODController@@QAEXE@Z	; CGrannyLODController::SetLODLevel
PUBLIC	?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z ; CGrannyLODController::SetMaterialImagePointer
PUBLIC	?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z ; CGrannyLODController::SetMaterialData
PUBLIC	?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z ; CGrannyLODController::SetSpecularInfo
PUBLIC	?RenderWithOneTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithOneTexture
PUBLIC	?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::RenderWithTwoTexture
PUBLIC	?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::BlendRenderWithOneTexture
PUBLIC	?BlendRenderWithTwoTexture@CGrannyLODController@@QAEXXZ ; CGrannyLODController::BlendRenderWithTwoTexture
PUBLIC	?Update@CGrannyLODController@@QAEXMMM@Z		; CGrannyLODController::Update
PUBLIC	?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z	; CGrannyLODController::UpdateLODLevel
PUBLIC	?UpdateTime@CGrannyLODController@@QAEXM@Z	; CGrannyLODController::UpdateTime
PUBLIC	?UpdateSkeleton@CGrannyLODController@@QAEXPBUD3DXMATRIX@@M@Z ; CGrannyLODController::UpdateSkeleton
PUBLIC	?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::Deform
PUBLIC	?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::DeformNoSkin
PUBLIC	?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyLODController::DeformAll
PUBLIC	?RenderToShadowMap@CGrannyLODController@@QAEXXZ	; CGrannyLODController::RenderToShadowMap
PUBLIC	?RenderShadow@CGrannyLODController@@QAEXXZ	; CGrannyLODController::RenderShadow
PUBLIC	?ReloadTexture@CGrannyLODController@@QAEXXZ	; CGrannyLODController::ReloadTexture
PUBLIC	?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyLODController::GetBoundBox
PUBLIC	?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyLODController::Intersect
PUBLIC	?SetLocalTime@CGrannyLODController@@QAEXM@Z	; CGrannyLODController::SetLocalTime
PUBLIC	?ResetLocalTime@CGrannyLODController@@QAEXXZ	; CGrannyLODController::ResetLocalTime
PUBLIC	?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z ; CGrannyLODController::SetMotionPointer
PUBLIC	?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z ; CGrannyLODController::ChangeMotionPointer
PUBLIC	?SetMotionAtEnd@CGrannyLODController@@QAEXXZ	; CGrannyLODController::SetMotionAtEnd
PUBLIC	?isModelInstance@CGrannyLODController@@QAEHXZ	; CGrannyLODController::isModelInstance
PUBLIC	?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
PUBLIC	?SetCurrentModelInstance@CGrannyLODController@@IAEXPAVCGrannyModelInstance@@@Z ; CGrannyLODController::SetCurrentModelInstance
PUBLIC	?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ ; CGrannyLODController::RefreshAttachedModelInstance
PUBLIC	?__ReserveSharedDeformableVertexBuffer@CGrannyLODController@@IAEXK@Z ; CGrannyLODController::__ReserveSharedDeformableVertexBuffer
PUBLIC	??1SAttachingModelData@CGrannyLODController@@QAE@XZ ; CGrannyLODController::SAttachingModelData::~SAttachingModelData
PUBLIC	?deallocate@?$allocator@USAttachingModelData@CGrannyLODController@@@std@@QAEXQAUSAttachingModelData@CGrannyLODController@@I@Z ; std::allocator<CGrannyLODController::SAttachingModelData>::deallocate
PUBLIC	??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::~vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >
PUBLIC	?erase@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::erase
PUBLIC	?_Destroy@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@AAEXPAUSAttachingModelData@CGrannyLODController@@0@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Destroy
PUBLIC	?_Xlength@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@CAXXZ ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Xlength
PUBLIC	?push_front@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@QAEXABQAVCGrannyModelInstance@@@Z ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::push_front
PUBLIC	?_Xlen@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@ABEXXZ ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Xlen
PUBLIC	?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Tidy
PUBLIC	??_GCGrannyLODController@@UAEPAXI@Z		; CGrannyLODController::`scalar deleting destructor'
PUBLIC	??0?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
PUBLIC	??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::~vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
PUBLIC	?_Xlength@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@CAXXZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Xlength
PUBLIC	?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z ; __FreeDeformVertexBuffer
PUBLIC	?__ReserveSharedVertexBuffers@@YAXII@Z		; __ReserveSharedVertexBuffers
PUBLIC	?GrannyCreateSharedDeformBuffer@@YAXXZ		; GrannyCreateSharedDeformBuffer
PUBLIC	?GrannyDestroySharedDeformBuffer@@YAXXZ		; GrannyDestroySharedDeformBuffer
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Emplace_reallocate<CGraphicVertexBuffer * const &>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Emplace_reallocate<CGrannyLODController::SAttachingModelData const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAXPAPAVCGraphicVertexBuffer@@QAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicVertexBuffer *> >
PUBLIC	??$_Destroy_in_place@PAPAVCGrannyModelInstance@@@std@@YAXAAPAPAVCGrannyModelInstance@@@Z ; std::_Destroy_in_place<CGrannyModelInstance * *>
PUBLIC	??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CGrannyModelInstance * * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAPAVCGrannyModelInstance@@@std@@YAXPAPAPAVCGrannyModelInstance@@QAPAPAV1@@Z ; std::_Destroy_range<CGrannyModelInstance * * *>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Copy_memmove@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@00@Z ; std::_Copy_memmove<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
PUBLIC	??$_Zero_range@PAPAPAVCGrannyModelInstance@@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0@Z ; std::_Zero_range<CGrannyModelInstance * * *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ; std::_Uninitialized_move<CGraphicVertexBuffer * *,std::allocator<CGraphicVertexBuffer *> >
PUBLIC	??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Uninitialized_move<CGrannyLODController::SAttachingModelData *,std::allocator<CGrannyLODController::SAttachingModelData> >
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Copy_memmove@PAPAVCGraphicVertexBuffer@@PAPAV1@@std@@YAPAPAVCGraphicVertexBuffer@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicVertexBuffer * *,CGraphicVertexBuffer * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7CGrannyLODController@@6B@			; CGrannyLODController::`vftable'
PUBLIC	??_C@_0BG@IJPBENCD@NEW_ERROR?5?$CF8d?3?5?$CFd?$CI?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0HN@JOABBJCG@CGrannyLODController?3?3RefreshAt@ ; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGrannyLODController@@6B@			; CGrannyLODController::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGrannyLODController@@@8		; CGrannyLODController `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyLODController@@8			; CGrannyLODController::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyLODController@@8			; CGrannyLODController::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGrannyLODController@@8		; CGrannyLODController::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@41f00000
PUBLIC	__real@42b40000
PUBLIC	__real@43fa0000
PUBLIC	__real@44bb8000
PUBLIC	__real@451c4000
PUBLIC	__real@459c4000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?MIN@@YAHHH@Z:PROC				; MIN
EXTRN	?fMAX@@YAMMM@Z:PROC				; fMAX
EXTRN	?fMINMAX@@YAMMMM@Z:PROC				; fMINMAX
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	??0CGraphicVertexBuffer@@QAE@XZ:PROC		; CGraphicVertexBuffer::CGraphicVertexBuffer
EXTRN	??1CGraphicVertexBuffer@@UAE@XZ:PROC		; CGraphicVertexBuffer::~CGraphicVertexBuffer
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?GetVertexCount@CGraphicVertexBuffer@@QBEHXZ:PROC ; CGraphicVertexBuffer::GetVertexCount
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?GetDeformVertexCount@CGrannyModel@@QBEHXZ:PROC	; CGrannyModel::GetDeformVertexCount
EXTRN	?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z:PROC ; CGraphicThing::GetModelPointer
EXTRN	?GetModelCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetModelCount
EXTRN	?New@CGrannyModelInstance@@SAPAV1@XZ:PROC	; CGrannyModelInstance::New
EXTRN	?Delete@CGrannyModelInstance@@SAXPAV1@@Z:PROC	; CGrannyModelInstance::Delete
EXTRN	?CreateDeviceObjects@CGrannyModelInstance@@QAE_NXZ:PROC ; CGrannyModelInstance::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::DestroyDeviceObjects
EXTRN	?Update@CGrannyModelInstance@@QAEXK@Z:PROC	; CGrannyModelInstance::Update
EXTRN	?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z:PROC ; CGrannyModelInstance::UpdateLocalTime
EXTRN	?UpdateSkeleton@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@M@Z:PROC ; CGrannyModelInstance::UpdateSkeleton
EXTRN	?DeformNoSkin@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyModelInstance::DeformNoSkin
EXTRN	?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyModelInstance::Deform
EXTRN	?RenderWithOneTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::RenderWithOneTexture
EXTRN	?RenderWithTwoTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::RenderWithTwoTexture
EXTRN	?BlendRenderWithOneTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::BlendRenderWithOneTexture
EXTRN	?BlendRenderWithTwoTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::BlendRenderWithTwoTexture
EXTRN	?RenderWithoutTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::RenderWithoutTexture
EXTRN	?SetMaterialImagePointer@CGrannyModelInstance@@QAEXPBDPAVCGraphicImage@@@Z:PROC ; CGrannyModelInstance::SetMaterialImagePointer
EXTRN	?SetMaterialData@CGrannyModelInstance@@QAEXPBDABUSMaterialData@@@Z:PROC ; CGrannyModelInstance::SetMaterialData
EXTRN	?SetSpecularInfo@CGrannyModelInstance@@QAEXPBDHM@Z:PROC ; CGrannyModelInstance::SetSpecularInfo
EXTRN	?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z:PROC ; CGrannyModelInstance::SetLinkedModelPointer
EXTRN	?SetMotionPointer@CGrannyModelInstance@@QAEXPBVCGrannyMotion@@MHM@Z:PROC ; CGrannyModelInstance::SetMotionPointer
EXTRN	?ChangeMotionPointer@CGrannyModelInstance@@QAEXPBVCGrannyMotion@@HM@Z:PROC ; CGrannyModelInstance::ChangeMotionPointer
EXTRN	?SetMotionAtEnd@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::SetMotionAtEnd
EXTRN	?CopyMotion@CGrannyModelInstance@@QAEXPAV1@_N@Z:PROC ; CGrannyModelInstance::CopyMotion
EXTRN	?SetLocalTime@CGrannyModelInstance@@QAEXM@Z:PROC ; CGrannyModelInstance::SetLocalTime
EXTRN	?ResetLocalTime@CGrannyModelInstance@@QAEHXZ:PROC ; CGrannyModelInstance::ResetLocalTime
EXTRN	?SetParentModelInstance@CGrannyModelInstance@@QAEXPBV1@PBD@Z:PROC ; CGrannyModelInstance::SetParentModelInstance
EXTRN	?SetParentModelInstance@CGrannyModelInstance@@QAEXPBV1@H@Z:PROC ; CGrannyModelInstance::SetParentModelInstance
EXTRN	?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z:PROC ; CGrannyModelInstance::Intersect
EXTRN	?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyModelInstance::GetBoundBox
EXTRN	?ReloadTexture@CGrannyModelInstance@@QAEXXZ:PROC ; CGrannyModelInstance::ReloadTexture
EXTRN	??_ECGrannyLODController@@UAEPAXI@Z:PROC	; CGrannyLODController::`vector deleting destructor'
EXTRN	__time64:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A:BYTE ; CGraphicBase::ms_matIdentity
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
	ALIGN	4

?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A DB 06cH DUP (?) ; gs_vbs
?gs_emptyVB@@3VCGraphicVertexBuffer@@A DB 020H DUP (?)	; gs_emptyVB
_BSS	ENDS
;	COMDAT ?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA
_BSS	SEGMENT
?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA DQ 01H DUP (?) ; `__AllocDeformVertexBuffer'::`2'::base
_BSS	ENDS
;	COMDAT ?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA DD 01H DUP (?) ; `__AllocDeformVertexBuffer'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
?gs_vbs$initializer$@@3P6AXXZA DD FLAT:??__Egs_vbs@@YAXXZ ; gs_vbs$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@451c4000
CONST	SEGMENT
__real@451c4000 DD 0451c4000r			; 2500
CONST	ENDS
;	COMDAT __real@44bb8000
CONST	SEGMENT
__real@44bb8000 DD 044bb8000r			; 1500
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyLODController@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyLODController@@8 DD FLAT:??_R0?AVCGrannyLODController@@@8 ; CGrannyLODController::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyLODController@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyLODController@@8
rdata$r	SEGMENT
??_R2CGrannyLODController@@8 DD FLAT:??_R1A@?0A@EA@CGrannyLODController@@8 ; CGrannyLODController::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyLODController@@8
rdata$r	SEGMENT
??_R3CGrannyLODController@@8 DD 00H			; CGrannyLODController::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGrannyLODController@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyLODController@@@8
data$r	SEGMENT
??_R0?AVCGrannyLODController@@@8 DD FLAT:??_7type_info@@6B@ ; CGrannyLODController `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyLODController@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGrannyLODController@@6B@
rdata$r	SEGMENT
??_R4CGrannyLODController@@6B@ DD 00H			; CGrannyLODController::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGrannyLODController@@@8
	DD	FLAT:??_R3CGrannyLODController@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HN@JOABBJCG@CGrannyLODController?3?3RefreshAt@
CONST	SEGMENT
??_C@_0HN@JOABBJCG@CGrannyLODController?3?3RefreshAt@ DB 'CGrannyLODContr'
	DB	'oller::RefreshAttachedModelInstance : m_AttachedModelDataVect'
	DB	'or[%d]->pkLODController->GetModelIntance()==NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJPBENCD@NEW_ERROR?5?$CF8d?3?5?$CFd?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BG@IJPBENCD@NEW_ERROR?5?$CF8d?3?5?$CFd?$CI?$CFd?$CJ@ DB 'NEW_ERROR'
	DB	' %8d: %d(%d)', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?LODHEIGHT_ACTOR@@3MA DD 043fa0000r		; 500	; LODHEIGHT_ACTOR
?LODDISTANCE_ACTOR@@3MA DD 0459c4000r		; 5000	; LODDISTANCE_ACTOR
?LODDISTANCE_BUILDING@@3MA DD 046c35000r	; 25000	; LODDISTANCE_BUILDING
_DATA	ENDS
;	COMDAT ??_7CGrannyLODController@@6B@
CONST	SEGMENT
??_7CGrannyLODController@@6B@ DD FLAT:??_R4CGrannyLODController@@6B@ ; CGrannyLODController::`vftable'
	DD	FLAT:??_ECGrannyLODController@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z$0
__unwindtable$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z$3
__ehfuncinfo$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__ReserveSharedVertexBuffers@@YAXII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__ReserveSharedVertexBuffers@@YAXII@Z$0
__ehfuncinfo$?__ReserveSharedVertexBuffers@@YAXII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__ReserveSharedVertexBuffers@@YAXII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z$0
__ehfuncinfo$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z$0
__ehfuncinfo$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGrannyLODController@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGrannyLODController@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGrannyLODController@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGrannyLODController@@QAE@XZ$1
__ehfuncinfo$??0CGrannyLODController@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CGrannyLODController@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?gs_emptyVB$initializer$@@3P6AXXZA DD FLAT:??__Egs_emptyVB@@YAXXZ ; gs_emptyVB$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicVertexBuffer@@PAPAV1@@std@@YAPAPAVCGraphicVertexBuffer@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicVertexBuffer@@PAPAV1@@std@@YAPAPAVCGraphicVertexBuffer@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicVertexBuffer * *,CGraphicVertexBuffer * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicVertexBuffer@@PAPAV1@@std@@YAPAPAVCGraphicVertexBuffer@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicVertexBuffer * *,CGraphicVertexBuffer * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z PROC ; std::_Uninitialized_move<CGrannyLODController::SAttachingModelData *,std::allocator<CGrannyLODController::SAttachingModelData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  0000a	57		 push	 edi

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	3b cf		 cmp	 ecx, edi
  00010	74 58		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00012	53		 push	 ebx
  00013	8b de		 mov	 ebx, esi
  00015	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  00018	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0001b	2b d9		 sub	 ebx, ecx
  0001d	0f 1f 00	 npad	 3
$LL4@Uninitiali:
  00020	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]

; 1509 :         ++_Last;

  00023	8d 40 1c	 lea	 eax, DWORD PTR [eax+28]
  00026	89 0e		 mov	 DWORD PTR [esi], ecx
  00028	8d 52 1c	 lea	 edx, DWORD PTR [edx+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0002b	c7 42 e0 00 00
	00 00		 mov	 DWORD PTR [edx-32], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00032	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00035	c7 42 e4 00 00
	00 00		 mov	 DWORD PTR [edx-28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  0003c	83 c6 1c	 add	 esi, 28			; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0003f	0f 10 40 e4	 movups	 xmm0, XMMWORD PTR [eax-28]
  00043	0f 11 44 03 e4	 movups	 XMMWORD PTR [ebx+eax-28], xmm0
  00048	f3 0f 7e 40 f4	 movq	 xmm0, QWORD PTR [eax-12]
  0004d	66 0f d6 44 03
	f4		 movq	 QWORD PTR [ebx+eax-12], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00053	c7 40 f4 00 00
	00 00		 mov	 DWORD PTR [eax-12], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0005a	c7 40 f8 0f 00
	00 00		 mov	 DWORD PTR [eax-8], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00061	c6 40 e4 00	 mov	 BYTE PTR [eax-28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00065	3b cf		 cmp	 ecx, edi
  00067	75 b7		 jne	 SHORT $LL4@Uninitiali
  00069	5b		 pop	 ebx
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0006a	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0006d	56		 push	 esi
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  00077	8b c6		 mov	 eax, esi
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi

; 1664 :     }
; 1665 : }

  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ENDP ; std::_Uninitialized_move<CGrannyLODController::SAttachingModelData *,std::allocator<CGrannyLODController::SAttachingModelData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicVertexBuffer * *,std::allocator<CGraphicVertexBuffer *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicVertexBuffer@@PAPAV1@@std@@YAPAPAVCGraphicVertexBuffer@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicVertexBuffer * *,CGraphicVertexBuffer * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicVertexBuffer * *,std::allocator<CGraphicVertexBuffer *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAPAVCGrannyModelInstance@@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAPAVCGrannyModelInstance@@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0@Z PROC ; std::_Zero_range<CGrannyModelInstance * * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAPAVCGrannyModelInstance@@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0@Z ENDP ; std::_Zero_range<CGrannyModelInstance * * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@00@Z PROC ; std::_Copy_memmove<CGrannyModelInstance * * *,CGrannyModelInstance * * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@00@Z ENDP ; std::_Copy_memmove<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1084 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Obj$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	89 01		 mov	 DWORD PTR [ecx], eax
  0000d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 998  : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00003	6a 08		 push	 8
  00005	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000d	83 c4 08	 add	 esp, 8

; 999  :     // deallocate a plain pointer using an allocator
; 1000 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1001 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1002 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);
; 1003 :     } else {
; 1004 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1005 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1006 :     }
; 1007 : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 32		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 18	 add	 esi, 24			; 00000018H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 0d		 jb	 SHORT $LN18@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00019	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	50		 push	 eax
  0001b	ff 76 ec	 push	 DWORD PTR [esi-20]
  0001e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00023	83 c4 08	 add	 esp, 8
$LN18@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00026	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002d	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00037	83 c6 1c	 add	 esi, 28			; 0000001cH
  0003a	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  0003d	3b c7		 cmp	 eax, edi
  0003f	75 d1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00041	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAPAVCGrannyModelInstance@@@std@@YAXPAPAPAVCGrannyModelInstance@@QAPAPAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAPAVCGrannyModelInstance@@@std@@YAXPAPAPAVCGrannyModelInstance@@QAPAPAV1@@Z PROC ; std::_Destroy_range<CGrannyModelInstance * * *>, COMDAT

; 969  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 970  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 971  :         for (; _First != _Last; ++_First) {
; 972  :             _Destroy_in_place(*_First);
; 973  :         }
; 974  :     }
; 975  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAPAPAVCGrannyModelInstance@@@std@@YAXPAPAPAVCGrannyModelInstance@@QAPAPAV1@@Z ENDP ; std::_Destroy_range<CGrannyModelInstance * * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<CGrannyModelInstance * * *,unsigned int>, COMDAT

; 1874 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1879 :     } else {
; 1880 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1881 :         for (; 0 < _Count; --_Count) {
; 1882 :             _Backout._Emplace_back();
; 1883 :         }
; 1884 : 
; 1885 :         return _Backout._Release();
; 1886 :     }
; 1887 : }

  00012	5d		 pop	 ebp

; 1875 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1876 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1877 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1878 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAPAVCGrannyModelInstance@@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0@Z ; std::_Zero_range<CGrannyModelInstance * * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<CGrannyModelInstance * * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z PROC ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>, COMDAT

; 1591 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1599 :     } else {
; 1600 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1601 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1602 :             _Backout._Emplace_back(*_UFirst);
; 1603 :         }
; 1604 : 
; 1605 :         _UDest = _Backout._Release();
; 1606 :     }
; 1607 : 
; 1608 :     _Seek_wrapped(_Dest, _UDest);
; 1609 :     return _Dest;
; 1610 : }

  00003	5d		 pop	 ebp

; 1592 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1593 :     _Adl_verify_range(_First, _Last);
; 1594 :     auto _UFirst      = _Get_unwrapped(_First);
; 1595 :     const auto _ULast = _Get_unwrapped(_Last);
; 1596 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1597 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1598 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@00@Z ; std::_Copy_memmove<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ENDP ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAPAVCGrannyModelInstance@@@std@@YAXAAPAPAVCGrannyModelInstance@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAPAVCGrannyModelInstance@@@std@@YAXAAPAPAVCGrannyModelInstance@@@Z PROC ; std::_Destroy_in_place<CGrannyModelInstance * *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAPAVCGrannyModelInstance@@@std@@YAXAAPAPAVCGrannyModelInstance@@@Z ENDP ; std::_Destroy_in_place<CGrannyModelInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAXPAPAVCGraphicVertexBuffer@@QAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAXPAPAVCGraphicVertexBuffer@@QAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicVertexBuffer *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAXPAPAVCGraphicVertexBuffer@@QAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicVertexBuffer *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Newvec$ = -44						; size = 4
_this$ = -40						; size = 4
tv434 = -36						; size = 4
tv428 = -32						; size = 4
__Newsize$1$ = -28					; size = 4
__Newcapacity$ = -24					; size = 4
__Whereoff$1$ = -20					; size = 4
__Constructed_last$ = -20				; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z PROC ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Emplace_reallocate<CGrannyLODController::SAttachingModelData const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d d8	 mov	 DWORD PTR _this$[ebp], edi

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00032	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00037	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003d	2b f3		 sub	 esi, ebx
  0003f	f7 ee		 imul	 esi
  00041	2b cb		 sub	 ecx, ebx
  00043	03 d6		 add	 edx, esi
  00045	c1 fa 04	 sar	 edx, 4
  00048	8b c2		 mov	 eax, edx
  0004a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004d	03 c2		 add	 eax, edx
  0004f	89 45 ec	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  00052	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00057	f7 e9		 imul	 ecx
  00059	03 d1		 add	 edx, ecx
  0005b	c1 fa 04	 sar	 edx, 4
  0005e	8b f2		 mov	 esi, edx
  00060	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00063	03 f2		 add	 esi, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  00065	81 fe 49 92 24
	09		 cmp	 esi, 153391689		; 09249249H
  0006b	0f 84 5f 01 00
	00		 je	 $LN47@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00071	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00074	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00079	2b cb		 sub	 ecx, ebx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0007b	46		 inc	 esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0007c	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0007e	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00083	89 75 e4	 mov	 DWORD PTR __Newsize$1$[ebp], esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00086	03 d1		 add	 edx, ecx
  00088	c1 fa 04	 sar	 edx, 4
  0008b	8b ca		 mov	 ecx, edx
  0008d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00090	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00092	8b d1		 mov	 edx, ecx
  00094	d1 ea		 shr	 edx, 1
  00096	2b c2		 sub	 eax, edx
  00098	3b c8		 cmp	 ecx, eax
  0009a	76 07		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  0009c	8b c6		 mov	 eax, esi
  0009e	89 75 e8	 mov	 DWORD PTR __Newcapacity$[ebp], esi
  000a1	eb 0b		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000a3	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  000a6	3b c6		 cmp	 eax, esi
  000a8	0f 42 c6	 cmovb	 eax, esi
  000ab	89 45 e8	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000ae	3d 49 92 24 09	 cmp	 eax, 153391689		; 09249249H
  000b3	0f 87 1c 01 00
	00		 ja	 $LN48@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b9	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  000c0	2b c8		 sub	 ecx, eax
  000c2	c1 e1 02	 shl	 ecx, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c5	51		 push	 ecx

; 65   :     return _Count * _Ty_size;

  000c6	89 4d e0	 mov	 DWORD PTR tv428[ebp], ecx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c9	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000ce	8b 4d ec	 mov	 ecx, DWORD PTR __Whereoff$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000d1	8b d8		 mov	 ebx, eax
  000d3	83 c4 04	 add	 esp, 4
  000d6	89 5d d4	 mov	 DWORD PTR __Newvec$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 748  :         _TRY_BEGIN

  000d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000e0	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  000e7	2b c1		 sub	 eax, ecx

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000e9	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  000ec	8d 14 83	 lea	 edx, DWORD PTR [ebx+eax*4]
  000ef	8d 42 1c	 lea	 eax, DWORD PTR [edx+28]
  000f2	89 55 dc	 mov	 DWORD PTR tv434[ebp], edx
  000f5	89 45 ec	 mov	 DWORD PTR __Constructed_last$[ebp], eax
  000f8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000fa	89 02		 mov	 DWORD PTR [edx], eax
  000fc	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000ff	50		 push	 eax
  00100	8d 4a 04	 lea	 ecx, DWORD PTR [edx+4]
  00103	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 750  :         _Constructed_first = _Newvec + _Whereoff;
; 751  : 
; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00108	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0010b	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  0010e	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00110	3b d0		 cmp	 edx, eax
  00112	75 04		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00114	8b d3		 mov	 edx, ebx

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00116	eb 15		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00118	57		 push	 edi
  00119	53		 push	 ebx
  0011a	52		 push	 edx
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Uninitialized_move<CGrannyLODController::SAttachingModelData *,std::allocator<CGrannyLODController::SAttachingModelData> >
  00121	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00124	83 c4 10	 add	 esp, 16			; 00000010H
  00127	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0012a	8b 55 ec	 mov	 edx, DWORD PTR __Constructed_last$[ebp]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0012d	57		 push	 edi
  0012e	52		 push	 edx
  0012f	50		 push	 eax
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAPAUSAttachingModelData@CGrannyLODController@@QAU12@0PAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Uninitialized_move<CGrannyLODController::SAttachingModelData *,std::allocator<CGrannyLODController::SAttachingModelData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00136	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00138	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0013b	85 c9		 test	 ecx, ecx
  0013d	74 3d		 je	 SHORT $LN38@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0013f	57		 push	 edi
  00140	ff 77 04	 push	 DWORD PTR [edi+4]
  00143	51		 push	 ecx
  00144	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00149	8b 37		 mov	 esi, DWORD PTR [edi]
  0014b	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00150	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00153	2b ce		 sub	 ecx, esi
  00155	f7 e9		 imul	 ecx
  00157	03 d1		 add	 edx, ecx
  00159	c1 fa 04	 sar	 edx, 4
  0015c	8b ca		 mov	 ecx, edx
  0015e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00161	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00163	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  0016a	2b c1		 sub	 eax, ecx
  0016c	c1 e0 02	 shl	 eax, 2
  0016f	50		 push	 eax
  00170	56		 push	 esi
  00171	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00176	8b 75 e4	 mov	 esi, DWORD PTR __Newsize$1$[ebp]
  00179	83 c4 14	 add	 esp, 20			; 00000014H
$LN38@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 766  :         return _Newvec + _Whereoff;

  0017c	8b 45 dc	 mov	 eax, DWORD PTR tv434[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0017f	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  00186	2b ce		 sub	 ecx, esi
  00188	89 1f		 mov	 DWORD PTR [edi], ebx
  0018a	8d 0c 8b	 lea	 ecx, DWORD PTR [ebx+ecx*4]
  0018d	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00190	8b 4d e0	 mov	 ecx, DWORD PTR tv428[ebp]
  00193	03 cb		 add	 ecx, ebx
  00195	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 767  :     }

  00198	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a2	59		 pop	 ecx
  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z$0:

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  001ac	8b 45 ec	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  001af	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b2	50		 push	 eax
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@AAEXPAUSAttachingModelData@CGrannyLODController@@0@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  001b9	ff 75 e8	 push	 DWORD PTR __Newcapacity$[ebp]
  001bc	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bf	ff 75 d4	 push	 DWORD PTR __Newvec$[ebp]
  001c2	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USAttachingModelData@CGrannyLODController@@@std@@QAEXQAUSAttachingModelData@CGrannyLODController@@I@Z ; std::allocator<CGrannyLODController::SAttachingModelData>::deallocate

; 762  :         _RERAISE;

  001c7	6a 00		 push	 0
  001c9	6a 00		 push	 0
  001cb	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN47@Emplace_re:

; 738  :             _Xlength();

  001d0	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@CAXXZ ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Xlength
$LN48@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001d5	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN45@Emplace_re:
  001da	cc		 int	 3
  001db	cc		 int	 3
  001dc	cc		 int	 3
  001dd	cc		 int	 3
  001de	cc		 int	 3
  001df	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z ENDP ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Emplace_reallocate<CGrannyLODController::SAttachingModelData const &>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1027 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1028 :     using _Ty = typename _Alloc::value_type;
; 1029 :     _Ptr->~_Ty();
; 1030 :     _Deallocate_plain(_Al, _Ptr);

  00000	e9 00 00 00 00	 jmp	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Emplace_reallocate<CGraphicVertexBuffer * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ; std::_Uninitialized_move<CGraphicVertexBuffer * *,std::allocator<CGraphicVertexBuffer *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@YAPAPAVCGraphicVertexBuffer@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicVertexBuffer@@@0@@Z ; std::_Uninitialized_move<CGraphicVertexBuffer * *,std::allocator<CGraphicVertexBuffer *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@CAXXZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Emplace_reallocate<CGraphicVertexBuffer * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?GrannyDestroySharedDeformBuffer@@YAXXZ
_TEXT	SEGMENT
?GrannyDestroySharedDeformBuffer@@YAXXZ PROC		; GrannyDestroySharedDeformBuffer, COMDAT

; 123  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 124  : #ifdef _DEBUG
; 125  : 	TraceError("granny_shared_vbs:");
; 126  : #endif
; 127  : 	for (int i = 0; i != SHARED_VB_NUM; ++i)

  00003	bb 00 00 00 00	 mov	 ebx, OFFSET ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A
$LL4@GrannyDest:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 33		 mov	 esi, DWORD PTR [ebx]
  0000a	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 135  : 		for (v = vbs.begin(); v != vbs.end(); ++v)

  0000d	74 20		 je	 SHORT $LN43@GrannyDest
  0000f	90		 npad	 1
$LL7@GrannyDest:

; 136  : 		{
; 137  : 			CGraphicVertexBuffer* pkEachVB = (*v);

  00010	8b 3e		 mov	 edi, DWORD PTR [esi]

; 138  : 			pkEachVB->Destroy();

  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 139  : 			delete pkEachVB;

  00019	85 ff		 test	 edi, edi
  0001b	74 08		 je	 SHORT $LN5@GrannyDest
  0001d	8b 07		 mov	 eax, DWORD PTR [edi]
  0001f	8b cf		 mov	 ecx, edi
  00021	6a 01		 push	 1
  00023	ff 10		 call	 DWORD PTR [eax]
$LN5@GrannyDest:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00025	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00028	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 135  : 		for (v = vbs.begin(); v != vbs.end(); ++v)

  0002b	75 e3		 jne	 SHORT $LL7@GrannyDest
  0002d	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN43@GrannyDest:

; 140  : 		}
; 141  : 		vbs.clear();

  0002f	89 73 04	 mov	 DWORD PTR [ebx+4], esi
  00032	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00035	81 fb 6c 00 00
	00		 cmp	 ebx, OFFSET ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A+108
  0003b	75 cb		 jne	 SHORT $LL4@GrannyDest

; 142  : 	}
; 143  : 
; 144  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	c3		 ret	 0
?GrannyDestroySharedDeformBuffer@@YAXXZ ENDP		; GrannyDestroySharedDeformBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?GrannyCreateSharedDeformBuffer@@YAXXZ
_TEXT	SEGMENT
?GrannyCreateSharedDeformBuffer@@YAXXZ PROC		; GrannyCreateSharedDeformBuffer, COMDAT

; 115  : 	__ReserveSharedVertexBuffers(SHARED_VB_500, 40);

  00000	6a 28		 push	 40			; 00000028H
  00002	6a 00		 push	 0
  00004	e8 00 00 00 00	 call	 ?__ReserveSharedVertexBuffers@@YAXII@Z ; __ReserveSharedVertexBuffers

; 116  : 	__ReserveSharedVertexBuffers(SHARED_VB_1000, 20);

  00009	6a 14		 push	 20			; 00000014H
  0000b	6a 01		 push	 1
  0000d	e8 00 00 00 00	 call	 ?__ReserveSharedVertexBuffers@@YAXII@Z ; __ReserveSharedVertexBuffers

; 117  : 	__ReserveSharedVertexBuffers(SHARED_VB_1500, 20);

  00012	6a 14		 push	 20			; 00000014H
  00014	6a 02		 push	 2
  00016	e8 00 00 00 00	 call	 ?__ReserveSharedVertexBuffers@@YAXII@Z ; __ReserveSharedVertexBuffers

; 118  : 	__ReserveSharedVertexBuffers(SHARED_VB_2000, 40);

  0001b	6a 28		 push	 40			; 00000028H
  0001d	6a 03		 push	 3
  0001f	e8 00 00 00 00	 call	 ?__ReserveSharedVertexBuffers@@YAXII@Z ; __ReserveSharedVertexBuffers

; 119  : 	__ReserveSharedVertexBuffers(SHARED_VB_3000, 20);

  00024	6a 14		 push	 20			; 00000014H
  00026	6a 05		 push	 5
  00028	e8 00 00 00 00	 call	 ?__ReserveSharedVertexBuffers@@YAXII@Z ; __ReserveSharedVertexBuffers
  0002d	83 c4 28	 add	 esp, 40			; 00000028H

; 120  : }

  00030	c3		 ret	 0
?GrannyCreateSharedDeformBuffer@@YAXXZ ENDP		; GrannyCreateSharedDeformBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?__ReserveSharedVertexBuffers@@YAXII@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_pkNewVB$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_capacity$1$ = 8					; size = 4
_index$ = 8						; size = 4
_count$ = 12						; size = 4
?__ReserveSharedVertexBuffers@@YAXII@Z PROC		; __ReserveSharedVertexBuffers, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__ReserveSharedVertexBuffers@@YAXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 94   : 	NANOBEGIN

  00028	eb		 DB	 -21			; ffffffebH
  00029	03		 DB	 3
  0002a	d6		 DB	 -42			; ffffffd6H
  0002b	d7		 DB	 -41			; ffffffd7H
  0002c	01		 DB	 1
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00030	83 f9 09	 cmp	 ecx, 9
  00033	0f 83 85 00 00
	00		 jae	 $LN1@ReserveSha

; 100  : 	for (unsigned i = 0; i != count; ++i)

  00039	8b 5d 0c	 mov	 ebx, DWORD PTR _count$[ebp]
  0003c	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0003f	69 c0 f4 01 00
	00		 imul	 eax, eax, 500
  00045	89 45 08	 mov	 DWORD PTR _capacity$1$[ebp], eax
  00048	85 db		 test	 ebx, ebx
  0004a	74 6d		 je	 SHORT $LN3@ReserveSha
  0004c	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0004f	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A[eax*4]
$LL4@ReserveSha:

; 101  : 	{
; 102  : 		CGraphicVertexBuffer* pkNewVB = new CGraphicVertexBuffer;

  00056	6a 20		 push	 32			; 00000020H
  00058	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005d	83 c4 04	 add	 esp, 4
  00060	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006a	85 c0		 test	 eax, eax
  0006c	74 0b		 je	 SHORT $LN7@ReserveSha
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer
  00075	8b f0		 mov	 esi, eax
  00077	eb 02		 jmp	 SHORT $LN8@ReserveSha
$LN7@ReserveSha:
  00079	33 f6		 xor	 esi, esi
$LN8@ReserveSha:

; 103  : 		pkNewVB->Create(

  0007b	8b 06		 mov	 eax, DWORD PTR [esi]
  0007d	8b ce		 mov	 ecx, esi
  0007f	6a 01		 push	 1
  00081	6a 08		 push	 8
  00083	68 12 01 00 00	 push	 274			; 00000112H
  00088	ff 75 08	 push	 DWORD PTR _capacity$1$[ebp]
  0008b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00092	89 75 f0	 mov	 DWORD PTR _pkNewVB$3[ebp], esi
  00095	ff 50 04	 call	 DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00098	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0009b	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  0009e	74 08		 je	 SHORT $LN13@ReserveSha

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000a0	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000a2	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000a6	eb 0c		 jmp	 SHORT $LN2@ReserveSha
$LN13@ReserveSha:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000a8	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewVB$3[ebp]
  000ab	51		 push	 ecx
  000ac	50		 push	 eax
  000ad	8b cf		 mov	 ecx, edi
  000af	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Emplace_reallocate<CGraphicVertexBuffer * const &>
$LN2@ReserveSha:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 100  : 	for (unsigned i = 0; i != count; ++i)

  000b4	83 eb 01	 sub	 ebx, 1
  000b7	75 9d		 jne	 SHORT $LL4@ReserveSha
$LN3@ReserveSha:

; 104  : 			capacity,
; 105  : 			D3DFVF_XYZ|D3DFVF_NORMAL|D3DFVF_TEX1,
; 106  : 			D3DUSAGE_WRITEONLY,
; 107  : 			D3DPOOL_MANAGED);
; 108  : 		gs_vbs[index].push_back(pkNewVB);
; 109  : 	}
; 110  : 	NANOEND

  000b9	eb		 DB	 -21			; ffffffebH
  000ba	03		 DB	 3
  000bb	d6		 DB	 -42			; ffffffd6H
  000bc	d7		 DB	 -41			; ffffffd7H
  000bd	00		 DB	 0
$LN1@ReserveSha:
  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__ReserveSharedVertexBuffers@@YAXII@Z$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?__ReserveSharedVertexBuffers@@YAXII@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__ReserveSharedVertexBuffers@@YAXII@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__ReserveSharedVertexBuffers@@YAXII@Z ENDP		; __ReserveSharedVertexBuffers
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z
_TEXT	SEGMENT
_pkDelVB$ = 8						; size = 4
?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z PROC ; __FreeDeformVertexBuffer, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 74   : 	if (pkDelVB)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkDelVB$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 5f		 je	 SHORT $LN7@FreeDeform

; 75   : 	{
; 76   : 		if (pkDelVB == &gs_emptyVB)

  0000b	81 fe 00 00 00
	00		 cmp	 esi, OFFSET ?gs_emptyVB@@3VCGraphicVertexBuffer@@A
  00011	74 57		 je	 SHORT $LN7@FreeDeform

; 77   : 			return;
; 78   : 
; 79   : 		unsigned index = (pkDelVB->GetVertexCount() - 1) / 500;

  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?GetVertexCount@CGraphicVertexBuffer@@QBEHXZ ; CGraphicVertexBuffer::GetVertexCount
  0001a	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  0001d	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00022	f7 e9		 imul	 ecx
  00024	c1 fa 05	 sar	 edx, 5
  00027	8b c2		 mov	 eax, edx
  00029	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002c	03 c2		 add	 eax, edx

; 80   : 		if (index < SHARED_VB_NUM)

  0002e	83 f8 09	 cmp	 eax, 9
  00031	73 28		 jae	 SHORT $LN4@FreeDeform

; 81   : 		{
; 82   : 			gs_vbs[index].push_back(pkDelVB);

  00033	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00036	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A[eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0003d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00040	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00043	74 09		 je	 SHORT $LN12@FreeDeform

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00045	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00047	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
  0004b	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 90   : }

  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
$LN12@FreeDeform:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004e	8d 55 08	 lea	 edx, DWORD PTR _pkDelVB$[ebp]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicVertexBuffer@@@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAEPAPAVCGraphicVertexBuffer@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Emplace_reallocate<CGraphicVertexBuffer * const &>
  00058	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 90   : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN4@FreeDeform:

; 83   : 		}
; 84   : 		else
; 85   : 		{
; 86   : 			pkDelVB->Destroy();

  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 87   : 			delete pkDelVB;

  00062	8b 06		 mov	 eax, DWORD PTR [esi]
  00064	8b ce		 mov	 ecx, esi
  00066	6a 01		 push	 1
  00068	ff 10		 call	 DWORD PTR [eax]
$LN7@FreeDeform:
  0006a	5e		 pop	 esi

; 90   : }

  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z ENDP ; __FreeDeformVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_deformableVertexCount$ = 8				; size = 4
?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z PROC ; __AllocDeformVertexBuffer, COMDAT

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 36   : 	if (deformableVertexCount == 0)

  00025	8b 7d 08	 mov	 edi, DWORD PTR _deformableVertexCount$[ebp]
  00028	85 ff		 test	 edi, edi
  0002a	75 17		 jne	 SHORT $LN3@AllocDefor

; 37   : 		return &gs_emptyVB;

  0002c	b8 00 00 00 00	 mov	 eax, OFFSET ?gs_emptyVB@@3VCGraphicVertexBuffer@@A

; 70   : }

  00031	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00034	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003b	59		 pop	 ecx
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN3@AllocDefor:

; 38   : 
; 39   : 	unsigned capacity	= (((deformableVertexCount-1) / 500) + 1) * 500;

  00043	8d 4f ff	 lea	 ecx, DWORD PTR [edi-1]
  00046	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0004b	f7 e1		 mul	 ecx
  0004d	c1 ea 05	 shr	 edx, 5
  00050	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00053	69 d8 f4 01 00
	00		 imul	 ebx, eax, 500

; 40   : 	unsigned index		= (deformableVertexCount-1) / 500;
; 41   : 	if (index < SHARED_VB_NUM)

  00059	83 fa 09	 cmp	 edx, 9
  0005c	73 32		 jae	 SHORT $LN5@AllocDefor

; 42   : 	{
; 43   : 		std::vector<CGraphicVertexBuffer*>& vbs = gs_vbs[index];

  0005e	8d 14 52	 lea	 edx, DWORD PTR [edx+edx*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00061	8b 0c 95 04 00
	00 00		 mov	 ecx, DWORD PTR ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A[edx*4+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 44   : 		if (!vbs.empty())

  00068	39 0c 95 00 00
	00 00		 cmp	 DWORD PTR ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A[edx*4], ecx
  0006f	74 1f		 je	 SHORT $LN5@AllocDefor

; 45   : 		{
; 46   : 			//TraceError("REUSE %d(%d)", capacity, deformableVertexCount);
; 47   : 
; 48   : 			CGraphicVertexBuffer* pkRetVB = vbs.back();

  00071	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00074	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  00077	89 0c 95 04 00
	00 00		 mov	 DWORD PTR ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A[edx*4+4], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 70   : }

  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN5@AllocDefor:

; 55   : 	static time_t base = time(NULL);

  00090	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0009c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA
  000a4	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  000aa	7f 7b		 jg	 SHORT $LN23@AllocDefor
$LN2@AllocDefor:

; 56   : 	//TraceError("NEW %8d: %d(%d)", time(NULL) - base, capacity, deformableVertexCount);
; 57   : 
; 58   : 	CGraphicVertexBuffer* pkNewVB = new CGraphicVertexBuffer;

  000ac	6a 20		 push	 32			; 00000020H
  000ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  000b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c0	85 c0		 test	 eax, eax
  000c2	74 0b		 je	 SHORT $LN8@AllocDefor
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer
  000cb	8b f0		 mov	 esi, eax
  000cd	eb 02		 jmp	 SHORT $LN9@AllocDefor
$LN8@AllocDefor:
  000cf	33 f6		 xor	 esi, esi
$LN9@AllocDefor:

; 59   : 
; 60   : 	if (!pkNewVB->Create(

  000d1	8b 06		 mov	 eax, DWORD PTR [esi]
  000d3	8b ce		 mov	 ecx, esi
  000d5	6a 01		 push	 1
  000d7	6a 08		 push	 8
  000d9	68 12 01 00 00	 push	 274			; 00000112H
  000de	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000e1	53		 push	 ebx
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	ff d0		 call	 eax
  000eb	84 c0		 test	 al, al
  000ed	75 24		 jne	 SHORT $LN6@AllocDefor
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  000ef	6a 00		 push	 0
  000f1	e8 00 00 00 00	 call	 __time64
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 66   : 		TraceError("NEW_ERROR %8d: %d(%d)", time(NULL) - base, capacity, deformableVertexCount);

  000f6	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA
  000fc	57		 push	 edi
  000fd	1b 15 04 00 00
	00		 sbb	 edx, DWORD PTR ?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA+4
  00103	53		 push	 ebx
  00104	52		 push	 edx
  00105	50		 push	 eax
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IJPBENCD@NEW_ERROR?5?$CF8d?3?5?$CFd?$CI?$CFd?$CJ@
  0010b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00110	83 c4 18	 add	 esp, 24			; 00000018H
$LN6@AllocDefor:

; 67   : 	}
; 68   : 
; 69   : 	return pkNewVB;

  00113	8b c6		 mov	 eax, esi

; 70   : }

  00115	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00118	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011f	59		 pop	 ecx
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5b		 pop	 ebx
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
$LN23@AllocDefor:

; 55   : 	static time_t base = time(NULL);

  00127	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA
  0012c	e8 00 00 00 00	 call	 __Init_thread_header
  00131	83 c4 04	 add	 esp, 4
  00134	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA, -1
  0013b	0f 85 6b ff ff
	ff		 jne	 $LN2@AllocDefor
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h

; 536  :             return _time64(_Time);

  00141	6a 00		 push	 0
  00143	e8 00 00 00 00	 call	 __time64
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 55   : 	static time_t base = time(NULL);

  00148	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4HA
  0014d	a3 00 00 00 00	 mov	 DWORD PTR ?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA, eax
  00152	89 15 04 00 00
	00		 mov	 DWORD PTR ?base@?1??__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z@4_JA+4, edx
  00158	e8 00 00 00 00	 call	 __Init_thread_footer
  0015d	83 c4 08	 add	 esp, 8
  00160	e9 47 ff ff ff	 jmp	 $LN2@AllocDefor
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z ENDP ; __AllocDeformVertexBuffer
; Function compile flags: /Ogtp
;	COMDAT ??__Fgs_emptyVB@@YAXXZ
text$yd	SEGMENT
??__Fgs_emptyVB@@YAXXZ PROC				; `dynamic atexit destructor for 'gs_emptyVB'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gs_emptyVB@@3VCGraphicVertexBuffer@@A
  00005	e9 00 00 00 00	 jmp	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
??__Fgs_emptyVB@@YAXXZ ENDP				; `dynamic atexit destructor for 'gs_emptyVB''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ??__Egs_emptyVB@@YAXXZ
text$di	SEGMENT
??__Egs_emptyVB@@YAXXZ PROC				; `dynamic initializer for 'gs_emptyVB'', COMDAT

; 30   : static CGraphicVertexBuffer gs_emptyVB;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gs_emptyVB@@3VCGraphicVertexBuffer@@A
  00005	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fgs_emptyVB@@YAXXZ ; `dynamic atexit destructor for 'gs_emptyVB''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Egs_emptyVB@@YAXXZ ENDP				; `dynamic initializer for 'gs_emptyVB''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fgs_vbs@@YAXXZ
text$yd	SEGMENT
??__Fgs_vbs@@YAXXZ PROC					; `dynamic atexit destructor for 'gs_vbs'', COMDAT
  00000	68 00 00 00 00	 push	 OFFSET ??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::~vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
  00005	6a 09		 push	 9
  00007	6a 0c		 push	 12			; 0000000cH
  00009	68 00 00 00 00	 push	 OFFSET ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A
  0000e	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00013	c3		 ret	 0
??__Fgs_vbs@@YAXXZ ENDP					; `dynamic atexit destructor for 'gs_vbs''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ??__Egs_vbs@@YAXXZ
text$di	SEGMENT
??__Egs_vbs@@YAXXZ PROC					; `dynamic initializer for 'gs_vbs'', COMDAT

; 28   : static std::vector<CGraphicVertexBuffer*> gs_vbs[SHARED_VB_NUM];

  00000	68 00 00 00 00	 push	 OFFSET ??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::~vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
  00005	68 00 00 00 00	 push	 OFFSET ??0?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
  0000a	6a 09		 push	 9
  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	68 00 00 00 00	 push	 OFFSET ?gs_vbs@@3PAV?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@A
  00013	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00018	68 00 00 00 00	 push	 OFFSET ??__Fgs_vbs@@YAXXZ ; `dynamic atexit destructor for 'gs_vbs''
  0001d	e8 00 00 00 00	 call	 _atexit
  00022	59		 pop	 ecx
  00023	c3		 ret	 0
??__Egs_vbs@@YAXXZ ENDP					; `dynamic initializer for 'gs_vbs''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::~vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::~vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??0?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >, COMDAT
; _this$ = ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 446  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 447  :     }

  00006	8b c1		 mov	 eax, ecx

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 446  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 447  :     }

  00016	c3		 ret	 0
??0?$vector@PAVCGraphicVertexBuffer@@V?$allocator@PAVCGraphicVertexBuffer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >::vector<CGraphicVertexBuffer *,std::allocator<CGraphicVertexBuffer *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGrannyLODController@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGrannyLODController@@UAEPAXI@Z PROC		; CGrannyLODController::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGrannyLODController@@UAE@XZ ; CGrannyLODController::~CGrannyLODController
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 3c		 push	 60			; 0000003cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGrannyLODController@@UAEPAXI@Z ENDP		; CGrannyLODController::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ PROC ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Tidy, COMDAT
; _this$ = ecx

; 1464 :     void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1009 :         return _Mysize() == 0;

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00006	85 c9		 test	 ecx, ecx

; 1465 :         _Orphan_all();
; 1466 : 
; 1467 :         _Alpty _Almap(_Getal());
; 1468 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN30@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1143 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1144 :             _Myoff() = 0;

  0001c	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN30@Tidy:
  0001f	57		 push	 edi

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00023	85 ff		 test	 edi, edi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL25@Tidy:

; 1473 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	4f		 dec	 edi
  0002b	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN7@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	6a 10		 push	 16			; 00000010H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
$LN7@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1472 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 ff		 test	 edi, edi
  0003f	75 e6		 jne	 SHORT $LL25@Tidy
$LN5@Tidy:

; 1474 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);
; 1475 :                 _Destroy_in_place(_Map()[_Block]);
; 1476 :             }
; 1477 :         }
; 1478 : 
; 1479 :         if (_Map() != _Mapptr()) {

  00041	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00044	5f		 pop	 edi
  00045	85 c9		 test	 ecx, ecx
  00047	74 10		 je	 SHORT $LN32@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004c	c1 e0 02	 shl	 eax, 2
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00056	83 c4 08	 add	 esp, 8
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1485 :     }

  00059	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00060	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00067	5e		 pop	 esi
  00068	c3		 ret	 0
?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ ENDP ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?_Xlen@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@ABEXXZ PROC ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Xlen, COMDAT
; _this$ = ecx

; 1418 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@ABEXXZ ENDP ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
;	COMDAT ?push_front@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@QAEXABQAVCGrannyModelInstance@@@Z
_TEXT	SEGMENT
tv612 = -8						; size = 4
__Newmap$1$ = -4					; size = 4
__Val$ = 8						; size = 4
?push_front@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@QAEXABQAVCGrannyModelInstance@@@Z PROC ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::push_front, COMDAT
; _this$ = ecx

; 1078 :     void push_front(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 1080 :         _PUSH_FRONT_BEGIN;

  0000b	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  0000e	8b d3		 mov	 edx, ebx
  00010	f6 c3 03	 test	 bl, 3
  00013	0f 85 f6 00 00
	00		 jne	 $LN15@push_front
  00019	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0001c	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0001f	83 c0 04	 add	 eax, 4
  00022	c1 e8 02	 shr	 eax, 2
  00025	3b d0		 cmp	 edx, eax
  00027	0f 87 e0 00 00
	00		 ja	 $LN44@push_front

; 1429 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  0002d	85 d2		 test	 edx, edx
  0002f	b8 01 00 00 00	 mov	 eax, 1
  00034	0f 45 c2	 cmovne	 eax, edx
$LL8@push_front:

; 1430 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

  00037	8b f0		 mov	 esi, eax
  00039	2b f2		 sub	 esi, edx
  0003b	83 fe 01	 cmp	 esi, 1
  0003e	72 05		 jb	 SHORT $LN10@push_front
  00040	83 f8 08	 cmp	 eax, 8
  00043	73 13		 jae	 SHORT $LN9@push_front
$LN10@push_front:

; 1431 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1432 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

  00045	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  0004a	2b c8		 sub	 ecx, eax
  0004c	3b c8		 cmp	 ecx, eax
  0004e	0f 82 20 01 00
	00		 jb	 $LN39@push_front

; 1434 :             }
; 1435 : 
; 1436 :             _Newsize *= 2;

  00054	03 c0		 add	 eax, eax

; 1437 :         }

  00056	eb df		 jmp	 SHORT $LL8@push_front
$LN9@push_front:

; 1438 :         _Count = _Newsize - _Mapsize();
; 1439 : 
; 1440 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

  00058	c1 eb 02	 shr	 ebx, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005b	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00060	0f 87 09 01 00
	00		 ja	 $LN47@push_front

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00066	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  0006f	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00072	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  00079	89 4d f8	 mov	 DWORD PTR tv612[ebp], ecx
  0007c	03 c8		 add	 ecx, eax
  0007e	51		 push	 ecx
  0007f	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00082	89 45 fc	 mov	 DWORD PTR __Newmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1444 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00085	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]
  00088	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]
  0008b	51		 push	 ecx
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
  00092	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00095	83 c4 10	 add	 esp, 16			; 00000010H

; 1445 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  00098	50		 push	 eax
  00099	3b de		 cmp	 ebx, esi
  0009b	77 1d		 ja	 SHORT $LN12@push_front

; 1446 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  0009d	8d 04 99	 lea	 eax, DWORD PTR [ecx+ebx*4]
  000a0	50		 push	 eax
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>

; 1447 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  000a7	8b ce		 mov	 ecx, esi
  000a9	2b cb		 sub	 ecx, ebx
  000ab	51		 push	 ecx
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CGrannyModelInstance * * *,unsigned int>

; 1448 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

  000b2	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000b5	83 c4 14	 add	 esp, 20			; 00000014H

; 1449 :         } else { // increment not greater than offset of initial block

  000b8	eb 24		 jmp	 SHORT $LN13@push_front
$LN12@push_front:

; 1450 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000ba	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000bd	50		 push	 eax
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>

; 1451 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000c4	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000c7	ff 75 fc	 push	 DWORD PTR __Newmap$1$[ebp]
  000ca	8b 45 f8	 mov	 eax, DWORD PTR tv612[ebp]
  000cd	03 c1		 add	 eax, ecx
  000cf	50		 push	 eax
  000d0	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAPAVCGrannyModelInstance@@PAPAPAV1@@std@@YAPAPAPAVCGrannyModelInstance@@QAPAPAV1@0PAPAPAV1@@Z ; std::uninitialized_copy<CGrannyModelInstance * * *,CGrannyModelInstance * * *>
  000d9	83 c4 18	 add	 esp, 24			; 00000018H

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000dc	8b de		 mov	 ebx, esi
$LN13@push_front:

; 1453 :         }
; 1454 : 
; 1455 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1456 :         if (_Map() != _Mapptr()) {

  000de	53		 push	 ebx
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAPAVCGrannyModelInstance@@I@std@@YAPAPAPAVCGrannyModelInstance@@PAPAPAV1@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<CGrannyModelInstance * * *,unsigned int>
  000e5	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000e8	83 c4 08	 add	 esp, 8
  000eb	85 c9		 test	 ecx, ecx
  000ed	74 10		 je	 SHORT $LN14@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ef	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000f2	c1 e0 02	 shl	 eax, 2
  000f5	50		 push	 eax
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000fc	83 c4 08	 add	 esp, 8
$LN14@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1460 :         _Map() = _Newmap; // point at new

  000ff	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  00102	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1461 :         _Mapsize() += _Count;

  00105	01 77 08	 add	 DWORD PTR [edi+8], esi
  00108	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0010b	eb 02		 jmp	 SHORT $LN15@push_front
$LN44@push_front:

; 1080 :         _PUSH_FRONT_BEGIN;

  0010d	8b d3		 mov	 edx, ebx
$LN15@push_front:
  0010f	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00112	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00119	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  0011c	23 f2		 and	 esi, edx
  0011e	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  00121	0f 44 f0	 cmove	 esi, eax

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00124	49		 dec	 ecx

; 1080 :         _PUSH_FRONT_BEGIN;

  00125	4e		 dec	 esi

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00126	8b c6		 mov	 eax, esi
  00128	c1 e8 02	 shr	 eax, 2
  0012b	23 c8		 and	 ecx, eax

; 1080 :         _PUSH_FRONT_BEGIN;

  0012d	8d 1c 8d 00 00
	00 00		 lea	 ebx, DWORD PTR [ecx*4]
  00134	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00137	83 3c 0b 00	 cmp	 DWORD PTR [ebx+ecx], 0
  0013b	75 13		 jne	 SHORT $LN3@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0013d	6a 10		 push	 16			; 00000010H
  0013f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1080 :         _PUSH_FRONT_BEGIN;

  00144	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00147	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1080 :         _PUSH_FRONT_BEGIN;

  0014a	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
  0014d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN3@push_front:

; 1081 :         _Alty_traits::construct(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _DEQUESIZ), _Val);

  00150	8b 0c 0b	 mov	 ecx, DWORD PTR [ebx+ecx]
  00153	8b d6		 mov	 edx, esi
  00155	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00158	83 e2 03	 and	 edx, 3
  0015b	8b 00		 mov	 eax, DWORD PTR [eax]
  0015d	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 1082 :         _PUSH_FRONT_END;

  00160	ff 47 10	 inc	 DWORD PTR [edi+16]
  00163	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	5b		 pop	 ebx

; 1083 :     }

  00169	8b e5		 mov	 esp, ebp
  0016b	5d		 pop	 ebp
  0016c	c2 04 00	 ret	 4
$LN47@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0016f	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1433 :                 _Xlen(); // result too long

  00174	8b cf		 mov	 ecx, edi
  00176	e8 00 00 00 00	 call	 ?_Xlen@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@ABEXXZ ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Xlen
$LN45@push_front:
  0017b	cc		 int	 3
?push_front@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@QAEXABQAVCGrannyModelInstance@@@Z ENDP ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::push_front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@CAXXZ PROC ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@CAXXZ ENDP ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@AAEXPAUSAttachingModelData@CGrannyLODController@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@AAEXPAUSAttachingModelData@CGrannyLODController@@0@Z PROC ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@AAEXPAUSAttachingModelData@CGrannyLODController@@0@Z ENDP ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?erase@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Whereptr$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@@Z PROC ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::erase, COMDAT
; _this$ = ecx

; 1341 :     iterator erase(const_iterator _Where) noexcept(is_nothrow_move_assignable_v<value_type>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f8	 mov	 DWORD PTR _this$1$[ebp], esi
  00011	89 7d f4	 mov	 DWORD PTR __Whereptr$1$[ebp], edi

; 1345 : 
; 1346 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1347 :         _STL_VERIFY(
; 1348 :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Mylast > _Whereptr,
; 1349 :             "vector erase iterator outside range");
; 1350 :         _Orphan_range(_Whereptr, _Mylast);
; 1351 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1352 : 
; 1353 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	8d 5f 1c	 lea	 ebx, DWORD PTR [edi+28]
  0001a	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0001d	3b d9		 cmp	 ebx, ecx
  0001f	74 71		 je	 SHORT $LN5@erase
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1344 :         pointer& _Mylast        = _My_data._Mylast;

  00021	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00024	83 c7 20	 add	 edi, 32			; 00000020H
$LL6@erase:
  00027	8b 03		 mov	 eax, DWORD PTR [ebx]
  00029	89 46 fc	 mov	 DWORD PTR [esi-4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  0002c	3b f7		 cmp	 esi, edi
  0002e	74 49		 je	 SHORT $LN4@erase

; 2153 :         return _BUF_SIZE <= _Myres;

  00030	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00033	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00036	72 0f		 jb	 SHORT $LN16@erase

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00038	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	50		 push	 eax
  0003a	ff 36		 push	 DWORD PTR [esi]
  0003c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00041	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00044	83 c4 08	 add	 esp, 8
$LN16@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00047	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00055	c6 06 00	 mov	 BYTE PTR [esi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00058	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  0005b	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0005e	f3 0f 7e 47 10	 movq	 xmm0, QWORD PTR [edi+16]
  00063	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00068	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0006f	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00076	c6 07 00	 mov	 BYTE PTR [edi], 0
$LN4@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00079	83 c3 1c	 add	 ebx, 28			; 0000001cH
  0007c	83 c6 1c	 add	 esi, 28			; 0000001cH
  0007f	83 c7 1c	 add	 edi, 28			; 0000001cH
  00082	3b d9		 cmp	 ebx, ecx
  00084	75 a1		 jne	 SHORT $LL6@erase
  00086	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  00089	8b 7d f4	 mov	 edi, DWORD PTR __Whereptr$1$[ebp]
  0008c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0008f	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
$LN5@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00092	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00095	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00098	72 10		 jb	 SHORT $LN40@erase

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009b	50		 push	 eax
  0009c	ff 71 e8	 push	 DWORD PTR [ecx-24]
  0009f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  000a7	83 c4 08	 add	 esp, 8
$LN40@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000aa	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000ad	c7 41 f8 00 00
	00 00		 mov	 DWORD PTR [ecx-8], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b4	c7 41 fc 0f 00
	00 00		 mov	 DWORD PTR [ecx-4], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000bb	c6 41 e8 00	 mov	 BYTE PTR [ecx-24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  000bf	83 46 04 e4	 add	 DWORD PTR [esi+4], -28	; ffffffe4H

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000c3	89 38		 mov	 DWORD PTR [eax], edi

; 1356 :         return iterator(_Whereptr, _STD addressof(_My_data));

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx

; 1357 :     }

  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
?erase@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@@Z ENDP ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ PROC ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::~vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 4d		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	03 d1		 add	 edx, ecx
  00021	c1 fa 04	 sar	 edx, 4
  00024	8b ca		 mov	 ecx, edx
  00026	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00029	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00032	2b c1		 sub	 eax, ecx
  00034	c1 e0 02	 shl	 eax, 2
  00037	50		 push	 eax
  00038	ff 37		 push	 DWORD PTR [edi]
  0003a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00045	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00048	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0004f	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  00056	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00057	c3		 ret	 0
??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::~vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@USAttachingModelData@CGrannyLODController@@@std@@QAEXQAUSAttachingModelData@CGrannyLODController@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@USAttachingModelData@CGrannyLODController@@@std@@QAEXQAUSAttachingModelData@CGrannyLODController@@I@Z PROC ; std::allocator<CGrannyLODController::SAttachingModelData>::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0000d	2b c8		 sub	 ecx, eax
  0000f	c1 e1 02	 shl	 ecx, 2
  00012	51		 push	 ecx
  00013	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8

; 804  :     }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?deallocate@?$allocator@USAttachingModelData@CGrannyLODController@@@std@@QAEXQAUSAttachingModelData@CGrannyLODController@@I@Z ENDP ; std::allocator<CGrannyLODController::SAttachingModelData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1SAttachingModelData@CGrannyLODController@@QAE@XZ
_TEXT	SEGMENT
??1SAttachingModelData@CGrannyLODController@@QAE@XZ PROC ; CGrannyLODController::SAttachingModelData::~SAttachingModelData, COMDAT
; _this$ = ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@SAttaching

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0002a	5e		 pop	 esi
  0002b	c3		 ret	 0
??1SAttachingModelData@CGrannyLODController@@QAE@XZ ENDP ; CGrannyLODController::SAttachingModelData::~SAttachingModelData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?__ReserveSharedDeformableVertexBuffer@CGrannyLODController@@IAEXK@Z
_TEXT	SEGMENT
_deformableVertexCount$ = 8				; size = 4
?__ReserveSharedDeformableVertexBuffer@CGrannyLODController@@IAEXK@Z PROC ; CGrannyLODController::__ReserveSharedDeformableVertexBuffer, COMDAT
; _this$ = ecx

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 297  : 	if (m_pkSharedDeformableVertexBuffer &&

  00006	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 0a		 je	 SHORT $LN2@ReserveSha
  0000d	e8 00 00 00 00	 call	 ?GetVertexCount@CGraphicVertexBuffer@@QBEHXZ ; CGraphicVertexBuffer::GetVertexCount
  00012	3b 45 08	 cmp	 eax, DWORD PTR _deformableVertexCount$[ebp]
  00015	73 16		 jae	 SHORT $LN1@ReserveSha
$LN2@ReserveSha:

; 298  : 		m_pkSharedDeformableVertexBuffer->GetVertexCount() >= deformableVertexCount)
; 299  : 		return;
; 300  : 
; 301  : 	__FreeDeformVertexBuffer(m_pkSharedDeformableVertexBuffer);

  00017	ff 76 38	 push	 DWORD PTR [esi+56]
  0001a	e8 00 00 00 00	 call	 ?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z ; __FreeDeformVertexBuffer

; 302  : 
; 303  : 	m_pkSharedDeformableVertexBuffer = __AllocDeformVertexBuffer(deformableVertexCount);

  0001f	ff 75 08	 push	 DWORD PTR _deformableVertexCount$[ebp]
  00022	e8 00 00 00 00	 call	 ?__AllocDeformVertexBuffer@@YAPAVCGraphicVertexBuffer@@I@Z ; __AllocDeformVertexBuffer
  00027	83 c4 08	 add	 esp, 8
  0002a	89 46 38	 mov	 DWORD PTR [esi+56], eax
$LN1@ReserveSha:
  0002d	5e		 pop	 esi

; 304  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?__ReserveSharedDeformableVertexBuffer@CGrannyLODController@@IAEXK@Z ENDP ; CGrannyLODController::__ReserveSharedDeformableVertexBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ
_TEXT	SEGMENT
tv244 = -4						; size = 4
?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ PROC ; CGrannyLODController::RefreshAttachedModelInstance, COMDAT
; _this$ = ecx

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 573  : 	if (!m_pCurrentModelInstance)

  00007	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0000b	0f 84 86 00 00
	00		 je	 $LN3@RefreshAtt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00011	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00014	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  00019	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001a	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]
  0001d	2b cb		 sub	 ecx, ebx
  0001f	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  00021	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00022	03 d1		 add	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  00024	33 ff		 xor	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00026	c1 fa 04	 sar	 edx, 4
  00029	8b c2		 mov	 eax, edx
  0002b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002e	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  00030	74 63		 je	 SHORT $LN23@RefreshAtt
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00032	33 c0		 xor	 eax, eax
  00034	89 45 fc	 mov	 DWORD PTR tv244[ebp], eax
$LL4@RefreshAtt:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 580  : 		CGrannyModelInstance * pSrcInstance = rModelData.pkLODController->GetModelInstance();

  00037	8b 0c 18	 mov	 ecx, DWORD PTR [eax+ebx]
  0003a	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  0003f	8b c8		 mov	 ecx, eax

; 581  : 		if (!pSrcInstance)

  00041	85 c9		 test	 ecx, ecx
  00043	75 10		 jne	 SHORT $LN6@RefreshAtt

; 582  : 		{
; 583  : 			Tracenf("CGrannyLODController::RefreshAttachedModelInstance : m_AttachedModelDataVector[%d]->pkLODController->GetModelIntance()==NULL", i);

  00045	57		 push	 edi
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0HN@JOABBJCG@CGrannyLODController?3?3RefreshAt@
  0004b	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00050	83 c4 08	 add	 esp, 8

; 584  : 			continue;

  00053	eb 19		 jmp	 SHORT $LN2@RefreshAtt
$LN6@RefreshAtt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3668 :         return _Mypair._Myval2._Myptr();

  00055	8b 45 fc	 mov	 eax, DWORD PTR tv244[ebp]
  00058	83 c0 04	 add	 eax, 4
  0005b	03 c3		 add	 eax, ebx

; 2153 :         return _BUF_SIZE <= _Myres;

  0005d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00061	72 02		 jb	 SHORT $LN15@RefreshAtt

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00063	8b 00		 mov	 eax, DWORD PTR [eax]
$LN15@RefreshAtt:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 587  : 		pSrcInstance->SetParentModelInstance(m_pCurrentModelInstance, rModelData.strBoneName.c_str());

  00065	50		 push	 eax
  00066	ff 76 20	 push	 DWORD PTR [esi+32]
  00069	e8 00 00 00 00	 call	 ?SetParentModelInstance@CGrannyModelInstance@@QAEXPBV1@PBD@Z ; CGrannyModelInstance::SetParentModelInstance
$LN2@RefreshAtt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0006e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00071	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00076	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  00079	47		 inc	 edi
  0007a	83 45 fc 1c	 add	 DWORD PTR tv244[ebp], 28 ; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0007e	2b cb		 sub	 ecx, ebx
  00080	f7 e9		 imul	 ecx
  00082	03 d1		 add	 edx, ecx
  00084	c1 fa 04	 sar	 edx, 4
  00087	8b c2		 mov	 eax, edx
  00089	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008c	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 576  : 	for (DWORD i = 0; i < m_AttachedModelDataVector.size(); ++i)

  0008e	3b f8		 cmp	 edi, eax
  00090	8b 45 fc	 mov	 eax, DWORD PTR tv244[ebp]
  00093	72 a2		 jb	 SHORT $LL4@RefreshAtt
$LN23@RefreshAtt:
  00095	5f		 pop	 edi
  00096	5b		 pop	 ebx
$LN3@RefreshAtt:
  00097	5e		 pop	 esi

; 588  : 	}
; 589  : }

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ ENDP ; CGrannyLODController::RefreshAttachedModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetCurrentModelInstance@CGrannyLODController@@IAEXPAVCGrannyModelInstance@@@Z
_TEXT	SEGMENT
_pgrnModelInstance$ = 8					; size = 4
?SetCurrentModelInstance@CGrannyLODController@@IAEXPAVCGrannyModelInstance@@@Z PROC ; CGrannyLODController::SetCurrentModelInstance, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 557  : 	// Copy Motion
; 558  : 	pgrnModelInstance->CopyMotion(m_pCurrentModelInstance, true);

  00004	8b 75 08	 mov	 esi, DWORD PTR _pgrnModelInstance$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	6a 01		 push	 1
  0000e	ff 77 20	 push	 DWORD PTR [edi+32]
  00011	e8 00 00 00 00	 call	 ?CopyMotion@CGrannyModelInstance@@QAEXPAV1@_N@Z ; CGrannyModelInstance::CopyMotion

; 559  : 	m_pCurrentModelInstance = pgrnModelInstance;
; 560  : 
; 561  : 	// Change children attaching link
; 562  : 	RefreshAttachedModelInstance();

  00016	8b cf		 mov	 ecx, edi
  00018	89 77 20	 mov	 DWORD PTR [edi+32], esi
  0001b	e8 00 00 00 00	 call	 ?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ ; CGrannyLODController::RefreshAttachedModelInstance

; 563  : 
; 564  : 	// Change parent attaching link
; 565  : 	if (m_pAttachedParentModel)

  00020	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	85 c9		 test	 ecx, ecx
  00027	74 05		 je	 SHORT $LN2@SetCurrent

; 566  : 	{
; 567  : 		m_pAttachedParentModel->RefreshAttachedModelInstance();

  00029	e8 00 00 00 00	 call	 ?RefreshAttachedModelInstance@CGrannyLODController@@IAEXXZ ; CGrannyLODController::RefreshAttachedModelInstance
$LN2@SetCurrent:

; 568  : 	}
; 569  : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?SetCurrentModelInstance@CGrannyLODController@@IAEXPAVCGrannyModelInstance@@@Z ENDP ; CGrannyLODController::SetCurrentModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ
_TEXT	SEGMENT
?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ PROC ; CGrannyLODController::GetModelInstance, COMDAT
; _this$ = ecx

; 690  : 	return m_pCurrentModelInstance;

  00000	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]

; 691  : }

  00003	c3		 ret	 0
?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ENDP ; CGrannyLODController::GetModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?isModelInstance@CGrannyLODController@@QAEHXZ
_TEXT	SEGMENT
?isModelInstance@CGrannyLODController@@QAEHXZ PROC	; CGrannyLODController::isModelInstance, COMDAT
; _this$ = ecx

; 682  : 	if (!m_pCurrentModelInstance)

  00000	33 c0		 xor	 eax, eax
  00002	39 41 20	 cmp	 DWORD PTR [ecx+32], eax
  00005	0f 95 c0	 setne	 al

; 683  : 		return FALSE;
; 684  : 
; 685  : 	return TRUE;
; 686  : }

  00008	c3		 ret	 0
?isModelInstance@CGrannyLODController@@QAEHXZ ENDP	; CGrannyLODController::isModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetMotionAtEnd@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?SetMotionAtEnd@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::SetMotionAtEnd, COMDAT
; _this$ = ecx

; 676  : 	if (m_pCurrentModelInstance)

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	85 c9		 test	 ecx, ecx
  00005	0f 85 00 00 00
	00		 jne	 ?SetMotionAtEnd@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::SetMotionAtEnd

; 677  : 		m_pCurrentModelInstance->SetMotionAtEnd();
; 678  : }

  0000b	c3		 ret	 0
?SetMotionAtEnd@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::SetMotionAtEnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z
_TEXT	SEGMENT
_c_pMotion$ = 8						; size = 4
_iLoopCount$ = 12					; size = 4
_speedRatio$ = 16					; size = 4
?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z PROC ; CGrannyLODController::ChangeMotionPointer, COMDAT
; _this$ = ecx

; 669  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 670  : 	assert(m_pCurrentModelInstance != NULL);
; 671  : 	m_pCurrentModelInstance->ChangeMotionPointer(c_pMotion, iLoopCount, speedRatio);

  00003	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _speedRatio$[ebp]
  00008	51		 push	 ecx
  00009	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	ff 75 0c	 push	 DWORD PTR _iLoopCount$[ebp]
  00014	ff 75 08	 push	 DWORD PTR _c_pMotion$[ebp]
  00017	e8 00 00 00 00	 call	 ?ChangeMotionPointer@CGrannyModelInstance@@QAEXPBVCGrannyMotion@@HM@Z ; CGrannyModelInstance::ChangeMotionPointer

; 672  : }

  0001c	5d		 pop	 ebp
  0001d	c2 0c 00	 ret	 12			; 0000000cH
?ChangeMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@HM@Z ENDP ; CGrannyLODController::ChangeMotionPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z
_TEXT	SEGMENT
_c_pMotion$ = 8						; size = 4
_fBlendTime$ = 12					; size = 4
_iLoopCount$ = 16					; size = 4
_speedRatio$ = 20					; size = 4
?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z PROC ; CGrannyLODController::SetMotionPointer, COMDAT
; _this$ = ecx

; 663  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 664  : 	assert(m_pCurrentModelInstance != NULL);
; 665  : 	m_pCurrentModelInstance->SetMotionPointer(c_pMotion, fBlendTime, iLoopCount, speedRatio);

  00003	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _speedRatio$[ebp]
  00008	51		 push	 ecx
  00009	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0000e	ff 75 10	 push	 DWORD PTR _iLoopCount$[ebp]
  00011	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fBlendTime$[ebp]
  00016	51		 push	 ecx
  00017	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	ff 75 08	 push	 DWORD PTR _c_pMotion$[ebp]
  00022	e8 00 00 00 00	 call	 ?SetMotionPointer@CGrannyModelInstance@@QAEXPBVCGrannyMotion@@MHM@Z ; CGrannyModelInstance::SetMotionPointer

; 666  : }

  00027	5d		 pop	 ebp
  00028	c2 10 00	 ret	 16			; 00000010H
?SetMotionPointer@CGrannyLODController@@QAEXPBVCGrannyMotion@@MHM@Z ENDP ; CGrannyLODController::SetMotionPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?ResetLocalTime@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?ResetLocalTime@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::ResetLocalTime, COMDAT
; _this$ = ecx

; 658  : 	assert(m_pCurrentModelInstance != NULL);
; 659  : 	m_pCurrentModelInstance->ResetLocalTime();

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?ResetLocalTime@CGrannyModelInstance@@QAEHXZ ; CGrannyModelInstance::ResetLocalTime
?ResetLocalTime@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::ResetLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetLocalTime@CGrannyLODController@@QAEXM@Z
_TEXT	SEGMENT
_fLocalTime$ = 8					; size = 4
?SetLocalTime@CGrannyLODController@@QAEXM@Z PROC	; CGrannyLODController::SetLocalTime, COMDAT
; _this$ = ecx

; 651  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 652  : 	if (m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	74 10		 je	 SHORT $LN2@SetLocalTi

; 653  : 		m_pCurrentModelInstance->SetLocalTime(fLocalTime);

  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fLocalTime$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	e8 00 00 00 00	 call	 ?SetLocalTime@CGrannyModelInstance@@QAEXM@Z ; CGrannyModelInstance::SetLocalTime
$LN2@SetLocalTi:

; 654  : }

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetLocalTime@CGrannyLODController@@QAEXM@Z ENDP	; CGrannyLODController::SetLocalTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z
_TEXT	SEGMENT
_c_pMatrix$ = 8						; size = 4
_u$ = 12						; size = 4
_v$ = 16						; size = 4
_t$ = 20						; size = 4
?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z PROC ; CGrannyLODController::Intersect, COMDAT
; _this$ = ecx

; 644  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 645  : 	if (!m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN2@Intersect

; 646  : 		return false;

  0000a	32 c0		 xor	 al, al

; 648  : }

  0000c	5d		 pop	 ebp
  0000d	c2 10 00	 ret	 16			; 00000010H
$LN2@Intersect:
  00010	5d		 pop	 ebp

; 647  : 	return m_pCurrentModelInstance->Intersect(c_pMatrix, u, v, t);

  00011	e9 00 00 00 00	 jmp	 ?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyModelInstance::Intersect
?Intersect@CGrannyLODController@@QAE_NPBUD3DXMATRIX@@PAM11@Z ENDP ; CGrannyLODController::Intersect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_vtMin$ = 8						; size = 4
_vtMax$ = 12						; size = 4
?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z PROC ; CGrannyLODController::GetBoundBox, COMDAT
; _this$ = ecx

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 639  : 	if (m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@GetBoundBo

; 641  : }

  0000a	5d		 pop	 ebp

; 640  : 		m_pCurrentModelInstance->GetBoundBox(vtMin, vtMax);

  0000b	e9 00 00 00 00	 jmp	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox
$LN2@GetBoundBo:

; 641  : }

  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?GetBoundBox@CGrannyLODController@@QAEXPAUD3DXVECTOR3@@0@Z ENDP ; CGrannyLODController::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?ReloadTexture@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?ReloadTexture@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::ReloadTexture, COMDAT
; _this$ = ecx

; 633  : 	if (m_pCurrentModelInstance)

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	85 c9		 test	 ecx, ecx
  00005	0f 85 00 00 00
	00		 jne	 ?ReloadTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::ReloadTexture

; 634  : 		m_pCurrentModelInstance->ReloadTexture();
; 635  : }

  0000b	c3		 ret	 0
?ReloadTexture@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::ReloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?RenderShadow@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?RenderShadow@CGrannyLODController@@QAEXXZ PROC		; CGrannyLODController::RenderShadow, COMDAT
; _this$ = ecx

; 627  : 	if (m_pCurrentModelInstance)

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	85 c9		 test	 ecx, ecx
  00005	0f 85 00 00 00
	00		 jne	 ?RenderWithOneTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::RenderWithOneTexture

; 628  : 		m_pCurrentModelInstance->RenderWithOneTexture();
; 629  : }

  0000b	c3		 ret	 0
?RenderShadow@CGrannyLODController@@QAEXXZ ENDP		; CGrannyLODController::RenderShadow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?RenderToShadowMap@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?RenderToShadowMap@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::RenderToShadowMap, COMDAT
; _this$ = ecx

; 621  : 	if (m_pCurrentModelInstance)

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	85 c9		 test	 ecx, ecx
  00005	0f 85 00 00 00
	00		 jne	 ?RenderWithoutTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::RenderWithoutTexture

; 622  : 		m_pCurrentModelInstance->RenderWithoutTexture();
; 623  : }

  0000b	c3		 ret	 0
?RenderToShadowMap@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::RenderToShadowMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_c_pWorldMatrix$ = 8					; size = 4
?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z PROC ; CGrannyLODController::DeformAll, COMDAT
; _this$ = ecx

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00007	33 f6		 xor	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 598  : {

  00009	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0000a	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  0000d	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00010	85 c0		 test	 eax, eax
  00012	74 0c		 je	 SHORT $LL48@DeformAll

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00014	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  00016	85 f6		 test	 esi, esi
  00018	74 04		 je	 SHORT $LN47@DeformAll

; 1166 :             _Myproxy = _Parent_proxy;

  0001a	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  0001c	eb 02		 jmp	 SHORT $LL48@DeformAll
$LN47@DeformAll:

; 1174 :             _Myproxy = nullptr;

  0001e	33 f6		 xor	 esi, esi
$LL48@DeformAll:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  00023	03 43 30	 add	 eax, DWORD PTR [ebx+48]

; 350  :         return this->_Myoff == _Right._Myoff;

  00026	3b f8		 cmp	 edi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 600  : 	for (i=m_que_pkModelInst.begin(); i!=m_que_pkModelInst.end(); ++i)

  00028	74 2e		 je	 SHORT $LN3@DeformAll
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002a	85 f6		 test	 esi, esi
  0002c	74 04		 je	 SHORT $LN81@DeformAll
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	eb 02		 jmp	 SHORT $LN82@DeformAll
$LN81@DeformAll:
  00032	33 c9		 xor	 ecx, ecx
$LN82@DeformAll:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00034	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00037	8b d7		 mov	 edx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 603  : 		pkModelInst->Deform(c_pWorldMatrix);

  00039	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003c	48		 dec	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 603  : 		pkModelInst->Deform(c_pWorldMatrix);

  0003d	ff 75 08	 push	 DWORD PTR _c_pWorldMatrix$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00040	c1 ea 02	 shr	 edx, 2
  00043	23 d0		 and	 edx, eax

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00045	8b c7		 mov	 eax, edi
  00047	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 603  : 		pkModelInst->Deform(c_pWorldMatrix);

  0004a	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  0004d	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  00050	e8 00 00 00 00	 call	 ?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::Deform
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  00055	47		 inc	 edi
  00056	eb c8		 jmp	 SHORT $LL48@DeformAll
$LN3@DeformAll:
  00058	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 605  : }

  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?DeformAll@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ENDP ; CGrannyLODController::DeformAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_c_pWorldMatrix$ = 8					; size = 4
?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z PROC ; CGrannyLODController::DeformNoSkin, COMDAT
; _this$ = ecx

; 608  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 609  : 	if (m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@DeformNoSk

; 611  : }

  0000a	5d		 pop	 ebp

; 610  : 		m_pCurrentModelInstance->DeformNoSkin(c_pWorldMatrix);

  0000b	e9 00 00 00 00	 jmp	 ?DeformNoSkin@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::DeformNoSkin
$LN2@DeformNoSk:

; 611  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?DeformNoSkin@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ENDP ; CGrannyLODController::DeformNoSkin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_c_pWorldMatrix$ = 8					; size = 4
?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z PROC ; CGrannyLODController::Deform, COMDAT
; _this$ = ecx

; 614  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 615  : 	if (m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN2@Deform

; 617  : }

  0000a	5d		 pop	 ebp

; 616  : 		m_pCurrentModelInstance->Deform(c_pWorldMatrix);

  0000b	e9 00 00 00 00	 jmp	 ?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::Deform
$LN2@Deform:

; 617  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?Deform@CGrannyLODController@@QAEXPBUD3DXMATRIX@@@Z ENDP ; CGrannyLODController::Deform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?UpdateSkeleton@CGrannyLODController@@QAEXPBUD3DXMATRIX@@M@Z
_TEXT	SEGMENT
_c_pWorldMatrix$ = 8					; size = 4
_fElapsedTime$ = 12					; size = 4
?UpdateSkeleton@CGrannyLODController@@QAEXPBUD3DXMATRIX@@M@Z PROC ; CGrannyLODController::UpdateSkeleton, COMDAT
; _this$ = ecx

; 592  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 593  : 	if (m_pCurrentModelInstance)

  00003	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00006	85 c9		 test	 ecx, ecx
  00008	74 13		 je	 SHORT $LN2@UpdateSkel

; 594  : 		m_pCurrentModelInstance->UpdateSkeleton(c_pWorldMatrix, fElapsedTime);

  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0000f	51		 push	 ecx
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	ff 75 08	 push	 DWORD PTR _c_pWorldMatrix$[ebp]
  00018	e8 00 00 00 00	 call	 ?UpdateSkeleton@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CGrannyModelInstance::UpdateSkeleton
$LN2@UpdateSkel:

; 595  : }

  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
?UpdateSkeleton@CGrannyLODController@@QAEXPBUD3DXMATRIX@@M@Z ENDP ; CGrannyLODController::UpdateSkeleton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?UpdateTime@CGrannyLODController@@QAEXM@Z
_TEXT	SEGMENT
_fElapsedTime$ = 8					; size = 4
?UpdateTime@CGrannyLODController@@QAEXM@Z PROC		; CGrannyLODController::UpdateTime, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 528  : 	assert(m_pCurrentModelInstance != NULL);
; 529  : 
; 530  : 	m_pCurrentModelInstance->Update(m_dwLODAniFPS);

  00006	ff 76 08	 push	 DWORD PTR [esi+8]
  00009	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0000c	e8 00 00 00 00	 call	 ?Update@CGrannyModelInstance@@QAEXK@Z ; CGrannyModelInstance::Update

; 531  : 
; 532  : 	//DWORD t3=timeGetTime();
; 533  : 	m_pCurrentModelInstance->UpdateLocalTime(fElapsedTime);

  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00016	51		 push	 ecx
  00017	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 ?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z ; CGrannyModelInstance::UpdateLocalTime
  00024	5e		 pop	 esi

; 534  : 
; 535  : 	//DWORD t4=timeGetTime();
; 536  : 
; 537  : #ifdef __PERFORMANCE_CHECKER__
; 538  : 	{
; 539  : 		static FILE* fp=fopen("perf_lod_update.txt", "w");
; 540  : 
; 541  : 		if (t4-t1>3)
; 542  : 		{
; 543  : 			fprintf(fp, "LOD.Total %d (Time %f)\n", t4-t1, timeGetTime()/1000.0f);
; 544  : 			fprintf(fp, "LOD.SMI %d\n", t2-t1);
; 545  : 			fprintf(fp, "LOD.UP %d\n", t3-t2);
; 546  : 			fprintf(fp, "LOD.UL %d\n", t4-t3);
; 547  : 			fprintf(fp, "-------------------------------- \n");
; 548  : 			fflush(fp);
; 549  : 		}
; 550  : 		fflush(fp);
; 551  : 	}
; 552  : #endif
; 553  : }

  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?UpdateTime@CGrannyLODController@@QAEXM@Z ENDP		; CGrannyLODController::UpdateTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z
_TEXT	SEGMENT
tv800 = -4						; size = 4
_fLODFactor$1 = 8					; size = 4
_fDistanceFromCenter$ = 8				; size = 4
tv875 = 12						; size = 4
_bLODLevel$2 = 12					; size = 1
_fDistanceFromCamera$ = 12				; size = 4
?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z PROC	; CGrannyLODController::UpdateLODLevel, COMDAT
; _this$ = ecx

; 454  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx

; 455  : 	if (m_que_pkModelInst.size()<=1)

  00009	83 7f 34 01	 cmp	 DWORD PTR [edi+52], 1
  0000d	0f 86 b7 01 00
	00		 jbe	 $LN17@UpdateLODL

; 456  : 		return;
; 457  : 
; 458  : 	assert(m_pCurrentModelInstance != NULL);
; 459  : 
; 460  : 
; 461  : 	if (fDistanceFromCenter > LOD_APPLY_MIN)

  00013	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDistanceFromCenter$[ebp]
  00018	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@43fa0000
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	0f 86 54 01 00
	00		 jbe	 $LN3@UpdateLODL

; 462  : 	{
; 463  : 
; 464  : 		// 100fps 50fps 33fps 25fps 20fps
; 465  : 		// 10ms 20ms 30ms 40ms 50ms
; 466  : 		float fLODFactor = fMINMAX(0.0f, (m_fLODDistance-fDistanceFromCamera), m_fLODDistance);

  00027	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  0002c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0002f	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00035	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _fDistanceFromCamera$[ebp]
  0003a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00040	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00047	e8 00 00 00 00	 call	 ?fMINMAX@@YAMMMM@Z	; fMINMAX

; 467  : 
; 468  : 		if (m_fLODDistance>0.0f)

  0004c	f3 0f 10 57 04	 movss	 xmm2, DWORD PTR [edi+4]
  00051	0f 57 c0	 xorps	 xmm0, xmm0
  00054	d9 5d 08	 fstp	 DWORD PTR _fLODFactor$1[ebp]
  00057	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _fLODFactor$1[ebp]
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	0f 2f d0	 comiss	 xmm2, xmm0
  00062	f3 0f 11 55 fc	 movss	 DWORD PTR tv800[ebp], xmm2
  00067	76 2a		 jbe	 SHORT $LN5@UpdateLODL

; 469  : 			m_dwLODAniFPS = (DWORD) ((CGrannyModelInstance::ANIFPS_MAX - CGrannyModelInstance::ANIFPS_MIN) * fLODFactor / m_fLODDistance + CGrannyModelInstance::ANIFPS_MIN);

  00069	0f 28 c3	 movaps	 xmm0, xmm3
  0006c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42b40000
  00074	f3 0f 5e c2	 divss	 xmm0, xmm2
  00078	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41f00000
  00080	e8 00 00 00 00	 call	 __ftoui3
  00085	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR tv800[ebp]
  0008a	8b c8		 mov	 ecx, eax
  0008c	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _fLODFactor$1[ebp]
  00091	eb 05		 jmp	 SHORT $LN6@UpdateLODL
$LN5@UpdateLODL:

; 470  : 		else
; 471  : 			m_dwLODAniFPS = CGrannyModelInstance::ANIFPS_MIN;

  00093	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
$LN6@UpdateLODL:

; 472  : 
; 473  : 		assert(m_dwLODAniFPS > 0);
; 474  : 		m_dwLODAniFPS /= 10;
; 475  : 		m_dwLODAniFPS *= 10;

  00098	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]
  0009b	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  000a0	f7 e1		 mul	 ecx

; 476  : 
; 477  : 		float fLODStep = m_fLODDistance / m_que_pkModelInst.size();

  000a2	0f 28 ca	 movaps	 xmm1, xmm2
  000a5	66 0f 6e c3	 movd	 xmm0, ebx
  000a9	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000ad	c1 ea 03	 shr	 edx, 3
  000b0	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  000b3	03 c0		 add	 eax, eax
  000b5	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000b8	8b c3		 mov	 eax, ebx
  000ba	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000bd	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000c6	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000ca	f3 0f 5e c8	 divss	 xmm1, xmm0

; 478  : 		BYTE bLODLevel = BYTE(fLODFactor / fLODStep);
; 479  : 
; 480  : 		if (m_fLODDistance <= 5000.0f)

  000ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@459c4000
  000d6	0f 2f c2	 comiss	 xmm0, xmm2
  000d9	f3 0f 5e d9	 divss	 xmm3, xmm1
  000dd	f3 0f 2c c3	 cvttss2si eax, xmm3
  000e1	72 4d		 jb	 SHORT $LN7@UpdateLODL

; 481  : 		{
; 482  : 			if (fDistanceFromCamera < 500.0f)

  000e3	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fDistanceFromCamera$[ebp]
  000e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43fa0000
  000f0	0f 2f c1	 comiss	 xmm0, xmm1
  000f3	76 04		 jbe	 SHORT $LN8@UpdateLODL

; 483  : 			{
; 484  : 				bLODLevel = 0;

  000f5	33 d2		 xor	 edx, edx

; 485  : 			}

  000f7	eb 27		 jmp	 SHORT $LN12@UpdateLODL
$LN8@UpdateLODL:

; 486  : 			else if (fDistanceFromCamera < 1500.0f)

  000f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44bb8000
  00101	0f 2f c1	 comiss	 xmm0, xmm1
  00104	76 07		 jbe	 SHORT $LN10@UpdateLODL

; 487  : 			{
; 488  : 				bLODLevel = 1;

  00106	ba 01 00 00 00	 mov	 edx, 1

; 489  : 			}

  0010b	eb 13		 jmp	 SHORT $LN12@UpdateLODL
$LN10@UpdateLODL:

; 490  : 			else if (fDistanceFromCamera < 2500.0f)

  0010d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@451c4000
  00115	33 d2		 xor	 edx, edx
  00117	0f 2f c1	 comiss	 xmm0, xmm1
  0011a	0f 96 c2	 setbe	 dl
  0011d	83 c2 02	 add	 edx, 2
$LN12@UpdateLODL:

; 491  : 			{
; 492  : 				bLODLevel = 2;
; 493  : 			}
; 494  : 			else
; 495  : 			{
; 496  : 				bLODLevel = 3;
; 497  : 			}
; 498  : 
; 499  : 			bLODLevel = (BYTE) (m_que_pkModelInst.size() - min(bLODLevel, m_que_pkModelInst.size()) - 1);

  00120	0f b6 c3	 movzx	 eax, bl
  00123	3b d3		 cmp	 edx, ebx
  00125	0f b6 ca	 movzx	 ecx, dl
  00128	0f 43 c8	 cmovae	 ecx, eax
  0012b	2a d9		 sub	 bl, cl
  0012d	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
$LN7@UpdateLODL:

; 500  : 		}
; 501  : 
; 502  : 		if (ms_isMinLODModeEnable)

  00130	33 c9		 xor	 ecx, ecx
  00132	0f b6 c0	 movzx	 eax, al
  00135	38 0d 00 00 00
	00		 cmp	 BYTE PTR ?ms_isMinLODModeEnable@@3_NA, cl ; ms_isMinLODModeEnable
  0013b	0f 45 c1	 cmovne	 eax, ecx

; 503  : 			bLODLevel=0;
; 504  : 
; 505  : 		SetLODLevel(bLODLevel);

  0013e	8b cf		 mov	 ecx, edi
  00140	88 45 0c	 mov	 BYTE PTR _bLODLevel$2[ebp], al
  00143	ff 75 0c	 push	 DWORD PTR _bLODLevel$2[ebp]
  00146	e8 00 00 00 00	 call	 ?SetLODLevel@CGrannyLODController@@QAEXE@Z ; CGrannyLODController::SetLODLevel

; 507  : 		if (m_pCurrentModelInstance != m_que_pkModelInst[m_bLODLevel])

  0014b	0f b6 47 1c	 movzx	 eax, BYTE PTR [edi+28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  0014f	8b 5f 30	 mov	 ebx, DWORD PTR [edi+48]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00152	8b 57 2c	 mov	 edx, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 507  : 		if (m_pCurrentModelInstance != m_que_pkModelInst[m_bLODLevel])

  00155	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00158	4a		 dec	 edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 507  : 		if (m_pCurrentModelInstance != m_que_pkModelInst[m_bLODLevel])

  00159	89 45 0c	 mov	 DWORD PTR tv875[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 87   :         _Myoff += _Off;

  0015c	8d 34 18	 lea	 esi, DWORD PTR [eax+ebx]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0015f	8b c6		 mov	 eax, esi

; 57   :         return _Mycont->_Map[_Block][_Off];

  00161	83 e6 03	 and	 esi, 3

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00164	c1 e8 02	 shr	 eax, 2
  00167	23 d0		 and	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 507  : 		if (m_pCurrentModelInstance != m_que_pkModelInst[m_bLODLevel])

  00169	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0016c	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  0016f	3b 04 b1	 cmp	 eax, DWORD PTR [ecx+esi*4]
  00172	74 54		 je	 SHORT $LN103@UpdateLODL
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 87   :         _Myoff += _Off;

  00174	8b 55 0c	 mov	 edx, DWORD PTR tv875[ebp]
  00177	03 d3		 add	 edx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 511  : 	}

  00179	eb 2f		 jmp	 SHORT $LN105@UpdateLODL
$LN3@UpdateLODL:

; 512  : 	else
; 513  : 	{
; 514  : 		m_dwLODAniFPS=CGrannyModelInstance::ANIFPS_MAX;

  0017b	c7 47 08 78 00
	00 00		 mov	 DWORD PTR [edi+8], 120	; 00000078H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 921  :         return _Unchecked_iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00182	8b 5f 34	 mov	 ebx, DWORD PTR [edi+52]
  00185	03 5f 30	 add	 ebx, DWORD PTR [edi+48]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00188	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 518  : 			if (m_pCurrentModelInstance != m_que_pkModelInst.back())

  0018b	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0018e	48		 dec	 eax

; 97   :         _Myoff -= _Off;

  0018f	8d 73 ff	 lea	 esi, DWORD PTR [ebx-1]

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00192	8b d6		 mov	 edx, esi

; 57   :         return _Mycont->_Map[_Block][_Off];

  00194	83 e6 03	 and	 esi, 3

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00197	c1 ea 02	 shr	 edx, 2
  0019a	23 d0		 and	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 518  : 			if (m_pCurrentModelInstance != m_que_pkModelInst.back())

  0019c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0019f	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  001a2	3b 04 b1	 cmp	 eax, DWORD PTR [ecx+esi*4]
  001a5	74 21		 je	 SHORT $LN103@UpdateLODL
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 97   :         _Myoff -= _Off;

  001a7	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
$LN105@UpdateLODL:

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  001aa	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  001ad	8b ca		 mov	 ecx, edx
  001af	48		 dec	 eax
  001b0	c1 e9 02	 shr	 ecx, 2
  001b3	23 c8		 and	 ecx, eax

; 57   :         return _Mycont->_Map[_Block][_Off];

  001b5	83 e2 03	 and	 edx, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 520  : 				SetCurrentModelInstance(m_que_pkModelInst.back());

  001b8	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  001bb	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  001be	8b cf		 mov	 ecx, edi
  001c0	ff 34 90	 push	 DWORD PTR [eax+edx*4]
  001c3	e8 00 00 00 00	 call	 ?SetCurrentModelInstance@CGrannyLODController@@IAEXPAVCGrannyModelInstance@@@Z ; CGrannyLODController::SetCurrentModelInstance
$LN103@UpdateLODL:
  001c8	5e		 pop	 esi
  001c9	5b		 pop	 ebx
$LN17@UpdateLODL:
  001ca	5f		 pop	 edi

; 521  : 			}
; 522  : 		}
; 523  : 	}
; 524  : }

  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c2 08 00	 ret	 8
?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z ENDP	; CGrannyLODController::UpdateLODLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?Update@CGrannyLODController@@QAEXMMM@Z
_TEXT	SEGMENT
_fElapsedTime$ = 8					; size = 4
_fDistanceFromCenter$ = 12				; size = 4
_fDistanceFromCamera$ = 16				; size = 4
?Update@CGrannyLODController@@QAEXMMM@Z PROC		; CGrannyLODController::Update, COMDAT
; _this$ = ecx

; 448  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 449  : 	UpdateLODLevel(fDistanceFromCenter, fDistanceFromCamera);

  00003	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fDistanceFromCamera$[ebp]
  00008	56		 push	 esi
  00009	83 ec 08	 sub	 esp, 8
  0000c	8b f1		 mov	 esi, ecx
  0000e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00014	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fDistanceFromCenter$[ebp]
  00019	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001e	e8 00 00 00 00	 call	 ?UpdateLODLevel@CGrannyLODController@@QAEXMM@Z ; CGrannyLODController::UpdateLODLevel

; 450  : 	UpdateTime(fElapsedTime);

  00023	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00028	51		 push	 ecx
  00029	8b ce		 mov	 ecx, esi
  0002b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00030	e8 00 00 00 00	 call	 ?UpdateTime@CGrannyLODController@@QAEXM@Z ; CGrannyLODController::UpdateTime
  00035	5e		 pop	 esi

; 451  : }

  00036	5d		 pop	 ebp
  00037	c2 0c 00	 ret	 12			; 0000000cH
?Update@CGrannyLODController@@QAEXMMM@Z ENDP		; CGrannyLODController::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?BlendRenderWithTwoTexture@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?BlendRenderWithTwoTexture@CGrannyLODController@@QAEXXZ PROC ; CGrannyLODController::BlendRenderWithTwoTexture, COMDAT
; _this$ = ecx

; 443  : 	assert(m_pCurrentModelInstance != NULL);
; 444  : 	m_pCurrentModelInstance->BlendRenderWithTwoTexture();

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?BlendRenderWithTwoTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::BlendRenderWithTwoTexture
?BlendRenderWithTwoTexture@CGrannyLODController@@QAEXXZ ENDP ; CGrannyLODController::BlendRenderWithTwoTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ PROC ; CGrannyLODController::BlendRenderWithOneTexture, COMDAT
; _this$ = ecx

; 431  : 	assert(m_pCurrentModelInstance != NULL);
; 432  : 	m_pCurrentModelInstance->BlendRenderWithOneTexture();

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?BlendRenderWithOneTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::BlendRenderWithOneTexture
?BlendRenderWithOneTexture@CGrannyLODController@@QAEXXZ ENDP ; CGrannyLODController::BlendRenderWithOneTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::RenderWithTwoTexture, COMDAT
; _this$ = ecx

; 437  : 	assert(m_pCurrentModelInstance != NULL);
; 438  : 	m_pCurrentModelInstance->RenderWithTwoTexture();

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?RenderWithTwoTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::RenderWithTwoTexture
?RenderWithTwoTexture@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::RenderWithTwoTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?RenderWithOneTexture@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?RenderWithOneTexture@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::RenderWithOneTexture, COMDAT
; _this$ = ecx

; 408  : 	assert(m_pCurrentModelInstance != NULL);
; 409  : 
; 410  : //#define CHECK_LOD
; 411  : #ifdef CHECK_LOD
; 412  : 	if (m_que_pkModelInst.size() > 0 && m_pCurrentModelInstance == m_que_pkModelInst[0])
; 413  : 		m_pCurrentModelInstance->RenderWithoutTexture();
; 414  : 
; 415  : 	if (m_que_pkModelInst.size() > 1 && m_pCurrentModelInstance == m_que_pkModelInst[1])
; 416  : 		m_pCurrentModelInstance->RenderWithOneTexture();
; 417  : 
; 418  : 	if (m_que_pkModelInst.size() > 2 && m_pCurrentModelInstance == m_que_pkModelInst[2])
; 419  : 		m_pCurrentModelInstance->RenderWithOneTexture();
; 420  : 
; 421  : 	if (m_que_pkModelInst.size() > 3 && m_pCurrentModelInstance == m_que_pkModelInst[3])
; 422  : 		m_pCurrentModelInstance->RenderWithOneTexture();
; 423  : 
; 424  : #else
; 425  : 	m_pCurrentModelInstance->RenderWithOneTexture();

  00000	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00003	e9 00 00 00 00	 jmp	 ?RenderWithOneTexture@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::RenderWithOneTexture
?RenderWithOneTexture@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::RenderWithOneTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z
_TEXT	SEGMENT
_c_szMtrlName$ = 8					; size = 4
_bEnable$ = 12						; size = 4
_fPower$ = 16						; size = 4
?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z PROC	; CGrannyLODController::SetSpecularInfo, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00008	33 f6		 xor	 esi, esi

; 1166 :             _Myproxy = _Parent_proxy;

  0000a	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  0000d	8b 5f 30	 mov	 ebx, DWORD PTR [edi+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00010	85 c0		 test	 eax, eax
  00012	74 0c		 je	 SHORT $LL88@SetSpecula

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00014	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  00016	85 f6		 test	 esi, esi
  00018	74 04		 je	 SHORT $LN47@SetSpecula

; 1153 :             // have a parent, do adoption
; 1154 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;
; 1155 : 
; 1156 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1157 :             if (_Myproxy != _Parent_proxy) { // change parentage
; 1158 :                 _Lockit _Lock(_LOCK_DEBUG);
; 1159 :                 _Orphan_me();
; 1160 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;
; 1161 :                 _Parent_proxy->_Myfirstiter = this;
; 1162 :                 _Myproxy                    = _Parent_proxy;
; 1163 :             }
; 1164 : 
; 1165 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1166 :             _Myproxy = _Parent_proxy;

  0001a	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  0001c	eb 02		 jmp	 SHORT $LL88@SetSpecula
$LN47@SetSpecula:

; 1174 :             _Myproxy = nullptr;

  0001e	33 f6		 xor	 esi, esi
$LL88@SetSpecula:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  00023	03 47 34	 add	 eax, DWORD PTR [edi+52]

; 350  :         return this->_Myoff == _Right._Myoff;

  00026	3b d8		 cmp	 ebx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 174  : 	for (i=m_que_pkModelInst.begin(); i!=m_que_pkModelInst.end(); ++i)

  00028	74 3c		 je	 SHORT $LN3@SetSpecula
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002a	85 f6		 test	 esi, esi
  0002c	74 04		 je	 SHORT $LN81@SetSpecula
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	eb 02		 jmp	 SHORT $LN82@SetSpecula
$LN81@SetSpecula:
  00032	33 c9		 xor	 ecx, ecx
$LN82@SetSpecula:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00034	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00037	8b d3		 mov	 edx, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 177  : 		pkModelInst->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  00039	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fPower$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003e	48		 dec	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 177  : 		pkModelInst->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  0003f	51		 push	 ecx
  00040	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00043	c1 ea 02	 shr	 edx, 2
  00046	23 d0		 and	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 177  : 		pkModelInst->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	ff 75 0c	 push	 DWORD PTR _bEnable$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00050	8b c3		 mov	 eax, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 177  : 		pkModelInst->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  00052	ff 75 08	 push	 DWORD PTR _c_szMtrlName$[ebp]
  00055	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00058	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 177  : 		pkModelInst->SetSpecularInfo(c_szMtrlName, bEnable, fPower);

  0005b	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  0005e	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyModelInstance@@QAEXPBDHM@Z ; CGrannyModelInstance::SetSpecularInfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  00063	43		 inc	 ebx
  00064	eb ba		 jmp	 SHORT $LL88@SetSpecula
$LN3@SetSpecula:
  00066	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 179  : }

  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
?SetSpecularInfo@CGrannyLODController@@QAEXPBDHM@Z ENDP	; CGrannyLODController::SetSpecularInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z
_TEXT	SEGMENT
_c_szImageName$ = 8					; size = 4
_c_rkMaterialData$ = 12					; size = 4
?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z PROC ; CGrannyLODController::SetMaterialData, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00007	33 f6		 xor	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 162  : {

  00009	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0000a	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  0000d	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00010	85 c0		 test	 eax, eax
  00012	74 0c		 je	 SHORT $LL48@SetMateria

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00014	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  00016	85 f6		 test	 esi, esi
  00018	74 04		 je	 SHORT $LN47@SetMateria

; 1166 :             _Myproxy = _Parent_proxy;

  0001a	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  0001c	eb 02		 jmp	 SHORT $LL48@SetMateria
$LN47@SetMateria:

; 1174 :             _Myproxy = nullptr;

  0001e	33 f6		 xor	 esi, esi
$LL48@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00023	03 43 34	 add	 eax, DWORD PTR [ebx+52]

; 350  :         return this->_Myoff == _Right._Myoff;

  00026	3b f8		 cmp	 edi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 164  : 	for (i=m_que_pkModelInst.begin(); i!=m_que_pkModelInst.end(); ++i)

  00028	74 31		 je	 SHORT $LN3@SetMateria
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002a	85 f6		 test	 esi, esi
  0002c	74 04		 je	 SHORT $LN81@SetMateria
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	eb 02		 jmp	 SHORT $LN82@SetMateria
$LN81@SetMateria:
  00032	33 c9		 xor	 ecx, ecx
$LN82@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00034	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00037	8b d7		 mov	 edx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 167  : 		pkModelInst->SetMaterialData(c_szImageName, c_rkMaterialData);

  00039	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003c	48		 dec	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 167  : 		pkModelInst->SetMaterialData(c_szImageName, c_rkMaterialData);

  0003d	ff 75 0c	 push	 DWORD PTR _c_rkMaterialData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00040	c1 ea 02	 shr	 edx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 167  : 		pkModelInst->SetMaterialData(c_szImageName, c_rkMaterialData);

  00043	ff 75 08	 push	 DWORD PTR _c_szImageName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00046	23 d0		 and	 edx, eax

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00048	8b c7		 mov	 eax, edi
  0004a	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 167  : 		pkModelInst->SetMaterialData(c_szImageName, c_rkMaterialData);

  0004d	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00050	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  00053	e8 00 00 00 00	 call	 ?SetMaterialData@CGrannyModelInstance@@QAEXPBDABUSMaterialData@@@Z ; CGrannyModelInstance::SetMaterialData
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  00058	47		 inc	 edi
  00059	eb c5		 jmp	 SHORT $LL48@SetMateria
$LN3@SetMateria:
  0005b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 169  : }

  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?SetMaterialData@CGrannyLODController@@QAEXPBDABUSMaterialData@@@Z ENDP ; CGrannyLODController::SetMaterialData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_c_szImageName$ = 8					; size = 4
_pImage$ = 12						; size = 4
?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z PROC ; CGrannyLODController::SetMaterialImagePointer, COMDAT
; _this$ = ecx

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1174 :             _Myproxy = nullptr;

  00007	33 f6		 xor	 esi, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 152  : {

  00009	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1166 :             _Myproxy = _Parent_proxy;

  0000a	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 255  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  0000d	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1128 :         if (_Myproxy != _Right._Myproxy) {

  00010	85 c0		 test	 eax, eax
  00012	74 0c		 je	 SHORT $LL48@SetMateria

; 1129 :             if (_Right._Myproxy) {
; 1130 :                 _Adopt(_Right._Myproxy->_Mycont);

  00014	8b 30		 mov	 esi, DWORD PTR [eax]

; 1152 :         if (_Parent) {

  00016	85 f6		 test	 esi, esi
  00018	74 04		 je	 SHORT $LN47@SetMateria

; 1166 :             _Myproxy = _Parent_proxy;

  0001a	8b 36		 mov	 esi, DWORD PTR [esi]

; 1167 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1168 :         } else {

  0001c	eb 02		 jmp	 SHORT $LL48@SetMateria
$LN47@SetMateria:

; 1174 :             _Myproxy = nullptr;

  0001e	33 f6		 xor	 esi, esi
$LL48@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00020	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00023	03 43 34	 add	 eax, DWORD PTR [ebx+52]

; 350  :         return this->_Myoff == _Right._Myoff;

  00026	3b f8		 cmp	 edi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 154  : 	for (i=m_que_pkModelInst.begin(); i!=m_que_pkModelInst.end(); ++i)

  00028	74 31		 je	 SHORT $LN3@SetMateria
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0002a	85 f6		 test	 esi, esi
  0002c	74 04		 je	 SHORT $LN81@SetMateria
  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	eb 02		 jmp	 SHORT $LN82@SetMateria
$LN81@SetMateria:
  00032	33 c9		 xor	 ecx, ecx
$LN82@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00034	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00037	8b d7		 mov	 edx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 157  : 		pkModelInst->SetMaterialImagePointer(c_szImageName, pImage);

  00039	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0003c	48		 dec	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 157  : 		pkModelInst->SetMaterialImagePointer(c_szImageName, pImage);

  0003d	ff 75 0c	 push	 DWORD PTR _pImage$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00040	c1 ea 02	 shr	 edx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 157  : 		pkModelInst->SetMaterialImagePointer(c_szImageName, pImage);

  00043	ff 75 08	 push	 DWORD PTR _c_szImageName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00046	23 d0		 and	 edx, eax

; 268  :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00048	8b c7		 mov	 eax, edi
  0004a	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 157  : 		pkModelInst->SetMaterialImagePointer(c_szImageName, pImage);

  0004d	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00050	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  00053	e8 00 00 00 00	 call	 ?SetMaterialImagePointer@CGrannyModelInstance@@QAEXPBDPAVCGraphicImage@@@Z ; CGrannyModelInstance::SetMaterialImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 283  :         ++_Myoff;

  00058	47		 inc	 edi
  00059	eb c5		 jmp	 SHORT $LL48@SetMateria
$LN3@SetMateria:
  0005b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 159  : }

  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?SetMaterialImagePointer@CGrannyLODController@@QAEXPBDPAVCGraphicImage@@@Z ENDP ; CGrannyLODController::SetMaterialImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetLODLevel@CGrannyLODController@@QAEXE@Z
_TEXT	SEGMENT
_bLodLevel$ = 8						; size = 1
?SetLODLevel@CGrannyLODController@@QAEXE@Z PROC		; CGrannyLODController::SetLODLevel, COMDAT
; _this$ = ecx

; 385  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 386  : 	assert(m_que_pkModelInst.size() > 0);
; 387  : 
; 388  : 	if (m_que_pkModelInst.size() > 0)

  00006	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 14		 je	 SHORT $LN2@SetLODLeve

; 389  : 		m_bLODLevel	= (BYTE) MIN(m_que_pkModelInst.size() - 1, bLodLevel);

  0000d	0f b6 45 08	 movzx	 eax, BYTE PTR _bLodLevel$[ebp]
  00011	50		 push	 eax
  00012	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  0001b	83 c4 08	 add	 esp, 8
  0001e	88 46 1c	 mov	 BYTE PTR [esi+28], al
$LN2@SetLODLeve:
  00021	5e		 pop	 esi

; 390  : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?SetLODLevel@CGrannyLODController@@QAEXE@Z ENDP		; CGrannyLODController::SetLODLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetLODLimits@CGrannyLODController@@QAEXMM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_fFarLOD$ = 12						; size = 4
?SetLODLimits@CGrannyLODController@@QAEXMM@Z PROC	; CGrannyLODController::SetLODLimits, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  : 	m_fLODDistance = fFarLOD;

  00003	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fFarLOD$[ebp]
  00008	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 382  : }

  0000d	5d		 pop	 ebp
  0000e	c2 08 00	 ret	 8
?SetLODLimits@CGrannyLODController@@QAEXMM@Z ENDP	; CGrannyLODController::SetLODLimits
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z
_TEXT	SEGMENT
tv784 = -12						; size = 4
_this$1$ = -8						; size = 4
$T1 = -4						; size = 4
_pSrcLODController$ = 8					; size = 4
?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z PROC ; CGrannyLODController::DetachModelInstance, COMDAT
; _this$ = ecx

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 347  : 	CGrannyModelInstance * pSrcInstance = pSrcLODController->GetModelInstance();

  00009	8b 7d 08	 mov	 edi, DWORD PTR _pSrcLODController$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b cf		 mov	 ecx, edi
  00010	89 5d f8	 mov	 DWORD PTR _this$1$[ebp], ebx
  00013	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  00018	8b f0		 mov	 esi, eax

; 348  : 	if (!pSrcInstance)

  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 05 01 00
	00		 je	 $LN1@DetachMode

; 349  : 		return;
; 350  : 
; 351  : 	CGrannyModelInstance * pDestInstance = GetModelInstance();

  00022	8b cb		 mov	 ecx, ebx
  00024	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 352  : 	if (pDestInstance)

  00029	85 c0		 test	 eax, eax
  0002b	74 0b		 je	 SHORT $LN6@DetachMode

; 353  : 	{
; 354  : 		pSrcInstance->SetParentModelInstance(NULL, 0);

  0002d	6a 00		 push	 0
  0002f	6a 00		 push	 0
  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?SetParentModelInstance@CGrannyModelInstance@@QAEXPBV1@H@Z ; CGrannyModelInstance::SetParentModelInstance
$LN6@DetachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00038	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0003b	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
  0003e	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  00041	3b ce		 cmp	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 362  : 	for (; m_AttachedModelDataVector.end() != itor;)

  00043	0f 84 d7 00 00
	00		 je	 $LN3@DetachMode
  00049	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  0004c	89 45 f4	 mov	 DWORD PTR tv784[ebp], eax
  0004f	90		 npad	 1
$LL2@DetachMode:

; 363  : 	{
; 364  : 		TAttachingModelData & rData = *itor;
; 365  : 		if (pSrcLODController == rData.pkLODController)

  00050	3b 3e		 cmp	 edi, DWORD PTR [esi]
  00052	0f 85 b4 00 00
	00		 jne	 $LN7@DetachMode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1342 :         const pointer _Whereptr = _Where._Ptr;

  00058	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0005a	3b c1		 cmp	 eax, ecx
  0005c	74 75		 je	 SHORT $LN87@DetachMode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1344 :         pointer& _Mylast        = _My_data._Mylast;

  0005e	8d 78 e8	 lea	 edi, DWORD PTR [eax-24]
$LL31@DetachMode:
  00061	8b 03		 mov	 eax, DWORD PTR [ebx]
  00063	89 47 fc	 mov	 DWORD PTR [edi-4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  00066	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  00069	3b f8		 cmp	 edi, eax
  0006b	74 4e		 je	 SHORT $LN29@DetachMode

; 2153 :         return _BUF_SIZE <= _Myres;

  0006d	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00070	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00073	72 14		 jb	 SHORT $LN41@DetachMode

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00075	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00078	50		 push	 eax
  00079	ff 37		 push	 DWORD PTR [edi]
  0007b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00080	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00083	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  00086	83 c4 08	 add	 esp, 8
$LN41@DetachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00089	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00090	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00097	c6 07 00	 mov	 BYTE PTR [edi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0009a	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0009d	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  000a0	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  000a5	66 0f d6 47 10	 movq	 QWORD PTR [edi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  000aa	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b1	c7 47 30 0f 00
	00 00		 mov	 DWORD PTR [edi+48], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000b8	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN29@DetachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4376 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  000bb	83 c3 1c	 add	 ebx, 28			; 0000001cH
  000be	83 c7 1c	 add	 edi, 28			; 0000001cH
  000c1	3b d9		 cmp	 ebx, ecx
  000c3	75 9c		 jne	 SHORT $LL31@DetachMode
  000c5	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
  000c8	8b 7d 08	 mov	 edi, DWORD PTR _pSrcLODController$[ebp]
  000cb	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000ce	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  000d1	eb 03		 jmp	 SHORT $LN86@DetachMode
$LN87@DetachMode:
  000d3	8b 5d f8	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN86@DetachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000d6	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  000d9	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000dc	72 10		 jb	 SHORT $LN65@DetachMode

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000de	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000df	50		 push	 eax
  000e0	ff 71 e8	 push	 DWORD PTR [ecx-24]
  000e3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  000eb	83 c4 08	 add	 esp, 8
$LN65@DetachMode:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 368  : 		}

  000ee	8b 45 f4	 mov	 eax, DWORD PTR tv784[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000f1	c7 41 f8 00 00
	00 00		 mov	 DWORD PTR [ecx-8], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000f8	c7 41 fc 0f 00
	00 00		 mov	 DWORD PTR [ecx-4], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ff	c6 41 e8 00	 mov	 BYTE PTR [ecx-24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1355 :         --_Mylast;

  00103	83 43 10 e4	 add	 DWORD PTR [ebx+16], -28	; ffffffe4H
  00107	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 368  : 		}

  0010a	eb 09		 jmp	 SHORT $LN88@DetachMode
$LN7@DetachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0010c	83 c6 1c	 add	 esi, 28			; 0000001cH
  0010f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00112	89 45 f4	 mov	 DWORD PTR tv784[ebp], eax
$LN88@DetachMode:

; 149  :         return _Ptr == _Right._Ptr;

  00115	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  00118	3b ce		 cmp	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 362  : 	for (; m_AttachedModelDataVector.end() != itor;)

  0011a	0f 85 30 ff ff
	ff		 jne	 $LL2@DetachMode
$LN3@DetachMode:

; 369  : 		else
; 370  : 		{
; 371  : 			++itor;
; 372  : 		}
; 373  : 	}
; 374  : 
; 375  : 	// Unlink Parent Data
; 376  : 	pSrcLODController->m_pAttachedParentModel = NULL;

  00120	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN1@DetachMode:
  00127	5f		 pop	 edi

; 377  : }

  00128	5e		 pop	 esi
  00129	5b		 pop	 ebx
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 04 00	 ret	 4
?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z ENDP ; CGrannyLODController::DetachModelInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z
_TEXT	SEGMENT
$T2 = -52						; size = 4
_c_szBoneName$GSCopy$1$ = -48				; size = 4
_AttachingModelData$ = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pSrcLODController$ = 8					; size = 4
_c_szBoneName$ = 12					; size = 4
?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z PROC ; CGrannyLODController::AttachModelInstance, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _pSrcLODController$[ebp]

; 308  : 	CGrannyModelInstance * pSrcInstance = pSrcLODController->GetModelInstance();

  00030	8b ce		 mov	 ecx, esi
  00032	8b 45 0c	 mov	 eax, DWORD PTR _c_szBoneName$[ebp]
  00035	89 45 d0	 mov	 DWORD PTR _c_szBoneName$GSCopy$1$[ebp], eax
  00038	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  0003d	8b d8		 mov	 ebx, eax

; 309  : 	if (!pSrcInstance)

  0003f	85 db		 test	 ebx, ebx
  00041	0f 84 c5 00 00
	00		 je	 $LN69@AttachMode

; 310  : 		return;
; 311  : 
; 312  : 	CGrannyModelInstance * pDestInstance = GetModelInstance();

  00047	8b cf		 mov	 ecx, edi
  00049	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance

; 313  : 	if (pDestInstance)

  0004e	85 c0		 test	 eax, eax
  00050	74 0b		 je	 SHORT $LN6@AttachMode

; 314  : 	{
; 315  : 		pSrcInstance->SetParentModelInstance(pDestInstance, c_szBoneName);

  00052	ff 75 d0	 push	 DWORD PTR _c_szBoneName$GSCopy$1$[ebp]
  00055	8b cb		 mov	 ecx, ebx
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?SetParentModelInstance@CGrannyModelInstance@@QAEXPBV1@PBD@Z ; CGrannyModelInstance::SetParentModelInstance
$LN6@AttachMode:

; 316  : 	}
; 317  : 
; 318  : 	if (!pSrcLODController->GetModelInstance())

  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?GetModelInstance@CGrannyLODController@@QAEPAVCGrannyModelInstance@@XZ ; CGrannyLODController::GetModelInstance
  00064	85 c0		 test	 eax, eax
  00066	0f 84 a0 00 00
	00		 je	 $LN69@AttachMode

; 319  : 		return;
; 320  : 
; 321  : 	// Link Parent Data
; 322  : 	pSrcLODController->m_pAttachedParentModel = this;

  0006c	89 7e 18	 mov	 DWORD PTR [esi+24], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0006f	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00072	39 47 10	 cmp	 DWORD PTR [edi+16], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 326  : 	for (; m_AttachedModelDataVector.end() != itor;)

  00075	74 1d		 je	 SHORT $LN3@AttachMode
$LL2@AttachMode:

; 327  : 	{
; 328  : 		TAttachingModelData & rData = *itor;
; 329  : 		if (pSrcLODController == rData.pkLODController)

  00077	3b 30		 cmp	 esi, DWORD PTR [eax]
  00079	75 11		 jne	 SHORT $LN8@AttachMode

; 330  : 		{
; 331  : 			itor = m_AttachedModelDataVector.erase(itor);

  0007b	50		 push	 eax
  0007c	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  0007f	50		 push	 eax
  00080	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00083	e8 00 00 00 00	 call	 ?erase@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USAttachingModelData@CGrannyLODController@@@std@@@std@@@2@@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::erase
  00088	8b 00		 mov	 eax, DWORD PTR [eax]

; 332  : 		}

  0008a	eb 03		 jmp	 SHORT $LN9@AttachMode
$LN8@AttachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0008c	83 c0 1c	 add	 eax, 28			; 0000001cH
$LN9@AttachMode:

; 149  :         return _Ptr == _Right._Ptr;

  0008f	39 47 10	 cmp	 DWORD PTR [edi+16], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 326  : 	for (; m_AttachedModelDataVector.end() != itor;)

  00092	75 e3		 jne	 SHORT $LL2@AttachMode
$LN3@AttachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00094	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _AttachingModelData$[ebp+20], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _AttachingModelData$[ebp+24], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a2	c6 45 d8 00	 mov	 BYTE PTR _AttachingModelData$[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 340  : 	AttachingModelData.pkLODController = pSrcLODController;

  000a6	89 75 d4	 mov	 DWORD PTR _AttachingModelData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000a9	8b 75 d0	 mov	 esi, DWORD PTR _c_szBoneName$GSCopy$1$[ebp]
  000ac	8b ce		 mov	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 339  : 	TAttachingModelData AttachingModelData;

  000ae	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000b5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL78@AttachMode:
  000b8	8a 01		 mov	 al, BYTE PTR [ecx]
  000ba	41		 inc	 ecx
  000bb	84 c0		 test	 al, al
  000bd	75 f9		 jne	 SHORT $LL78@AttachMode
  000bf	2b ca		 sub	 ecx, edx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c1	51		 push	 ecx
  000c2	56		 push	 esi
  000c3	8d 4d d8	 lea	 ecx, DWORD PTR _AttachingModelData$[ebp+4]
  000c6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000cb	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000ce	3b 4f 14	 cmp	 ecx, DWORD PTR [edi+20]
  000d1	74 17		 je	 SHORT $LN53@AttachMode
  000d3	8b 45 d4	 mov	 eax, DWORD PTR _AttachingModelData$[ebp]
  000d6	89 01		 mov	 DWORD PTR [ecx], eax
  000d8	8d 45 d8	 lea	 eax, DWORD PTR _AttachingModelData$[ebp+4]
  000db	50		 push	 eax
  000dc	83 c1 04	 add	 ecx, 4
  000df	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 690  :         ++_Mylast;

  000e4	83 47 10 1c	 add	 DWORD PTR [edi+16], 28	; 0000001cH

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000e8	eb 0d		 jmp	 SHORT $LN52@AttachMode
$LN53@AttachMode:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000ea	8d 45 d4	 lea	 eax, DWORD PTR _AttachingModelData$[ebp]
  000ed	50		 push	 eax
  000ee	51		 push	 ecx
  000ef	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  000f2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSAttachingModelData@CGrannyLODController@@@?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAEPAUSAttachingModelData@CGrannyLODController@@QAU23@ABU23@@Z ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::_Emplace_reallocate<CGrannyLODController::SAttachingModelData const &>
$LN52@AttachMode:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  000f7	8b 45 ec	 mov	 eax, DWORD PTR _AttachingModelData$[ebp+24]
  000fa	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000fd	72 0d		 jb	 SHORT $LN69@AttachMode

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ff	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00100	50		 push	 eax
  00101	ff 75 d8	 push	 DWORD PTR _AttachingModelData$[ebp+4]
  00104	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00109	83 c4 08	 add	 esp, 8
$LN69@AttachMode:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 343  : }

  0010c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00116	59		 pop	 ecx
  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011d	33 cd		 xor	 ecx, ebp
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _AttachingModelData$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1SAttachingModelData@CGrannyLODController@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AttachModelInstance@CGrannyLODController@@QAEXPAV1@PBD@Z ENDP ; CGrannyLODController::AttachModelInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z
_TEXT	SEGMENT
_pSkelLODController$GSCopy$1$ = -40			; size = 4
_pModelInstance$ = -36					; size = 4
_iSrcModel$GSCopy$1$ = -32				; size = 4
_pModel$1$ = -32					; size = 4
_fSize$1 = -32						; size = 4
_vtMax$2 = -28						; size = 12
_vtMin$3 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pThing$ = 8						; size = 4
_iSrcModel$ = 12					; size = 4
_pSkelLODController$ = 16				; size = 4
?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z PROC ; CGrannyLODController::AddModel, COMDAT
; _this$ = ecx

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _iSrcModel$[ebp]
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _pThing$[ebp]
  00018	8b f1		 mov	 esi, ecx
  0001a	89 45 e0	 mov	 DWORD PTR _iSrcModel$GSCopy$1$[ebp], eax
  0001d	8b 45 10	 mov	 eax, DWORD PTR _pSkelLODController$[ebp]
  00020	89 45 d8	 mov	 DWORD PTR _pSkelLODController$GSCopy$1$[ebp], eax

; 224  : 	if (!pThing)

  00023	85 ff		 test	 edi, edi
  00025	0f 84 87 01 00
	00		 je	 $LN1@AddModel

; 227  : 	if (pSkelLODController && pSkelLODController->m_que_pkModelInst.empty())

  0002b	85 c0		 test	 eax, eax
  0002d	74 0a		 je	 SHORT $LN3@AddModel
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1009 :         return _Mysize() == 0;

  0002f	83 78 34 00	 cmp	 DWORD PTR [eax+52], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 227  : 	if (pSkelLODController && pSkelLODController->m_que_pkModelInst.empty())

  00033	0f 84 79 01 00
	00		 je	 $LN1@AddModel
$LN3@AddModel:

; 228  : 	{
; 229  : 		assert(!"EMPTY SKELETON(CANNON LINK)");
; 230  : 		return;
; 231  : 	}
; 232  : 
; 233  : 	assert(pThing->GetReferenceCount()>=1);
; 234  : 
; 235  : 	pThing->AddReference();

  00039	8b cf		 mov	 ecx, edi
  0003b	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 236  : 
; 237  : 	if (pThing->GetModelCount() <= iSrcModel)

  00040	8b cf		 mov	 ecx, edi
  00042	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00047	8b 4d e0	 mov	 ecx, DWORD PTR _iSrcModel$GSCopy$1$[ebp]
  0004a	3b c1		 cmp	 eax, ecx
  0004c	0f 8e 59 01 00
	00		 jle	 $LN27@AddModel

; 238  : 	{
; 239  : 		pThing->Release();
; 240  : 		return;
; 241  : 	}
; 242  : 	CGrannyModel * pModel = pThing->GetModelPointer(iSrcModel);

  00052	51		 push	 ecx
  00053	8b cf		 mov	 ecx, edi
  00055	e8 00 00 00 00	 call	 ?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ; CGraphicThing::GetModelPointer
  0005a	89 45 e0	 mov	 DWORD PTR _pModel$1$[ebp], eax

; 243  : 	if (!pModel)

  0005d	85 c0		 test	 eax, eax
  0005f	0f 84 46 01 00
	00		 je	 $LN27@AddModel

; 246  : 		return;
; 247  : 	}
; 248  : 
; 249  : 	CGrannyModelInstance * pModelInstance = CGrannyModelInstance::New();

  00065	e8 00 00 00 00	 call	 ?New@CGrannyModelInstance@@SAPAV1@XZ ; CGrannyModelInstance::New

; 250  : 
; 251  : 	__ReserveSharedDeformableVertexBuffer(pModel->GetDeformVertexCount());

  0006a	8b 4d e0	 mov	 ecx, DWORD PTR _pModel$1$[ebp]
  0006d	89 45 dc	 mov	 DWORD PTR _pModelInstance$[ebp], eax
  00070	e8 00 00 00 00	 call	 ?GetDeformVertexCount@CGrannyModel@@QBEHXZ ; CGrannyModel::GetDeformVertexCount
  00075	50		 push	 eax
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?__ReserveSharedDeformableVertexBuffer@CGrannyLODController@@IAEXK@Z ; CGrannyLODController::__ReserveSharedDeformableVertexBuffer

; 252  : 
; 253  : 	if (pSkelLODController)

  0007d	8b 45 d8	 mov	 eax, DWORD PTR _pSkelLODController$GSCopy$1$[ebp]
  00080	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  00083	85 c0		 test	 eax, eax
  00085	74 06		 je	 SHORT $LN6@AddModel

; 254  : 	{
; 255  : 		pModelInstance->SetLinkedModelPointer(pModel, m_pkSharedDeformableVertexBuffer, &pSkelLODController->m_pCurrentModelInstance);

  00087	83 c0 20	 add	 eax, 32			; 00000020H
  0008a	50		 push	 eax

; 256  : 	}

  0008b	eb 02		 jmp	 SHORT $LN28@AddModel
$LN6@AddModel:

; 257  : 	else
; 258  : 	{
; 259  : 		pModelInstance->SetLinkedModelPointer(pModel, m_pkSharedDeformableVertexBuffer, NULL);

  0008d	6a 00		 push	 0
$LN28@AddModel:

; 260  : 	}
; 261  : 
; 262  : 	// END_OF_WORK
; 263  : 
; 264  : 	if (!m_pCurrentModelInstance)

  0008f	51		 push	 ecx
  00090	ff 75 e0	 push	 DWORD PTR _pModel$1$[ebp]
  00093	8b 4d dc	 mov	 ecx, DWORD PTR _pModelInstance$[ebp]
  00096	e8 00 00 00 00	 call	 ?SetLinkedModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@PAPAV1@@Z ; CGrannyModelInstance::SetLinkedModelPointer
  0009b	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0009f	68 00 00 00 00	 push	 OFFSET ?ms_matIdentity@CGraphicBase@@1UD3DXMATRIX@@A ; CGraphicBase::ms_matIdentity
  000a4	0f 85 d4 00 00
	00		 jne	 $LN8@AddModel

; 265  : 	{
; 266  : 		m_pCurrentModelInstance = pModelInstance;

  000aa	8b 45 dc	 mov	 eax, DWORD PTR _pModelInstance$[ebp]

; 267  : 		pModelInstance->DeformNoSkin(&ms_matIdentity);

  000ad	8b c8		 mov	 ecx, eax
  000af	89 46 20	 mov	 DWORD PTR [esi+32], eax
  000b2	e8 00 00 00 00	 call	 ?DeformNoSkin@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::DeformNoSkin

; 268  : 
; 269  : 		D3DXVECTOR3 vtMin, vtMax;
; 270  : 		pModelInstance->GetBoundBox(&vtMin, &vtMax);

  000b7	8b 4d dc	 mov	 ecx, DWORD PTR _pModelInstance$[ebp]
  000ba	8d 45 e4	 lea	 eax, DWORD PTR _vtMax$2[ebp]
  000bd	50		 push	 eax
  000be	8d 45 f0	 lea	 eax, DWORD PTR _vtMin$3[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox

; 273  : 		fSize = fMAX(fSize, fabs(vtMin.x - vtMax.x));

  000c7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _vtMin$3[ebp]
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _vtMax$2[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  000d4	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 273  : 		fSize = fMAX(fSize, fabs(vtMin.x - vtMax.x));

  000db	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000e1	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  000e8	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX

; 274  : 		fSize = fMAX(fSize, fabs(vtMin.y - vtMax.y));

  000ed	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _vtMin$3[ebp+4]
  000f2	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _vtMax$2[ebp+4]
  000f7	d9 5d e0	 fstp	 DWORD PTR _fSize$1[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  000fa	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 274  : 		fSize = fMAX(fSize, fabs(vtMin.y - vtMax.y));

  00101	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00107	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fSize$1[ebp]
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX

; 275  : 		fSize = fMAX(fSize, fabs(vtMin.z - vtMax.z));

  00116	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _vtMin$3[ebp+8]
  0011b	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _vtMax$2[ebp+8]
  00120	d9 5d e0	 fstp	 DWORD PTR _fSize$1[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  00123	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 275  : 		fSize = fMAX(fSize, fabs(vtMin.z - vtMax.z));

  0012a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00130	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fSize$1[ebp]
  00135	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013a	e8 00 00 00 00	 call	 ?fMAX@@YAMMM@Z		; fMAX

; 276  : 
; 277  : 		if (fSize<LODHEIGHT_ACTOR)

  0013f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?LODHEIGHT_ACTOR@@3MA
  00147	83 c4 08	 add	 esp, 8
  0014a	d9 5d e0	 fstp	 DWORD PTR _fSize$1[ebp]
  0014d	83 ec 08	 sub	 esp, 8
  00150	8b ce		 mov	 ecx, esi
  00152	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _fSize$1[ebp]
  00156	76 0a		 jbe	 SHORT $LN10@AddModel

; 278  : 			SetLODLimits(0.0f, LODDISTANCE_ACTOR);

  00158	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?LODDISTANCE_ACTOR@@3MA
  00160	eb 08		 jmp	 SHORT $LN29@AddModel
$LN10@AddModel:

; 279  : 		else
; 280  : 			//
; 281  : 			SetLODLimits(0.0f, LODDISTANCE_BUILDING);

  00162	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?LODDISTANCE_BUILDING@@3MA
$LN29@AddModel:

; 286  : 	}
; 287  : 
; 288  : 	pThing->Release();

  0016a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00170	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00177	e8 00 00 00 00	 call	 ?SetLODLimits@CGrannyLODController@@QAEXMM@Z ; CGrannyLODController::SetLODLimits
  0017c	eb 08		 jmp	 SHORT $LN9@AddModel
$LN8@AddModel:

; 282  : 	}
; 283  : 	else
; 284  : 	{
; 285  :  		pModelInstance->DeformNoSkin(&ms_matIdentity);

  0017e	8b 4d dc	 mov	 ecx, DWORD PTR _pModelInstance$[ebp]
  00181	e8 00 00 00 00	 call	 ?DeformNoSkin@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::DeformNoSkin
$LN9@AddModel:

; 286  : 	}
; 287  : 
; 288  : 	pThing->Release();

  00186	8b cf		 mov	 ecx, edi
  00188	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 289  : 
; 290  : 	m_que_pkModelInst.push_front(pModelInstance);

  0018d	8d 45 dc	 lea	 eax, DWORD PTR _pModelInstance$[ebp]
  00190	50		 push	 eax
  00191	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00194	e8 00 00 00 00	 call	 ?push_front@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@QAEXABQAVCGrannyModelInstance@@@Z ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::push_front
  00199	5f		 pop	 edi

; 291  : }

  0019a	5e		 pop	 esi
  0019b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019e	33 cd		 xor	 ecx, ebp
  001a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a5	8b e5		 mov	 esp, ebp
  001a7	5d		 pop	 ebp
  001a8	c2 0c 00	 ret	 12			; 0000000cH
$LN27@AddModel:

; 244  : 	{
; 245  : 		pThing->Release();

  001ab	8b cf		 mov	 ecx, edi
  001ad	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN1@AddModel:

; 291  : }

  001b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b5	5f		 pop	 edi
  001b6	33 cd		 xor	 ecx, ebp
  001b8	5e		 pop	 esi
  001b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001be	8b e5		 mov	 esp, ebp
  001c0	5d		 pop	 ebp
  001c1	c2 0c 00	 ret	 12			; 0000000cH
?AddModel@CGrannyLODController@@QAEXPAVCGraphicThing@@HPAV1@@Z ENDP ; CGrannyLODController::AddModel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 400  : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00001	8b 59 34	 mov	 ebx, DWORD PTR [ecx+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 400  : {

  00004	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00005	8b 71 30	 mov	 esi, DWORD PTR [ecx+48]
  00008	03 de		 add	 ebx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 400  : {

  0000a	57		 push	 edi

; 401  : 	std::for_each(m_que_pkModelInst.begin(),

  0000b	8d 79 24	 lea	 edi, DWORD PTR [ecx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  0000e	85 ff		 test	 edi, edi
  00010	74 0a		 je	 SHORT $LN50@DestroyDev

; 1153 :             // have a parent, do adoption
; 1154 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;
; 1155 : 
; 1156 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1157 :             if (_Myproxy != _Parent_proxy) { // change parentage
; 1158 :                 _Lockit _Lock(_LOCK_DEBUG);
; 1159 :                 _Orphan_me();
; 1160 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;
; 1161 :                 _Parent_proxy->_Myfirstiter = this;
; 1162 :                 _Myproxy                    = _Parent_proxy;
; 1163 :             }
; 1164 : 
; 1165 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1166 :             _Myproxy = _Parent_proxy;

  00012	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 503  :         return {this->_Myoff, this->_Getcont()};

  00014	85 ff		 test	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00016	74 04		 je	 SHORT $LN50@DestroyDev
  00018	8b 3f		 mov	 edi, DWORD PTR [edi]
  0001a	eb 02		 jmp	 SHORT $LN51@DestroyDev
$LN50@DestroyDev:
  0001c	33 ff		 xor	 edi, edi
$LN51@DestroyDev:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  0001e	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00020	74 23		 je	 SHORT $LN41@DestroyDev
$LL42@DestroyDev:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00022	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00025	8b d6		 mov	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h

; 36   : 			{pModelInstance->DestroyDeviceObjects();}

  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0002a	48		 dec	 eax
  0002b	c1 ea 02	 shr	 edx, 2
  0002e	23 d0		 and	 edx, eax

; 56   :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00030	8b c6		 mov	 eax, esi
  00032	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h

; 36   : 			{pModelInstance->DestroyDeviceObjects();}

  00035	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00038	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  0003b	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGrannyModelInstance@@QAEXXZ ; CGrannyModelInstance::DestroyDeviceObjects
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 65   :         ++_Myoff;

  00040	46		 inc	 esi

; 115  :         return _Myoff == _Right._Myoff;

  00041	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00043	75 dd		 jne	 SHORT $LL42@DestroyDev
$LN41@DestroyDev:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 404  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	c3		 ret	 0
?DestroyDeviceObjects@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?CreateDeviceObjects@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
?CreateDeviceObjects@CGrannyLODController@@QAEXXZ PROC	; CGrannyLODController::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 393  : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00001	8b 59 34	 mov	 ebx, DWORD PTR [ecx+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 393  : {

  00004	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00005	8b 71 30	 mov	 esi, DWORD PTR [ecx+48]
  00008	03 de		 add	 ebx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 393  : {

  0000a	57		 push	 edi

; 394  : 	std::for_each(m_que_pkModelInst.begin(),

  0000b	8d 79 24	 lea	 edi, DWORD PTR [ecx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  0000e	85 ff		 test	 edi, edi
  00010	74 0a		 je	 SHORT $LN50@CreateDevi

; 1153 :             // have a parent, do adoption
; 1154 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;
; 1155 : 
; 1156 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1157 :             if (_Myproxy != _Parent_proxy) { // change parentage
; 1158 :                 _Lockit _Lock(_LOCK_DEBUG);
; 1159 :                 _Orphan_me();
; 1160 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;
; 1161 :                 _Parent_proxy->_Myfirstiter = this;
; 1162 :                 _Myproxy                    = _Parent_proxy;
; 1163 :             }
; 1164 : 
; 1165 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1166 :             _Myproxy = _Parent_proxy;

  00012	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 503  :         return {this->_Myoff, this->_Getcont()};

  00014	85 ff		 test	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00016	74 04		 je	 SHORT $LN50@CreateDevi
  00018	8b 3f		 mov	 edi, DWORD PTR [edi]
  0001a	eb 02		 jmp	 SHORT $LN51@CreateDevi
$LN50@CreateDevi:
  0001c	33 ff		 xor	 edi, edi
$LN51@CreateDevi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  0001e	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00020	74 23		 je	 SHORT $LN41@CreateDevi
$LL42@CreateDevi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00022	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00025	8b d6		 mov	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h

; 30   : 			{pModelInstance->CreateDeviceObjects();}

  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0002a	48		 dec	 eax
  0002b	c1 ea 02	 shr	 edx, 2
  0002e	23 d0		 and	 edx, eax

; 56   :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00030	8b c6		 mov	 eax, esi
  00032	83 e0 03	 and	 eax, 3
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\ModelInstance.h

; 30   : 			{pModelInstance->CreateDeviceObjects();}

  00035	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00038	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  0003b	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::CreateDeviceObjects
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 65   :         ++_Myoff;

  00040	46		 inc	 esi

; 115  :         return _Myoff == _Right._Myoff;

  00041	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00043	75 dd		 jne	 SHORT $LL42@CreateDevi
$LN41@CreateDevi:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 397  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	c3		 ret	 0
?CreateDeviceObjects@CGrannyLODController@@QAEXXZ ENDP	; CGrannyLODController::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?Clear@CGrannyLODController@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -12						; size = 4
_this$1$ = -8						; size = 4
?Clear@CGrannyLODController@@QAEXXZ PROC		; CGrannyLODController::Clear, COMDAT
; _this$ = ecx

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	89 75 f8	 mov	 DWORD PTR _this$1$[ebp], esi

; 201  : 	if (m_pAttachedParentModel)

  0000e	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00011	85 c9		 test	 ecx, ecx
  00013	74 06		 je	 SHORT $LN5@Clear

; 202  : 	{
; 203  : 		m_pAttachedParentModel->DetachModelInstance(this);

  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?DetachModelInstance@CGrannyLODController@@QAEXPAV1@@Z ; CGrannyLODController::DetachModelInstance
$LN5@Clear:

; 204  : 	}
; 205  : 
; 206  : 	m_pCurrentModelInstance = NULL;

  0001b	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 209  : 	std::for_each(m_que_pkModelInst.begin(), m_que_pkModelInst.end(), CGrannyModelInstance::Delete);

  00022	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00025	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 905  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  0002c	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0002f	8b 7e 30	 mov	 edi, DWORD PTR [esi+48]
  00032	03 c7		 add	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 209  : 	std::for_each(m_que_pkModelInst.begin(), m_que_pkModelInst.end(), CGrannyModelInstance::Delete);

  00034	89 4d f4	 mov	 DWORD PTR _this$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1152 :         if (_Parent) {

  00037	85 c9		 test	 ecx, ecx
  00039	74 0a		 je	 SHORT $LN54@Clear

; 1153 :             // have a parent, do adoption
; 1154 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;
; 1155 : 
; 1156 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1157 :             if (_Myproxy != _Parent_proxy) { // change parentage
; 1158 :                 _Lockit _Lock(_LOCK_DEBUG);
; 1159 :                 _Orphan_me();
; 1160 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;
; 1161 :                 _Parent_proxy->_Myfirstiter = this;
; 1162 :                 _Myproxy                    = _Parent_proxy;
; 1163 :             }
; 1164 : 
; 1165 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1166 :             _Myproxy = _Parent_proxy;

  0003b	8b 19		 mov	 ebx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 503  :         return {this->_Myoff, this->_Getcont()};

  0003d	85 db		 test	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1180 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0003f	74 04		 je	 SHORT $LN54@Clear
  00041	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  00043	eb 02		 jmp	 SHORT $LN55@Clear
$LN54@Clear:
  00045	33 db		 xor	 ebx, ebx
$LN55@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 52   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

  00047	3b f8		 cmp	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00049	74 31		 je	 SHORT $LN45@Clear
  0004b	8b f0		 mov	 esi, eax
  0004d	0f 1f 00	 npad	 3
$LL46@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 547  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00050	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00053	8b cf		 mov	 ecx, edi
  00055	48		 dec	 eax
  00056	c1 e9 02	 shr	 ecx, 2
  00059	23 c8		 and	 ecx, eax

; 56   :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  0005b	8b d7		 mov	 edx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 236  :         _Func(*_UFirst);

  0005d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 56   :         _Size_type _Off   = _Myoff % _DEQUESIZ;

  00060	83 e2 03	 and	 edx, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 236  :         _Func(*_UFirst);

  00063	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00066	ff 34 90	 push	 DWORD PTR [eax+edx*4]
  00069	e8 00 00 00 00	 call	 ?Delete@CGrannyModelInstance@@SAXPAV1@@Z ; CGrannyModelInstance::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 65   :         ++_Myoff;

  0006e	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 236  :         _Func(*_UFirst);

  0006f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 115  :         return _Myoff == _Right._Myoff;

  00072	3b fe		 cmp	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00074	75 da		 jne	 SHORT $LL46@Clear
  00076	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  00079	8b 4d f4	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN45@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 1325 :         _Tidy();

  0007c	e8 00 00 00 00	 call	 ?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00081	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00084	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00087	39 46 10	 cmp	 DWORD PTR [esi+16], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 213  : 	for (; m_AttachedModelDataVector.end() != itor; ++itor)

  0008a	74 15		 je	 SHORT $LN3@Clear
  0008c	0f 1f 40 00	 npad	 4
$LL4@Clear:

; 216  : 		rData.pkLODController->m_pAttachedParentModel = NULL;

  00090	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00092	83 c0 1c	 add	 eax, 28			; 0000001cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 216  : 		rData.pkLODController->m_pAttachedParentModel = NULL;

  00095	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  0009c	39 46 10	 cmp	 DWORD PTR [esi+16], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 213  : 	for (; m_AttachedModelDataVector.end() != itor; ++itor)

  0009f	75 ef		 jne	 SHORT $LL4@Clear
$LN3@Clear:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000a1	57		 push	 edi
  000a2	ff 77 04	 push	 DWORD PTR [edi+4]
  000a5	ff 37		 push	 DWORD PTR [edi]
  000a7	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@YAXPAUSAttachingModelData@CGrannyLODController@@QAU12@AAV?$allocator@USAttachingModelData@CGrannyLODController@@@0@@Z ; std::_Destroy_range<std::allocator<CGrannyLODController::SAttachingModelData> >

; 1390 :         _Mylast = _Myfirst;

  000ac	8b 07		 mov	 eax, DWORD PTR [edi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  000b1	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 220  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
?Clear@CGrannyLODController@@QAEXXZ ENDP		; CGrannyLODController::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ??1CGrannyLODController@@UAE@XZ
_TEXT	SEGMENT
__Proxy_allocator$2 = -13				; size = 1
__$EHRec$ = -12						; size = 12
??1CGrannyLODController@@UAE@XZ PROC			; CGrannyLODController::~CGrannyLODController, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGrannyLODController@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx

; 194  : 	__FreeDeformVertexBuffer(m_pkSharedDeformableVertexBuffer);

  00027	ff 77 38	 push	 DWORD PTR [edi+56]
  0002a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CGrannyLODController@@6B@
  00030	e8 00 00 00 00	 call	 ?__FreeDeformVertexBuffer@@YAXPAVCGraphicVertexBuffer@@@Z ; __FreeDeformVertexBuffer
  00035	83 c4 04	 add	 esp, 4

; 195  : 
; 196  : 	Clear();

  00038	8b cf		 mov	 ecx, edi
  0003a	e8 00 00 00 00	 call	 ?Clear@CGrannyLODController@@QAEXXZ ; CGrannyLODController::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 869  :         _Tidy();

  0003f	8d 4f 24	 lea	 ecx, DWORD PTR [edi+36]
  00042	e8 00 00 00 00	 call	 ?_Tidy@?$deque@PAVCGrannyModelInstance@@V?$allocator@PAVCGrannyModelInstance@@@std@@@std@@AAEXXZ ; std::deque<CGrannyModelInstance *,std::allocator<CGrannyModelInstance *> >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00047	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0004a	50		 push	 eax
  0004b	8d 45 f3	 lea	 eax, DWORD PTR __Proxy_allocator$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0004e	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 871  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0005b	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 197  : }

  0005e	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00061	e8 00 00 00 00	 call	 ??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::~vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >
  00066	8b cf		 mov	 ecx, edi
  00068	e8 00 00 00 00	 call	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
  0007e	cc		 int	 3
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGrannyLODController@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGrannyLODController@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGrannyLODController@@UAE@XZ ENDP			; CGrannyLODController::~CGrannyLODController
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ??0CGrannyLODController@@QAE@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGrannyLODController@@QAE@XZ PROC			; CGrannyLODController::CGrannyLODController, COMDAT
; _this$ = ecx

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGrannyLODController@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
  00028	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002b	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  00030	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CGrannyLODController@@6B@

; 185  : 	m_fLODDistance(0.0f),

  00036	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 186  : 	m_dwLODAniFPS(CGrannyModelInstance::ANIFPS_MAX),

  0003d	c7 43 08 78 00
	00 00		 mov	 DWORD PTR [ebx+8], 120	; 00000078H
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0004b	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  00052	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  00059	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 184  : 	m_pAttachedParentModel(NULL),

  00060	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0

; 189  : {

  00067	8d 7b 24	 lea	 edi, DWORD PTR [ebx+36]
  0006a	c6 43 1c 00	 mov	 BYTE PTR [ebx+28], 0
  0006e	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00075	6a 08		 push	 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 189  : {

  00077	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1092 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

  0007b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\deque

; 543  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  00081	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00088	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0008f	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00096	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1102 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  000a2	8b f0		 mov	 esi, eax

; 1103 :         _Construct_in_place(*_New_proxy, this);

  000a4	89 7d f0	 mov	 DWORD PTR $T2[ebp], edi
  000a7	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000aa	50		 push	 eax
  000ab	56		 push	 esi
  000ac	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1104 :         _Myproxy            = _New_proxy;

  000b1	89 37		 mov	 DWORD PTR [edi], esi
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1105 :         _New_proxy->_Mycont = this;

  000b6	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp

; 190  : }

  000b8	8b c3		 mov	 eax, ebx
  000ba	c7 43 38 00 00
	00 00		 mov	 DWORD PTR [ebx+56], 0
  000c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cb	59		 pop	 ecx
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGrannyLODController@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
__unwindfunclet$??0CGrannyLODController@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@USAttachingModelData@CGrannyLODController@@V?$allocator@USAttachingModelData@CGrannyLODController@@@std@@@std@@QAE@XZ ; std::vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >::~vector<CGrannyLODController::SAttachingModelData,std::allocator<CGrannyLODController::SAttachingModelData> >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CGrannyLODController@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGrannyLODController@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGrannyLODController@@QAE@XZ ENDP			; CGrannyLODController::CGrannyLODController
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\LODController.cpp
;	COMDAT ?SetMinLODMode@CGrannyLODController@@SAX_N@Z
_TEXT	SEGMENT
_isEnable$ = 8						; size = 1
?SetMinLODMode@CGrannyLODController@@SAX_N@Z PROC	; CGrannyLODController::SetMinLODMode, COMDAT

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 148  : 	ms_isMinLODModeEnable=isEnable;

  00003	8a 45 08	 mov	 al, BYTE PTR _isEnable$[ebp]
  00006	a2 00 00 00 00	 mov	 BYTE PTR ?ms_isMinLODModeEnable@@3_NA, al ; ms_isMinLODModeEnable

; 149  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?SetMinLODMode@CGrannyLODController@@SAX_N@Z ENDP	; CGrannyLODController::SetMinLODMode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2273 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2153 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2656 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2145 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN11@basic_stri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@basic_stri:

; 2659 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN8@basic_stri

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2662 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN8@basic_stri:

; 2667 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 69   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2668 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2669 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2670 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00090	5e		 pop	 esi

; 2274 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2275 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2276 :         _Construct_lv_contents(_Right);
; 2277 :         _Proxy._Release();
; 2278 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
