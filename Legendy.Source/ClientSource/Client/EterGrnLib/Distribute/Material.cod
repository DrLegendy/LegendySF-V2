; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0?$CRef@VCGraphicImage@@@@QAE@XZ		; CRef<CGraphicImage>::CRef<CGraphicImage>
PUBLIC	??1?$CRef@VCGraphicImage@@@@QAE@XZ		; CRef<CGraphicImage>::~CRef<CGraphicImage>
PUBLIC	?CreateSphereMap@CGrannyMaterial@@SAXIPBD@Z	; CGrannyMaterial::CreateSphereMap
PUBLIC	?DestroySphereMap@CGrannyMaterial@@SAXXZ	; CGrannyMaterial::DestroySphereMap
PUBLIC	?TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z ; CGrannyMaterial::TranslateSpecularMatrix
PUBLIC	??0CGrannyMaterial@@QAE@XZ			; CGrannyMaterial::CGrannyMaterial
PUBLIC	??1CGrannyMaterial@@UAE@XZ			; CGrannyMaterial::~CGrannyMaterial
PUBLIC	?Copy@CGrannyMaterial@@QAEXAAV1@@Z		; CGrannyMaterial::Copy
PUBLIC	?IsEqual@CGrannyMaterial@@QBE_NPAUgranny_material@@@Z ; CGrannyMaterial::IsEqual
PUBLIC	?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z		; CGrannyMaterial::IsIn
PUBLIC	?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z	; CGrannyMaterial::SetSpecularInfo
PUBLIC	?ApplyRenderState@CGrannyMaterial@@QAEXXZ	; CGrannyMaterial::ApplyRenderState
PUBLIC	?RestoreRenderState@CGrannyMaterial@@QAEXXZ	; CGrannyMaterial::RestoreRenderState
PUBLIC	?Initialize@CGrannyMaterial@@IAEXXZ		; CGrannyMaterial::Initialize
PUBLIC	?CreateFromGrannyMaterialPointer@CGrannyMaterial@@QAE_NPAUgranny_material@@@Z ; CGrannyMaterial::CreateFromGrannyMaterialPointer
PUBLIC	?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z ; CGrannyMaterial::SetImagePointer
PUBLIC	?GetType@CGrannyMaterial@@QBE?AW4EType@1@XZ	; CGrannyMaterial::GetType
PUBLIC	?GetImagePointer@CGrannyMaterial@@QBEPAVCGraphicImage@@H@Z ; CGrannyMaterial::GetImagePointer
PUBLIC	?GetDiffuseTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ ; CGrannyMaterial::GetDiffuseTexture
PUBLIC	?GetOpacityTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ ; CGrannyMaterial::GetOpacityTexture
PUBLIC	?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z ; CGrannyMaterial::GetD3DTexture
PUBLIC	?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z ; CGrannyMaterial::__GetImagePointer
PUBLIC	?__IsSpecularEnable@CGrannyMaterial@@IBEHXZ	; CGrannyMaterial::__IsSpecularEnable
PUBLIC	?__GetSpecularPower@CGrannyMaterial@@IBEMXZ	; CGrannyMaterial::__GetSpecularPower
PUBLIC	?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__ApplyDiffuseRenderState
PUBLIC	?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__RestoreDiffuseRenderState
PUBLIC	?__ApplySpecularRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__ApplySpecularRenderState
PUBLIC	?__RestoreSpecularRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__RestoreSpecularRenderState
PUBLIC	??_GCGrannyMaterial@@UAEPAXI@Z			; CGrannyMaterial::`scalar deleting destructor'
PUBLIC	??0CGrannyMaterialPalette@@QAE@XZ		; CGrannyMaterialPalette::CGrannyMaterialPalette
PUBLIC	??1CGrannyMaterialPalette@@UAE@XZ		; CGrannyMaterialPalette::~CGrannyMaterialPalette
PUBLIC	?Clear@CGrannyMaterialPalette@@QAEXXZ		; CGrannyMaterialPalette::Clear
PUBLIC	?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z	; CGrannyMaterialPalette::Copy
PUBLIC	?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z ; CGrannyMaterialPalette::RegisterMaterial
PUBLIC	?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z ; CGrannyMaterialPalette::SetMaterialImagePointer
PUBLIC	?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z ; CGrannyMaterialPalette::SetMaterialData
PUBLIC	?SetSpecularInfo@CGrannyMaterialPalette@@QAEXPBDHM@Z ; CGrannyMaterialPalette::SetSpecularInfo
PUBLIC	?GetMaterialRef@CGrannyMaterialPalette@@QAEAAVCGrannyMaterial@@K@Z ; CGrannyMaterialPalette::GetMaterialRef
PUBLIC	?GetMaterialCount@CGrannyMaterialPalette@@QBEKXZ ; CGrannyMaterialPalette::GetMaterialCount
PUBLIC	?deallocate@?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@QAEXQAV?$CRef@VCGrannyMaterial@@@@I@Z ; std::allocator<CRef<CGrannyMaterial> >::deallocate
PUBLIC	?_Destroy@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@AAEXPAV?$CRef@VCGrannyMaterial@@@@0@Z ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Destroy
PUBLIC	?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Xlength
PUBLIC	??_GCGrannyMaterialPalette@@UAEPAXI@Z		; CGrannyMaterialPalette::`scalar deleting destructor'
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CFileNameHelper::StringPath
PUBLIC	??1?$CRef@VCGrannyMaterial@@@@QAE@XZ		; CRef<CGrannyMaterial>::~CRef<CGrannyMaterial>
PUBLIC	??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Emplace_reallocate<CRef<CGrannyMaterial> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
PUBLIC	??$_Pocca@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@ABV10@@Z ; std::_Pocca<std::allocator<CRef<CGrannyMaterial> > >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_move<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
PUBLIC	??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_copy<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
PUBLIC	??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z ; std::_Copy_unchecked<CRef<CGrannyMaterial> *,CRef<CGrannyMaterial> *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >::~_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	?ms_matSpecular@CGrannyMaterial@@0UD3DXMATRIX@@A ; CGrannyMaterial::ms_matSpecular
PUBLIC	?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A ; CGrannyMaterial::ms_v3SpecularTrans
PUBLIC	?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
PUBLIC	??_7CGrannyMaterial@@6B@			; CGrannyMaterial::`vftable'
PUBLIC	??_7CGrannyMaterialPalette@@6B@			; CGrannyMaterialPalette::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?g_fSpecularColor@@3UD3DXCOLOR@@A		; g_fSpecularColor
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs@			; `string'
PUBLIC	??_C@_05BPEPCAMP@Blend@				; `string'
PUBLIC	??_C@_09HNLEFIID@Two?9sided@			; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGrannyMaterial@@6B@			; CGrannyMaterial::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGrannyMaterial@@@8			; CGrannyMaterial `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyMaterial@@8				; CGrannyMaterial::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyMaterial@@8				; CGrannyMaterial::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGrannyMaterial@@8		; CGrannyMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
PUBLIC	??_R4CGrannyMaterialPalette@@6B@		; CGrannyMaterialPalette::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGrannyMaterialPalette@@@8		; CGrannyMaterialPalette `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyMaterialPalette@@8			; CGrannyMaterialPalette::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyMaterialPalette@@8			; CGrannyMaterialPalette::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGrannyMaterialPalette@@8		; CGrannyMaterialPalette::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp__GrannyGetMaterialTextureByType@8:PROC
EXTRN	__imp__GrannyFindMatchingMember@16:PROC
EXTRN	__imp__GrannyConvertSingleObject@20:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_tolower:PROC
EXTRN	__strnicmp:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??0CReferenceObject@@QAE@XZ:PROC		; CReferenceObject::CReferenceObject
EXTRN	??1CReferenceObject@@UAE@XZ:PROC		; CReferenceObject::~CReferenceObject
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?OnConstruct@CReferenceObject@@MAEXXZ:PROC	; CReferenceObject::OnConstruct
EXTRN	?OnSelfDestruct@CReferenceObject@@MAEXXZ:PROC	; CReferenceObject::OnSelfDestruct
EXTRN	_D3DXMatrixTranslation@16:PROC
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImage::GetTexturePointer
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	??1CGraphicImageInstance@@UAE@XZ:PROC		; CGraphicImageInstance::~CGraphicImageInstance
EXTRN	?Destroy@CGraphicImageInstance@@QAEXXZ:PROC	; CGraphicImageInstance::Destroy
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	??_ECGrannyMaterial@@UAEPAXI@Z:PROC		; CGrannyMaterial::`vector deleting destructor'
EXTRN	??_ECGrannyMaterialPalette@@UAEPAXI@Z:PROC	; CGrannyMaterialPalette::`vector deleting destructor'
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::GetRenderState
EXTRN	?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; GetModelLocalPath
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?ms_matSpecular@CGrannyMaterial@@0UD3DXMATRIX@@A DB 040H DUP (?) ; CGrannyMaterial::ms_matSpecular
?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A DB 0cH DUP (?) ; CGrannyMaterial::ms_v3SpecularTrans
?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A DB 0140H DUP (?) ; CGrannyMaterial::ms_akSphereMapInstance
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?g_fSpecularColor@@3UD3DXCOLOR@@A DB 010H DUP (?)	; g_fSpecularColor
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_akSphereMapInstance$initializer$@CGrannyMaterial@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ ; ??ms_akSphereMapInstance$initializer$@CGrannyMaterial@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyMaterialPalette@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyMaterialPalette@@8 DD FLAT:??_R0?AVCGrannyMaterialPalette@@@8 ; CGrannyMaterialPalette::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyMaterialPalette@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyMaterialPalette@@8
rdata$r	SEGMENT
??_R2CGrannyMaterialPalette@@8 DD FLAT:??_R1A@?0A@EA@CGrannyMaterialPalette@@8 ; CGrannyMaterialPalette::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGrannyMaterialPalette@@8
rdata$r	SEGMENT
??_R3CGrannyMaterialPalette@@8 DD 00H			; CGrannyMaterialPalette::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGrannyMaterialPalette@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyMaterialPalette@@@8
data$r	SEGMENT
??_R0?AVCGrannyMaterialPalette@@@8 DD FLAT:??_7type_info@@6B@ ; CGrannyMaterialPalette `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyMaterialPalette@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGrannyMaterialPalette@@6B@
rdata$r	SEGMENT
??_R4CGrannyMaterialPalette@@6B@ DD 00H			; CGrannyMaterialPalette::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGrannyMaterialPalette@@@8
	DD	FLAT:??_R3CGrannyMaterialPalette@@8
rdata$r	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$r	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyMaterial@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyMaterial@@8 DD FLAT:??_R0?AVCGrannyMaterial@@@8 ; CGrannyMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyMaterial@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyMaterial@@8
rdata$r	SEGMENT
??_R2CGrannyMaterial@@8 DD FLAT:??_R1A@?0A@EA@CGrannyMaterial@@8 ; CGrannyMaterial::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyMaterial@@8
rdata$r	SEGMENT
??_R3CGrannyMaterial@@8 DD 00H				; CGrannyMaterial::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGrannyMaterial@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyMaterial@@@8
data$r	SEGMENT
??_R0?AVCGrannyMaterial@@@8 DD FLAT:??_7type_info@@6B@	; CGrannyMaterial `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyMaterial@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGrannyMaterial@@6B@
rdata$r	SEGMENT
??_R4CGrannyMaterial@@6B@ DD 00H			; CGrannyMaterial::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGrannyMaterial@@@8
	DD	FLAT:??_R3CGrannyMaterial@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNLEFIID@Two?9sided@
CONST	SEGMENT
??_C@_09HNLEFIID@Two?9sided@ DB 'Two-sided', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPEPCAMP@Blend@
CONST	SEGMENT
??_C@_05BPEPCAMP@Blend@ DB 'Blend', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ?SPECULAR_TRANSLATE_MAX@?1??TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z@4MA
_DATA	SEGMENT
?SPECULAR_TRANSLATE_MAX@?1??TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z@4MA DD 049742400r ; 1e+06 ; `CGrannyMaterial::TranslateSpecularMatrix'::`2'::SPECULAR_TRANSLATE_MAX
_DATA	ENDS
;	COMDAT ??_7CGrannyMaterialPalette@@6B@
CONST	SEGMENT
??_7CGrannyMaterialPalette@@6B@ DD FLAT:??_R4CGrannyMaterialPalette@@6B@ ; CGrannyMaterialPalette::`vftable'
	DD	FLAT:??_ECGrannyMaterialPalette@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGrannyMaterial@@6B@
CONST	SEGMENT
??_7CGrannyMaterial@@6B@ DD FLAT:??_R4CGrannyMaterial@@6B@ ; CGrannyMaterial::`vftable'
	DD	FLAT:??_ECGrannyMaterial@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CReferenceObject@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CReferenceObject@@MAEXXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$destroy@V?$CRef@VCGrannyMaterial@@@@@?$_Default_allocator_traits@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@SAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@1@QAV?$CRef@VCGrannyMaterial@@@@@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??$destroy@V?$CRef@VCGrannyMaterial@@@@@?$_Default_allocator_traits@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@SAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@1@QAV?$CRef@VCGrannyMaterial@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$destroy@V?$CRef@VCGrannyMaterial@@@@@?$_Default_allocator_traits@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@SAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@1@QAV?$CRef@VCGrannyMaterial@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z$0
__unwindtable$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CRef@VCGrannyMaterial@@@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CRef@VCGrannyMaterial@@@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CRef@VCGrannyMaterial@@@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCGrannyMaterial@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z$0
__ehfuncinfo$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z$0
__ehfuncinfo$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z$1
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$2
__ehfuncinfo$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGrannyMaterial@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGrannyMaterial@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGrannyMaterial@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGrannyMaterial@@QAE@XZ$1
__ehfuncinfo$??0CGrannyMaterial@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CGrannyMaterial@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCGraphicImage@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >::~_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >::~_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z PROC ; std::_Copy_unchecked<CRef<CGrannyMaterial> *,CRef<CGrannyMaterial> *>, COMDAT

; 4129 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4141 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000a	3b f0		 cmp	 esi, eax
  0000c	74 36		 je	 SHORT $LN16@Copy_unche
  0000e	53		 push	 ebx
  0000f	57		 push	 edi
  00010	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
$LL4@Copy_unche:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 69   : 			m_pObject = pObject;

  00013	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00015	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00017	89 0f		 mov	 DWORD PTR [edi], ecx

; 70   : 
; 71   : 			if (m_pObject)

  00019	85 c9		 test	 ecx, ecx
  0001b	74 08		 je	 SHORT $LN9@Copy_unche

; 72   : 				m_pObject->AddReference();

  0001d	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
  00022	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
$LN9@Copy_unche:

; 73   : 
; 74   : 			if (pOldObject)

  00025	85 db		 test	 ebx, ebx
  00027	74 0a		 je	 SHORT $LN2@Copy_unche

; 75   : 				pOldObject->Release();

  00029	8b cb		 mov	 ecx, ebx
  0002b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
  00030	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
$LN2@Copy_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 4141 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00033	83 c6 04	 add	 esi, 4
  00036	83 c7 04	 add	 edi, 4
  00039	3b f0		 cmp	 esi, eax
  0003b	75 d6		 jne	 SHORT $LL4@Copy_unche

; 4142 :         *_Dest = *_First;
; 4143 :     }
; 4144 : 
; 4145 :     return _Dest;

  0003d	8b c7		 mov	 eax, edi
  0003f	5f		 pop	 edi
  00040	5b		 pop	 ebx
  00041	5e		 pop	 esi

; 4146 : }

  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
$LN16@Copy_unche:

; 4142 :         *_Dest = *_First;
; 4143 :     }
; 4144 : 
; 4145 :     return _Dest;

  00044	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00047	5e		 pop	 esi

; 4146 : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z ENDP ; std::_Copy_unchecked<CRef<CGrannyMaterial> *,CRef<CGrannyMaterial> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z PROC ; std::_Uninitialized_copy<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >, COMDAT

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1528 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1529 :     // note: only called internally from elsewhere in the STL
; 1530 :     using _Ptrval = typename _Alloc::value_type*;
; 1531 : 
; 1532 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	3b f3		 cmp	 esi, ebx
  00046	74 2b		 je	 SHORT $LN3@Uninitiali
  00048	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@Uninitiali:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 32   : 			m_pObject = NULL;

  00050	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 94   : 			m_pObject = pObject;

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00058	89 0f		 mov	 DWORD PTR [edi], ecx

; 95   : 
; 96   : 			if (m_pObject)

  0005a	85 c9		 test	 ecx, ecx
  0005c	74 05		 je	 SHORT $LN16@Uninitiali

; 97   : 				m_pObject->AddReference();

  0005e	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN16@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00063	83 c7 04	 add	 edi, 4

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	83 c6 04	 add	 esi, 4

; 1509 :         ++_Last;

  00069	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1533 :     const auto _ULast = _Get_unwrapped(_Last);
; 1534 : 
; 1535 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1536 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1537 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1538 :         _Dest += _ULast - _UFirst;
; 1539 :     } else {
; 1540 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0006c	3b f3		 cmp	 esi, ebx
  0006e	75 e0		 jne	 SHORT $LL4@Uninitiali
  00070	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00073	50		 push	 eax
  00074	57		 push	 edi
  00075	57		 push	 edi
  00076	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1542 :             _Backout._Emplace_back(*_UFirst);
; 1543 :         }
; 1544 : 
; 1545 :         _Dest = _Backout._Release();
; 1546 :     }
; 1547 : 
; 1548 :     return _Dest;

  0007e	8b c7		 mov	 eax, edi

; 1549 : }

  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >::~_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ENDP ; std::_Uninitialized_copy<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z PROC ; std::_Uninitialized_move<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	3b f3		 cmp	 esi, ebx
  00046	74 2b		 je	 SHORT $LN3@Uninitiali
  00048	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@Uninitiali:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 32   : 			m_pObject = NULL;

  00050	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 94   : 			m_pObject = pObject;

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00058	89 0f		 mov	 DWORD PTR [edi], ecx

; 95   : 
; 96   : 			if (m_pObject)

  0005a	85 c9		 test	 ecx, ecx
  0005c	74 05		 je	 SHORT $LN16@Uninitiali

; 97   : 				m_pObject->AddReference();

  0005e	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN16@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00063	83 c7 04	 add	 edi, 4

; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	83 c6 04	 add	 esi, 4

; 1509 :         ++_Last;

  00069	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0006c	3b f3		 cmp	 esi, ebx
  0006e	75 e0		 jne	 SHORT $LL4@Uninitiali
  00070	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00073	50		 push	 eax
  00074	57		 push	 edi
  00075	57		 push	 edi
  00076	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  0007e	8b c7		 mov	 eax, edi

; 1664 :     }
; 1665 : }

  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >::~_Uninitialized_backout_al<std::allocator<CRef<CGrannyMaterial> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ENDP ; std::_Uninitialized_move<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<CRef<CGrannyMaterial> > >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXAAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<CRef<CGrannyMaterial> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 959  :         for (; _First != _Last; ++_First) {

  00024	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00027	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0002a	3b f7		 cmp	 esi, edi
  0002c	74 28		 je	 SHORT $LN3@Destroy_ra
  0002e	66 90		 npad	 2
$LL4@Destroy_ra:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 53   : 			if (m_pObject)

  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 37   : 		{

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 			if (m_pObject)

  00039	85 c9		 test	 ecx, ecx
  0003b	74 0b		 je	 SHORT $LN22@Destroy_ra

; 54   : 			{
; 55   : 				m_pObject->Release();

  0003d	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00042	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN22@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00048	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 39   : 		}

  0004b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00052	3b f7		 cmp	 esi, edi
  00054	75 da		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
  0006b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z
_TEXT	SEGMENT
__Newvec$ = -48						; size = 4
_this$ = -44						; size = 4
tv470 = -40						; size = 4
tv464 = -36						; size = 4
__Newsize$1$ = -32					; size = 4
__Newcapacity$ = -28					; size = 4
__Constructed_last$ = -24				; size = 4
__Constructed_first$ = -20				; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z PROC ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Emplace_reallocate<CRef<CGrannyMaterial> >, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 d4	 mov	 DWORD PTR _this$[ebp], esi

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 16		 mov	 edx, DWORD PTR [esi]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00032	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00035	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00038	2b c2		 sub	 eax, edx
  0003a	2b da		 sub	 ebx, edx
  0003c	c1 f8 02	 sar	 eax, 2
  0003f	c1 fb 02	 sar	 ebx, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  00042	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00047	0f 84 24 01 00
	00		 je	 $LN50@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00050	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00055	89 7d e0	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00058	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0005b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  00060	8b d1		 mov	 edx, ecx
  00062	d1 ea		 shr	 edx, 1
  00064	2b c2		 sub	 eax, edx
  00066	3b c8		 cmp	 ecx, eax
  00068	76 07		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  0006a	8b c7		 mov	 eax, edi
  0006c	89 7d e4	 mov	 DWORD PTR __Newcapacity$[ebp], edi
  0006f	eb 0b		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00071	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00074	3b c7		 cmp	 eax, edi
  00076	0f 42 c7	 cmovb	 eax, edi
  00079	89 45 e4	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0007c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00081	0f 87 ef 00 00
	00		 ja	 $LN51@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00087	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008a	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0008b	89 45 dc	 mov	 DWORD PTR tv464[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00093	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 748  :         _TRY_BEGIN

  00095	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0009c	8d 1c 9f	 lea	 ebx, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000a2	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 32   : 			m_pObject = NULL;

  000a5	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000ab	89 45 e8	 mov	 DWORD PTR __Constructed_last$[ebp], eax

; 746  :         pointer _Constructed_first      = _Constructed_last;

  000ae	89 45 ec	 mov	 DWORD PTR __Constructed_first$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 33   : 			Initialize(c_rRef.m_pObject);

  000b1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b4	89 7d d0	 mov	 DWORD PTR __Newvec$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000b7	89 5d d8	 mov	 DWORD PTR tv470[ebp], ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 33   : 			Initialize(c_rRef.m_pObject);

  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]

; 94   : 			m_pObject = pObject;

  000bc	89 0b		 mov	 DWORD PTR [ebx], ecx

; 95   : 
; 96   : 			if (m_pObject)

  000be	85 c9		 test	 ecx, ecx
  000c0	74 05		 je	 SHORT $LN29@Emplace_re

; 97   : 				m_pObject->AddReference();

  000c2	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN29@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000c7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ca	8b 06		 mov	 eax, DWORD PTR [esi]
  000cc	89 5d ec	 mov	 DWORD PTR __Constructed_first$[ebp], ebx
  000cf	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  000d2	56		 push	 esi
  000d3	57		 push	 edi
  000d4	3b d9		 cmp	 ebx, ecx
  000d6	75 09		 jne	 SHORT $LN4@Emplace_re

; 1602 :         _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000d8	51		 push	 ecx
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_copy<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000df	eb 1a		 jmp	 SHORT $LN48@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000e1	53		 push	 ebx
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_move<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
  000e8	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;

  000eb	89 7d ec	 mov	 DWORD PTR __Constructed_first$[ebp], edi

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000ee	56		 push	 esi
  000ef	ff 75 e8	 push	 DWORD PTR __Constructed_last$[ebp]
  000f2	ff 76 04	 push	 DWORD PTR [esi+4]
  000f5	53		 push	 ebx
  000f6	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_move<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
$LN48@Emplace_re:

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000fb	8b 06		 mov	 eax, DWORD PTR [esi]
  000fd	83 c4 10	 add	 esp, 16			; 00000010H
  00100	85 c0		 test	 eax, eax
  00102	74 1e		 je	 SHORT $LN40@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00104	56		 push	 esi
  00105	ff 76 04	 push	 DWORD PTR [esi+4]
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0010e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00110	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00113	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00115	83 e0 fc	 and	 eax, -4			; fffffffcH
  00118	50		 push	 eax
  00119	51		 push	 ecx
  0011a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0011f	83 c4 14	 add	 esp, 20			; 00000014H
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00122	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00125	89 3e		 mov	 DWORD PTR [esi], edi
  00127	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  0012a	8b 45 d8	 mov	 eax, DWORD PTR tv470[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0012d	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00130	8b 4d dc	 mov	 ecx, DWORD PTR tv464[ebp]
  00133	03 cf		 add	 ecx, edi
  00135	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 767  :     }

  00138	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0013b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00142	59		 pop	 ecx
  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx
  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z$0:

; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  0014c	ff 75 e8	 push	 DWORD PTR __Constructed_last$[ebp]
  0014f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	ff 75 ec	 push	 DWORD PTR __Constructed_first$[ebp]
  00155	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@AAEXPAV?$CRef@VCGrannyMaterial@@@@0@Z ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  0015a	ff 75 e4	 push	 DWORD PTR __Newcapacity$[ebp]
  0015d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	ff 75 d0	 push	 DWORD PTR __Newvec$[ebp]
  00163	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@QAEXQAV?$CRef@VCGrannyMaterial@@@@I@Z ; std::allocator<CRef<CGrannyMaterial> >::deallocate

; 762  :         _RERAISE;

  00168	6a 00		 push	 0
  0016a	6a 00		 push	 0
  0016c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN50@Emplace_re:

; 738  :             _Xlength();

  00171	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Xlength
$LN51@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00176	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN47@Emplace_re:
  0017b	cc		 int	 3
  0017c	cc		 int	 3
  0017d	cc		 int	 3
  0017e	cc		 int	 3
  0017f	cc		 int	 3
  00180	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z ENDP ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Emplace_reallocate<CRef<CGrannyMaterial> >
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
;	COMDAT ??1?$CRef@VCGrannyMaterial@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CRef@VCGrannyMaterial@@@@QAE@XZ PROC		; CRef<CGrannyMaterial>::~CRef<CGrannyMaterial>, COMDAT
; _this$ = ecx

; 37   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CRef@VCGrannyMaterial@@@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 53   : 			if (m_pObject)

  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0b		 je	 SHORT $LN4@CRef

; 54   : 			{
; 55   : 				m_pObject->Release();

  0002b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@CRef:

; 38   : 			Clear();
; 39   : 		}

  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5e		 pop	 esi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
  00046	cc		 int	 3
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CRef@VCGrannyMaterial@@@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CRef@VCGrannyMaterial@@@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CRef@VCGrannyMaterial@@@@QAE@XZ ENDP		; CRef<CGrannyMaterial>::~CRef<CGrannyMaterial>
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CGrannyMaterial::ms_akSphereMapInstance'', COMDAT
  00000	68 00 00 00 00	 push	 OFFSET ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00005	6a 0a		 push	 10			; 0000000aH
  00007	6a 20		 push	 32			; 00000020H
  00009	68 00 00 00 00	 push	 OFFSET ?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
  0000e	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00013	c3		 ret	 0
??__F?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CGrannyMaterial::ms_akSphereMapInstance''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ??__E?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ PROC ; `dynamic initializer for 'CGrannyMaterial::ms_akSphereMapInstance'', COMDAT

; 9    : CGraphicImageInstance CGrannyMaterial::ms_akSphereMapInstance[SPHEREMAP_NUM];

  00000	68 00 00 00 00	 push	 OFFSET ??1CGraphicImageInstance@@UAE@XZ ; CGraphicImageInstance::~CGraphicImageInstance
  00005	68 00 00 00 00	 push	 OFFSET ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  0000a	6a 0a		 push	 10			; 0000000aH
  0000c	6a 20		 push	 32			; 00000020H
  0000e	68 00 00 00 00	 push	 OFFSET ?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
  00013	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00018	68 00 00 00 00	 push	 OFFSET ??__F?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ ; `dynamic atexit destructor for 'CGrannyMaterial::ms_akSphereMapInstance''
  0001d	e8 00 00 00 00	 call	 _atexit
  00022	59		 pop	 ecx
  00023	c3		 ret	 0
??__E?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A@@YAXXZ ENDP ; `dynamic initializer for 'CGrannyMaterial::ms_akSphereMapInstance''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h
;	COMDAT ?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_nLength$1$ = 8						; size = 4
_str$ = 8						; size = 4
?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CFileNameHelper::StringPath, COMDAT

; 223  : 	static void StringPath(string& str) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 224  : 		size_t nLength = str.length();

  00004	8b 75 08	 mov	 esi, DWORD PTR _str$[ebp]
  00007	57		 push	 edi

; 225  : 
; 226  : 		for (size_t i = 0; i<nLength; ++i)

  00008	33 ff		 xor	 edi, edi
  0000a	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000d	89 45 08	 mov	 DWORD PTR _nLength$1$[ebp], eax
  00010	85 c0		 test	 eax, eax
  00012	74 4b		 je	 SHORT $LN3@StringPath
  00014	53		 push	 ebx
$LL4@StringPath:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2163 :         if (_Mysize <= _Off) {

  00015	39 7e 10	 cmp	 DWORD PTR [esi+16], edi
  00018	76 49		 jbe	 SHORT $LN54@StringPath

; 2153 :         return _BUF_SIZE <= _Myres;

  0001a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 2135 :         value_type* _Result = _Bx._Buf;

  0001d	8b ce		 mov	 ecx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  0001f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  00022	72 02		 jb	 SHORT $LN68@StringPath

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00024	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN68@StringPath:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h

; 228  : 			if (str.at(i) == '\\')

  00026	80 3c 39 5c	 cmp	 BYTE PTR [ecx+edi], 92	; 0000005cH
  0002a	8b ce		 mov	 ecx, esi
  0002c	75 0d		 jne	 SHORT $LN5@StringPath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0002e	83 f8 10	 cmp	 eax, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  00031	72 02		 jb	 SHORT $LN65@StringPath

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00033	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN65@StringPath:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h

; 229  : 				str.at(i) = '/';

  00035	c6 04 39 2f	 mov	 BYTE PTR [ecx+edi], 47	; 0000002fH
  00039	eb 1d		 jmp	 SHORT $LN2@StringPath
$LN5@StringPath:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0003b	83 f8 10	 cmp	 eax, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0003e	72 02		 jb	 SHORT $LN66@StringPath

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN66@StringPath:

; 2135 :         value_type* _Result = _Bx._Buf;

  00042	8b de		 mov	 ebx, esi

; 2136 :         if (_Large_string_engaged()) {

  00044	72 02		 jb	 SHORT $LN67@StringPath

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  00046	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN67@StringPath:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h

; 231  : 				str.at(i) = (char)tolower(str.at(i));

  00048	0f be 04 39	 movsx	 eax, BYTE PTR [ecx+edi]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _tolower
  00052	83 c4 04	 add	 esp, 4
  00055	88 04 3b	 mov	 BYTE PTR [ebx+edi], al
$LN2@StringPath:

; 225  : 
; 226  : 		for (size_t i = 0; i<nLength; ++i)

  00058	47		 inc	 edi
  00059	3b 7d 08	 cmp	 edi, DWORD PTR _nLength$1$[ebp]
  0005c	72 b7		 jb	 SHORT $LL4@StringPath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2163 :         if (_Mysize <= _Off) {

  0005e	5b		 pop	 ebx
$LN3@StringPath:
  0005f	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterbase\Filename.h

; 233  : 	}

  00060	5e		 pop	 esi
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
$LN54@StringPath:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2164 :             _Xran();

  00063	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN69@StringPath:
  00068	cc		 int	 3
?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CFileNameHelper::StringPath
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4470 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2144 :         const value_type* _Result = _Bx._Buf;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8b c8		 mov	 ecx, eax

; 2153 :         return _BUF_SIZE <= _Myres;

  00008	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0000c	72 02		 jb	 SHORT $LN6@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
$LN6@operator:
  00010	56		 push	 esi

; 2144 :         const value_type* _Result = _Bx._Buf;

  00011	8b 75 08	 mov	 esi, DWORD PTR __Left$[ebp]
  00014	8b d6		 mov	 edx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00016	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  0001a	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0001c	8b 16		 mov	 edx, DWORD PTR [esi]
$LN11@operator:

; 4091 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  0001e	8b 76 10	 mov	 esi, DWORD PTR [esi+16]

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00021	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  00024	75 5f		 jne	 SHORT $LN17@operator

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00026	83 ee 04	 sub	 esi, 4
  00029	72 16		 jb	 SHORT $LN23@operator
  0002b	0f 1f 44 00 00	 npad	 5
$LL24@operator:
  00030	8b 02		 mov	 eax, DWORD PTR [edx]
  00032	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00034	75 10		 jne	 SHORT $LN22@operator
  00036	83 c2 04	 add	 edx, 4
  00039	83 c1 04	 add	 ecx, 4
  0003c	83 ee 04	 sub	 esi, 4
  0003f	73 ef		 jae	 SHORT $LL24@operator
$LN23@operator:
  00041	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00044	74 34		 je	 SHORT $LN21@operator
$LN22@operator:
  00046	8a 02		 mov	 al, BYTE PTR [edx]
  00048	3a 01		 cmp	 al, BYTE PTR [ecx]
  0004a	75 27		 jne	 SHORT $LN25@operator
  0004c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0004f	74 29		 je	 SHORT $LN21@operator
  00051	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00054	3a 41 01	 cmp	 al, BYTE PTR [ecx+1]
  00057	75 1a		 jne	 SHORT $LN25@operator
  00059	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0005c	74 1c		 je	 SHORT $LN21@operator
  0005e	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00061	3a 41 02	 cmp	 al, BYTE PTR [ecx+2]
  00064	75 0d		 jne	 SHORT $LN25@operator
  00066	83 fe ff	 cmp	 esi, -1
  00069	74 0f		 je	 SHORT $LN21@operator
  0006b	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  0006e	3a 41 03	 cmp	 al, BYTE PTR [ecx+3]
  00071	74 07		 je	 SHORT $LN21@operator
$LN25@operator:
  00073	1b c0		 sbb	 eax, eax
  00075	83 c8 01	 or	 eax, 1
  00078	eb 02		 jmp	 SHORT $LN26@operator
$LN21@operator:
  0007a	33 c0		 xor	 eax, eax
$LN26@operator:

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0007c	85 c0		 test	 eax, eax
  0007e	75 05		 jne	 SHORT $LN17@operator
  00080	b0 01		 mov	 al, 1
  00082	5e		 pop	 esi

; 4471 :     return _Left._Equal(_Right);
; 4472 : }

  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
$LN17@operator:

; 504  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  00085	32 c0		 xor	 al, al
  00087	5e		 pop	 esi

; 4471 :     return _Left._Equal(_Right);
; 4472 : }

  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGrannyMaterialPalette@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGrannyMaterialPalette@@UAEPAXI@Z PROC		; CGrannyMaterialPalette::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGrannyMaterialPalette@@UAE@XZ ; CGrannyMaterialPalette::~CGrannyMaterialPalette
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 10		 push	 16			; 00000010H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGrannyMaterialPalette@@UAEPAXI@Z ENDP		; CGrannyMaterialPalette::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ PROC ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ ENDP ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@AAEXPAV?$CRef@VCGrannyMaterial@@@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@AAEXPAV?$CRef@VCGrannyMaterial@@@@0@Z PROC ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@AAEXPAV?$CRef@VCGrannyMaterial@@@@0@Z ENDP ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@QAEXQAV?$CRef@VCGrannyMaterial@@@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@QAEXQAV?$CRef@VCGrannyMaterial@@@@I@Z PROC ; std::allocator<CRef<CGrannyMaterial> >::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	c1 e0 02	 shl	 eax, 2
  00009	50		 push	 eax
  0000a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0000d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00012	83 c4 08	 add	 esp, 8

; 804  :     }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@QAEXQAV?$CRef@VCGrannyMaterial@@@@I@Z ENDP ; std::allocator<CRef<CGrannyMaterial> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetMaterialCount@CGrannyMaterialPalette@@QBEKXZ
_TEXT	SEGMENT
?GetMaterialCount@CGrannyMaterialPalette@@QBEKXZ PROC	; CGrannyMaterialPalette::GetMaterialCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00006	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 519  : }

  00009	c3		 ret	 0
?GetMaterialCount@CGrannyMaterialPalette@@QBEKXZ ENDP	; CGrannyMaterialPalette::GetMaterialCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetMaterialRef@CGrannyMaterialPalette@@QAEAAVCGrannyMaterial@@K@Z
_TEXT	SEGMENT
_mtrlIndex$ = 8						; size = 4
?GetMaterialRef@CGrannyMaterialPalette@@QAEAAVCGrannyMaterial@@K@Z PROC ; CGrannyMaterialPalette::GetMaterialRef, COMDAT
; _this$ = ecx

; 411  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 412  : 	assert(mtrlIndex<m_mtrlVector.size());
; 413  : 	return *m_mtrlVector[mtrlIndex].GetPointer();

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR _mtrlIndex$[ebp]
  00009	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 414  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetMaterialRef@CGrannyMaterialPalette@@QAEAAVCGrannyMaterial@@K@Z ENDP ; CGrannyMaterialPalette::GetMaterialRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?SetSpecularInfo@CGrannyMaterialPalette@@QAEXPBDHM@Z
_TEXT	SEGMENT
_iStage$1 = -8						; size = 4
tv192 = -4						; size = 4
_c_szMtrlName$ = 8					; size = 4
_bEnable$ = 12						; size = 4
_fPower$ = 16						; size = 4
?SetSpecularInfo@CGrannyMaterialPalette@@QAEXPBDHM@Z PROC ; CGrannyMaterialPalette::SetSpecularInfo, COMDAT
; _this$ = ecx

; 471  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 474  : 	if (c_szMtrlName)

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _c_szMtrlName$[ebp]
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00010	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  00013	2b 7b 04	 sub	 edi, DWORD PTR [ebx+4]
  00016	c1 ff 02	 sar	 edi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 474  : 	if (c_szMtrlName)

  00019	85 c9		 test	 ecx, ecx
  0001b	74 50		 je	 SHORT $LN8@SetSpecula

; 475  : 	{
; 476  : 		for (i=0; i<size; ++i)

  0001d	85 ff		 test	 edi, edi
  0001f	74 70		 je	 SHORT $LN6@SetSpecula
$LL4@SetSpecula:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00021	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 481  : 			if (roMtrl->IsIn(c_szMtrlName, &iStage))

  00024	8d 55 f8	 lea	 edx, DWORD PTR _iStage$1[ebp]
  00027	52		 push	 edx
  00028	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00029	89 45 fc	 mov	 DWORD PTR tv192[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 481  : 			if (roMtrl->IsIn(c_szMtrlName, &iStage))

  0002c	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  0002f	e8 00 00 00 00	 call	 ?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z ; CGrannyMaterial::IsIn
  00034	84 c0		 test	 al, al
  00036	75 11		 jne	 SHORT $LN20@SetSpecula

; 475  : 	{
; 476  : 		for (i=0; i<size; ++i)

  00038	8b 4d 08	 mov	 ecx, DWORD PTR _c_szMtrlName$[ebp]
  0003b	46		 inc	 esi
  0003c	3b f7		 cmp	 esi, edi
  0003e	72 e1		 jb	 SHORT $LL4@SetSpecula

; 494  : 		}
; 495  : 	}
; 496  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 0c 00	 ret	 12			; 0000000cH
$LN20@SetSpecula:

; 482  : 			{
; 483  : 				roMtrl->SetSpecularInfo(bEnable, fPower, 0);

  00049	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fPower$[ebp]
  0004e	6a 00		 push	 0
  00050	51		 push	 ecx
  00051	8b 4d fc	 mov	 ecx, DWORD PTR tv192[ebp]
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	ff 75 0c	 push	 DWORD PTR _bEnable$[ebp]
  0005c	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  0005f	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ; CGrannyMaterial::SetSpecularInfo
  00064	5f		 pop	 edi

; 494  : 		}
; 495  : 	}
; 496  : }

  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 0c 00	 ret	 12			; 0000000cH
$LN8@SetSpecula:

; 484  : 				return;
; 485  : 			}
; 486  : 		}
; 487  : 	}
; 488  : 	else
; 489  : 	{
; 490  : 		for (i=0; i<size; ++i)

  0006d	85 ff		 test	 edi, edi
  0006f	74 20		 je	 SHORT $LN6@SetSpecula
$LL7@SetSpecula:

; 491  : 		{
; 492  : 			CGrannyMaterial::TRef& roMtrl=m_mtrlVector[i];
; 493  : 			roMtrl->SetSpecularInfo(bEnable, fPower, 0);

  00071	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fPower$[ebp]
  00076	6a 00		 push	 0
  00078	51		 push	 ecx
  00079	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0007c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00081	ff 75 0c	 push	 DWORD PTR _bEnable$[ebp]
  00084	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00087	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ; CGrannyMaterial::SetSpecularInfo
  0008c	46		 inc	 esi
  0008d	3b f7		 cmp	 esi, edi
  0008f	72 e0		 jb	 SHORT $LL7@SetSpecula
$LN6@SetSpecula:
  00091	5f		 pop	 edi

; 494  : 		}
; 495  : 	}
; 496  : }

  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 0c 00	 ret	 12			; 0000000cH
?SetSpecularInfo@CGrannyMaterialPalette@@QAEXPBDHM@Z ENDP ; CGrannyMaterialPalette::SetSpecularInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iStage$3 = 8						; size = 4
_c_szMtrlName$ = 8					; size = 4
_c_rkMaterialData$ = 12					; size = 4
?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z PROC ; CGrannyMaterialPalette::SetMaterialData, COMDAT
; _this$ = ecx

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f9		 mov	 edi, ecx

; 439  : 	if (c_szMtrlName)

  00028	8b 5d 08	 mov	 ebx, DWORD PTR _c_szMtrlName$[ebp]
  0002b	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0002e	85 db		 test	 ebx, ebx
  00030	0f 84 c2 00 00
	00		 je	 $LN8@SetMateria
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00036	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 442  : 		for (i=m_mtrlVector.begin(); i!=m_mtrlVector.end(); ++i)

  00039	0f 84 e3 00 00
	00		 je	 $LN6@SetMateria
  0003f	90		 npad	 1
$LL4@SetMateria:

; 443  : 		{
; 444  : 			CGrannyMaterial::TRef& roMtrl=*i;
; 445  : 
; 446  : 			int iStage;
; 447  : 			if (roMtrl->IsIn(c_szMtrlName, &iStage))

  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	8d 45 08	 lea	 eax, DWORD PTR _iStage$3[ebp]
  00045	50		 push	 eax
  00046	53		 push	 ebx
  00047	e8 00 00 00 00	 call	 ?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z ; CGrannyMaterial::IsIn
  0004c	84 c0		 test	 al, al
  0004e	75 1c		 jne	 SHORT $LN71@SetMateria
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  00050	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00053	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 442  : 		for (i=m_mtrlVector.begin(); i!=m_mtrlVector.end(); ++i)

  00056	75 e8		 jne	 SHORT $LL4@SetMateria

; 468  : }

  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
$LN71@SetMateria:

; 448  : 			{
; 449  : 				CGrannyMaterial* pkNewMtrl=new CGrannyMaterial;

  0006c	6a 38		 push	 56			; 00000038H
  0006e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00073	83 c4 04	 add	 esp, 4
  00076	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00080	85 c0		 test	 eax, eax
  00082	74 0b		 je	 SHORT $LN12@SetMateria
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??0CGrannyMaterial@@QAE@XZ ; CGrannyMaterial::CGrannyMaterial
  0008b	8b d8		 mov	 ebx, eax
  0008d	eb 02		 jmp	 SHORT $LN13@SetMateria
$LN12@SetMateria:
  0008f	33 db		 xor	 ebx, ebx
$LN13@SetMateria:

; 450  : 				pkNewMtrl->Copy(*roMtrl.GetPointer());

  00091	ff 36		 push	 DWORD PTR [esi]
  00093	8b cb		 mov	 ecx, ebx
  00095	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009c	e8 00 00 00 00	 call	 ?Copy@CGrannyMaterial@@QAEXAAV1@@Z ; CGrannyMaterial::Copy

; 451  : 				pkNewMtrl->SetImagePointer(iStage, c_rkMaterialData.pImage);

  000a1	8b 7d 0c	 mov	 edi, DWORD PTR _c_rkMaterialData$[ebp]
  000a4	8b cb		 mov	 ecx, ebx
  000a6	ff 37		 push	 DWORD PTR [edi]
  000a8	ff 75 08	 push	 DWORD PTR _iStage$3[ebp]
  000ab	e8 00 00 00 00	 call	 ?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z ; CGrannyMaterial::SetImagePointer

; 452  : 				pkNewMtrl->SetSpecularInfo(c_rkMaterialData.isSpecularEnable, c_rkMaterialData.fSpecularPower, c_rkMaterialData.bSphereMapIndex);

  000b0	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  000b4	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  000b9	50		 push	 eax
  000ba	51		 push	 ecx
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	8b cb		 mov	 ecx, ebx
  000c2	ff 77 08	 push	 DWORD PTR [edi+8]
  000c5	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ; CGrannyMaterial::SetSpecularInfo
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  000ca	8b 3e		 mov	 edi, DWORD PTR [esi]

; 68   : 
; 69   : 			m_pObject = pObject;

  000cc	89 1e		 mov	 DWORD PTR [esi], ebx

; 70   : 
; 71   : 			if (m_pObject)

  000ce	85 db		 test	 ebx, ebx
  000d0	74 07		 je	 SHORT $LN42@SetMateria

; 72   : 				m_pObject->AddReference();

  000d2	8b cb		 mov	 ecx, ebx
  000d4	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN42@SetMateria:

; 73   : 
; 74   : 			if (pOldObject)

  000d9	85 ff		 test	 edi, edi
  000db	74 45		 je	 SHORT $LN6@SetMateria

; 75   : 				pOldObject->Release();

  000dd	8b cf		 mov	 ecx, edi
  000df	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 468  : }

  000e4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ee	59		 pop	 ecx
  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c2 08 00	 ret	 8
$LN8@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000f8	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 462  : 		for (i=m_mtrlVector.begin(); i!=m_mtrlVector.end(); ++i)

  000fb	74 25		 je	 SHORT $LN6@SetMateria
  000fd	8b 5d 0c	 mov	 ebx, DWORD PTR _c_rkMaterialData$[ebp]
$LL7@SetMateria:

; 463  : 		{
; 464  : 			CGrannyMaterial::TRef& roMtrl=*i;
; 465  : 			roMtrl->SetSpecularInfo(c_rkMaterialData.isSpecularEnable, c_rkMaterialData.fSpecularPower, c_rkMaterialData.bSphereMapIndex);

  00100	0f b6 43 0c	 movzx	 eax, BYTE PTR [ebx+12]
  00104	f3 0f 10 43 04	 movss	 xmm0, DWORD PTR [ebx+4]
  00109	50		 push	 eax
  0010a	51		 push	 ecx
  0010b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0010d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00112	ff 73 08	 push	 DWORD PTR [ebx+8]
  00115	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ; CGrannyMaterial::SetSpecularInfo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0011a	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  0011d	3b 77 08	 cmp	 esi, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 462  : 		for (i=m_mtrlVector.begin(); i!=m_mtrlVector.end(); ++i)

  00120	75 de		 jne	 SHORT $LL7@SetMateria
$LN6@SetMateria:

; 468  : }

  00122	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00125	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012c	59		 pop	 ecx
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z$0:
  00000	6a 38		 push	 56			; 00000038H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetMaterialData@CGrannyMaterialPalette@@QAEXPBDABUSMaterialData@@@Z ENDP ; CGrannyMaterialPalette::SetMaterialData
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_iStage$2 = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_c_szImageName$ = 8					; size = 4
_pImage$ = 12						; size = 4
?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z PROC ; CGrannyMaterialPalette::SetMaterialImagePointer, COMDAT
; _this$ = ecx

; 417  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b c1		 mov	 eax, ecx
  0002a	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002d	8b 78 08	 mov	 edi, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 420  : 	for (i=0; i<size; ++i)

  00030	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00032	2b 78 04	 sub	 edi, DWORD PTR [eax+4]
  00035	c1 ff 02	 sar	 edi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 420  : 	for (i=0; i<size; ++i)

  00038	85 ff		 test	 edi, edi
  0003a	0f 84 91 00 00
	00		 je	 $LN18@SetMateria
$LL4@SetMateria:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00040	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 425  : 		if (roMtrl->IsIn(c_szImageName, &iStage))

  00043	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00046	8d 1c b0	 lea	 ebx, DWORD PTR [eax+esi*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 425  : 		if (roMtrl->IsIn(c_szImageName, &iStage))

  00049	8d 45 ec	 lea	 eax, DWORD PTR _iStage$2[ebp]
  0004c	50		 push	 eax
  0004d	ff 75 08	 push	 DWORD PTR _c_szImageName$[ebp]
  00050	e8 00 00 00 00	 call	 ?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z ; CGrannyMaterial::IsIn
  00055	84 c0		 test	 al, al
  00057	75 1c		 jne	 SHORT $LN21@SetMateria

; 420  : 	for (i=0; i<size; ++i)

  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  0005c	46		 inc	 esi
  0005d	3b f7		 cmp	 esi, edi
  0005f	72 df		 jb	 SHORT $LL4@SetMateria

; 435  : }

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
$LN21@SetMateria:

; 426  : 		{
; 427  : 			CGrannyMaterial* pkNewMtrl=new CGrannyMaterial;

  00075	6a 38		 push	 56			; 00000038H
  00077	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007c	83 c4 04	 add	 esp, 4
  0007f	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
  00082	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00089	85 c0		 test	 eax, eax
  0008b	74 0b		 je	 SHORT $LN7@SetMateria
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??0CGrannyMaterial@@QAE@XZ ; CGrannyMaterial::CGrannyMaterial
  00094	8b f0		 mov	 esi, eax
  00096	eb 02		 jmp	 SHORT $LN8@SetMateria
$LN7@SetMateria:
  00098	33 f6		 xor	 esi, esi
$LN8@SetMateria:

; 428  : 			pkNewMtrl->Copy(*roMtrl.GetPointer());

  0009a	ff 33		 push	 DWORD PTR [ebx]
  0009c	8b ce		 mov	 ecx, esi
  0009e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a5	e8 00 00 00 00	 call	 ?Copy@CGrannyMaterial@@QAEXAAV1@@Z ; CGrannyMaterial::Copy

; 429  : 			pkNewMtrl->SetImagePointer(iStage, pImage);

  000aa	ff 75 0c	 push	 DWORD PTR _pImage$[ebp]
  000ad	8b ce		 mov	 ecx, esi
  000af	ff 75 ec	 push	 DWORD PTR _iStage$2[ebp]
  000b2	e8 00 00 00 00	 call	 ?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z ; CGrannyMaterial::SetImagePointer
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  000b7	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 68   : 
; 69   : 			m_pObject = pObject;

  000b9	89 33		 mov	 DWORD PTR [ebx], esi

; 70   : 
; 71   : 			if (m_pObject)

  000bb	85 f6		 test	 esi, esi
  000bd	74 07		 je	 SHORT $LN17@SetMateria

; 72   : 				m_pObject->AddReference();

  000bf	8b ce		 mov	 ecx, esi
  000c1	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN17@SetMateria:

; 73   : 
; 74   : 			if (pOldObject)

  000c6	85 ff		 test	 edi, edi
  000c8	74 07		 je	 SHORT $LN18@SetMateria

; 75   : 				pOldObject->Release();

  000ca	8b cf		 mov	 ecx, edi
  000cc	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN18@SetMateria:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 435  : }

  000d1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000db	59		 pop	 ecx
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z$0:
  00000	6a 38		 push	 56			; 00000038H
  00002	8b 45 08	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetMaterialImagePointer@CGrannyMaterialPalette@@QAEXPBDPAVCGraphicImage@@@Z ENDP ; CGrannyMaterialPalette::SetMaterialImagePointer
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 4
_pgrnMaterial$ = 8					; size = 4
?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z PROC ; CGrannyMaterialPalette::RegisterMaterial, COMDAT
; _this$ = ecx

; 499  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00026	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  00029	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0002c	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 502  : 	for (i=0; i<size; ++i)

  0002e	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00030	2b f8		 sub	 edi, eax
  00032	c1 ff 02	 sar	 edi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 502  : 	for (i=0; i<size; ++i)

  00035	85 ff		 test	 edi, edi
  00037	74 1d		 je	 SHORT $LN3@RegisterMa
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@RegisterMa:

; 503  : 	{
; 504  : 		CGrannyMaterial::TRef& roMtrl=m_mtrlVector[i];
; 505  : 		if (roMtrl->IsEqual(pgrnMaterial))

  00040	ff 75 08	 push	 DWORD PTR _pgrnMaterial$[ebp]
  00043	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00046	e8 00 00 00 00	 call	 ?IsEqual@CGrannyMaterial@@QBE_NPAUgranny_material@@@Z ; CGrannyMaterial::IsEqual
  0004b	84 c0		 test	 al, al
  0004d	75 2a		 jne	 SHORT $LN41@RegisterMa

; 502  : 	for (i=0; i<size; ++i)

  0004f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00051	46		 inc	 esi
  00052	3b f7		 cmp	 esi, edi
  00054	72 ea		 jb	 SHORT $LL4@RegisterMa
$LN3@RegisterMa:

; 507  : 	}
; 508  : 
; 509  : 	CGrannyMaterial* pkNewMtrl=new CGrannyMaterial;

  00056	6a 38		 push	 56			; 00000038H
  00058	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005d	83 c4 04	 add	 esp, 4
  00060	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006a	85 c0		 test	 eax, eax
  0006c	74 21		 je	 SHORT $LN7@RegisterMa
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??0CGrannyMaterial@@QAE@XZ ; CGrannyMaterial::CGrannyMaterial
  00075	8b f0		 mov	 esi, eax
  00077	eb 18		 jmp	 SHORT $LN8@RegisterMa
$LN41@RegisterMa:

; 506  : 			return i;

  00079	8b c6		 mov	 eax, esi

; 514  : }

  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
$LN7@RegisterMa:

; 507  : 	}
; 508  : 
; 509  : 	CGrannyMaterial* pkNewMtrl=new CGrannyMaterial;

  0008f	33 f6		 xor	 esi, esi
$LN8@RegisterMa:

; 510  : 	pkNewMtrl->CreateFromGrannyMaterialPointer(pgrnMaterial);

  00091	ff 75 08	 push	 DWORD PTR _pgrnMaterial$[ebp]
  00094	8b ce		 mov	 ecx, esi
  00096	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009d	e8 00 00 00 00	 call	 ?CreateFromGrannyMaterialPointer@CGrannyMaterial@@QAE_NPAUgranny_material@@@Z ; CGrannyMaterial::CreateFromGrannyMaterialPointer
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 94   : 			m_pObject = pObject;

  000a2	89 75 08	 mov	 DWORD PTR $T3[ebp], esi
  000a5	85 f6		 test	 esi, esi

; 95   : 
; 96   : 			if (m_pObject)

  000a7	74 07		 je	 SHORT $LN18@RegisterMa

; 97   : 				m_pObject->AddReference();

  000a9	8b ce		 mov	 ecx, esi
  000ab	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN18@RegisterMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000b0	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 511  : 	m_mtrlVector.push_back(pkNewMtrl);

  000b3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000ba	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000bd	74 13		 je	 SHORT $LN23@RegisterMa
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 94   : 			m_pObject = pObject;

  000bf	89 30		 mov	 DWORD PTR [eax], esi

; 95   : 
; 96   : 			if (m_pObject)

  000c1	85 f6		 test	 esi, esi
  000c3	74 07		 je	 SHORT $LN32@RegisterMa

; 97   : 				m_pObject->AddReference();

  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN32@RegisterMa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  000cc	83 43 04 04	 add	 DWORD PTR [ebx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000d0	eb 0c		 jmp	 SHORT $LN22@RegisterMa
$LN23@RegisterMa:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000d2	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  000d5	51		 push	 ecx
  000d6	50		 push	 eax
  000d7	8b cb		 mov	 ecx, ebx
  000d9	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$CRef@VCGrannyMaterial@@@@@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@QAEPAV?$CRef@VCGrannyMaterial@@@@QAV2@$$QAV2@@Z ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Emplace_reallocate<CRef<CGrannyMaterial> >
$LN22@RegisterMa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 37   : 		{

  000de	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000e5	85 f6		 test	 esi, esi

; 53   : 			if (m_pObject)

  000e7	74 07		 je	 SHORT $LN38@RegisterMa

; 54   : 			{
; 55   : 				m_pObject->Release();

  000e9	8b ce		 mov	 ecx, esi
  000eb	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN38@RegisterMa:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 513  : 	return size;

  000f0	8b c7		 mov	 eax, edi

; 514  : }

  000f2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fc	59		 pop	 ecx
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z$0:
  00000	6a 38		 push	 56			; 00000038H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__unwindfunclet$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z$1:
  0000f	8d 4d 08	 lea	 ecx, DWORD PTR $T3[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1?$CRef@VCGrannyMaterial@@@@QAE@XZ ; CRef<CGrannyMaterial>::~CRef<CGrannyMaterial>
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
__ehhandler$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z:
  0001c	90		 npad	 1
  0001d	90		 npad	 1
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RegisterMaterial@CGrannyMaterialPalette@@QAEKPAUgranny_material@@@Z ENDP ; CGrannyMaterialPalette::RegisterMaterial
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z
_TEXT	SEGMENT
__Last$1$ = -4						; size = 4
tv478 = 8						; size = 4
_rkMtrlPalSrc$ = 8					; size = 4
?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z PROC		; CGrannyMaterialPalette::Copy, COMDAT
; _this$ = ecx

; 401  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 402  : 	m_mtrlVector=rkMtrlPalSrc.m_mtrlVector;

  00004	8b 45 08	 mov	 eax, DWORD PTR _rkMtrlPalSrc$[ebp]
  00007	57		 push	 edi
  00008	83 c0 04	 add	 eax, 4
  0000b	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1168 :         if (this != _STD addressof(_Right)) {

  0000e	3b f8		 cmp	 edi, eax
  00010	0f 84 fa 00 00
	00		 je	 $LN12@Copy

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00016	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00019	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  0001b	53		 push	 ebx
  0001c	8b 18		 mov	 ebx, DWORD PTR [eax]

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0001e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00021	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00022	8b f2		 mov	 esi, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00024	89 55 fc	 mov	 DWORD PTR __Last$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00027	2b f3		 sub	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00029	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0002b	c1 fe 02	 sar	 esi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0002e	c1 f8 02	 sar	 eax, 2

; 1117 : 
; 1118 :             if (_Newsize > _Oldsize) {

  00031	3b f0		 cmp	 esi, eax
  00033	0f 86 ba 00 00
	00		 jbe	 $LN11@Copy

; 1119 :                 const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00039	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0003c	2b d1		 sub	 edx, ecx
  0003e	c1 fa 02	 sar	 edx, 2

; 1120 :                 if (_Newsize > _Oldcapacity) { // reallocate

  00041	3b f2		 cmp	 esi, edx
  00043	0f 86 83 00 00
	00		 jbe	 $LN13@Copy

; 1285 :         if (_Newsize > max_size()) {

  00049	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004f	0f 87 c2 00 00
	00		 ja	 $LN58@Copy

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00055	8b c2		 mov	 eax, edx
  00057	d1 e8		 shr	 eax, 1
  00059	89 45 08	 mov	 DWORD PTR tv478[ebp], eax
  0005c	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  00061	2b 45 08	 sub	 eax, DWORD PTR tv478[ebp]
  00064	3b d0		 cmp	 edx, eax
  00066	77 0c		 ja	 SHORT $LN23@Copy

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00068	8b 45 08	 mov	 eax, DWORD PTR tv478[ebp]
  0006b	03 c2		 add	 eax, edx

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0006d	3b c6		 cmp	 eax, esi
  0006f	0f 42 c6	 cmovb	 eax, esi
  00072	8b f0		 mov	 esi, eax
$LN23@Copy:

; 1291 :         if (_Myfirst) { // destroy and deallocate old array

  00074	85 c9		 test	 ecx, ecx
  00076	74 32		 je	 SHORT $LN19@Copy

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00078	57		 push	 edi
  00079	ff 77 04	 push	 DWORD PTR [edi+4]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >

; 1293 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00082	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00084	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00087	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00089	83 e0 fc	 and	 eax, -4			; fffffffcH
  0008c	50		 push	 eax
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1295 :             _Myfirst = pointer();

  00093	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00099	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1296 :             _Mylast  = pointer();

  0009c	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1297 :             _Myend   = pointer();

  000a3	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN19@Copy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000aa	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  000b0	77 6a		 ja	 SHORT $LN59@Copy

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000b2	c1 e6 02	 shl	 esi, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000b5	56		 push	 esi
  000b6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1643 :         _Myfirst           = _Newvec;

  000bb	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000bd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1644 :         _Mylast            = _Newvec;

  000c0	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1645 :         _Myend             = _Newvec + _Newcapacity;

  000c3	03 c6		 add	 eax, esi
  000c5	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 1122 :                     _Oldsize = 0;

  000c8	33 c0		 xor	 eax, eax
  000ca	8b 0f		 mov	 ecx, DWORD PTR [edi]
$LN13@Copy:

; 1127 :                 _Copy_unchecked(_First, _Mid, _Myfirst);

  000cc	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  000cd	8d 34 83	 lea	 esi, DWORD PTR [ebx+eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1127 :                 _Copy_unchecked(_First, _Mid, _Myfirst);

  000d0	56		 push	 esi
  000d1	53		 push	 ebx
  000d2	e8 00 00 00 00	 call	 ??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z ; std::_Copy_unchecked<CRef<CGrannyMaterial> *,CRef<CGrannyMaterial> *>

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000d7	57		 push	 edi
  000d8	ff 77 04	 push	 DWORD PTR [edi+4]
  000db	ff 75 fc	 push	 DWORD PTR __Last$1$[ebp]
  000de	56		 push	 esi
  000df	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAV?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@QAV1@0PAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Uninitialized_copy<CRef<CGrannyMaterial> *,std::allocator<CRef<CGrannyMaterial> > >
  000e4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1128 :                 _Mylast = _Ucopy(_Mid, _Last, _Mylast);

  000e7	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 403  : }

  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 04 00	 ret	 4
$LN11@Copy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1131 :                 _Copy_unchecked(_First, _Last, _Myfirst);

  000f3	51		 push	 ecx
  000f4	52		 push	 edx
  000f5	53		 push	 ebx
  000f6	8d 34 b1	 lea	 esi, DWORD PTR [ecx+esi*4]
  000f9	e8 00 00 00 00	 call	 ??$_Copy_unchecked@PAV?$CRef@VCGrannyMaterial@@@@PAV1@@std@@YAPAV?$CRef@VCGrannyMaterial@@@@PAV1@00@Z ; std::_Copy_unchecked<CRef<CGrannyMaterial> *,CRef<CGrannyMaterial> *>

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000fe	57		 push	 edi
  000ff	ff 77 04	 push	 DWORD PTR [edi+4]
  00102	56		 push	 esi
  00103	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >
  00108	83 c4 18	 add	 esp, 24			; 00000018H

; 1133 :                 _Mylast = _Newlast;

  0010b	89 77 04	 mov	 DWORD PTR [edi+4], esi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
$LN12@Copy:
  00110	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 403  : }

  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 04 00	 ret	 4
$LN58@Copy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1286 :             _Xlength();

  00117	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CRef@VCGrannyMaterial@@@@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@CAXXZ ; std::vector<CRef<CGrannyMaterial>,std::allocator<CRef<CGrannyMaterial> > >::_Xlength
$LN59@Copy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0011c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN56@Copy:
  00121	cc		 int	 3
?Copy@CGrannyMaterialPalette@@QAEXABV1@@Z ENDP		; CGrannyMaterialPalette::Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?Clear@CGrannyMaterialPalette@@QAEXXZ
_TEXT	SEGMENT
?Clear@CGrannyMaterialPalette@@QAEXXZ PROC		; CGrannyMaterialPalette::Clear, COMDAT
; _this$ = ecx

; 406  : {

  00000	56		 push	 esi

; 407  : 	m_mtrlVector.clear();

  00001	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00004	56		 push	 esi
  00005	ff 76 04	 push	 DWORD PTR [esi+4]
  00008	ff 36		 push	 DWORD PTR [esi]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >

; 1390 :         _Mylast = _Myfirst;

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00011	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00014	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00017	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 408  : }

  00018	c3		 ret	 0
?Clear@CGrannyMaterialPalette@@QAEXXZ ENDP		; CGrannyMaterialPalette::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ??1CGrannyMaterialPalette@@UAE@XZ
_TEXT	SEGMENT
??1CGrannyMaterialPalette@@UAE@XZ PROC			; CGrannyMaterialPalette::~CGrannyMaterialPalette, COMDAT
; _this$ = ecx

; 396  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGrannyMaterialPalette@@6B@

; 397  : 	Clear();

  00009	e8 00 00 00 00	 call	 ?Clear@CGrannyMaterialPalette@@QAEXXZ ; CGrannyMaterialPalette::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 398  : }

  00011	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00014	85 c0		 test	 eax, eax
  00016	74 32		 je	 SHORT $LN6@CGrannyMat

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00018	56		 push	 esi
  00019	ff 76 04	 push	 DWORD PTR [esi+4]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CRef@VCGrannyMaterial@@@@@std@@@std@@YAXPAV?$CRef@VCGrannyMaterial@@@@QAV1@AAV?$allocator@V?$CRef@VCGrannyMaterial@@@@@0@@Z ; std::_Destroy_range<std::allocator<CRef<CGrannyMaterial> > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00022	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	83 e0 fc	 and	 eax, -4			; fffffffcH
  0002c	50		 push	 eax
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00033	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00039	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0003c	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00043	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN6@CGrannyMat:
  0004a	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 398  : }

  0004b	c3		 ret	 0
??1CGrannyMaterialPalette@@UAE@XZ ENDP			; CGrannyMaterialPalette::~CGrannyMaterialPalette
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ??0CGrannyMaterialPalette@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGrannyMaterialPalette@@QAE@XZ PROC			; CGrannyMaterialPalette::CGrannyMaterialPalette, COMDAT
; _this$ = ecx

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGrannyMaterialPalette@@6B@

; 393  : }

  0000a	8b c1		 mov	 eax, ecx
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0000f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00016	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0001d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 393  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0CGrannyMaterialPalette@@QAE@XZ ENDP			; CGrannyMaterialPalette::CGrannyMaterialPalette
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGrannyMaterial@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGrannyMaterial@@UAEPAXI@Z PROC			; CGrannyMaterial::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGrannyMaterial@@UAE@XZ ; CGrannyMaterial::~CGrannyMaterial
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 38		 push	 56			; 00000038H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCGrannyMaterial@@UAEPAXI@Z ENDP			; CGrannyMaterial::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__RestoreSpecularRenderState@CGrannyMaterial@@IAEXXZ
_TEXT	SEGMENT
?__RestoreSpecularRenderState@CGrannyMaterial@@IAEXXZ PROC ; CGrannyMaterial::__RestoreSpecularRenderState, COMDAT
; _this$ = ecx

; 351  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 352  : 	if (TRUE == STATEMANAGER.GetRenderState(D3DRS_ALPHABLENDENABLE))

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00009	6a 1b		 push	 27			; 0000001bH
  0000b	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState
  00010	83 f8 01	 cmp	 eax, 1
  00013	75 08		 jne	 SHORT $LN2@RestoreSpe

; 353  : 	{
; 354  : 		__RestoreDiffuseRenderState();

  00015	8b ce		 mov	 ecx, esi
  00017	5e		 pop	 esi
  00018	e9 00 00 00 00	 jmp	 ?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__RestoreDiffuseRenderState
$LN2@RestoreSpe:

; 355  : 		return;
; 356  : 	}
; 357  : 
; 358  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS);

  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00023	6a 18		 push	 24			; 00000018H
  00025	6a 01		 push	 1
  00027	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 359  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSU);

  0002c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00032	6a 0d		 push	 13			; 0000000dH
  00034	6a 01		 push	 1
  00036	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 360  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_ADDRESSV);

  0003b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00041	6a 0e		 push	 14			; 0000000eH
  00043	6a 01		 push	 1
  00045	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 361  : 
; 362  : 	STATEMANAGER.RestoreTextureStageState(1, D3DTSS_TEXCOORDINDEX);

  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00050	6a 0b		 push	 11			; 0000000bH
  00052	6a 01		 push	 1
  00054	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 363  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0005f	6a 01		 push	 1
  00061	6a 01		 push	 1
  00063	6a 01		 push	 1
  00065	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 364  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00070	6a 01		 push	 1
  00072	6a 04		 push	 4
  00074	6a 01		 push	 1
  00076	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 365  : 
; 366  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG1);

  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00081	6a 02		 push	 2
  00083	6a 00		 push	 0
  00085	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 367  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG2);

  0008a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00090	6a 03		 push	 3
  00092	6a 00		 push	 0
  00094	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 368  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLOROP);

  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0009f	6a 01		 push	 1
  000a1	6a 00		 push	 0
  000a3	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 369  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAARG1);

  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ae	6a 05		 push	 5
  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 370  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAARG2);

  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000bd	6a 06		 push	 6
  000bf	6a 00		 push	 0
  000c1	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 371  : 	STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAOP);

  000c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000cc	6a 04		 push	 4
  000ce	6a 00		 push	 0
  000d0	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState
  000d5	5e		 pop	 esi

; 372  : }

  000d6	c3		 ret	 0
?__RestoreSpecularRenderState@CGrannyMaterial@@IAEXXZ ENDP ; CGrannyMaterial::__RestoreSpecularRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__ApplySpecularRenderState@CGrannyMaterial@@IAEXXZ
_TEXT	SEGMENT
$T1$sroa$235$ = -4					; size = 4
?__ApplySpecularRenderState@CGrannyMaterial@@IAEXXZ PROC ; CGrannyMaterial::__ApplySpecularRenderState, COMDAT
; _this$ = ecx

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 314  : 	if (TRUE == STATEMANAGER.GetRenderState(D3DRS_ALPHABLENDENABLE))

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000d	6a 1b		 push	 27			; 0000001bH
  0000f	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState
  00014	83 f8 01	 cmp	 eax, 1
  00017	75 0c		 jne	 SHORT $LN2@ApplySpecu

; 315  : 	{
; 316  : 		__ApplyDiffuseRenderState();

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__ApplyDiffuseRenderState
  00020	5e		 pop	 esi

; 348  : }

  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN2@ApplySpecu:

; 317  : 		return;
; 318  : 	}
; 319  : 
; 320  : 	CGraphicTexture* pkTexture=ms_akSphereMapInstance[m_bSphereMapIndex].GetTexturePointer();

  00025	0f b6 4e 2c	 movzx	 ecx, BYTE PTR [esi+44]
  00029	53		 push	 ebx
  0002a	c1 e1 05	 shl	 ecx, 5
  0002d	57		 push	 edi
  0002e	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
  00034	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer

; 321  : 
; 322  : 	STATEMANAGER.SetTexture(0, GetD3DTexture(0));

  00039	6a 00		 push	 0
  0003b	8b ce		 mov	 ecx, esi
  0003d	8b f8		 mov	 edi, eax
  0003f	e8 00 00 00 00	 call	 ?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z ; CGrannyMaterial::GetD3DTexture
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004a	50		 push	 eax
  0004b	6a 00		 push	 0
  0004d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 323  : 
; 324  : 	if (pkTexture)

  00052	85 ff		 test	 edi, edi
  00054	74 0a		 je	 SHORT $LN3@ApplySpecu

; 325  : 		STATEMANAGER.SetTexture(1, pkTexture->GetD3DTexture());

  00056	8b cf		 mov	 ecx, edi
  00058	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0005d	50		 push	 eax
  0005e	eb 02		 jmp	 SHORT $LN26@ApplySpecu
$LN3@ApplySpecu:

; 326  : 	else
; 327  : 		STATEMANAGER.SetTexture(1, NULL);

  00060	6a 00		 push	 0
$LN26@ApplySpecu:

; 329  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(g_fSpecularColor.r, g_fSpecularColor.g, g_fSpecularColor.b, __GetSpecularPower()));

  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00068	6a 01		 push	 1
  0006a	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
  0006f	8b ce		 mov	 ecx, esi
  00071	e8 00 00 00 00	 call	 ?__GetSpecularPower@CGrannyMaterial@@IBEMXZ ; CGrannyMaterial::__GetSpecularPower
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?g_fSpecularColor@@3UD3DXCOLOR@@A
  0007e	0f 57 c9	 xorps	 xmm1, xmm1
  00081	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00088	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  00090	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000

; 923  :     a = fa;

  00098	d9 5d fc	 fstp	 DWORD PTR $T1$sroa$235$[ebp]

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0009b	72 07		 jb	 SHORT $LN12@ApplySpecu
  0009d	bb ff 00 00 00	 mov	 ebx, 255		; 000000ffH
  000a2	eb 2b		 jmp	 SHORT $LN11@ApplySpecu
$LN12@ApplySpecu:
  000a4	0f 2f c8	 comiss	 xmm1, xmm0
  000a7	72 04		 jb	 SHORT $LN10@ApplySpecu
  000a9	33 db		 xor	 ebx, ebx
  000ab	eb 22		 jmp	 SHORT $LN11@ApplySpecu
$LN10@ApplySpecu:
  000ad	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000b1	f3 0f 58 c4	 addss	 xmm0, xmm4
  000b5	e8 00 00 00 00	 call	 __ftoui3
  000ba	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@437f0000
  000c2	8b d8		 mov	 ebx, eax
  000c4	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f000000
  000cc	0f 57 c9	 xorps	 xmm1, xmm1
$LN11@ApplySpecu:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  000cf	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?g_fSpecularColor@@3UD3DXCOLOR@@A+4
  000d7	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  000de	72 07		 jb	 SHORT $LN16@ApplySpecu
  000e0	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  000e5	eb 18		 jmp	 SHORT $LN15@ApplySpecu
$LN16@ApplySpecu:
  000e7	0f 2f c8	 comiss	 xmm1, xmm0
  000ea	72 04		 jb	 SHORT $LN14@ApplySpecu
  000ec	33 ff		 xor	 edi, edi
  000ee	eb 0f		 jmp	 SHORT $LN15@ApplySpecu
$LN14@ApplySpecu:
  000f0	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000f4	f3 0f 58 c4	 addss	 xmm0, xmm4
  000f8	e8 00 00 00 00	 call	 __ftoui3
  000fd	8b f8		 mov	 edi, eax
$LN15@ApplySpecu:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  000ff	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?g_fSpecularColor@@3UD3DXCOLOR@@A+8
  00107	0f 57 c9	 xorps	 xmm1, xmm1
  0010a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00111	72 07		 jb	 SHORT $LN20@ApplySpecu
  00113	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00118	eb 23		 jmp	 SHORT $LN19@ApplySpecu
$LN20@ApplySpecu:
  0011a	0f 2f c8	 comiss	 xmm1, xmm0
  0011d	72 04		 jb	 SHORT $LN18@ApplySpecu
  0011f	33 f6		 xor	 esi, esi
  00121	eb 1a		 jmp	 SHORT $LN19@ApplySpecu
$LN18@ApplySpecu:
  00123	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0012b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00133	e8 00 00 00 00	 call	 __ftoui3
  00138	8b f0		 mov	 esi, eax
  0013a	0f 57 c9	 xorps	 xmm1, xmm1
$LN19@ApplySpecu:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  0013d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR $T1$sroa$235$[ebp]
  00142	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00149	72 07		 jb	 SHORT $LN24@ApplySpecu
  0014b	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00150	eb 1e		 jmp	 SHORT $LN23@ApplySpecu
$LN24@ApplySpecu:
  00152	0f 2f c8	 comiss	 xmm1, xmm0
  00155	72 04		 jb	 SHORT $LN22@ApplySpecu
  00157	33 c0		 xor	 eax, eax
  00159	eb 15		 jmp	 SHORT $LN23@ApplySpecu
$LN22@ApplySpecu:
  0015b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00163	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0016b	e8 00 00 00 00	 call	 __ftoui3
$LN23@ApplySpecu:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 329  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(g_fSpecularColor.r, g_fSpecularColor.g, g_fSpecularColor.b, __GetSpecularPower()));

  00170	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  00176	c1 e0 08	 shl	 eax, 8
  00179	0b c3		 or	 eax, ebx
  0017b	c1 e0 08	 shl	 eax, 8
  0017e	0b c7		 or	 eax, edi
  00180	c1 e0 08	 shl	 eax, 8
  00183	0b c6		 or	 eax, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 329  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, D3DXCOLOR(g_fSpecularColor.r, g_fSpecularColor.g, g_fSpecularColor.b, __GetSpecularPower()));

  00185	50		 push	 eax
  00186	6a 3c		 push	 60			; 0000003cH
  00188	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 330  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXCOORDINDEX, D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR);

  0018d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00193	68 00 00 03 00	 push	 196608			; 00030000H
  00198	6a 0b		 push	 11			; 0000000bH
  0019a	6a 01		 push	 1
  0019c	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 331  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG1,	D3DTA_TEXTURE);

  001a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001a7	6a 02		 push	 2
  001a9	6a 02		 push	 2
  001ab	6a 00		 push	 0
  001ad	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 332  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG2,	D3DTA_DIFFUSE);

  001b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b8	6a 00		 push	 0
  001ba	6a 03		 push	 3
  001bc	6a 00		 push	 0
  001be	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 333  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLOROP,	D3DTOP_MODULATE);

  001c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c9	6a 04		 push	 4
  001cb	6a 01		 push	 1
  001cd	6a 00		 push	 0
  001cf	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 334  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAARG1,	D3DTA_TEXTURE);

  001d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001da	6a 02		 push	 2
  001dc	6a 05		 push	 5
  001de	6a 00		 push	 0
  001e0	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 335  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAARG2,	D3DTA_TFACTOR);

  001e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001eb	6a 03		 push	 3
  001ed	6a 06		 push	 6
  001ef	6a 00		 push	 0
  001f1	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 336  : 	STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAOP,	D3DTOP_MODULATE);

  001f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001fc	6a 04		 push	 4
  001fe	6a 04		 push	 4
  00200	6a 00		 push	 0
  00202	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 337  : 
; 338  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG1,	D3DTA_CURRENT);

  00207	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0020d	6a 01		 push	 1
  0020f	6a 02		 push	 2
  00211	6a 01		 push	 1
  00213	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 339  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLORARG2,	D3DTA_TEXTURE);

  00218	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0021e	6a 02		 push	 2
  00220	6a 03		 push	 3
  00222	6a 01		 push	 1
  00224	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 340  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP,	D3DTOP_MODULATEALPHA_ADDCOLOR);

  00229	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0022f	6a 12		 push	 18			; 00000012H
  00231	6a 01		 push	 1
  00233	6a 01		 push	 1
  00235	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 341  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAARG1,	D3DTA_CURRENT);

  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00240	6a 01		 push	 1
  00242	6a 05		 push	 5
  00244	6a 01		 push	 1
  00246	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 342  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP,	D3DTOP_SELECTARG1);

  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00251	6a 02		 push	 2
  00253	6a 04		 push	 4
  00255	6a 01		 push	 1
  00257	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 343  : 
; 344  : 	STATEMANAGER.SetTransform(D3DTS_TEXTURE1, &ms_matSpecular);

  0025c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00262	68 00 00 00 00	 push	 OFFSET ?ms_matSpecular@CGrannyMaterial@@0UD3DXMATRIX@@A ; CGrannyMaterial::ms_matSpecular
  00267	6a 11		 push	 17			; 00000011H
  00269	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 345  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_COUNT2);

  0026e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00274	6a 02		 push	 2
  00276	6a 18		 push	 24			; 00000018H
  00278	6a 01		 push	 1
  0027a	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 346  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  0027f	6a 01		 push	 1
  00281	6a 0d		 push	 13			; 0000000dH
  00283	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00289	6a 01		 push	 1
  0028b	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 347  : 	STATEMANAGER.SaveTextureStageState(1, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00290	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00296	6a 01		 push	 1
  00298	6a 0e		 push	 14			; 0000000eH
  0029a	6a 01		 push	 1
  0029c	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState
  002a1	5f		 pop	 edi
  002a2	5b		 pop	 ebx
  002a3	5e		 pop	 esi

; 348  : }

  002a4	8b e5		 mov	 esp, ebp
  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
?__ApplySpecularRenderState@CGrannyMaterial@@IAEXXZ ENDP ; CGrannyMaterial::__ApplySpecularRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ
_TEXT	SEGMENT
?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ PROC ; CGrannyMaterial::__RestoreDiffuseRenderState, COMDAT
; _this$ = ecx

; 306  : 	if (m_bTwoSideRender)

  00000	80 79 24 00	 cmp	 BYTE PTR [ecx+36], 0
  00004	74 10		 je	 SHORT $LN2@RestoreDif

; 307  : 	{
; 308  : 		STATEMANAGER.SetRenderState(D3DRS_CULLMODE, m_dwLastCullRenderStateForTwoSideRendering);

  00006	ff 71 28	 push	 DWORD PTR [ecx+40]
  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0000f	6a 16		 push	 22			; 00000016H
  00011	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN2@RestoreDif:

; 309  : 	}
; 310  : }

  00016	c3		 ret	 0
?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ ENDP ; CGrannyMaterial::__RestoreDiffuseRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ
_TEXT	SEGMENT
?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ PROC	; CGrannyMaterial::__ApplyDiffuseRenderState, COMDAT
; _this$ = ecx

; 294  : {

  00000	56		 push	 esi

; 295  : 	STATEMANAGER.SetTexture(0, GetD3DTexture(0));

  00001	6a 00		 push	 0
  00003	8b f1		 mov	 esi, ecx
  00005	e8 00 00 00 00	 call	 ?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z ; CGrannyMaterial::GetD3DTexture
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00010	50		 push	 eax
  00011	6a 00		 push	 0
  00013	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 296  : 
; 297  : 	if (m_bTwoSideRender)

  00018	80 7e 24 00	 cmp	 BYTE PTR [esi+36], 0
  0001c	74 1f		 je	 SHORT $LN2@ApplyDiffu

; 298  : 	{
; 299  : 		m_dwLastCullRenderStateForTwoSideRendering = STATEMANAGER.GetRenderState(D3DRS_CULLMODE);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	6a 16		 push	 22			; 00000016H
  00026	e8 00 00 00 00	 call	 ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState

; 300  : 		STATEMANAGER.SetRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  0002b	6a 01		 push	 1
  0002d	89 46 28	 mov	 DWORD PTR [esi+40], eax
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00036	6a 16		 push	 22			; 00000016H
  00038	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
$LN2@ApplyDiffu:

; 301  : 	}
; 302  : }

  0003d	5e		 pop	 esi
  0003e	c3		 ret	 0
?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ ENDP	; CGrannyMaterial::__ApplyDiffuseRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__GetSpecularPower@CGrannyMaterial@@IBEMXZ
_TEXT	SEGMENT
?__GetSpecularPower@CGrannyMaterial@@IBEMXZ PROC	; CGrannyMaterial::__GetSpecularPower, COMDAT
; _this$ = ecx

; 188  : 	return m_fSpecularPower;

  00000	d9 41 1c	 fld	 DWORD PTR [ecx+28]

; 189  : }

  00003	c3		 ret	 0
?__GetSpecularPower@CGrannyMaterial@@IBEMXZ ENDP	; CGrannyMaterial::__GetSpecularPower
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__IsSpecularEnable@CGrannyMaterial@@IBEHXZ
_TEXT	SEGMENT
?__IsSpecularEnable@CGrannyMaterial@@IBEHXZ PROC	; CGrannyMaterial::__IsSpecularEnable, COMDAT
; _this$ = ecx

; 183  : 	return m_bSpecularEnable;

  00000	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]

; 184  : }

  00003	c3		 ret	 0
?__IsSpecularEnable@CGrannyMaterial@@IBEHXZ ENDP	; CGrannyMaterial::__IsSpecularEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z
_TEXT	SEGMENT
_localFileName$1 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_fileName$ = 8						; size = 4
?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z PROC ; CGrannyMaterial::__GetImagePointer, COMDAT
; _this$ = ecx

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx

; 195  : 	assert(*fileName != '\0');
; 196  : 
; 197  : 	CResourceManager& rkResMgr = CResourceManager::Instance();

  00014	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR _fileName$[ebp]

; 198  : 
; 199  : 	// SUPPORT_LOCAL_TEXTURE
; 200  : 	int fileName_len = strlen(fileName);

  0001f	8b f7		 mov	 esi, edi
  00021	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL12@GetImagePo:
  00024	8a 06		 mov	 al, BYTE PTR [esi]
  00026	46		 inc	 esi
  00027	84 c0		 test	 al, al
  00029	75 f9		 jne	 SHORT $LL12@GetImagePo
  0002b	2b f1		 sub	 esi, ecx

; 201  : 	if (fileName_len > 2 && fileName[1] != ':')

  0002d	83 fe 02	 cmp	 esi, 2
  00030	7e 49		 jle	 SHORT $LN3@GetImagePo
  00032	80 7f 01 3a	 cmp	 BYTE PTR [edi+1], 58	; 0000003aH
  00036	74 43		 je	 SHORT $LN3@GetImagePo

; 202  : 	{
; 203  : 		char localFileName[256];
; 204  : 		const std::string& modelLocalPath = GetModelLocalPath();

  00038	e8 00 00 00 00	 call	 ?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; GetModelLocalPath

; 205  : 
; 206  : 		int localFileName_len = modelLocalPath.length() + 1 + fileName_len;

  0003d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00040	40		 inc	 eax
  00041	03 c6		 add	 eax, esi

; 207  : 		if (localFileName_len < sizeof(localFileName) - 1)

  00043	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00048	73 31		 jae	 SHORT $LN3@GetImagePo

; 209  : 			_snprintf(localFileName, sizeof(localFileName), "%s%s", GetModelLocalPath().c_str(), fileName);

  0004a	e8 00 00 00 00	 call	 ?GetModelLocalPath@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; GetModelLocalPath
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0004f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00053	72 02		 jb	 SHORT $LN8@GetImagePo

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00055	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@GetImagePo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 209  : 			_snprintf(localFileName, sizeof(localFileName), "%s%s", GetModelLocalPath().c_str(), fileName);

  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs@
  0005e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _localFileName$1[ebp]
  00064	68 00 01 00 00	 push	 256			; 00000100H
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 __snprintf
  0006f	83 c4 14	 add	 esp, 20			; 00000014H

; 210  : 			CResource* pResource = rkResMgr.GetResourcePointer(localFileName);

  00072	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _localFileName$1[ebp]
  00078	50		 push	 eax

; 211  : 			return static_cast<CGraphicImage*>(pResource);

  00079	eb 01		 jmp	 SHORT $LN13@GetImagePo
$LN3@GetImagePo:

; 212  : 		}
; 213  : 	}
; 214  : 	// END_OF_SUPPORT_LOCAL_TEXTURE
; 215  : 
; 216  : 
; 217  : 	CResource* pResource = rkResMgr.GetResourcePointer(fileName);

  0007b	57		 push	 edi
$LN13@GetImagePo:

; 218  : 	return static_cast<CGraphicImage*>(pResource);
; 219  : }

  0007c	8b cb		 mov	 ecx, ebx
  0007e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	33 cd		 xor	 ecx, ebp
  0008a	5b		 pop	 ebx
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z ENDP ; CGrannyMaterial::__GetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z
_TEXT	SEGMENT
_iStage$ = 8						; size = 4
?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z PROC ; CGrannyMaterial::GetD3DTexture, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 62   : 			return m_pObject == NULL ? true : false;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStage$[ebp]
  00006	8b 4c 81 10	 mov	 ecx, DWORD PTR [ecx+eax*4+16]
  0000a	85 c9		 test	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 146  : 	if (ratImage.IsNull())

  0000c	75 06		 jne	 SHORT $LN2@GetD3DText

; 147  : 		return NULL;

  0000e	33 c0		 xor	 eax, eax

; 152  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN2@GetD3DText:

; 148  : 
; 149  : 	CGraphicImage * pImage = ratImage.GetPointer();
; 150  : 	const CGraphicTexture * pTexture = pImage->GetTexturePointer();

  00014	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer

; 151  : 	return pTexture->GetD3DTexture();

  00019	8b c8		 mov	 ecx, eax
  0001b	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture

; 152  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?GetD3DTexture@CGrannyMaterial@@QBEPAUIDirect3DTexture8@@H@Z ENDP ; CGrannyMaterial::GetD3DTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetOpacityTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetOpacityTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ PROC ; CGrannyMaterial::GetOpacityTexture, COMDAT
; _this$ = ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 62   : 			return m_pObject == NULL ? true : false;

  00000	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00003	85 c9		 test	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 175  : 	if (m_roImage[1].IsNull())

  00005	75 03		 jne	 SHORT $LN2@GetOpacity

; 176  : 		return NULL;

  00007	33 c0		 xor	 eax, eax

; 179  : }

  00009	c3		 ret	 0
$LN2@GetOpacity:

; 177  : 
; 178  : 	return m_roImage[1].GetPointer()->GetTexturePointer();

  0000a	e9 00 00 00 00	 jmp	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer
?GetOpacityTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ ENDP ; CGrannyMaterial::GetOpacityTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetDiffuseTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ
_TEXT	SEGMENT
?GetDiffuseTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ PROC ; CGrannyMaterial::GetDiffuseTexture, COMDAT
; _this$ = ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 62   : 			return m_pObject == NULL ? true : false;

  00000	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00003	85 c9		 test	 ecx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 167  : 	if (m_roImage[0].IsNull())

  00005	75 03		 jne	 SHORT $LN2@GetDiffuse

; 168  : 		return NULL;

  00007	33 c0		 xor	 eax, eax

; 171  : }

  00009	c3		 ret	 0
$LN2@GetDiffuse:

; 169  : 
; 170  : 	return m_roImage[0].GetPointer()->GetTexturePointer();

  0000a	e9 00 00 00 00	 jmp	 ?GetTexturePointer@CGraphicImage@@QAEPAVCGraphicTexture@@XZ ; CGraphicImage::GetTexturePointer
?GetDiffuseTexture@CGrannyMaterial@@QBEPBVCGraphicTexture@@XZ ENDP ; CGrannyMaterial::GetDiffuseTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetImagePointer@CGrannyMaterial@@QBEPAVCGraphicImage@@H@Z
_TEXT	SEGMENT
_iStage$ = 8						; size = 4
?GetImagePointer@CGrannyMaterial@@QBEPAVCGraphicImage@@H@Z PROC ; CGrannyMaterial::GetImagePointer, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 62   : 			return m_pObject == NULL ? true : false;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStage$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 158  : 	if (ratImage.IsNull())

  00006	8b 44 81 10	 mov	 eax, DWORD PTR [ecx+eax*4+16]

; 159  : 		return NULL;
; 160  : 
; 161  : 	CGraphicImage * pImage = ratImage.GetPointer();
; 162  : 	return pImage;
; 163  : }

  0000a	5d		 pop	 ebp
  0000b	c2 04 00	 ret	 4
?GetImagePointer@CGrannyMaterial@@QBEPAVCGraphicImage@@H@Z ENDP ; CGrannyMaterial::GetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?GetType@CGrannyMaterial@@QBE?AW4EType@1@XZ
_TEXT	SEGMENT
?GetType@CGrannyMaterial@@QBE?AW4EType@1@XZ PROC	; CGrannyMaterial::GetType, COMDAT
; _this$ = ecx

; 74   : 	return m_eType;

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 75   : }

  00003	c3		 ret	 0
?GetType@CGrannyMaterial@@QBE?AW4EType@1@XZ ENDP	; CGrannyMaterial::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z
_TEXT	SEGMENT
_iStage$ = 8						; size = 4
_pImage$ = 12						; size = 4
?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z PROC ; CGrannyMaterial::SetImagePointer, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	assert(iStage<2 && "CGrannyMaterial::SetImagePointer");
; 80   : 	m_roImage[iStage]=pImage;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStage$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 69   : 			m_pObject = pObject;

  00006	8b 55 0c	 mov	 edx, DWORD PTR _pImage$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 78   : {

  00009	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  0000a	8b 74 81 10	 mov	 esi, DWORD PTR [ecx+eax*4+16]

; 69   : 			m_pObject = pObject;

  0000e	89 54 81 10	 mov	 DWORD PTR [ecx+eax*4+16], edx

; 70   : 
; 71   : 			if (m_pObject)

  00012	85 d2		 test	 edx, edx
  00014	74 07		 je	 SHORT $LN6@SetImagePo

; 72   : 				m_pObject->AddReference();

  00016	8b ca		 mov	 ecx, edx
  00018	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN6@SetImagePo:

; 73   : 
; 74   : 			if (pOldObject)

  0001d	85 f6		 test	 esi, esi
  0001f	74 07		 je	 SHORT $LN7@SetImagePo

; 75   : 				pOldObject->Release();

  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN7@SetImagePo:
  00028	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 81   : }

  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?SetImagePointer@CGrannyMaterial@@QAEXHPAVCGraphicImage@@@Z ENDP ; CGrannyMaterial::SetImagePointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?CreateFromGrannyMaterialPointer@CGrannyMaterial@@QAE_NPAUgranny_material@@@Z
_TEXT	SEGMENT
_twoSideResult$1 = -88					; size = 8
_pgrnOpacityTexture$1$ = -80				; size = 4
_pgrnDiffuseTexture$1$ = -76				; size = 4
_twoSided$2 = -72					; size = 4
_TwoSidedFieldType$3 = -68				; size = 64
__$ArrayPad$ = -4					; size = 4
_pgrnMaterial$ = 8					; size = 4
?CreateFromGrannyMaterialPointer@CGrannyMaterial@@QAE_NPAUgranny_material@@@Z PROC ; CGrannyMaterial::CreateFromGrannyMaterialPointer, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _pgrnMaterial$[ebp]
  00014	57		 push	 edi
  00015	8b f9		 mov	 edi, ecx

; 223  : 	m_pgrnMaterial = pgrnMaterial;

  00017	89 5f 0c	 mov	 DWORD PTR [edi+12], ebx

; 224  : 
; 225  : 	granny_texture * pgrnDiffuseTexture = NULL;
; 226  : 	granny_texture * pgrnOpacityTexture = NULL;
; 227  : 
; 228  : 	if (pgrnMaterial)

  0001a	85 db		 test	 ebx, ebx
  0001c	0f 84 1b 01 00
	00		 je	 $LN17@CreateFrom

; 229  : 	{
; 230  : 		if (pgrnMaterial->MapCount > 1 && !_strnicmp(pgrnMaterial->Name, "Blend", 5))

  00022	83 7b 04 01	 cmp	 DWORD PTR [ebx+4], 1
  00026	56		 push	 esi
  00027	7e 2f		 jle	 SHORT $LN22@CreateFrom
  00029	6a 05		 push	 5
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_05BPEPCAMP@Blend@
  00030	ff 33		 push	 DWORD PTR [ebx]
  00032	e8 00 00 00 00	 call	 __strnicmp
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	85 c0		 test	 eax, eax
  0003c	75 1a		 jne	 SHORT $LN22@CreateFrom

; 231  : 		{
; 232  : 			pgrnDiffuseTexture = GrannyGetMaterialTextureByType(pgrnMaterial->Maps[0].Material, GrannyDiffuseColorTexture);

  0003e	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00041	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GrannyGetMaterialTextureByType@8
  00047	6a 02		 push	 2
  00049	ff 70 04	 push	 DWORD PTR [eax+4]
  0004c	ff d6		 call	 esi

; 233  : 			pgrnOpacityTexture = GrannyGetMaterialTextureByType(pgrnMaterial->Maps[1].Material, GrannyDiffuseColorTexture);

  0004e	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00051	6a 02		 push	 2
  00053	ff 71 0c	 push	 DWORD PTR [ecx+12]

; 234  : 		}

  00056	eb 12		 jmp	 SHORT $LN24@CreateFrom
$LN22@CreateFrom:

; 235  : 		else
; 236  : 		{
; 237  : 			pgrnDiffuseTexture = GrannyGetMaterialTextureByType(m_pgrnMaterial, GrannyDiffuseColorTexture);

  00058	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GrannyGetMaterialTextureByType@8
  0005e	6a 02		 push	 2
  00060	ff 77 0c	 push	 DWORD PTR [edi+12]
  00063	ff d6		 call	 esi

; 238  : 			pgrnOpacityTexture = GrannyGetMaterialTextureByType(m_pgrnMaterial, GrannyOpacityTexture);

  00065	6a 05		 push	 5
  00067	ff 77 0c	 push	 DWORD PTR [edi+12]
$LN24@CreateFrom:

; 239  : 		}
; 240  : 
; 241  : 		{
; 242  : 			granny_int32 twoSided = 0;

  0006a	89 45 b4	 mov	 DWORD PTR _pgrnDiffuseTexture$1$[ebp], eax
  0006d	ff d6		 call	 esi
  0006f	89 45 b0	 mov	 DWORD PTR _pgrnOpacityTexture$1$[ebp], eax
  00072	0f 57 c0	 xorps	 xmm0, xmm0

; 243  : 			granny_data_type_definition TwoSidedFieldType[] =
; 244  : 			{
; 245  : 				{GrannyInt32Member, "Two-sided"},
; 246  : 				{GrannyEndMember},
; 247  : 			};
; 248  : #if GrannyProductMinorVersion==4
; 249  : 			granny_variant twoSideResult = GrannyFindMatchingMember(pgrnMaterial->ExtendedData.Type, pgrnMaterial->ExtendedData.Object, "Two-sided");
; 250  : 
; 251  : 			if (NULL != twoSideResult.Type)
; 252  : 				GrannyConvertSingleObject(twoSideResult.Type, twoSideResult.Object, TwoSidedFieldType, &twoSided);
; 253  : #elif GrannyProductMinorVersion==7
; 254  : 			granny_variant twoSideResult;
; 255  : 			bool findMatchResult = GrannyFindMatchingMember(pgrnMaterial->ExtendedData.Type, pgrnMaterial->ExtendedData.Object, "Two-sided", &twoSideResult);
; 256  : 			if (NULL != twoSideResult.Type && findMatchResult)
; 257  : 				GrannyConvertSingleObject(twoSideResult.Type, twoSideResult.Object, TwoSidedFieldType, &twoSided);
; 258  : #elif GrannyProductMinorVersion==11 || GrannyProductMinorVersion==9 || GrannyProductMinorVersion==8
; 259  : 			granny_variant twoSideResult;
; 260  : 			bool gfmm_bool = GrannyFindMatchingMember(pgrnMaterial->ExtendedData.Type, pgrnMaterial->ExtendedData.Object, "Two-sided", &twoSideResult);

  00075	8d 45 a8	 lea	 eax, DWORD PTR _twoSideResult$1[ebp]
  00078	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _twoSided$2[ebp], 0
  0007f	50		 push	 eax
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_09HNLEFIID@Two?9sided@
  00085	ff 73 14	 push	 DWORD PTR [ebx+20]
  00088	c7 45 bc 13 00
	00 00		 mov	 DWORD PTR _TwoSidedFieldType$3[ebp], 19 ; 00000013H
  0008f	ff 73 10	 push	 DWORD PTR [ebx+16]
  00092	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _TwoSidedFieldType$3[ebp+4], OFFSET ??_C@_09HNLEFIID@Two?9sided@
  00099	0f 11 45 c4	 movups	 XMMWORD PTR _TwoSidedFieldType$3[ebp+8], xmm0
  0009d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _TwoSidedFieldType$3[ebp+32], 0
  000a4	66 0f d6 45 d4	 movq	 QWORD PTR _TwoSidedFieldType$3[ebp+24], xmm0
  000a9	0f 11 45 e0	 movups	 XMMWORD PTR _TwoSidedFieldType$3[ebp+36], xmm0
  000ad	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _TwoSidedFieldType$3[ebp+60], 0
  000b4	66 0f d6 45 f0	 movq	 QWORD PTR _TwoSidedFieldType$3[ebp+52], xmm0
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyFindMatchingMember@16

; 261  : 			if (NULL != twoSideResult.Type)

  000bf	8b 45 a8	 mov	 eax, DWORD PTR _twoSideResult$1[ebp]
  000c2	85 c0		 test	 eax, eax
  000c4	74 14		 je	 SHORT $LN5@CreateFrom

; 262  : 				GrannyConvertSingleObject(twoSideResult.Type, twoSideResult.Object, TwoSidedFieldType, &twoSided, 0);

  000c6	6a 00		 push	 0
  000c8	8d 4d b8	 lea	 ecx, DWORD PTR _twoSided$2[ebp]
  000cb	51		 push	 ecx
  000cc	8d 4d bc	 lea	 ecx, DWORD PTR _TwoSidedFieldType$3[ebp]
  000cf	51		 push	 ecx
  000d0	ff 75 ac	 push	 DWORD PTR _twoSideResult$1[ebp+4]
  000d3	50		 push	 eax
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GrannyConvertSingleObject@20
$LN5@CreateFrom:

; 263  : #else
; 264  : #error "unknown granny version"
; 265  : #endif
; 266  : 
; 267  : 			m_bTwoSideRender = 1 == twoSided;

  000da	83 7d b8 01	 cmp	 DWORD PTR _twoSided$2[ebp], 1
  000de	0f 94 c0	 sete	 al
  000e1	88 47 24	 mov	 BYTE PTR [edi+36], al

; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	if (pgrnDiffuseTexture)

  000e4	8b 45 b4	 mov	 eax, DWORD PTR _pgrnDiffuseTexture$1$[ebp]
  000e7	85 c0		 test	 eax, eax
  000e9	74 25		 je	 SHORT $LN13@CreateFrom

; 272  : 		m_roImage[0].SetPointer(__GetImagePointer(pgrnDiffuseTexture->FromFileName));

  000eb	ff 30		 push	 DWORD PTR [eax]
  000ed	8b cf		 mov	 ecx, edi
  000ef	e8 00 00 00 00	 call	 ?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z ; CGrannyMaterial::__GetImagePointer
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  000f4	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 68   : 
; 69   : 			m_pObject = pObject;

  000f7	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 70   : 
; 71   : 			if (m_pObject)

  000fa	85 c0		 test	 eax, eax
  000fc	74 07		 je	 SHORT $LN12@CreateFrom

; 72   : 				m_pObject->AddReference();

  000fe	8b c8		 mov	 ecx, eax
  00100	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN12@CreateFrom:

; 73   : 
; 74   : 			if (pOldObject)

  00105	85 f6		 test	 esi, esi
  00107	74 07		 je	 SHORT $LN13@CreateFrom

; 75   : 				pOldObject->Release();

  00109	8b ce		 mov	 ecx, esi
  0010b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN13@CreateFrom:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 274  : 	if (pgrnOpacityTexture)

  00110	8b 45 b0	 mov	 eax, DWORD PTR _pgrnOpacityTexture$1$[ebp]
  00113	85 c0		 test	 eax, eax
  00115	74 25		 je	 SHORT $LN23@CreateFrom

; 275  : 		m_roImage[1].SetPointer(__GetImagePointer(pgrnOpacityTexture->FromFileName));

  00117	ff 30		 push	 DWORD PTR [eax]
  00119	8b cf		 mov	 ecx, edi
  0011b	e8 00 00 00 00	 call	 ?__GetImagePointer@CGrannyMaterial@@IAEPAVCGraphicImage@@PBD@Z ; CGrannyMaterial::__GetImagePointer
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00120	8b 77 14	 mov	 esi, DWORD PTR [edi+20]

; 68   : 
; 69   : 			m_pObject = pObject;

  00123	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 70   : 
; 71   : 			if (m_pObject)

  00126	85 c0		 test	 eax, eax
  00128	74 07		 je	 SHORT $LN16@CreateFrom

; 72   : 				m_pObject->AddReference();

  0012a	8b c8		 mov	 ecx, eax
  0012c	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN16@CreateFrom:

; 73   : 
; 74   : 			if (pOldObject)

  00131	85 f6		 test	 esi, esi
  00133	74 07		 je	 SHORT $LN23@CreateFrom

; 75   : 				pOldObject->Release();

  00135	8b ce		 mov	 ecx, esi
  00137	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN23@CreateFrom:
  0013c	5e		 pop	 esi
$LN17@CreateFrom:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 283  : }

  0013d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00140	33 c0		 xor	 eax, eax
  00142	39 47 14	 cmp	 DWORD PTR [edi+20], eax
  00145	0f 95 c0	 setne	 al
  00148	33 cd		 xor	 ecx, ebp
  0014a	89 47 18	 mov	 DWORD PTR [edi+24], eax
  0014d	b0 01		 mov	 al, 1
  0014f	5f		 pop	 edi
  00150	5b		 pop	 ebx
  00151	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
?CreateFromGrannyMaterialPointer@CGrannyMaterial@@QAE_NPAUgranny_material@@@Z ENDP ; CGrannyMaterial::CreateFromGrannyMaterialPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?Initialize@CGrannyMaterial@@IAEXXZ
_TEXT	SEGMENT
?Initialize@CGrannyMaterial@@IAEXXZ PROC		; CGrannyMaterial::Initialize, COMDAT
; _this$ = ecx

; 286  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]

; 68   : 
; 69   : 			m_pObject = pObject;

  00006	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();
; 73   : 
; 74   : 			if (pOldObject)

  0000d	85 c9		 test	 ecx, ecx
  0000f	74 05		 je	 SHORT $LN7@Initialize

; 75   : 				pOldObject->Release();

  00011	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN7@Initialize:

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00016	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 68   : 
; 69   : 			m_pObject = pObject;

  00019	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();
; 73   : 
; 74   : 			if (pOldObject)

  00020	85 c9		 test	 ecx, ecx
  00022	74 05		 je	 SHORT $LN13@Initialize

; 75   : 				pOldObject->Release();

  00024	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN13@Initialize:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 290  : 	SetSpecularInfo(FALSE, 0.0f, 0);

  00029	6a 00		 push	 0
  0002b	51		 push	 ecx
  0002c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00033	8b ce		 mov	 ecx, esi
  00035	6a 00		 push	 0
  00037	e8 00 00 00 00	 call	 ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ; CGrannyMaterial::SetSpecularInfo
  0003c	5e		 pop	 esi

; 291  : }

  0003d	c3		 ret	 0
?Initialize@CGrannyMaterial@@IAEXXZ ENDP		; CGrannyMaterial::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?RestoreRenderState@CGrannyMaterial@@QAEXXZ
_TEXT	SEGMENT
?RestoreRenderState@CGrannyMaterial@@QAEXXZ PROC	; CGrannyMaterial::RestoreRenderState, COMDAT
; _this$ = ecx

; 47   : {

  00000	8b c1		 mov	 eax, ecx

; 48   : 	assert(m_pfnRestoreRenderState!=NULL && "CGrannyMaterial::RestoreRenderState");
; 49   : 	(this->*m_pfnRestoreRenderState)();

  00002	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  00005	ff e0		 jmp	 eax
?RestoreRenderState@CGrannyMaterial@@QAEXXZ ENDP	; CGrannyMaterial::RestoreRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?ApplyRenderState@CGrannyMaterial@@QAEXXZ
_TEXT	SEGMENT
?ApplyRenderState@CGrannyMaterial@@QAEXXZ PROC		; CGrannyMaterial::ApplyRenderState, COMDAT
; _this$ = ecx

; 41   : {

  00000	8b c1		 mov	 eax, ecx

; 42   : 	assert(m_pfnApplyRenderState!=NULL && "CGrannyMaterial::SaveRenderState");
; 43   : 	(this->*m_pfnApplyRenderState)();

  00002	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00005	ff e0		 jmp	 eax
?ApplyRenderState@CGrannyMaterial@@QAEXXZ ENDP		; CGrannyMaterial::ApplyRenderState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z
_TEXT	SEGMENT
_bFlag$ = 8						; size = 4
_fPower$ = 12						; size = 4
_uSphereMapIndex$ = 16					; size = 1
?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z PROC	; CGrannyMaterial::SetSpecularInfo, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 117  : 	m_fSpecularPower = fPower;
; 118  : 	m_bSphereMapIndex = uSphereMapIndex;

  00003	8a 45 10	 mov	 al, BYTE PTR _uSphereMapIndex$[ebp]

; 119  : 	m_bSpecularEnable = bFlag;

  00006	8b 55 08	 mov	 edx, DWORD PTR _bFlag$[ebp]

; 120  : 
; 121  : 	if (bFlag)
; 122  : 	{
; 123  : 		m_pfnApplyRenderState = &CGrannyMaterial::__ApplySpecularRenderState;
; 124  : 		m_pfnRestoreRenderState = &CGrannyMaterial::__RestoreSpecularRenderState;
; 125  : 	}
; 126  : 	else
; 127  : 	{
; 128  : 		m_pfnApplyRenderState = &CGrannyMaterial::__ApplyDiffuseRenderState;
; 129  : 		m_pfnRestoreRenderState = &CGrannyMaterial::__RestoreDiffuseRenderState;
; 130  : 	}
; 131  : }

  00009	85 d2		 test	 edx, edx
  0000b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fPower$[ebp]
  00010	56		 push	 esi
  00011	88 41 2c	 mov	 BYTE PTR [ecx+44], al
  00014	be 00 00 00 00	 mov	 esi, OFFSET ?__RestoreSpecularRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__RestoreSpecularRenderState
  00019	b8 00 00 00 00	 mov	 eax, OFFSET ?__RestoreDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__RestoreDiffuseRenderState
  0001e	f3 0f 11 41 1c	 movss	 DWORD PTR [ecx+28], xmm0
  00023	0f 44 f0	 cmove	 esi, eax
  00026	89 51 20	 mov	 DWORD PTR [ecx+32], edx
  00029	57		 push	 edi
  0002a	bf 00 00 00 00	 mov	 edi, OFFSET ?__ApplyDiffuseRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__ApplyDiffuseRenderState
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET ?__ApplySpecularRenderState@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::__ApplySpecularRenderState
  00034	0f 44 c7	 cmove	 eax, edi
  00037	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  0003a	5f		 pop	 edi
  0003b	89 71 34	 mov	 DWORD PTR [ecx+52], esi
  0003e	5e		 pop	 esi
  0003f	5d		 pop	 ebp
  00040	c2 0c 00	 ret	 12			; 0000000cH
?SetSpecularInfo@CGrannyMaterial@@QAEXHME@Z ENDP	; CGrannyMaterial::SetSpecularInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z
_TEXT	SEGMENT
tv671 = -68						; size = 4
_strImageName$ = -64					; size = 24
_strOpacityFileName$2 = -40				; size = 24
_strDiffuseFileName$3 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szImageName$ = 8					; size = 4
_piStage$ = 12						; size = 4
?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z PROC		; CGrannyMaterial::IsIn, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	8b 75 08	 mov	 esi, DWORD PTR _c_szImageName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00030	8b d6		 mov	 edx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 84   : {

  00032	8b 7d 0c	 mov	 edi, DWORD PTR _piStage$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00035	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strImageName$[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003c	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strImageName$[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00043	c6 45 c0 00	 mov	 BYTE PTR _strImageName$[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00047	8d 4a 01	 lea	 ecx, DWORD PTR [edx+1]
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL118@IsIn:
  00050	8a 02		 mov	 al, BYTE PTR [edx]
  00052	42		 inc	 edx
  00053	84 c0		 test	 al, al
  00055	75 f9		 jne	 SHORT $LL118@IsIn
  00057	2b d1		 sub	 edx, ecx

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00059	8d 4d c0	 lea	 ecx, DWORD PTR _strImageName$[ebp]
  0005c	52		 push	 edx
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 86   : 	CFileNameHelper::StringPath(strImageName);

  00063	8d 45 c0	 lea	 eax, DWORD PTR _strImageName$[ebp]
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CFileNameHelper::StringPath

; 87   : 
; 88   : 	granny_texture * pgrnDiffuseTexture = GrannyGetMaterialTextureByType(m_pgrnMaterial, GrannyDiffuseColorTexture);

  00073	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GrannyGetMaterialTextureByType@8
  00079	83 c4 04	 add	 esp, 4
  0007c	6a 02		 push	 2
  0007e	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00081	ff d6		 call	 esi

; 89   : 	if (pgrnDiffuseTexture)

  00083	85 c0		 test	 eax, eax
  00085	74 72		 je	 SHORT $LN60@IsIn

; 90   : 	{
; 91   : 		std::string strDiffuseFileName = pgrnDiffuseTexture->FromFileName;

  00087	8b 10		 mov	 edx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00089	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0008b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strDiffuseFileName$3[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00092	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strDiffuseFileName$3[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00099	c6 45 d8 00	 mov	 BYTE PTR _strDiffuseFileName$3[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0009d	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000a0	89 45 bc	 mov	 DWORD PTR tv671[ebp], eax
$LL119@IsIn:
  000a3	8a 01		 mov	 al, BYTE PTR [ecx]
  000a5	41		 inc	 ecx
  000a6	84 c0		 test	 al, al
  000a8	75 f9		 jne	 SHORT $LL119@IsIn
  000aa	2b 4d bc	 sub	 ecx, DWORD PTR tv671[ebp]

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000ad	51		 push	 ecx
  000ae	52		 push	 edx
  000af	8d 4d d8	 lea	 ecx, DWORD PTR _strDiffuseFileName$3[ebp]
  000b2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 92   : 		CFileNameHelper::StringPath(strDiffuseFileName);

  000b7	8d 45 d8	 lea	 eax, DWORD PTR _strDiffuseFileName$3[ebp]
  000ba	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CFileNameHelper::StringPath

; 93   : 		if (strDiffuseFileName == strImageName)

  000c4	8d 45 c0	 lea	 eax, DWORD PTR _strImageName$[ebp]
  000c7	50		 push	 eax
  000c8	8d 45 d8	 lea	 eax, DWORD PTR _strDiffuseFileName$3[ebp]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d4	84 c0		 test	 al, al
  000d6	8b 45 ec	 mov	 eax, DWORD PTR _strDiffuseFileName$3[ebp+20]
  000d9	74 08		 je	 SHORT $LN3@IsIn

; 94   : 		{
; 95   : 			*piStage=0;

  000db	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000e1	eb 7b		 jmp	 SHORT $LN123@IsIn
$LN3@IsIn:

; 96   : 			return true;
; 97   : 		}
; 98   : 	}

  000e3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000e7	83 f8 10	 cmp	 eax, 16			; 00000010H
  000ea	72 0d		 jb	 SHORT $LN60@IsIn

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ec	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	50		 push	 eax
  000ee	ff 75 d8	 push	 DWORD PTR _strDiffuseFileName$3[ebp]
  000f1	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000f6	83 c4 08	 add	 esp, 8
$LN60@IsIn:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 100  :     granny_texture * pgrnOpacityTexture = GrannyGetMaterialTextureByType(m_pgrnMaterial, GrannyOpacityTexture);

  000f9	6a 05		 push	 5
  000fb	ff 73 0c	 push	 DWORD PTR [ebx+12]
  000fe	ff d6		 call	 esi

; 101  : 	if (pgrnOpacityTexture)

  00100	85 c0		 test	 eax, eax
  00102	0f 84 7e 00 00
	00		 je	 $LN102@IsIn

; 102  : 	{
; 103  : 		std::string strOpacityFileName = pgrnOpacityTexture->FromFileName;

  00108	8b 10		 mov	 edx, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0010a	8b ca		 mov	 ecx, edx

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0010c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strOpacityFileName$2[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00113	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strOpacityFileName$2[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0011a	c6 45 d8 00	 mov	 BYTE PTR _strOpacityFileName$2[ebp], 0

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0011e	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL120@IsIn:
  00121	8a 01		 mov	 al, BYTE PTR [ecx]
  00123	41		 inc	 ecx
  00124	84 c0		 test	 al, al
  00126	75 f9		 jne	 SHORT $LL120@IsIn
  00128	2b ce		 sub	 ecx, esi

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0012a	51		 push	 ecx
  0012b	52		 push	 edx
  0012c	8d 4d d8	 lea	 ecx, DWORD PTR _strOpacityFileName$2[ebp]
  0012f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 104  : 		CFileNameHelper::StringPath(strOpacityFileName);

  00134	8d 45 d8	 lea	 eax, DWORD PTR _strOpacityFileName$2[ebp]
  00137	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?StringPath@CFileNameHelper@@SAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CFileNameHelper::StringPath

; 105  : 		if (strOpacityFileName == strImageName)

  00141	8d 45 c0	 lea	 eax, DWORD PTR _strImageName$[ebp]
  00144	50		 push	 eax
  00145	8d 45 d8	 lea	 eax, DWORD PTR _strOpacityFileName$2[ebp]
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0014e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00151	84 c0		 test	 al, al
  00153	8b 45 ec	 mov	 eax, DWORD PTR _strOpacityFileName$2[ebp+20]
  00156	74 1c		 je	 SHORT $LN5@IsIn

; 106  : 		{
; 107  : 			*piStage=1;

  00158	c7 07 01 00 00
	00		 mov	 DWORD PTR [edi], 1
$LN123@IsIn:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  0015e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00161	72 0d		 jb	 SHORT $LN82@IsIn
  00163	40		 inc	 eax
  00164	50		 push	 eax
  00165	ff 75 d8	 push	 DWORD PTR _strOpacityFileName$2[ebp]
  00168	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0016d	83 c4 08	 add	 esp, 8
$LN82@IsIn:
  00170	b3 01		 mov	 bl, 1
  00172	eb 14		 jmp	 SHORT $LN11@IsIn
$LN5@IsIn:
  00174	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00177	72 0d		 jb	 SHORT $LN102@IsIn

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00179	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0017a	50		 push	 eax
  0017b	ff 75 d8	 push	 DWORD PTR _strOpacityFileName$2[ebp]
  0017e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00183	83 c4 08	 add	 esp, 8
$LN102@IsIn:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 112  : 	return false;

  00186	32 db		 xor	 bl, bl
$LN11@IsIn:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00188	8b 4d d4	 mov	 ecx, DWORD PTR _strImageName$[ebp+20]
  0018b	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0018e	72 0d		 jb	 SHORT $LN121@IsIn

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00190	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00191	51		 push	 ecx
  00192	ff 75 c0	 push	 DWORD PTR _strImageName$[ebp]
  00195	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0019a	83 c4 08	 add	 esp, 8
$LN121@IsIn:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 113  : }

  0019d	8a c3		 mov	 al, bl
  0019f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a9	59		 pop	 ecx
  001aa	5f		 pop	 edi
  001ab	5e		 pop	 esi
  001ac	5b		 pop	 ebx
  001ad	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b0	33 cd		 xor	 ecx, ebp
  001b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR _strImageName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR _strDiffuseFileName$3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR _strOpacityFileName$2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IsIn@CGrannyMaterial@@QAE_NPBDPAH@Z ENDP		; CGrannyMaterial::IsIn
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?IsEqual@CGrannyMaterial@@QBE_NPAUgranny_material@@@Z
_TEXT	SEGMENT
_pgrnMaterial$ = 8					; size = 4
?IsEqual@CGrannyMaterial@@QBE_NPAUgranny_material@@@Z PROC ; CGrannyMaterial::IsEqual, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  : 	if (m_pgrnMaterial==pgrnMaterial)

  00003	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00006	3b 45 08	 cmp	 eax, DWORD PTR _pgrnMaterial$[ebp]
  00009	0f 94 c0	 sete	 al

; 136  : 		return true;
; 137  : 
; 138  : 	return false;
; 139  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?IsEqual@CGrannyMaterial@@QBE_NPAUgranny_material@@@Z ENDP ; CGrannyMaterial::IsEqual
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?Copy@CGrannyMaterial@@QAEXAAV1@@Z
_TEXT	SEGMENT
_rkMtrl$ = 8						; size = 4
?Copy@CGrannyMaterial@@QAEXAAV1@@Z PROC			; CGrannyMaterial::Copy, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 54   : 	m_pgrnMaterial = rkMtrl.m_pgrnMaterial;

  00008	8b 7d 08	 mov	 edi, DWORD PTR _rkMtrl$[ebp]
  0000b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0000e	89 46 0c	 mov	 DWORD PTR [esi+12], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 69   : 			m_pObject = pObject;

  00011	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00014	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00017	89 4e 10	 mov	 DWORD PTR [esi+16], ecx

; 70   : 
; 71   : 			if (m_pObject)

  0001a	85 c9		 test	 ecx, ecx
  0001c	74 05		 je	 SHORT $LN6@Copy

; 72   : 				m_pObject->AddReference();

  0001e	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN6@Copy:

; 73   : 
; 74   : 			if (pOldObject)

  00023	85 db		 test	 ebx, ebx
  00025	74 07		 je	 SHORT $LN7@Copy

; 75   : 				pOldObject->Release();

  00027	8b cb		 mov	 ecx, ebx
  00029	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN7@Copy:

; 69   : 			m_pObject = pObject;

  0002e	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00031	8b 5e 14	 mov	 ebx, DWORD PTR [esi+20]
  00034	89 4e 14	 mov	 DWORD PTR [esi+20], ecx

; 70   : 
; 71   : 			if (m_pObject)

  00037	85 c9		 test	 ecx, ecx
  00039	74 05		 je	 SHORT $LN12@Copy

; 72   : 				m_pObject->AddReference();

  0003b	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference
$LN12@Copy:

; 73   : 
; 74   : 			if (pOldObject)

  00040	85 db		 test	 ebx, ebx
  00042	74 07		 je	 SHORT $LN15@Copy

; 75   : 				pOldObject->Release();

  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN15@Copy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp

; 58   : }

  0004b	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0004e	5f		 pop	 edi
  0004f	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?Copy@CGrannyMaterial@@QAEXAAV1@@Z ENDP			; CGrannyMaterial::Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ??1CGrannyMaterial@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGrannyMaterial@@UAE@XZ PROC				; CGrannyMaterial::~CGrannyMaterial, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGrannyMaterial@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 70   : }

  00025	68 00 00 00 00	 push	 OFFSET ??1?$CRef@VCGraphicImage@@@@QAE@XZ ; CRef<CGraphicImage>::~CRef<CGraphicImage>
  0002a	6a 02		 push	 2
  0002c	6a 04		 push	 4
  0002e	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00031	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGrannyMaterial@@6B@
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ??1CReferenceObject@@UAE@XZ ; CReferenceObject::~CReferenceObject
  00044	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00047	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004e	59		 pop	 ecx
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGrannyMaterial@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGrannyMaterial@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGrannyMaterial@@UAE@XZ ENDP				; CGrannyMaterial::~CGrannyMaterial
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ??0CGrannyMaterial@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGrannyMaterial@@QAE@XZ PROC				; CGrannyMaterial::CGrannyMaterial, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGrannyMaterial@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CReferenceObject@@QAE@XZ ; CReferenceObject::CReferenceObject
  0002e	68 00 00 00 00	 push	 OFFSET ??1?$CRef@VCGraphicImage@@@@QAE@XZ ; CRef<CGraphicImage>::~CRef<CGraphicImage>
  00033	68 00 00 00 00	 push	 OFFSET ??0?$CRef@VCGraphicImage@@@@QAE@XZ ; CRef<CGraphicImage>::CRef<CGraphicImage>
  00038	6a 02		 push	 2
  0003a	6a 04		 push	 4
  0003c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	50		 push	 eax
  00047	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGrannyMaterial@@6B@
  0004d	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 62   : 	m_bTwoSideRender = false;
; 63   : 	m_dwLastCullRenderStateForTwoSideRendering = D3DCULL_CW;
; 64   : 
; 65   : 	Initialize();

  00052	8b ce		 mov	 ecx, esi
  00054	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00058	c6 46 24 00	 mov	 BYTE PTR [esi+36], 0
  0005c	c7 46 28 02 00
	00 00		 mov	 DWORD PTR [esi+40], 2
  00063	e8 00 00 00 00	 call	 ?Initialize@CGrannyMaterial@@IAEXXZ ; CGrannyMaterial::Initialize

; 66   : }

  00068	8b c6		 mov	 eax, esi
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	5e		 pop	 esi
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGrannyMaterial@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CReferenceObject@@UAE@XZ ; CReferenceObject::~CReferenceObject
__unwindfunclet$??0CGrannyMaterial@@QAE@XZ$1:
  00008	68 00 00 00 00	 push	 OFFSET ??1?$CRef@VCGraphicImage@@@@QAE@XZ ; CRef<CGraphicImage>::~CRef<CGraphicImage>
  0000d	6a 02		 push	 2
  0000f	6a 04		 push	 4
  00011	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00014	83 c0 10	 add	 eax, 16			; 00000010H
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0001d	c3		 ret	 0
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0CGrannyMaterial@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGrannyMaterial@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGrannyMaterial@@QAE@XZ ENDP				; CGrannyMaterial::CGrannyMaterial
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z
_TEXT	SEGMENT
_fAddX$ = 8						; size = 4
_fAddY$ = 12						; size = 4
_fAddZ$ = 16						; size = 4
?TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z PROC	; CGrannyMaterial::TranslateSpecularMatrix, COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 18   : 	static float SPECULAR_TRANSLATE_MAX = 1000000.0f;
; 19   : 
; 20   : 	ms_v3SpecularTrans.x+=fAddX;

  00003	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A

; 21   : 	ms_v3SpecularTrans.y+=fAddY;

  0000b	f3 0f 10 0d 04
	00 00 00	 movss	 xmm1, DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+4

; 22   : 	ms_v3SpecularTrans.z+=fAddZ;

  00013	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+8
  0001b	f3 0f 58 55 08	 addss	 xmm2, DWORD PTR _fAddX$[ebp]
  00020	f3 0f 58 4d 0c	 addss	 xmm1, DWORD PTR _fAddY$[ebp]
  00025	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _fAddZ$[ebp]
  0002a	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR ?SPECULAR_TRANSLATE_MAX@?1??TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z@4MA
  00032	0f 2f d3	 comiss	 xmm2, xmm3
  00035	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A, xmm2
  0003d	f3 0f 11 0d 04
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+4, xmm1
  00045	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+8, xmm0

; 23   : 
; 24   : 	if (ms_v3SpecularTrans.x>=SPECULAR_TRANSLATE_MAX)

  0004d	72 0b		 jb	 SHORT $LN2@TranslateS

; 25   : 		ms_v3SpecularTrans.x=0.0f;

  0004f	0f 57 d2	 xorps	 xmm2, xmm2
  00052	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A, xmm2
$LN2@TranslateS:

; 26   : 
; 27   : 	if (ms_v3SpecularTrans.y>=SPECULAR_TRANSLATE_MAX)

  0005a	0f 2f cb	 comiss	 xmm1, xmm3
  0005d	72 0b		 jb	 SHORT $LN3@TranslateS

; 28   : 		ms_v3SpecularTrans.y=0.0f;

  0005f	0f 57 c9	 xorps	 xmm1, xmm1
  00062	f3 0f 11 0d 04
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+4, xmm1
$LN3@TranslateS:

; 29   : 
; 30   : 	if (ms_v3SpecularTrans.z>=SPECULAR_TRANSLATE_MAX)

  0006a	0f 2f c3	 comiss	 xmm0, xmm3
  0006d	72 0b		 jb	 SHORT $LN4@TranslateS

; 31   : 		ms_v3SpecularTrans.z=0.0f;

  0006f	0f 57 c0	 xorps	 xmm0, xmm0
  00072	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?ms_v3SpecularTrans@CGrannyMaterial@@0UD3DXVECTOR3@@A+8, xmm0
$LN4@TranslateS:

; 32   : 
; 33   : 	D3DXMatrixTranslation(&ms_matSpecular,

  0007a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0007d	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00083	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00089	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  0008e	68 00 00 00 00	 push	 OFFSET ?ms_matSpecular@CGrannyMaterial@@0UD3DXMATRIX@@A ; CGrannyMaterial::ms_matSpecular
  00093	e8 00 00 00 00	 call	 _D3DXMatrixTranslation@16

; 34   : 		ms_v3SpecularTrans.x,
; 35   : 		ms_v3SpecularTrans.y,
; 36   : 		ms_v3SpecularTrans.z
; 37   : 	);
; 38   : }

  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
?TranslateSpecularMatrix@CGrannyMaterial@@SAXMMM@Z ENDP	; CGrannyMaterial::TranslateSpecularMatrix
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?DestroySphereMap@CGrannyMaterial@@SAXXZ
_TEXT	SEGMENT
?DestroySphereMap@CGrannyMaterial@@SAXXZ PROC		; CGrannyMaterial::DestroySphereMap, COMDAT

; 382  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 383  : 	for (UINT uMapIndex=0; uMapIndex<SPHEREMAP_NUM; ++uMapIndex)

  00002	be 00 00 00 00	 mov	 esi, OFFSET ?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
  00007	bf 0a 00 00 00	 mov	 edi, 10			; 0000000aH
  0000c	0f 1f 40 00	 npad	 4
$LL4@DestroySph:

; 384  : 		ms_akSphereMapInstance[uMapIndex].Destroy();

  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?Destroy@CGraphicImageInstance@@QAEXXZ ; CGraphicImageInstance::Destroy
  00017	83 c6 20	 add	 esi, 32			; 00000020H
  0001a	83 ef 01	 sub	 edi, 1
  0001d	75 f1		 jne	 SHORT $LL4@DestroySph

; 385  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	c3		 ret	 0
?DestroySphereMap@CGrannyMaterial@@SAXXZ ENDP		; CGrannyMaterial::DestroySphereMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterGrnLib\Material.cpp
;	COMDAT ?CreateSphereMap@CGrannyMaterial@@SAXIPBD@Z
_TEXT	SEGMENT
_uMapIndex$ = 8						; size = 4
_c_szSphereMapImageFileName$ = 12			; size = 4
?CreateSphereMap@CGrannyMaterial@@SAXIPBD@Z PROC	; CGrannyMaterial::CreateSphereMap, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 376  : 	CResourceManager& rkResMgr = CResourceManager::Instance();
; 377  : 	CGraphicImage * pImage = (CGraphicImage *)rkResMgr.GetResourcePointer(c_szSphereMapImageFileName);

  00003	ff 75 0c	 push	 DWORD PTR _c_szSphereMapImageFileName$[ebp]
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  0000c	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer

; 378  : 	ms_akSphereMapInstance[uMapIndex].SetImagePointer(pImage);

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _uMapIndex$[ebp]
  00014	c1 e1 05	 shl	 ecx, 5
  00017	50		 push	 eax
  00018	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?ms_akSphereMapInstance@CGrannyMaterial@@0PAVCGraphicImageInstance@@A ; CGrannyMaterial::ms_akSphereMapInstance
  0001e	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer

; 379  : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?CreateSphereMap@CGrannyMaterial@@SAXIPBD@Z ENDP	; CGrannyMaterial::CreateSphereMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
;	COMDAT ??1?$CRef@VCGraphicImage@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CRef@VCGraphicImage@@@@QAE@XZ PROC			; CRef<CGraphicImage>::~CRef<CGraphicImage>, COMDAT
; _this$ = ecx

; 37   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CRef@VCGraphicImage@@@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 53   : 			if (m_pObject)

  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0b		 je	 SHORT $LN4@CRef

; 54   : 			{
; 55   : 				m_pObject->Release();

  0002b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@CRef:

; 38   : 			Clear();
; 39   : 		}

  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5e		 pop	 esi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
  00046	cc		 int	 3
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CRef@VCGraphicImage@@@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CRef@VCGraphicImage@@@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CRef@VCGraphicImage@@@@QAE@XZ ENDP			; CRef<CGraphicImage>::~CRef<CGraphicImage>
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
;	COMDAT ??0?$CRef@VCGraphicImage@@@@QAE@XZ
_TEXT	SEGMENT
??0?$CRef@VCGraphicImage@@@@QAE@XZ PROC			; CRef<CGraphicImage>::CRef<CGraphicImage>, COMDAT
; _this$ = ecx

; 20   : 		CRef() : m_pObject(NULL)

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 22   : 		}

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0?$CRef@VCGraphicImage@@@@QAE@XZ ENDP			; CRef<CGraphicImage>::CRef<CGraphicImage>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2169 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
