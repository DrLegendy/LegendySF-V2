; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterPack\md5.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MD5Init
PUBLIC	_MD5Update
PUBLIC	_MD5Final
PUBLIC	_MD5Transform
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterPack\md5.c
;	COMDAT _MD5Transform
_TEXT	SEGMENT
_d$8$ = -76						; size = 4
_d$5$ = -76						; size = 4
_a$11$ = -76						; size = 4
_b$8$ = -72						; size = 4
_b$4$ = -72						; size = 4
_c$4$ = -68						; size = 4
_a$4$ = -64						; size = 4
tv2323 = -60						; size = 4
tv2325 = -56						; size = 4
tv2321 = -52						; size = 4
tv2326 = -48						; size = 4
tv2312 = -44						; size = 4
tv2315 = -40						; size = 4
tv2313 = -36						; size = 4
tv2320 = -32						; size = 4
tv2311 = -28						; size = 4
tv2318 = -24						; size = 4
tv2316 = -20						; size = 4
tv2314 = -16						; size = 4
tv2319 = -12						; size = 4
tv2310 = -8						; size = 4
tv2317 = -4						; size = 4
_buf$ = 8						; size = 4
_b$16$ = 12						; size = 4
tv2309 = 12						; size = 4
_in$ = 12						; size = 4
_MD5Transform PROC					; COMDAT

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH

; 360  : 
; 361  :   UINT4 a = buf[0], b = buf[1], c = buf[2], d = buf[3];

  00006	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]

; 362  : 
; 363  : 
; 364  : 
; 365  :   /* Round 1 */
; 366  : 
; 367  : #define S11 7
; 368  : 
; 369  : #define S12 12
; 370  : 
; 371  : #define S13 17
; 372  : 
; 373  : #define S14 22
; 374  : 
; 375  :   FF ( a, b, c, d, in[ 0], S11, 3614090360); /* 1 */

  00009	8b 45 08	 mov	 eax, DWORD PTR _buf$[ebp]
  0000c	53		 push	 ebx
  0000d	8b 5d 0c	 mov	 ebx, DWORD PTR _in$[ebp]
  00010	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00013	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00016	f7 d1		 not	 ecx
  00018	56		 push	 esi
  00019	8b 32		 mov	 esi, DWORD PTR [edx]
  0001b	57		 push	 edi
  0001c	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
  0001f	23 cf		 and	 ecx, edi
  00021	8b 13		 mov	 edx, DWORD PTR [ebx]
  00023	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  00026	89 55 d0	 mov	 DWORD PTR tv2326[ebp], edx
  00029	23 43 04	 and	 eax, DWORD PTR [ebx+4]
  0002c	0b c8		 or	 ecx, eax
  0002e	03 ca		 add	 ecx, edx
  00030	8d 96 78 a4 6a
	d7		 lea	 edx, DWORD PTR [esi-680876936]
  00036	03 d1		 add	 edx, ecx
  00038	8b cb		 mov	 ecx, ebx

; 376  : 
; 377  :   FF ( d, a, b, c, in[ 1], S12, 3905402710); /* 2 */

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR _in$[ebp]
  0003d	c1 c2 07	 rol	 edx, 7
  00040	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00043	03 d0		 add	 edx, eax
  00045	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00048	23 c2		 and	 eax, edx
  0004a	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  0004d	8b ca		 mov	 ecx, edx
  0004f	f7 d1		 not	 ecx
  00051	89 75 c8	 mov	 DWORD PTR tv2325[ebp], esi
  00054	23 4b 08	 and	 ecx, DWORD PTR [ebx+8]

; 378  : 
; 379  :   FF ( c, d, a, b, in[ 2], S13,  606105819); /* 3 */

  00057	8b 5d 0c	 mov	 ebx, DWORD PTR _in$[ebp]
  0005a	0b c8		 or	 ecx, eax
  0005c	03 ce		 add	 ecx, esi
  0005e	8d b7 56 b7 c7
	e8		 lea	 esi, DWORD PTR [edi-389564586]
  00064	03 f1		 add	 esi, ecx
  00066	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00069	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  0006c	03 f2		 add	 esi, edx
  0006e	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  00071	8b ce		 mov	 ecx, esi
  00073	f7 d1		 not	 ecx
  00075	89 7d c4	 mov	 DWORD PTR tv2323[ebp], edi
  00078	8b c6		 mov	 eax, esi
  0007a	23 c2		 and	 eax, edx
  0007c	23 4b 04	 and	 ecx, DWORD PTR [ebx+4]
  0007f	0b c8		 or	 ecx, eax

; 380  : 
; 381  :   FF ( b, c, d, a, in[ 3], S14, 3250441966); /* 4 */

  00081	8b c6		 mov	 eax, esi
  00083	03 cf		 add	 ecx, edi
  00085	8b fb		 mov	 edi, ebx
  00087	8b 5d 0c	 mov	 ebx, DWORD PTR _in$[ebp]
  0008a	8b 7f 08	 mov	 edi, DWORD PTR [edi+8]
  0008d	8b 5b 0c	 mov	 ebx, DWORD PTR [ebx+12]
  00090	81 c7 db 70 20
	24		 add	 edi, 606105819		; 242070dbH
  00096	03 f9		 add	 edi, ecx
  00098	89 5d cc	 mov	 DWORD PTR tv2321[ebp], ebx
  0009b	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  0009e	03 fe		 add	 edi, esi
  000a0	23 c7		 and	 eax, edi
  000a2	8b cf		 mov	 ecx, edi
  000a4	f7 d1		 not	 ecx
  000a6	23 ca		 and	 ecx, edx
  000a8	0b c8		 or	 ecx, eax

; 382  : 
; 383  :   FF ( a, b, c, d, in[ 4], S11, 4118548399); /* 5 */

  000aa	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000ad	03 cb		 add	 ecx, ebx
  000af	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  000b2	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000b5	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  000b8	81 c3 ee ce bd
	c1		 add	 ebx, -1044525330	; c1bdceeeH
  000be	89 45 e0	 mov	 DWORD PTR tv2320[ebp], eax
  000c1	03 d9		 add	 ebx, ecx
  000c3	8b c7		 mov	 eax, edi
  000c5	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  000c8	03 df		 add	 ebx, edi
  000ca	8b cb		 mov	 ecx, ebx
  000cc	23 c3		 and	 eax, ebx
  000ce	f7 d1		 not	 ecx
  000d0	23 ce		 and	 ecx, esi
  000d2	0b c8		 or	 ecx, eax
  000d4	81 c1 af 0f 7c
	f5		 add	 ecx, -176418897		; f57c0fafH
  000da	03 4d e0	 add	 ecx, DWORD PTR tv2320[ebp]
  000dd	03 d1		 add	 edx, ecx

; 384  : 
; 385  :   FF ( d, a, b, c, in[ 5], S12, 1200080426); /* 6 */

  000df	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000e2	c1 c2 07	 rol	 edx, 7
  000e5	03 d3		 add	 edx, ebx
  000e7	8b ca		 mov	 ecx, edx
  000e9	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000ec	f7 d1		 not	 ecx
  000ee	23 cf		 and	 ecx, edi
  000f0	89 45 f4	 mov	 DWORD PTR tv2319[ebp], eax
  000f3	8b c3		 mov	 eax, ebx
  000f5	23 c2		 and	 eax, edx
  000f7	0b c8		 or	 ecx, eax

; 386  : 
; 387  :   FF ( c, d, a, b, in[ 6], S13, 2821735955); /* 7 */

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000fc	81 c1 2a c6 87
	47		 add	 ecx, 1200080426		; 4787c62aH
  00102	03 4d f4	 add	 ecx, DWORD PTR tv2319[ebp]
  00105	03 f1		 add	 esi, ecx
  00107	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0010a	89 45 e8	 mov	 DWORD PTR tv2318[ebp], eax
  0010d	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00110	03 f2		 add	 esi, edx
  00112	8b ce		 mov	 ecx, esi
  00114	8b c6		 mov	 eax, esi
  00116	f7 d1		 not	 ecx
  00118	23 c2		 and	 eax, edx
  0011a	23 cb		 and	 ecx, ebx
  0011c	0b c8		 or	 ecx, eax

; 388  : 
; 389  :   FF ( b, c, d, a, in[ 7], S14, 4249261313); /* 8 */

  0011e	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00121	81 c1 13 46 30
	a8		 add	 ecx, -1473231341	; a8304613H
  00127	03 4d e8	 add	 ecx, DWORD PTR tv2318[ebp]
  0012a	03 f9		 add	 edi, ecx
  0012c	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0012f	89 45 fc	 mov	 DWORD PTR tv2317[ebp], eax
  00132	8b c6		 mov	 eax, esi
  00134	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  00137	03 fe		 add	 edi, esi
  00139	23 c7		 and	 eax, edi
  0013b	8b cf		 mov	 ecx, edi
  0013d	f7 d1		 not	 ecx
  0013f	23 ca		 and	 ecx, edx
  00141	0b c8		 or	 ecx, eax

; 390  : 
; 391  :   FF ( a, b, c, d, in[ 8], S11, 1770035416); /* 9 */

  00143	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00146	81 c1 01 95 46
	fd		 add	 ecx, -45705983		; fd469501H
  0014c	03 4d fc	 add	 ecx, DWORD PTR tv2317[ebp]
  0014f	03 d9		 add	 ebx, ecx
  00151	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00154	89 45 ec	 mov	 DWORD PTR tv2316[ebp], eax
  00157	8b c7		 mov	 eax, edi
  00159	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  0015c	03 df		 add	 ebx, edi
  0015e	23 c3		 and	 eax, ebx
  00160	8b cb		 mov	 ecx, ebx
  00162	f7 d1		 not	 ecx
  00164	23 ce		 and	 ecx, esi
  00166	0b c8		 or	 ecx, eax

; 392  : 
; 393  :   FF ( d, a, b, c, in[ 9], S12, 2336552879); /* 10 */

  00168	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  0016b	81 c1 d8 98 80
	69		 add	 ecx, 1770035416		; 698098d8H
  00171	03 4d ec	 add	 ecx, DWORD PTR tv2316[ebp]
  00174	03 d1		 add	 edx, ecx
  00176	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00179	c1 c2 07	 rol	 edx, 7
  0017c	03 d3		 add	 edx, ebx
  0017e	89 45 d8	 mov	 DWORD PTR tv2315[ebp], eax
  00181	8b ca		 mov	 ecx, edx
  00183	8b c3		 mov	 eax, ebx
  00185	f7 d1		 not	 ecx
  00187	23 c2		 and	 eax, edx
  00189	23 cf		 and	 ecx, edi
  0018b	0b c8		 or	 ecx, eax

; 394  : 
; 395  :   FF ( c, d, a, b, in[10], S13, 4294925233); /* 11 */

  0018d	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00190	81 c1 af f7 44
	8b		 add	 ecx, -1958414417	; 8b44f7afH
  00196	03 4d d8	 add	 ecx, DWORD PTR tv2315[ebp]
  00199	03 f1		 add	 esi, ecx
  0019b	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  0019e	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  001a1	03 f2		 add	 esi, edx
  001a3	89 45 f0	 mov	 DWORD PTR tv2314[ebp], eax
  001a6	8b ce		 mov	 ecx, esi
  001a8	8b c6		 mov	 eax, esi
  001aa	f7 d1		 not	 ecx
  001ac	23 cb		 and	 ecx, ebx
  001ae	23 c2		 and	 eax, edx
  001b0	0b c8		 or	 ecx, eax

; 396  : 
; 397  :   FF ( b, c, d, a, in[11], S14, 2304563134); /* 12 */

  001b2	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  001b5	81 c1 b1 5b ff
	ff		 add	 ecx, -42063		; ffff5bb1H
  001bb	03 4d f0	 add	 ecx, DWORD PTR tv2314[ebp]
  001be	03 f9		 add	 edi, ecx
  001c0	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  001c3	89 45 dc	 mov	 DWORD PTR tv2313[ebp], eax
  001c6	8b c6		 mov	 eax, esi
  001c8	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  001cb	03 fe		 add	 edi, esi
  001cd	23 c7		 and	 eax, edi
  001cf	89 7d bc	 mov	 DWORD PTR _c$4$[ebp], edi
  001d2	8b cf		 mov	 ecx, edi
  001d4	f7 d1		 not	 ecx
  001d6	23 ca		 and	 ecx, edx
  001d8	0b c8		 or	 ecx, eax

; 398  : 
; 399  :   FF ( a, b, c, d, in[12], S11, 1804603682); /* 13 */

  001da	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  001dd	81 c1 be d7 5c
	89		 add	 ecx, -1990404162	; 895cd7beH
  001e3	03 4d dc	 add	 ecx, DWORD PTR tv2313[ebp]
  001e6	03 d9		 add	 ebx, ecx
  001e8	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  001eb	89 45 d4	 mov	 DWORD PTR tv2312[ebp], eax
  001ee	8b c7		 mov	 eax, edi
  001f0	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  001f3	03 df		 add	 ebx, edi
  001f5	23 c3		 and	 eax, ebx
  001f7	89 5d b8	 mov	 DWORD PTR _b$4$[ebp], ebx
  001fa	8b cb		 mov	 ecx, ebx
  001fc	f7 d1		 not	 ecx
  001fe	23 ce		 and	 ecx, esi
  00200	0b c8		 or	 ecx, eax

; 400  : 
; 401  :   FF ( d, a, b, c, in[13], S12, 4254626195); /* 14 */

  00202	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00205	81 c1 22 11 90
	6b		 add	 ecx, 1804603682		; 6b901122H
  0020b	03 4d d4	 add	 ecx, DWORD PTR tv2312[ebp]
  0020e	03 d1		 add	 edx, ecx
  00210	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  00213	89 45 e4	 mov	 DWORD PTR tv2311[ebp], eax
  00216	8b c3		 mov	 eax, ebx
  00218	c1 c2 07	 rol	 edx, 7
  0021b	03 d3		 add	 edx, ebx
  0021d	23 c2		 and	 eax, edx
  0021f	89 55 c0	 mov	 DWORD PTR _a$4$[ebp], edx
  00222	8b ca		 mov	 ecx, edx
  00224	f7 d1		 not	 ecx
  00226	23 cf		 and	 ecx, edi
  00228	8d be 93 71 98
	fd		 lea	 edi, DWORD PTR [esi-40341101]
  0022e	0b c8		 or	 ecx, eax

; 402  : 
; 403  :   FF ( c, d, a, b, in[14], S13, 2792965006); /* 15 */

  00230	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00233	03 4d e4	 add	 ecx, DWORD PTR tv2311[ebp]
  00236	03 f9		 add	 edi, ecx
  00238	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  0023b	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0023e	03 fa		 add	 edi, edx
  00240	89 45 f8	 mov	 DWORD PTR tv2310[ebp], eax
  00243	8b f7		 mov	 esi, edi
  00245	f7 d6		 not	 esi
  00247	89 7d b4	 mov	 DWORD PTR _d$5$[ebp], edi
  0024a	8b c7		 mov	 eax, edi
  0024c	8b ce		 mov	 ecx, esi
  0024e	23 cb		 and	 ecx, ebx
  00250	23 c2		 and	 eax, edx
  00252	8b 5d bc	 mov	 ebx, DWORD PTR _c$4$[ebp]
  00255	0b c8		 or	 ecx, eax
  00257	03 4d f8	 add	 ecx, DWORD PTR tv2310[ebp]
  0025a	81 c3 8e 43 79
	a6		 add	 ebx, -1502002290	; a679438eH

; 404  : 
; 405  :   FF ( b, c, d, a, in[15], S14, 1236535329); /* 16 */

  00260	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00263	03 d9		 add	 ebx, ecx
  00265	c1 cb 0f	 ror	 ebx, 15			; 0000000fH
  00268	03 df		 add	 ebx, edi
  0026a	8b d3		 mov	 edx, ebx
  0026c	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  0026f	f7 d2		 not	 edx
  00271	89 45 0c	 mov	 DWORD PTR tv2309[ebp], eax
  00274	8b ca		 mov	 ecx, edx
  00276	23 4d c0	 and	 ecx, DWORD PTR _a$4$[ebp]
  00279	8b c7		 mov	 eax, edi
  0027b	8b 7d b8	 mov	 edi, DWORD PTR _b$4$[ebp]
  0027e	23 c3		 and	 eax, ebx
  00280	0b c8		 or	 ecx, eax
  00282	03 4d 0c	 add	 ecx, DWORD PTR tv2309[ebp]
  00285	81 c7 21 08 b4
	49		 add	 edi, 1236535329		; 49b40821H

; 406  : 
; 407  : 
; 408  : 
; 409  :   /* Round 2 */
; 410  : 
; 411  : #define S21 5
; 412  : 
; 413  : #define S22 9
; 414  : 
; 415  : #define S23 14
; 416  : 
; 417  : #define S24 20
; 418  : 
; 419  :   GG ( a, b, c, d, in[ 1], S21, 4129170786); /* 17 */

  0028b	23 f3		 and	 esi, ebx
  0028d	03 f9		 add	 edi, ecx
  0028f	8b 4d b4	 mov	 ecx, DWORD PTR _d$5$[ebp]
  00292	8b c1		 mov	 eax, ecx
  00294	c1 cf 0a	 ror	 edi, 10			; 0000000aH

; 420  : 
; 421  :   GG ( d, a, b, c, in[ 6], S22, 3225465664); /* 18 */

  00297	81 c1 40 b3 40
	c0		 add	 ecx, -1069501632	; c040b340H
  0029d	03 fb		 add	 edi, ebx
  0029f	23 c7		 and	 eax, edi
  002a1	23 d7		 and	 edx, edi
  002a3	0b f0		 or	 esi, eax
  002a5	8b 45 c0	 mov	 eax, DWORD PTR _a$4$[ebp]
  002a8	03 75 c8	 add	 esi, DWORD PTR tv2325[ebp]
  002ab	05 62 25 1e f6	 add	 eax, -165796510		; f61e2562H
  002b0	03 f0		 add	 esi, eax
  002b2	8b c3		 mov	 eax, ebx
  002b4	c1 c6 05	 rol	 esi, 5
  002b7	03 f7		 add	 esi, edi
  002b9	23 c6		 and	 eax, esi
  002bb	0b d0		 or	 edx, eax
  002bd	03 55 e8	 add	 edx, DWORD PTR tv2318[ebp]
  002c0	03 d1		 add	 edx, ecx

; 422  : 
; 423  :   GG ( c, d, a, b, in[11], S23,  643717713); /* 19 */

  002c2	8b cf		 mov	 ecx, edi
  002c4	f7 d1		 not	 ecx
  002c6	c1 c2 09	 rol	 edx, 9
  002c9	23 ce		 and	 ecx, esi
  002cb	03 d6		 add	 edx, esi
  002cd	8b c2		 mov	 eax, edx
  002cf	23 c7		 and	 eax, edi
  002d1	0b c8		 or	 ecx, eax
  002d3	81 c1 51 5a 5e
	26		 add	 ecx, 643717713		; 265e5a51H
  002d9	03 4d dc	 add	 ecx, DWORD PTR tv2313[ebp]
  002dc	03 d9		 add	 ebx, ecx

; 424  : 
; 425  :   GG ( b, c, d, a, in[ 0], S24, 3921069994); /* 20 */

  002de	8b ce		 mov	 ecx, esi
  002e0	f7 d1		 not	 ecx
  002e2	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  002e5	23 ca		 and	 ecx, edx
  002e7	03 da		 add	 ebx, edx
  002e9	8b c3		 mov	 eax, ebx
  002eb	23 c6		 and	 eax, esi
  002ed	0b c8		 or	 ecx, eax

; 426  : 
; 427  :   GG ( a, b, c, d, in[ 5], S21, 3593408605); /* 21 */

  002ef	8b c2		 mov	 eax, edx
  002f1	81 c1 aa c7 b6
	e9		 add	 ecx, -373897302		; e9b6c7aaH
  002f7	03 4d d0	 add	 ecx, DWORD PTR tv2326[ebp]
  002fa	03 f9		 add	 edi, ecx
  002fc	8b ca		 mov	 ecx, edx
  002fe	f7 d1		 not	 ecx
  00300	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  00303	23 cb		 and	 ecx, ebx
  00305	03 fb		 add	 edi, ebx
  00307	23 c7		 and	 eax, edi
  00309	0b c8		 or	 ecx, eax

; 428  : 
; 429  :   GG ( d, a, b, c, in[10], S22,   38016083); /* 22 */

  0030b	8b c3		 mov	 eax, ebx
  0030d	81 c1 5d 10 2f
	d6		 add	 ecx, -701558691		; d62f105dH
  00313	03 4d f4	 add	 ecx, DWORD PTR tv2319[ebp]
  00316	03 f1		 add	 esi, ecx
  00318	8b cb		 mov	 ecx, ebx
  0031a	f7 d1		 not	 ecx
  0031c	c1 c6 05	 rol	 esi, 5
  0031f	23 cf		 and	 ecx, edi
  00321	03 f7		 add	 esi, edi
  00323	23 c6		 and	 eax, esi
  00325	0b c8		 or	 ecx, eax
  00327	81 c1 53 14 44
	02		 add	 ecx, 38016083		; 02441453H
  0032d	03 4d f0	 add	 ecx, DWORD PTR tv2314[ebp]
  00330	03 d1		 add	 edx, ecx

; 430  : 
; 431  :   GG ( c, d, a, b, in[15], S23, 3634488961); /* 23 */

  00332	8b cf		 mov	 ecx, edi
  00334	c1 c2 09	 rol	 edx, 9
  00337	f7 d1		 not	 ecx
  00339	03 d6		 add	 edx, esi
  0033b	23 ce		 and	 ecx, esi
  0033d	8b c2		 mov	 eax, edx
  0033f	23 c7		 and	 eax, edi
  00341	0b c8		 or	 ecx, eax
  00343	81 c1 81 e6 a1
	d8		 add	 ecx, -660478335		; d8a1e681H
  00349	03 4d 0c	 add	 ecx, DWORD PTR tv2309[ebp]
  0034c	03 d9		 add	 ebx, ecx

; 432  : 
; 433  :   GG ( b, c, d, a, in[ 4], S24, 3889429448); /* 24 */

  0034e	8b ce		 mov	 ecx, esi
  00350	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  00353	f7 d1		 not	 ecx
  00355	03 da		 add	 ebx, edx
  00357	23 ca		 and	 ecx, edx
  00359	8b c3		 mov	 eax, ebx
  0035b	23 c6		 and	 eax, esi
  0035d	0b c8		 or	 ecx, eax

; 434  : 
; 435  :   GG ( a, b, c, d, in[ 9], S21,  568446438); /* 25 */

  0035f	8b c2		 mov	 eax, edx
  00361	81 c1 c8 fb d3
	e7		 add	 ecx, -405537848		; e7d3fbc8H
  00367	03 4d e0	 add	 ecx, DWORD PTR tv2320[ebp]
  0036a	03 f9		 add	 edi, ecx
  0036c	8b ca		 mov	 ecx, edx
  0036e	f7 d1		 not	 ecx
  00370	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  00373	23 cb		 and	 ecx, ebx
  00375	03 fb		 add	 edi, ebx
  00377	23 c7		 and	 eax, edi
  00379	0b c8		 or	 ecx, eax

; 436  : 
; 437  :   GG ( d, a, b, c, in[14], S22, 3275163606); /* 26 */

  0037b	8b c3		 mov	 eax, ebx
  0037d	81 c1 e6 cd e1
	21		 add	 ecx, 568446438		; 21e1cde6H
  00383	03 4d d8	 add	 ecx, DWORD PTR tv2315[ebp]
  00386	03 f1		 add	 esi, ecx
  00388	8b cb		 mov	 ecx, ebx
  0038a	f7 d1		 not	 ecx
  0038c	c1 c6 05	 rol	 esi, 5
  0038f	23 cf		 and	 ecx, edi
  00391	03 f7		 add	 esi, edi
  00393	23 c6		 and	 eax, esi
  00395	0b c8		 or	 ecx, eax
  00397	81 c1 d6 07 37
	c3		 add	 ecx, -1019803690	; c33707d6H
  0039d	03 4d f8	 add	 ecx, DWORD PTR tv2310[ebp]
  003a0	03 d1		 add	 edx, ecx

; 438  : 
; 439  :   GG ( c, d, a, b, in[ 3], S23, 4107603335); /* 27 */

  003a2	8b cf		 mov	 ecx, edi
  003a4	f7 d1		 not	 ecx
  003a6	c1 c2 09	 rol	 edx, 9
  003a9	23 ce		 and	 ecx, esi
  003ab	03 d6		 add	 edx, esi
  003ad	8b c2		 mov	 eax, edx
  003af	89 55 b4	 mov	 DWORD PTR _d$8$[ebp], edx
  003b2	23 c7		 and	 eax, edi
  003b4	0b c8		 or	 ecx, eax
  003b6	81 c1 87 0d d5
	f4		 add	 ecx, -187363961		; f4d50d87H
  003bc	03 4d cc	 add	 ecx, DWORD PTR tv2321[ebp]
  003bf	03 d9		 add	 ebx, ecx

; 440  : 
; 441  :   GG ( b, c, d, a, in[ 8], S24, 1163531501); /* 28 */

  003c1	8b ce		 mov	 ecx, esi
  003c3	f7 d1		 not	 ecx
  003c5	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  003c8	23 ca		 and	 ecx, edx
  003ca	03 da		 add	 ebx, edx
  003cc	8b c3		 mov	 eax, ebx
  003ce	23 c6		 and	 eax, esi
  003d0	0b c8		 or	 ecx, eax

; 442  : 
; 443  :   GG ( a, b, c, d, in[13], S21, 2850285829); /* 29 */

  003d2	8b c2		 mov	 eax, edx
  003d4	81 c1 ed 14 5a
	45		 add	 ecx, 1163531501		; 455a14edH
  003da	03 4d ec	 add	 ecx, DWORD PTR tv2316[ebp]
  003dd	03 f9		 add	 edi, ecx
  003df	8b ca		 mov	 ecx, edx
  003e1	f7 d1		 not	 ecx
  003e3	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  003e6	23 cb		 and	 ecx, ebx
  003e8	8d 96 05 e9 e3
	a9		 lea	 edx, DWORD PTR [esi-1444681467]

; 444  : 
; 445  :   GG ( d, a, b, c, in[ 2], S22, 4243563512); /* 30 */

  003ee	8b 75 b4	 mov	 esi, DWORD PTR _d$8$[ebp]
  003f1	03 fb		 add	 edi, ebx
  003f3	23 c7		 and	 eax, edi
  003f5	89 7d b8	 mov	 DWORD PTR _b$8$[ebp], edi
  003f8	0b c8		 or	 ecx, eax
  003fa	81 c6 f8 a3 ef
	fc		 add	 esi, -51403784		; fcefa3f8H
  00400	03 4d e4	 add	 ecx, DWORD PTR tv2311[ebp]
  00403	8b c3		 mov	 eax, ebx
  00405	03 d1		 add	 edx, ecx
  00407	8b cb		 mov	 ecx, ebx
  00409	f7 d1		 not	 ecx
  0040b	c1 c2 05	 rol	 edx, 5
  0040e	03 d7		 add	 edx, edi
  00410	23 cf		 and	 ecx, edi
  00412	23 c2		 and	 eax, edx
  00414	0b c8		 or	 ecx, eax
  00416	03 4d c4	 add	 ecx, DWORD PTR tv2323[ebp]
  00419	03 f1		 add	 esi, ecx

; 446  : 
; 447  :   GG ( c, d, a, b, in[ 7], S23, 1735328473); /* 31 */

  0041b	8b cf		 mov	 ecx, edi
  0041d	c1 c6 09	 rol	 esi, 9
  00420	f7 d1		 not	 ecx
  00422	03 f2		 add	 esi, edx
  00424	23 ca		 and	 ecx, edx
  00426	8b c6		 mov	 eax, esi
  00428	23 c7		 and	 eax, edi
  0042a	8d bb d9 02 6f
	67		 lea	 edi, DWORD PTR [ebx+1735328473]
  00430	0b c8		 or	 ecx, eax

; 448  : 
; 449  :   GG ( b, c, d, a, in[12], S24, 2368359562); /* 32 */

  00432	8b 5d b8	 mov	 ebx, DWORD PTR _b$8$[ebp]
  00435	03 4d fc	 add	 ecx, DWORD PTR tv2317[ebp]
  00438	81 c3 8a 4c 2a
	8d		 add	 ebx, -1926607734	; 8d2a4c8aH
  0043e	03 f9		 add	 edi, ecx
  00440	8b ca		 mov	 ecx, edx
  00442	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00445	f7 d1		 not	 ecx
  00447	03 fe		 add	 edi, esi
  00449	23 ce		 and	 ecx, esi
  0044b	8b c7		 mov	 eax, edi
  0044d	23 c2		 and	 eax, edx
  0044f	0b c8		 or	 ecx, eax

; 450  : 
; 451  : 
; 452  : 
; 453  :   /* Round 3 */
; 454  : 
; 455  : #define S31 4
; 456  : 
; 457  : #define S32 11
; 458  : 
; 459  : #define S33 16
; 460  : 
; 461  : #define S34 23
; 462  : 
; 463  :   HH ( a, b, c, d, in[ 5], S31, 4294588738); /* 33 */

  00451	8b c6		 mov	 eax, esi
  00453	03 4d d4	 add	 ecx, DWORD PTR tv2312[ebp]
  00456	33 c7		 xor	 eax, edi
  00458	03 d9		 add	 ebx, ecx
  0045a	c1 cb 0c	 ror	 ebx, 12			; 0000000cH
  0045d	03 df		 add	 ebx, edi
  0045f	33 c3		 xor	 eax, ebx
  00461	05 42 39 fa ff	 add	 eax, -378558		; fffa3942H
  00466	03 45 f4	 add	 eax, DWORD PTR tv2319[ebp]
  00469	03 d0		 add	 edx, eax

; 464  : 
; 465  :   HH ( d, a, b, c, in[ 8], S32, 2272392833); /* 34 */

  0046b	8b c7		 mov	 eax, edi
  0046d	33 c3		 xor	 eax, ebx
  0046f	c1 c2 04	 rol	 edx, 4
  00472	03 d3		 add	 edx, ebx
  00474	33 c2		 xor	 eax, edx
  00476	05 81 f6 71 87	 add	 eax, -2022574463	; 8771f681H
  0047b	03 45 ec	 add	 eax, DWORD PTR tv2316[ebp]
  0047e	03 f0		 add	 esi, eax
  00480	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00483	03 f2		 add	 esi, edx

; 466  : 
; 467  :   HH ( c, d, a, b, in[11], S33, 1839030562); /* 35 */

  00485	8b c6		 mov	 eax, esi

; 468  : 
; 469  :   HH ( b, c, d, a, in[14], S34, 4259657740); /* 36 */

  00487	8b ce		 mov	 ecx, esi
  00489	33 c3		 xor	 eax, ebx
  0048b	33 c2		 xor	 eax, edx
  0048d	05 22 61 9d 6d	 add	 eax, 1839030562		; 6d9d6122H
  00492	03 45 dc	 add	 eax, DWORD PTR tv2313[ebp]
  00495	03 f8		 add	 edi, eax
  00497	c1 c7 10	 rol	 edi, 16			; 00000010H
  0049a	03 fe		 add	 edi, esi
  0049c	33 cf		 xor	 ecx, edi
  0049e	8b c1		 mov	 eax, ecx
  004a0	33 c2		 xor	 eax, edx
  004a2	05 0c 38 e5 fd	 add	 eax, -35309556		; fde5380cH
  004a7	03 45 f8	 add	 eax, DWORD PTR tv2310[ebp]
  004aa	03 d8		 add	 ebx, eax

; 470  : 
; 471  :   HH ( a, b, c, d, in[ 1], S31, 2763975236); /* 37 */
; 472  : 
; 473  :   HH ( d, a, b, c, in[ 4], S32, 1272893353); /* 38 */

  004ac	8b c7		 mov	 eax, edi
  004ae	c1 cb 09	 ror	 ebx, 9
  004b1	03 df		 add	 ebx, edi
  004b3	33 cb		 xor	 ecx, ebx
  004b5	33 c3		 xor	 eax, ebx
  004b7	81 c1 44 ea be
	a4		 add	 ecx, -1530992060	; a4beea44H
  004bd	03 4d c8	 add	 ecx, DWORD PTR tv2325[ebp]
  004c0	03 d1		 add	 edx, ecx
  004c2	c1 c2 04	 rol	 edx, 4
  004c5	03 d3		 add	 edx, ebx
  004c7	33 c2		 xor	 eax, edx
  004c9	05 a9 cf de 4b	 add	 eax, 1272893353		; 4bdecfa9H
  004ce	03 45 e0	 add	 eax, DWORD PTR tv2320[ebp]
  004d1	03 f0		 add	 esi, eax
  004d3	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  004d6	03 f2		 add	 esi, edx

; 474  : 
; 475  :   HH ( c, d, a, b, in[ 7], S33, 4139469664); /* 39 */

  004d8	8b c6		 mov	 eax, esi

; 476  : 
; 477  :   HH ( b, c, d, a, in[10], S34, 3200236656); /* 40 */

  004da	8b ce		 mov	 ecx, esi
  004dc	33 c3		 xor	 eax, ebx
  004de	33 c2		 xor	 eax, edx
  004e0	05 60 4b bb f6	 add	 eax, -155497632		; f6bb4b60H
  004e5	03 45 fc	 add	 eax, DWORD PTR tv2317[ebp]
  004e8	03 f8		 add	 edi, eax
  004ea	c1 c7 10	 rol	 edi, 16			; 00000010H
  004ed	03 fe		 add	 edi, esi
  004ef	33 cf		 xor	 ecx, edi
  004f1	8b c1		 mov	 eax, ecx
  004f3	33 c2		 xor	 eax, edx
  004f5	05 70 bc bf be	 add	 eax, -1094730640	; bebfbc70H
  004fa	03 45 f0	 add	 eax, DWORD PTR tv2314[ebp]
  004fd	03 d8		 add	 ebx, eax

; 478  : 
; 479  :   HH ( a, b, c, d, in[13], S31,  681279174); /* 41 */
; 480  : 
; 481  :   HH ( d, a, b, c, in[ 0], S32, 3936430074); /* 42 */

  004ff	8b c7		 mov	 eax, edi
  00501	c1 cb 09	 ror	 ebx, 9
  00504	03 df		 add	 ebx, edi
  00506	33 c3		 xor	 eax, ebx
  00508	33 cb		 xor	 ecx, ebx
  0050a	81 c1 c6 7e 9b
	28		 add	 ecx, 681279174		; 289b7ec6H
  00510	03 4d e4	 add	 ecx, DWORD PTR tv2311[ebp]
  00513	03 d1		 add	 edx, ecx
  00515	c1 c2 04	 rol	 edx, 4
  00518	03 d3		 add	 edx, ebx
  0051a	33 c2		 xor	 eax, edx
  0051c	89 55 b4	 mov	 DWORD PTR _a$11$[ebp], edx
  0051f	05 fa 27 a1 ea	 add	 eax, -358537222		; eaa127faH
  00524	03 45 d0	 add	 eax, DWORD PTR tv2326[ebp]
  00527	03 f0		 add	 esi, eax
  00529	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  0052c	03 f2		 add	 esi, edx

; 482  : 
; 483  :   HH ( c, d, a, b, in[ 3], S33, 3572445317); /* 43 */

  0052e	8b c6		 mov	 eax, esi

; 484  : 
; 485  :   HH ( b, c, d, a, in[ 6], S34,   76029189); /* 44 */

  00530	8b ce		 mov	 ecx, esi
  00532	33 c3		 xor	 eax, ebx
  00534	33 c2		 xor	 eax, edx
  00536	05 85 30 ef d4	 add	 eax, -722521979		; d4ef3085H
  0053b	03 45 cc	 add	 eax, DWORD PTR tv2321[ebp]
  0053e	03 f8		 add	 edi, eax

; 486  : 
; 487  :   HH ( a, b, c, d, in[ 9], S31, 3654602809); /* 45 */

  00540	8b 45 b4	 mov	 eax, DWORD PTR _a$11$[ebp]
  00543	05 39 d0 d4 d9	 add	 eax, -640364487		; d9d4d039H
  00548	c1 c7 10	 rol	 edi, 16			; 00000010H
  0054b	03 fe		 add	 edi, esi
  0054d	33 cf		 xor	 ecx, edi
  0054f	33 d1		 xor	 edx, ecx
  00551	81 c2 05 1d 88
	04		 add	 edx, 76029189		; 04881d05H
  00557	03 55 e8	 add	 edx, DWORD PTR tv2318[ebp]
  0055a	03 d3		 add	 edx, ebx
  0055c	c1 ca 09	 ror	 edx, 9
  0055f	03 d7		 add	 edx, edi
  00561	33 ca		 xor	 ecx, edx
  00563	03 4d d8	 add	 ecx, DWORD PTR tv2315[ebp]
  00566	03 c8		 add	 ecx, eax

; 488  : 
; 489  :   HH ( d, a, b, c, in[12], S32, 3873151461); /* 46 */

  00568	8b c7		 mov	 eax, edi
  0056a	33 c2		 xor	 eax, edx
  0056c	c1 c1 04	 rol	 ecx, 4
  0056f	03 ca		 add	 ecx, edx
  00571	33 c1		 xor	 eax, ecx
  00573	05 e5 99 db e6	 add	 eax, -421815835		; e6db99e5H
  00578	03 45 d4	 add	 eax, DWORD PTR tv2312[ebp]
  0057b	03 f0		 add	 esi, eax
  0057d	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00580	03 f1		 add	 esi, ecx

; 490  : 
; 491  :   HH ( c, d, a, b, in[15], S33,  530742520); /* 47 */

  00582	8b c6		 mov	 eax, esi
  00584	33 c2		 xor	 eax, edx
  00586	33 c1		 xor	 eax, ecx
  00588	05 f8 7c a2 1f	 add	 eax, 530742520		; 1fa27cf8H
  0058d	03 45 0c	 add	 eax, DWORD PTR tv2309[ebp]
  00590	03 f8		 add	 edi, eax

; 492  : 
; 493  :   HH ( b, c, d, a, in[ 2], S34, 3299628645); /* 48 */

  00592	8b c6		 mov	 eax, esi
  00594	c1 c7 10	 rol	 edi, 16			; 00000010H
  00597	03 fe		 add	 edi, esi
  00599	33 c7		 xor	 eax, edi
  0059b	33 c1		 xor	 eax, ecx
  0059d	05 65 56 ac c4	 add	 eax, -995338651		; c4ac5665H
  005a2	03 45 c4	 add	 eax, DWORD PTR tv2323[ebp]
  005a5	03 d0		 add	 edx, eax

; 494  : 
; 495  : 
; 496  : 
; 497  :   /* Round 4 */
; 498  : 
; 499  : #define S41 6
; 500  : 
; 501  : #define S42 10
; 502  : 
; 503  : #define S43 15
; 504  : 
; 505  : #define S44 21
; 506  : 
; 507  :   II ( a, b, c, d, in[ 0], S41, 4096336452); /* 49 */

  005a7	8b c6		 mov	 eax, esi
  005a9	f7 d0		 not	 eax
  005ab	c1 ca 09	 ror	 edx, 9
  005ae	03 d7		 add	 edx, edi
  005b0	0b c2		 or	 eax, edx
  005b2	33 c7		 xor	 eax, edi
  005b4	05 44 22 29 f4	 add	 eax, -198630844		; f4292244H
  005b9	03 45 d0	 add	 eax, DWORD PTR tv2326[ebp]
  005bc	03 c8		 add	 ecx, eax

; 508  : 
; 509  :   II ( d, a, b, c, in[ 7], S42, 1126891415); /* 50 */

  005be	8b c7		 mov	 eax, edi
  005c0	c1 c1 06	 rol	 ecx, 6
  005c3	f7 d0		 not	 eax
  005c5	03 ca		 add	 ecx, edx
  005c7	0b c1		 or	 eax, ecx
  005c9	33 c2		 xor	 eax, edx
  005cb	05 97 ff 2a 43	 add	 eax, 1126891415		; 432aff97H
  005d0	03 45 fc	 add	 eax, DWORD PTR tv2317[ebp]
  005d3	03 f0		 add	 esi, eax

; 510  : 
; 511  :   II ( c, d, a, b, in[14], S43, 2878612391); /* 51 */

  005d5	8b c2		 mov	 eax, edx
  005d7	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  005da	f7 d0		 not	 eax
  005dc	03 f1		 add	 esi, ecx
  005de	0b c6		 or	 eax, esi
  005e0	33 c1		 xor	 eax, ecx
  005e2	05 a7 23 94 ab	 add	 eax, -1416354905	; ab9423a7H
  005e7	03 45 f8	 add	 eax, DWORD PTR tv2310[ebp]
  005ea	03 f8		 add	 edi, eax

; 512  : 
; 513  :   II ( b, c, d, a, in[ 5], S44, 4237533241); /* 52 */

  005ec	8b c1		 mov	 eax, ecx
  005ee	f7 d0		 not	 eax
  005f0	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  005f3	03 fe		 add	 edi, esi
  005f5	0b c7		 or	 eax, edi
  005f7	33 c6		 xor	 eax, esi
  005f9	05 39 a0 93 fc	 add	 eax, -57434055		; fc93a039H
  005fe	03 45 f4	 add	 eax, DWORD PTR tv2319[ebp]
  00601	03 d0		 add	 edx, eax

; 514  : 
; 515  :   II ( a, b, c, d, in[12], S41, 1700485571); /* 53 */

  00603	8b c6		 mov	 eax, esi
  00605	f7 d0		 not	 eax
  00607	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  0060a	03 d7		 add	 edx, edi
  0060c	0b c2		 or	 eax, edx
  0060e	33 c7		 xor	 eax, edi
  00610	05 c3 59 5b 65	 add	 eax, 1700485571		; 655b59c3H
  00615	03 45 d4	 add	 eax, DWORD PTR tv2312[ebp]
  00618	03 c8		 add	 ecx, eax

; 516  : 
; 517  :   II ( d, a, b, c, in[ 3], S42, 2399980690); /* 54 */

  0061a	8b c7		 mov	 eax, edi
  0061c	f7 d0		 not	 eax
  0061e	c1 c1 06	 rol	 ecx, 6
  00621	03 ca		 add	 ecx, edx
  00623	0b c1		 or	 eax, ecx
  00625	33 c2		 xor	 eax, edx
  00627	05 92 cc 0c 8f	 add	 eax, -1894986606	; 8f0ccc92H
  0062c	03 45 cc	 add	 eax, DWORD PTR tv2321[ebp]
  0062f	03 f0		 add	 esi, eax

; 518  : 
; 519  :   II ( c, d, a, b, in[10], S43, 4293915773); /* 55 */

  00631	8b c2		 mov	 eax, edx
  00633	f7 d0		 not	 eax
  00635	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00638	03 f1		 add	 esi, ecx
  0063a	0b c6		 or	 eax, esi
  0063c	33 c1		 xor	 eax, ecx
  0063e	05 7d f4 ef ff	 add	 eax, -1051523		; ffeff47dH
  00643	03 45 f0	 add	 eax, DWORD PTR tv2314[ebp]

; 520  : 
; 521  :   II ( b, c, d, a, in[ 1], S44, 2240044497); /* 56 */
; 522  : 
; 523  :   II ( a, b, c, d, in[ 8], S41, 1873313359); /* 57 */
; 524  : 
; 525  :   II ( d, a, b, c, in[15], S42, 4264355552); /* 58 */

  00646	8d 9e e0 e6 2c
	fe		 lea	 ebx, DWORD PTR [esi-30611744]
  0064c	03 f8		 add	 edi, eax
  0064e	8b c1		 mov	 eax, ecx
  00650	f7 d0		 not	 eax
  00652	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00655	03 fe		 add	 edi, esi
  00657	0b c7		 or	 eax, edi
  00659	33 c6		 xor	 eax, esi
  0065b	05 d1 5d 84 85	 add	 eax, -2054922799	; 85845dd1H
  00660	03 45 c8	 add	 eax, DWORD PTR tv2325[ebp]
  00663	03 d0		 add	 edx, eax
  00665	8b c6		 mov	 eax, esi
  00667	f7 d0		 not	 eax
  00669	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  0066c	03 d7		 add	 edx, edi
  0066e	0b c2		 or	 eax, edx
  00670	33 c7		 xor	 eax, edi
  00672	05 4f 7e a8 6f	 add	 eax, 1873313359		; 6fa87e4fH
  00677	03 45 ec	 add	 eax, DWORD PTR tv2316[ebp]
  0067a	03 c8		 add	 ecx, eax
  0067c	8b c7		 mov	 eax, edi
  0067e	f7 d0		 not	 eax
  00680	c1 c1 06	 rol	 ecx, 6
  00683	03 ca		 add	 ecx, edx
  00685	0b c1		 or	 eax, ecx
  00687	33 c2		 xor	 eax, edx
  00689	03 45 0c	 add	 eax, DWORD PTR tv2309[ebp]
  0068c	03 d8		 add	 ebx, eax

; 526  : 
; 527  :   II ( c, d, a, b, in[ 6], S43, 2734768916); /* 59 */

  0068e	8b c2		 mov	 eax, edx
  00690	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00693	f7 d0		 not	 eax
  00695	03 d9		 add	 ebx, ecx
  00697	0b c3		 or	 eax, ebx
  00699	33 c1		 xor	 eax, ecx
  0069b	05 14 43 01 a3	 add	 eax, -1560198380	; a3014314H
  006a0	03 45 e8	 add	 eax, DWORD PTR tv2318[ebp]
  006a3	03 f8		 add	 edi, eax

; 528  : 
; 529  :   II ( b, c, d, a, in[13], S44, 1309151649); /* 60 */

  006a5	8b c1		 mov	 eax, ecx
  006a7	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  006aa	f7 d0		 not	 eax

; 530  : 
; 531  :   II ( a, b, c, d, in[ 4], S41, 4149444226); /* 61 */

  006ac	8d b1 82 7e 53
	f7		 lea	 esi, DWORD PTR [ecx-145523070]
  006b2	03 fb		 add	 edi, ebx
  006b4	0b c7		 or	 eax, edi
  006b6	33 c3		 xor	 eax, ebx
  006b8	05 a1 11 08 4e	 add	 eax, 1309151649		; 4e0811a1H
  006bd	03 45 e4	 add	 eax, DWORD PTR tv2311[ebp]

; 532  : 
; 533  :   II ( d, a, b, c, in[11], S42, 3174756917); /* 62 */
; 534  : 
; 535  :   II ( c, d, a, b, in[ 2], S43,  718787259); /* 63 */

  006c0	8d 8f bb d2 d7
	2a		 lea	 ecx, DWORD PTR [edi+718787259]
  006c6	03 d0		 add	 edx, eax
  006c8	8b c3		 mov	 eax, ebx
  006ca	f7 d0		 not	 eax
  006cc	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  006cf	03 d7		 add	 edx, edi
  006d1	0b c2		 or	 eax, edx
  006d3	89 55 0c	 mov	 DWORD PTR _b$16$[ebp], edx
  006d6	33 c7		 xor	 eax, edi
  006d8	03 45 e0	 add	 eax, DWORD PTR tv2320[ebp]
  006db	03 f0		 add	 esi, eax
  006dd	8b c7		 mov	 eax, edi

; 536  : 
; 537  :   II ( b, c, d, a, in[ 9], S44, 3951481745); /* 64 */
; 538  : 
; 539  : 
; 540  : 
; 541  :   buf[0] += a;

  006df	8b 7d 08	 mov	 edi, DWORD PTR _buf$[ebp]
  006e2	f7 d0		 not	 eax
  006e4	c1 c6 06	 rol	 esi, 6
  006e7	03 f2		 add	 esi, edx
  006e9	0b c6		 or	 eax, esi
  006eb	01 37		 add	 DWORD PTR [edi], esi
  006ed	33 c2		 xor	 eax, edx
  006ef	03 45 dc	 add	 eax, DWORD PTR tv2313[ebp]
  006f2	8d 93 35 f2 3a
	bd		 lea	 edx, DWORD PTR [ebx-1120210379]
  006f8	8b 5d 0c	 mov	 ebx, DWORD PTR _b$16$[ebp]
  006fb	03 d0		 add	 edx, eax
  006fd	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00700	8b c3		 mov	 eax, ebx
  00702	03 d6		 add	 edx, esi
  00704	f7 d0		 not	 eax
  00706	0b c2		 or	 eax, edx
  00708	33 c6		 xor	 eax, esi
  0070a	f7 d6		 not	 esi
  0070c	03 45 c4	 add	 eax, DWORD PTR tv2323[ebp]
  0070f	03 c8		 add	 ecx, eax
  00711	8d 83 91 d3 86
	eb		 lea	 eax, DWORD PTR [ebx-343485551]
  00717	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  0071a	03 ca		 add	 ecx, edx

; 542  : 
; 543  :   buf[1] += b;
; 544  : 
; 545  :   buf[2] += c;

  0071c	01 4f 08	 add	 DWORD PTR [edi+8], ecx
  0071f	0b f1		 or	 esi, ecx
  00721	33 f2		 xor	 esi, edx
  00723	03 75 d8	 add	 esi, DWORD PTR tv2315[ebp]
  00726	03 c6		 add	 eax, esi
  00728	c1 c8 0b	 ror	 eax, 11			; 0000000bH
  0072b	03 47 04	 add	 eax, DWORD PTR [edi+4]
  0072e	03 c1		 add	 eax, ecx

; 546  : 
; 547  :   buf[3] += d;

  00730	01 57 0c	 add	 DWORD PTR [edi+12], edx
  00733	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00736	5f		 pop	 edi
  00737	5e		 pop	 esi
  00738	5b		 pop	 ebx

; 548  : 
; 549  : }

  00739	8b e5		 mov	 esp, ebp
  0073b	5d		 pop	 ebp
  0073c	c3		 ret	 0
_MD5Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterPack\md5.c
;	COMDAT _MD5Final
_TEXT	SEGMENT
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_MD5Final PROC						; COMDAT

; 271  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _mdContext$[ebp]

; 272  : 
; 273  :   UINT4 in[16];
; 274  : 
; 275  :   int mdi;
; 276  : 
; 277  :   unsigned int i, ii;
; 278  : 
; 279  :   unsigned int padLen;
; 280  : 
; 281  : 
; 282  : 
; 283  :   /* save number of bits */
; 284  : 
; 285  :   in[14] = mdContext->i[0];
; 286  : 
; 287  :   in[15] = mdContext->i[1];
; 288  : 
; 289  : 
; 290  : 
; 291  :   /* compute number of bytes mod 64 */
; 292  : 
; 293  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);
; 294  : 
; 295  : 
; 296  : 
; 297  :   /* pad out to 56 mod 64 */
; 298  : 
; 299  :   padLen = (mdi < 56) ? (56 - mdi) : (120 - mdi);
; 300  : 
; 301  :   MD5Update (mdContext, PADDING, padLen);

  00015	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  0001a	8b 17		 mov	 edx, DWORD PTR [edi]
  0001c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001f	89 55 f4	 mov	 DWORD PTR _in$[ebp+56], edx
  00022	89 45 f8	 mov	 DWORD PTR _in$[ebp+60], eax
  00025	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0002a	c1 ea 03	 shr	 edx, 3
  0002d	83 e2 3f	 and	 edx, 63			; 0000003fH
  00030	2b ca		 sub	 ecx, edx
  00032	2b c2		 sub	 eax, edx
  00034	83 fa 38	 cmp	 edx, 56			; 00000038H
  00037	0f 43 c1	 cmovae	 eax, ecx
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET _PADDING
  00040	57		 push	 edi
  00041	e8 00 00 00 00	 call	 _MD5Update
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	8d 47 1a	 lea	 eax, DWORD PTR [edi+26]
  0004c	33 f6		 xor	 esi, esi
  0004e	66 90		 npad	 2
$LL4@MD5Final:

; 302  : 
; 303  : 
; 304  : 
; 305  :   /* append length in bits and transform */
; 306  : 
; 307  :   for (i = 0, ii = 0; i < 14; i++, ii += 4)
; 308  : 
; 309  :     in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |

  00050	0f b6 50 01	 movzx	 edx, BYTE PTR [eax+1]
  00054	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00057	0f b6 48 fc	 movzx	 ecx, BYTE PTR [eax-4]
  0005b	c1 e2 08	 shl	 edx, 8
  0005e	0b d1		 or	 edx, ecx
  00060	0f b6 48 fb	 movzx	 ecx, BYTE PTR [eax-5]
  00064	c1 e2 08	 shl	 edx, 8
  00067	0b d1		 or	 edx, ecx
  00069	0f b6 48 fa	 movzx	 ecx, BYTE PTR [eax-6]
  0006d	c1 e2 08	 shl	 edx, 8
  00070	0b d1		 or	 edx, ecx
  00072	89 54 b5 bc	 mov	 DWORD PTR _in$[ebp+esi*4], edx
  00076	46		 inc	 esi
  00077	83 fe 0e	 cmp	 esi, 14			; 0000000eH
  0007a	72 d4		 jb	 SHORT $LL4@MD5Final

; 310  : 
; 311  :          (((UINT4)mdContext->in[ii+2]) << 16) |
; 312  : 
; 313  :          (((UINT4)mdContext->in[ii+1]) << 8) |
; 314  : 
; 315  :          ((UINT4)mdContext->in[ii]);
; 316  : 
; 317  :   MD5Transform (mdContext->buf, in);

  0007c	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  0007f	50		 push	 eax
  00080	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 _MD5Transform

; 318  : 
; 319  : 
; 320  : 
; 321  :   /* store buffer in digest */
; 322  : 
; 323  :   for (i = 0, ii = 0; i < 4; i++, ii += 4) {
; 324  : 
; 325  :     mdContext->digest[ii] = (unsigned char)(mdContext->buf[i] & 0xFF);

  00089	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0008c	83 c4 08	 add	 esp, 8
  0008f	88 47 58	 mov	 BYTE PTR [edi+88], al

; 326  : 
; 327  :     mdContext->digest[ii+1] =

  00092	0f b6 47 09	 movzx	 eax, BYTE PTR [edi+9]
  00096	88 47 59	 mov	 BYTE PTR [edi+89], al

; 328  : 
; 329  :       (unsigned char)((mdContext->buf[i] >> 8) & 0xFF);
; 330  : 
; 331  :     mdContext->digest[ii+2] =

  00099	0f b6 47 0a	 movzx	 eax, BYTE PTR [edi+10]
  0009d	88 47 5a	 mov	 BYTE PTR [edi+90], al

; 332  : 
; 333  :       (unsigned char)((mdContext->buf[i] >> 16) & 0xFF);
; 334  : 
; 335  :     mdContext->digest[ii+3] =

  000a0	0f b6 47 0b	 movzx	 eax, BYTE PTR [edi+11]
  000a4	88 47 5b	 mov	 BYTE PTR [edi+91], al
  000a7	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  000ab	88 47 5c	 mov	 BYTE PTR [edi+92], al
  000ae	0f b6 47 0d	 movzx	 eax, BYTE PTR [edi+13]
  000b2	88 47 5d	 mov	 BYTE PTR [edi+93], al
  000b5	0f b6 47 0e	 movzx	 eax, BYTE PTR [edi+14]
  000b9	88 47 5e	 mov	 BYTE PTR [edi+94], al
  000bc	0f b6 47 0f	 movzx	 eax, BYTE PTR [edi+15]
  000c0	88 47 5f	 mov	 BYTE PTR [edi+95], al
  000c3	0f b6 47 10	 movzx	 eax, BYTE PTR [edi+16]

; 336  : 
; 337  :       (unsigned char)((mdContext->buf[i] >> 24) & 0xFF);
; 338  : 
; 339  :   }
; 340  : 
; 341  : }

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	88 47 60	 mov	 BYTE PTR [edi+96], al
  000cd	33 cd		 xor	 ecx, ebp
  000cf	0f b6 47 11	 movzx	 eax, BYTE PTR [edi+17]
  000d3	88 47 61	 mov	 BYTE PTR [edi+97], al
  000d6	0f b6 47 12	 movzx	 eax, BYTE PTR [edi+18]
  000da	88 47 62	 mov	 BYTE PTR [edi+98], al
  000dd	0f b6 47 13	 movzx	 eax, BYTE PTR [edi+19]
  000e1	88 47 63	 mov	 BYTE PTR [edi+99], al
  000e4	0f b6 47 14	 movzx	 eax, BYTE PTR [edi+20]
  000e8	88 47 64	 mov	 BYTE PTR [edi+100], al
  000eb	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  000ef	88 47 65	 mov	 BYTE PTR [edi+101], al
  000f2	0f b6 47 16	 movzx	 eax, BYTE PTR [edi+22]
  000f6	88 47 66	 mov	 BYTE PTR [edi+102], al
  000f9	0f b6 47 17	 movzx	 eax, BYTE PTR [edi+23]
  000fd	88 47 67	 mov	 BYTE PTR [edi+103], al
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
_MD5Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterPack\md5.c
;	COMDAT _MD5Update
_TEXT	SEGMENT
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_inBuf$ = 12						; size = 4
_inLen$ = 16						; size = 4
_MD5Update PROC						; COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx

; 183  : 
; 184  :   UINT4 in[16];
; 185  : 
; 186  :   int mdi;
; 187  : 
; 188  :   unsigned int i, ii;
; 189  : 
; 190  : 
; 191  : 
; 192  :   /* compute number of bytes mod 64 */
; 193  : 
; 194  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);
; 195  : 
; 196  : 
; 197  : 
; 198  :   /* update number of bits */
; 199  : 
; 200  :   if ((mdContext->i[0] + ((UINT4)inLen << 3)) < mdContext->i[0])

  00011	8b 5d 10	 mov	 ebx, DWORD PTR _inLen$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _mdContext$[ebp]
  00019	8b 07		 mov	 eax, DWORD PTR [edi]
  0001b	8b c8		 mov	 ecx, eax
  0001d	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00020	c1 e9 03	 shr	 ecx, 3
  00023	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00026	8d 34 d8	 lea	 esi, DWORD PTR [eax+ebx*8]
  00029	3b f0		 cmp	 esi, eax
  0002b	73 01		 jae	 SHORT $LN7@MD5Update

; 201  : 
; 202  :     mdContext->i[1]++;

  0002d	42		 inc	 edx
$LN7@MD5Update:

; 203  : 
; 204  :   mdContext->i[0] += ((UINT4)inLen << 3);
; 205  : 
; 206  :   mdContext->i[1] += ((UINT4)inLen >> 29);

  0002e	8b c3		 mov	 eax, ebx
  00030	89 37		 mov	 DWORD PTR [edi], esi
  00032	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00035	03 c2		 add	 eax, edx
  00037	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 207  : 
; 208  : 
; 209  : 
; 210  : #ifdef  LITTLE_ENDIAN
; 211  : 
; 212  :   /* Speedup for little-endian machines suggested in MD5 report --P Karn */
; 213  : 
; 214  :      if(mdi == 0 && ((int)inBuf & 3) == 0){
; 215  : 
; 216  :           while(inLen >= 64){
; 217  : 
; 218  :                MD5Transform(mdContext->buf,(UINT4 *)inBuf);
; 219  : 
; 220  :                inLen -= 64;
; 221  : 
; 222  :                inBuf += 64;
; 223  : 
; 224  :           }
; 225  : 
; 226  :      }
; 227  : 
; 228  : #endif  /* LITTLE_ENDIAN */
; 229  : 
; 230  :   while (inLen--) {

  0003a	85 db		 test	 ebx, ebx
  0003c	74 67		 je	 SHORT $LN13@MD5Update
  0003e	8b 55 0c	 mov	 edx, DWORD PTR _inBuf$[ebp]
$LL2@MD5Update:

; 231  : 
; 232  :     /* add new character to buffer, increment mdi */
; 233  : 
; 234  :     mdContext->in[mdi++] = *inBuf++;

  00041	8a 02		 mov	 al, BYTE PTR [edx]
  00043	4b		 dec	 ebx
  00044	88 44 0f 18	 mov	 BYTE PTR [edi+ecx+24], al
  00048	42		 inc	 edx
  00049	41		 inc	 ecx
  0004a	89 55 0c	 mov	 DWORD PTR _inBuf$[ebp], edx

; 235  : 
; 236  : 
; 237  : 
; 238  :     /* transform if necessary */
; 239  : 
; 240  :     if (mdi == 0x40) {

  0004d	83 f9 40	 cmp	 ecx, 64			; 00000040H
  00050	75 4f		 jne	 SHORT $LN8@MD5Update

; 241  : 
; 242  :       for (i = 0, ii = 0; i < 16; i++, ii += 4)

  00052	33 f6		 xor	 esi, esi
  00054	8d 47 1a	 lea	 eax, DWORD PTR [edi+26]
  00057	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL6@MD5Update:

; 243  : 
; 244  :      in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |

  00060	0f b6 50 01	 movzx	 edx, BYTE PTR [eax+1]
  00064	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00067	0f b6 48 fc	 movzx	 ecx, BYTE PTR [eax-4]
  0006b	c1 e2 08	 shl	 edx, 8
  0006e	0b d1		 or	 edx, ecx
  00070	0f b6 48 fb	 movzx	 ecx, BYTE PTR [eax-5]
  00074	c1 e2 08	 shl	 edx, 8
  00077	0b d1		 or	 edx, ecx
  00079	0f b6 48 fa	 movzx	 ecx, BYTE PTR [eax-6]
  0007d	c1 e2 08	 shl	 edx, 8
  00080	0b d1		 or	 edx, ecx
  00082	89 54 b5 bc	 mov	 DWORD PTR _in$[ebp+esi*4], edx
  00086	46		 inc	 esi
  00087	83 fe 10	 cmp	 esi, 16			; 00000010H
  0008a	72 d4		 jb	 SHORT $LL6@MD5Update

; 245  : 
; 246  :           (((UINT4)mdContext->in[ii+2]) << 16) |
; 247  : 
; 248  :           (((UINT4)mdContext->in[ii+1]) << 8) |
; 249  : 
; 250  :           ((UINT4)mdContext->in[ii]);
; 251  : 
; 252  :       MD5Transform (mdContext->buf, in);

  0008c	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  0008f	50		 push	 eax
  00090	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 _MD5Transform
  00099	8b 55 0c	 mov	 edx, DWORD PTR _inBuf$[ebp]
  0009c	83 c4 08	 add	 esp, 8

; 253  : 
; 254  :       mdi = 0;

  0009f	33 c9		 xor	 ecx, ecx
$LN8@MD5Update:

; 207  : 
; 208  : 
; 209  : 
; 210  : #ifdef  LITTLE_ENDIAN
; 211  : 
; 212  :   /* Speedup for little-endian machines suggested in MD5 report --P Karn */
; 213  : 
; 214  :      if(mdi == 0 && ((int)inBuf & 3) == 0){
; 215  : 
; 216  :           while(inLen >= 64){
; 217  : 
; 218  :                MD5Transform(mdContext->buf,(UINT4 *)inBuf);
; 219  : 
; 220  :                inLen -= 64;
; 221  : 
; 222  :                inBuf += 64;
; 223  : 
; 224  :           }
; 225  : 
; 226  :      }
; 227  : 
; 228  : #endif  /* LITTLE_ENDIAN */
; 229  : 
; 230  :   while (inLen--) {

  000a1	85 db		 test	 ebx, ebx
  000a3	75 9c		 jne	 SHORT $LL2@MD5Update
$LN13@MD5Update:

; 255  : 
; 256  :     }
; 257  : 
; 258  :   }
; 259  : 
; 260  : }

  000a5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	33 cd		 xor	 ecx, ebp
  000ac	5b		 pop	 ebx
  000ad	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
_MD5Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterPack\md5.c
;	COMDAT _MD5Init
_TEXT	SEGMENT
_mdContext$ = 8						; size = 4
_MD5Init PROC						; COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 152  : 
; 153  :   mdContext->i[0] = mdContext->i[1] = (UINT4)0;

  00003	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  00006	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0000d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 154  : 
; 155  : 
; 156  : 
; 157  :   /* Load magic initialization constants.
; 158  : 
; 159  :    */
; 160  : 
; 161  :   mdContext->buf[0] = (UINT4)0x67452301;

  00013	c7 40 08 01 23
	45 67		 mov	 DWORD PTR [eax+8], 1732584193 ; 67452301H

; 162  : 
; 163  :   mdContext->buf[1] = (UINT4)0xefcdab89;

  0001a	c7 40 0c 89 ab
	cd ef		 mov	 DWORD PTR [eax+12], -271733879 ; efcdab89H

; 164  : 
; 165  :   mdContext->buf[2] = (UINT4)0x98badcfe;

  00021	c7 40 10 fe dc
	ba 98		 mov	 DWORD PTR [eax+16], -1732584194 ; 98badcfeH

; 166  : 
; 167  :   mdContext->buf[3] = (UINT4)0x10325476;

  00028	c7 40 14 76 54
	32 10		 mov	 DWORD PTR [eax+20], 271733878 ; 10325476H

; 168  : 
; 169  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_MD5Init ENDP
_TEXT	ENDS
END
