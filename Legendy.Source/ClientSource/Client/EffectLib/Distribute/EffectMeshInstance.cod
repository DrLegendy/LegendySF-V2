; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@	; CDynamicPool<CEffectMeshInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@	; CDynamicPool<CEffectMeshInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 ; CDynamicPool<CEffectMeshInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8	; CDynamicPool<CEffectMeshInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8	; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_E?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CEffectMeshInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8 DD 00H	; CDynamicPool<CEffectMeshInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CEffectMeshInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCEffectMeshInstance@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@ DD 00H	; CDynamicPool<CEffectMeshInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@ ; CDynamicPool<CEffectMeshInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_GCFrameController@@UAEPAXI@Z			; CFrameController::`scalar deleting destructor'
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??0CEffectMeshInstance@@QAE@XZ			; CEffectMeshInstance::CEffectMeshInstance
PUBLIC	??1CEffectMeshInstance@@UAE@XZ			; CEffectMeshInstance::~CEffectMeshInstance
PUBLIC	?DestroySystem@CEffectMeshInstance@@SAXXZ	; CEffectMeshInstance::DestroySystem
PUBLIC	?New@CEffectMeshInstance@@SAPAV1@XZ		; CEffectMeshInstance::New
PUBLIC	?Delete@CEffectMeshInstance@@SAXPAV1@@Z		; CEffectMeshInstance::Delete
PUBLIC	?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z ; CEffectMeshInstance::OnSetDataPointer
PUBLIC	?OnInitialize@CEffectMeshInstance@@MAEXXZ	; CEffectMeshInstance::OnInitialize
PUBLIC	?OnDestroy@CEffectMeshInstance@@MAEXXZ		; CEffectMeshInstance::OnDestroy
PUBLIC	?OnUpdate@CEffectMeshInstance@@MAE_NM@Z		; CEffectMeshInstance::OnUpdate
PUBLIC	?OnRender@CEffectMeshInstance@@MAEXXZ		; CEffectMeshInstance::OnRender
PUBLIC	?isActive@CEffectMeshInstance@@IAEHXZ		; CEffectMeshInstance::isActive
PUBLIC	?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate
PUBLIC	??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy
PUBLIC	?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
PUBLIC	?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
PUBLIC	??1?$CRef@VCEffectMesh@@@@QAE@XZ		; CRef<CEffectMesh>::~CRef<CEffectMesh>
PUBLIC	??_GCEffectMeshInstance@@UAEPAXI@Z		; CEffectMeshInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
PUBLIC	?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z ; CDynamicPool<CEffectMeshInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
PUBLIC	?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ; CEffectMeshInstance_DeleteImageInstance
PUBLIC	?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ; CEffectMeshInstance_DeleteTextureInstance
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAXPAPAVCEffectMeshInstance@@QAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
PUBLIC	??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
PUBLIC	??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ; std::_Uninitialized_move<CEffectMeshInstance * *,std::allocator<CEffectMeshInstance *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??$_Uninitialized_move@PAUSTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@QAU12@0PAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Uninitialized_move<CEffectMeshInstance::STextureInstance *,std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7CFrameController@@6B@			; CFrameController::`vftable'
PUBLIC	?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A ; CEffectMeshInstance::ms_kPool
PUBLIC	??_7CEffectMeshInstance@@6B@			; CEffectMeshInstance::`vftable'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CFrameController@@6B@			; CFrameController::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFrameController@@@8			; CFrameController `RTTI Type Descriptor'
PUBLIC	??_R3CFrameController@@8			; CFrameController::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFrameController@@8			; CFrameController::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFrameController@@8		; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CEffectMeshInstance@@6B@			; CEffectMeshInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEffectMeshInstance@@@8			; CEffectMeshInstance `RTTI Type Descriptor'
PUBLIC	??_R3CEffectMeshInstance@@8			; CEffectMeshInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectMeshInstance@@8			; CEffectMeshInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEffectMeshInstance@@8		; CEffectMeshInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBaseInstance@@8	; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBaseInstance@@@8		; CEffectElementBaseInstance `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Base Class Array'
PUBLIC	__real@3a83126f
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__real@bf800000
PUBLIC	__xmm@000000003f8000000000000000000000
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetElapsedSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetElapsedSecond
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixInverse@12:PROC
EXTRN	_D3DXMatrixRotationX@8:PROC
EXTRN	_D3DXMatrixRotationQuaternion@8:PROC
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ:PROC ; CGraphicBase::GetViewMatrix
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z:PROC ; CEffectElementBase::GetPosition
EXTRN	??0CEffectElementBaseInstance@@QAE@XZ:PROC	; CEffectElementBaseInstance::CEffectElementBaseInstance
EXTRN	??1CEffectElementBaseInstance@@UAE@XZ:PROC	; CEffectElementBaseInstance::~CEffectElementBaseInstance
EXTRN	?Initialize@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Initialize
EXTRN	?Destroy@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Destroy
EXTRN	?isActive@CEffectElementBaseInstance@@QAE_NXZ:PROC ; CEffectElementBaseInstance::isActive
EXTRN	??0CFrameController@@QAE@XZ:PROC		; CFrameController::CFrameController
EXTRN	??1CFrameController@@UAE@XZ:PROC		; CFrameController::~CFrameController
EXTRN	?Clear@CFrameController@@QAEXXZ:PROC		; CFrameController::Clear
EXTRN	?Update@CFrameController@@QAEXM@Z:PROC		; CFrameController::Update
EXTRN	?GetCurrentFrame@CFrameController@@QAEEXZ:PROC	; CFrameController::GetCurrentFrame
EXTRN	?SetMaxFrame@CFrameController@@QAEXK@Z:PROC	; CFrameController::SetMaxFrame
EXTRN	?SetFrameTime@CFrameController@@QAEXM@Z:PROC	; CFrameController::SetFrameTime
EXTRN	?SetStartFrame@CFrameController@@QAEXK@Z:PROC	; CFrameController::SetStartFrame
EXTRN	?SetLoopFlag@CFrameController@@QAEXH@Z:PROC	; CFrameController::SetLoopFlag
EXTRN	?SetLoopCount@CFrameController@@QAEXH@Z:PROC	; CFrameController::SetLoopCount
EXTRN	?isActive@CFrameController@@QAEHK@Z:PROC	; CFrameController::isActive
EXTRN	??_ECFrameController@@UAEPAXI@Z:PROC		; CFrameController::`vector deleting destructor'
EXTRN	?GetFrameCount@CEffectMesh@@QAEKXZ:PROC		; CEffectMesh::GetFrameCount
EXTRN	?GetMeshCount@CEffectMesh@@QAEKXZ:PROC		; CEffectMesh::GetMeshCount
EXTRN	?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z:PROC ; CEffectMesh::GetMeshDataPointer
EXTRN	?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z:PROC ; CEffectMesh::GetTextureVectorPointer
EXTRN	?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ:PROC ; CEffectMeshScript::GetMeshFileName
EXTRN	?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z:PROC ; CEffectMeshScript::GetMeshDataPointer
EXTRN	?GetBillboardType@CEffectMeshScript@@QAEHK@Z:PROC ; CEffectMeshScript::GetBillboardType
EXTRN	?isBlendingEnable@CEffectMeshScript@@QAEHK@Z:PROC ; CEffectMeshScript::isBlendingEnable
EXTRN	?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z:PROC ; CEffectMeshScript::GetBlendingSrcType
EXTRN	?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z:PROC ; CEffectMeshScript::GetBlendingDestType
EXTRN	?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z:PROC ; CEffectMeshScript::GetColorOperationType
EXTRN	?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z:PROC ; CEffectMeshScript::GetColorFactor
EXTRN	?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z:PROC ; CEffectMeshScript::GetTimeTableAlphaPointer
EXTRN	?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ:PROC ; CEffectMeshScript::isMeshAnimationLoop
EXTRN	?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ:PROC ; CEffectMeshScript::GetMeshAnimationLoopCount
EXTRN	?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ:PROC ; CEffectMeshScript::GetMeshAnimationFrameDelay
EXTRN	??_ECEffectMeshInstance@@UAEPAXI@Z:PROC		; CEffectMeshInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A:BYTE ; CGraphicImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CEffectMeshInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CEffectMeshInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@000000003f8000000000000000000000
CONST	SEGMENT
__xmm@000000003f8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, '?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT ??_R2CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R2CEffectElementBaseInstance@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8 ; CEffectElementBaseInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R3CEffectElementBaseInstance@@8 DD 00H		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBaseInstance@@@8
data$r	SEGMENT
??_R0?AVCEffectElementBaseInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBaseInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBaseInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBaseInstance@@8 DD FLAT:??_R0?AVCEffectElementBaseInstance@@@8 ; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectMeshInstance@@8 DD FLAT:??_R0?AVCEffectMeshInstance@@@8 ; CEffectMeshInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R2CEffectMeshInstance@@8 DD FLAT:??_R1A@?0A@EA@CEffectMeshInstance@@8 ; CEffectMeshInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R3CEffectMeshInstance@@8 DD 00H			; CEffectMeshInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectMeshInstance@@@8
data$r	SEGMENT
??_R0?AVCEffectMeshInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectMeshInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectMeshInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CEffectMeshInstance@@6B@
rdata$r	SEGMENT
??_R4CEffectMeshInstance@@6B@ DD 00H			; CEffectMeshInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEffectMeshInstance@@@8
	DD	FLAT:??_R3CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFrameController@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFrameController@@8 DD FLAT:??_R0?AVCFrameController@@@8 ; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R2CFrameController@@8
rdata$r	SEGMENT
??_R2CFrameController@@8 DD FLAT:??_R1A@?0A@EA@CFrameController@@8 ; CFrameController::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFrameController@@8
rdata$r	SEGMENT
??_R3CFrameController@@8 DD 00H				; CFrameController::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFrameController@@@8
data$r	SEGMENT
??_R0?AVCFrameController@@@8 DD FLAT:??_7type_info@@6B@	; CFrameController `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFrameController@@', 00H
data$r	ENDS
;	COMDAT ??_R4CFrameController@@6B@
rdata$r	SEGMENT
??_R4CFrameController@@6B@ DD 00H			; CFrameController::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFrameController@@@8
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CEffectMeshInstance@@6B@
CONST	SEGMENT
??_7CEffectMeshInstance@@6B@ DD FLAT:??_R4CEffectMeshInstance@@6B@ ; CEffectMeshInstance::`vftable'
	DD	FLAT:??_ECEffectMeshInstance@@UAEPAXI@Z
	DD	FLAT:?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
	DD	FLAT:?OnInitialize@CEffectMeshInstance@@MAEXXZ
	DD	FLAT:?OnDestroy@CEffectMeshInstance@@MAEXXZ
	DD	FLAT:?OnUpdate@CEffectMeshInstance@@MAE_NM@Z
	DD	FLAT:?OnRender@CEffectMeshInstance@@MAEXXZ
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@ ; CEffectMeshInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CFrameController@@6B@
CONST	SEGMENT
??_7CFrameController@@6B@ DD FLAT:??_R4CFrameController@@6B@ ; CFrameController::`vftable'
	DD	FLAT:??_ECFrameController@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCEffectMesh@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z$0
__ehfuncinfo$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CEffectMeshInstance@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CEffectMeshInstance@@SAPAV1@XZ$0
__ehfuncinfo$?New@CEffectMeshInstance@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CEffectMeshInstance@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CEffectMeshInstance@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CEffectMeshInstance@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CEffectMeshInstance@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CEffectMeshInstance@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$3
__ehfuncinfo$??0CEffectMeshInstance@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CEffectMeshInstance@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z PROC ; std::_Refancy<CTimeEvent<float> *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ENDP ; std::_Refancy<CTimeEvent<float> *,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@QAU12@0PAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@QAU12@0PAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMeshInstance::STextureInstance *,std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b c3		 cmp	 eax, ebx
  00010	0f 84 94 00 00
	00		 je	 $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00016	57		 push	 edi
  00017	8b fe		 mov	 edi, esi
  00019	8d 56 28	 lea	 edx, DWORD PTR [esi+40]
  0001c	8d 48 2c	 lea	 ecx, DWORD PTR [eax+44]
  0001f	2b f8		 sub	 edi, eax
$LL4@Uninitiali:
  00021	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CFrameController@@6B@

; 1509 :         ++_Last;

  00027	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  0002a	8b 41 a8	 mov	 eax, DWORD PTR [ecx-88]
  0002d	8d 52 30	 lea	 edx, DWORD PTR [edx+48]
  00030	89 42 ac	 mov	 DWORD PTR [edx-84], eax
  00033	83 c6 30	 add	 esi, 48			; 00000030H
  00036	8b 41 ac	 mov	 eax, DWORD PTR [ecx-84]
  00039	89 42 b0	 mov	 DWORD PTR [edx-80], eax
  0003c	8b 41 b0	 mov	 eax, DWORD PTR [ecx-80]
  0003f	89 42 b4	 mov	 DWORD PTR [edx-76], eax
  00042	8b 41 b4	 mov	 eax, DWORD PTR [ecx-76]
  00045	89 42 b8	 mov	 DWORD PTR [edx-72], eax
  00048	8b 41 b8	 mov	 eax, DWORD PTR [ecx-72]
  0004b	89 42 bc	 mov	 DWORD PTR [edx-68], eax
  0004e	8b 41 bc	 mov	 eax, DWORD PTR [ecx-68]
  00051	89 42 c0	 mov	 DWORD PTR [edx-64], eax
  00054	8b 41 c0	 mov	 eax, DWORD PTR [ecx-64]
  00057	89 42 c4	 mov	 DWORD PTR [edx-60], eax
  0005a	8b 41 c4	 mov	 eax, DWORD PTR [ecx-60]
  0005d	89 42 c8	 mov	 DWORD PTR [edx-56], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00060	c7 42 cc 00 00
	00 00		 mov	 DWORD PTR [edx-52], 0
  00067	c7 42 d0 00 00
	00 00		 mov	 DWORD PTR [edx-48], 0
  0006e	c7 44 0f d0 00
	00 00 00	 mov	 DWORD PTR [edi+ecx-48], 0

; 386  :         _Myfirst = _Right._Myfirst;

  00076	8b 41 c8	 mov	 eax, DWORD PTR [ecx-56]
  00079	89 42 cc	 mov	 DWORD PTR [edx-52], eax

; 387  :         _Mylast  = _Right._Mylast;

  0007c	8b 41 cc	 mov	 eax, DWORD PTR [ecx-52]
  0007f	89 42 d0	 mov	 DWORD PTR [edx-48], eax

; 388  :         _Myend   = _Right._Myend;

  00082	8b 41 d0	 mov	 eax, DWORD PTR [ecx-48]
  00085	89 44 0f d0	 mov	 DWORD PTR [edi+ecx-48], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00089	8d 41 d4	 lea	 eax, DWORD PTR [ecx-44]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 390  :         _Right._Myfirst = pointer();

  0008c	c7 41 c8 00 00
	00 00		 mov	 DWORD PTR [ecx-56], 0

; 391  :         _Right._Mylast  = pointer();

  00093	c7 41 cc 00 00
	00 00		 mov	 DWORD PTR [ecx-52], 0

; 392  :         _Right._Myend   = pointer();

  0009a	c7 41 d0 00 00
	00 00		 mov	 DWORD PTR [ecx-48], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  000a1	3b c3		 cmp	 eax, ebx
  000a3	0f 85 78 ff ff
	ff		 jne	 $LL4@Uninitiali
  000a9	5f		 pop	 edi
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  000aa	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  000ad	56		 push	 esi
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  000b7	8b c6		 mov	 eax, esi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx

; 1664 :     }
; 1665 : }

  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
??$_Uninitialized_move@PAUSTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@QAU12@0PAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMeshInstance::STextureInstance *,std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0002b	8b 5d 10	 mov	 ebx, DWORD PTR __Al$[ebp]
  0002e	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00031	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00034	89 5d f0	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00037	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	85 f6		 test	 esi, esi
  00043	74 34		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00045	6a 30		 push	 48			; 00000030H
  00047	6a 00		 push	 0
  00049	57		 push	 edi
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00052	8b cf		 mov	 ecx, edi
  00054	e8 00 00 00 00	 call	 ??0CFrameController@@QAE@XZ ; CFrameController::CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00059	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
  00060	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  00067	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  0006e	83 c7 30	 add	 edi, 48			; 00000030H
  00071	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00074	83 ee 01	 sub	 esi, 1
  00077	75 cc		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00079	53		 push	 ebx
  0007a	57		 push	 edi
  0007b	57		 push	 edi
  0007c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00084	8b c7		 mov	 eax, edi

; 1838 :     }
; 1839 : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshInstance::STextureInstance> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMeshInstance * *,std::allocator<CEffectMeshInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMeshInstance * *,std::allocator<CEffectMeshInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z PROC ; std::_Const_cast<CTimeEvent<float> const >, COMDAT

; 282  : auto _Const_cast(_Ty* _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 283  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 284  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ENDP ; std::_Const_cast<CTimeEvent<float> const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
tv303 = -28						; size = 4
__Oldsize$1$ = -24					; size = 4
__Appended_first$ = -24					; size = 4
__Newvec$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d e0	 mov	 DWORD PTR _this$[ebp], edi

; 1183 :         if (_Newsize > max_size()) {

  00030	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  00033	81 fb 55 55 55
	05		 cmp	 ebx, 89478485		; 05555555H
  00039	0f 87 30 01 00
	00		 ja	 $LN39@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0003f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00042	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00047	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00049	f7 e9		 imul	 ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004e	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00050	c1 fa 03	 sar	 edx, 3
  00053	8b c2		 mov	 eax, edx
  00055	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00058	03 c2		 add	 eax, edx
  0005a	89 45 e8	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00062	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00064	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00069	c1 fa 03	 sar	 edx, 3
  0006c	8b ca		 mov	 ecx, edx
  0006e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00071	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00073	8b d1		 mov	 edx, ecx
  00075	d1 ea		 shr	 edx, 1
  00077	2b c2		 sub	 eax, edx
  00079	3b c8		 cmp	 ecx, eax
  0007b	77 17		 ja	 SHORT $LN37@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007d	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00080	3b c3		 cmp	 eax, ebx
  00082	72 10		 jb	 SHORT $LN37@Resize_rea

; 1626 :             return _Newsize; // geometric growth would be insufficient
; 1627 :         }
; 1628 : 
; 1629 :         return _Geometric; // geometric growth is sufficient

  00084	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00087	3d 55 55 55 05	 cmp	 eax, 89478485		; 05555555H
  0008c	0f 87 e2 00 00
	00		 ja	 $LN40@Resize_rea
  00092	eb 05		 jmp	 SHORT $LN18@Resize_rea
$LN37@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00094	8b c3		 mov	 eax, ebx
  00096	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN18@Resize_rea:
  00099	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0009c	c1 e0 04	 shl	 eax, 4

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  000a0	89 45 e4	 mov	 DWORD PTR tv303[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000a3	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000a8	8b 55 e8	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ab	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000ad	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000af	89 75 ec	 mov	 DWORD PTR __Newvec$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000b2	57		 push	 edi

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000b3	2b c2		 sub	 eax, edx
  000b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000bc	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  000bf	c1 e1 04	 shl	 ecx, 4
  000c2	03 ce		 add	 ecx, esi

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000c4	50		 push	 eax
  000c5	51		 push	 ecx

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000c6	89 4d e8	 mov	 DWORD PTR __Appended_first$[ebp], ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000c9	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshInstance::STextureInstance> >
  000ce	83 c4 10	 add	 esp, 16			; 00000010H

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d1	57		 push	 edi
  000d2	56		 push	 esi
  000d3	ff 77 04	 push	 DWORD PTR [edi+4]
  000d6	ff 37		 push	 DWORD PTR [edi]
  000d8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@QAU12@0PAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Uninitialized_move<CEffectMeshInstance::STextureInstance *,std::allocator<CEffectMeshInstance::STextureInstance> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000dd	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000e2	85 c9		 test	 ecx, ecx
  000e4	74 35		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000e6	57		 push	 edi
  000e7	ff 77 04	 push	 DWORD PTR [edi+4]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000f0	8b 37		 mov	 esi, DWORD PTR [edi]
  000f2	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000f7	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000fa	2b ce		 sub	 ecx, esi
  000fc	f7 e9		 imul	 ecx
  000fe	c1 fa 03	 sar	 edx, 3
  00101	8b c2		 mov	 eax, edx
  00103	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00106	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00108	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0010b	c1 e0 04	 shl	 eax, 4
  0010e	50		 push	 eax
  0010f	56		 push	 esi
  00110	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00115	8b 75 ec	 mov	 esi, DWORD PTR __Newvec$[ebp]
  00118	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0011b	8d 04 5b	 lea	 eax, DWORD PTR [ebx+ebx*2]
  0011e	89 37		 mov	 DWORD PTR [edi], esi
  00120	c1 e0 04	 shl	 eax, 4
  00123	03 c6		 add	 eax, esi
  00125	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00128	8b 45 e4	 mov	 eax, DWORD PTR tv303[ebp]
  0012b	03 c6		 add	 eax, esi
  0012d	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 1208 :     }

  00130	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00133	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013a	59		 pop	 ecx
  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c2 08 00	 ret	 8
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1201 :         _CATCH_ALL
; 1202 :         _Destroy(_Appended_first, _Appended_last);

  00144	8b 45 e8	 mov	 eax, DWORD PTR __Appended_first$[ebp]
  00147	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	50		 push	 eax
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy

; 1203 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00151	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  00154	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	ff 75 ec	 push	 DWORD PTR __Newvec$[ebp]
  0015a	e8 00 00 00 00	 call	 ?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
  0015f	8b c8		 mov	 ecx, eax
  00161	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate

; 1204 :         _RERAISE;

  00166	6a 00		 push	 0
  00168	6a 00		 push	 0
  0016a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN39@Resize_rea:

; 1184 :             _Xlength();

  0016f	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
$LN40@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00174	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN36@Resize_rea:
  00179	cc		 int	 3
  0017a	cc		 int	 3
  0017b	cc		 int	 3
  0017c	cc		 int	 3
  0017d	cc		 int	 3
  0017e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
;	COMDAT ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z
_TEXT	SEGMENT
__UMid$1$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z PROC ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>, COMDAT

; 3601 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  00003	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3601 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx

; 3567 :     auto _UFirst      = _Get_unwrapped(_First);

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  0000d	2b d3		 sub	 edx, ebx
  0000f	c1 fa 03	 sar	 edx, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3601 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00012	56		 push	 esi
  00013	57		 push	 edi

; 3574 :         if (_Count <= 0) {

  00014	85 d2		 test	 edx, edx
  00016	7e 33		 jle	 SHORT $LN82@equal_rang
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 192  : 	return lhs.m_fTime < rhs;

  00018	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  0001b	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0001f	90		 npad	 1
$LL4@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3580 :         _Diff _Count2    = _Count / 2;

  00020	8b ca		 mov	 ecx, edx
  00022	d1 e9		 shr	 ecx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 192  : 	return lhs.m_fTime < rhs;

  00024	f3 0f 10 04 cb	 movss	 xmm0, DWORD PTR [ebx+ecx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00029	8d 04 cb	 lea	 eax, DWORD PTR [ebx+ecx*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 192  : 	return lhs.m_fTime < rhs;

  0002c	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  0002f	89 45 f8	 mov	 DWORD PTR __UMid$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3582 :         if (_DEBUG_LT_PRED(_Pred, *_UMid, _Val)) { // range begins above _UMid, loop

  00032	76 0c		 jbe	 SHORT $LN8@equal_rang

; 3583 :             _UFirst = _Next_iter(_UMid);

  00034	8d 58 08	 lea	 ebx, DWORD PTR [eax+8]

; 3584 :             _Count -= _Count2 + 1;

  00037	83 c8 ff	 or	 eax, -1
  0003a	2b c1		 sub	 eax, ecx
  0003c	03 d0		 add	 edx, eax

; 3585 :         } else if (_Pred(_Val, *_UMid)) {

  0003e	eb 07		 jmp	 SHORT $LN11@equal_rang
$LN8@equal_rang:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 198  : 	return lhs < rhs.m_fTime;

  00040	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3585 :         } else if (_Pred(_Val, *_UMid)) {

  00043	76 2a		 jbe	 SHORT $LN10@equal_rang

; 3586 :             _Count = _Count2; // range in first half, loop

  00045	8b d1		 mov	 edx, ecx
$LN11@equal_rang:

; 3568 :     const auto _ULast = _Get_unwrapped(_Last);
; 3569 : 
; 3570 :     using _Diff  = _Iter_diff_t<_FwdIt>;
; 3571 :     _Diff _Count = _STD distance(_UFirst, _ULast);
; 3572 : 
; 3573 :     for (;;) { // divide and conquer, check midpoint
; 3574 :         if (_Count <= 0) {

  00047	85 d2		 test	 edx, edx
  00049	7f d5		 jg	 SHORT $LL4@equal_rang
$LN82@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0004b	8b c3		 mov	 eax, ebx
  0004d	8b fb		 mov	 edi, ebx
$LN5@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 192  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  00055	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00058	57		 push	 edi
  00059	89 06		 mov	 DWORD PTR [esi], eax
  0005b	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  00060	83 c4 08	 add	 esp, 8
  00063	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3603 :     return _STD equal_range(_First, _Last, _Val, less<>());

  00066	8b c6		 mov	 eax, esi
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx

; 3604 : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
$LN10@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 5681 :     auto _UFirst                = _Get_unwrapped(_First);

  0006f	8b fb		 mov	 edi, ebx
  00071	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi

; 5682 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5683 : 
; 5684 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00074	85 c9		 test	 ecx, ecx
  00076	74 25		 je	 SHORT $LN37@equal_rang
$LL36@equal_rang:

; 5685 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00078	8b f1		 mov	 esi, ecx
  0007a	d1 ee		 shr	 esi, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 192  : 	return lhs.m_fTime < rhs;

  0007c	0f 2f 0c f7	 comiss	 xmm1, DWORD PTR [edi+esi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  00080	8d 04 f7	 lea	 eax, DWORD PTR [edi+esi*8]

; 5687 :         if (_Pred(*_UMid, _Val)) { // try top half

  00083	76 0c		 jbe	 SHORT $LN38@equal_rang

; 5688 :             _UFirst = _Next_iter(_UMid);

  00085	8d 78 08	 lea	 edi, DWORD PTR [eax+8]

; 5689 :             _Count -= _Count2 + 1;

  00088	83 c8 ff	 or	 eax, -1
  0008b	2b c6		 sub	 eax, esi
  0008d	03 c8		 add	 ecx, eax

; 5690 :         } else {

  0008f	eb 02		 jmp	 SHORT $LN39@equal_rang
$LN38@equal_rang:

; 5691 :             _Count = _Count2;

  00091	8b ce		 mov	 ecx, esi
$LN39@equal_rang:

; 5682 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5683 : 
; 5684 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00093	85 c9		 test	 ecx, ecx
  00095	7f e1		 jg	 SHORT $LL36@equal_rang
  00097	8b 45 f8	 mov	 eax, DWORD PTR __UMid$1$[ebp]
  0009a	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi
$LN37@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3590 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  0009d	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  000a0	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3539 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  000a7	2b cf		 sub	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1724 :         return _Last - _First; // assume the iterator will do debug checking

  000a9	03 cb		 add	 ecx, ebx
  000ab	c1 f9 03	 sar	 ecx, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3541 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  000ae	85 c9		 test	 ecx, ecx
  000b0	7e 23		 jle	 SHORT $LN55@equal_rang
$LL54@equal_rang:

; 3542 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  000b2	8b d1		 mov	 edx, ecx
  000b4	d1 ea		 shr	 edx, 1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 198  : 	return lhs < rhs.m_fTime;

  000b6	f3 0f 10 04 d7	 movss	 xmm0, DWORD PTR [edi+edx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility

; 1644 :         _Where += _Off;

  000bb	8d 04 d7	 lea	 eax, DWORD PTR [edi+edx*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 198  : 	return lhs < rhs.m_fTime;

  000be	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 3544 :         if (_Pred(_Val, *_UMid)) {

  000c1	76 04		 jbe	 SHORT $LN56@equal_rang

; 3545 :             _Count = _Count2;

  000c3	8b ca		 mov	 ecx, edx

; 3546 :         } else { // try top half

  000c5	eb 0a		 jmp	 SHORT $LN57@equal_rang
$LN56@equal_rang:

; 3547 :             _UFirst = _Next_iter(_UMid);

  000c7	8d 78 08	 lea	 edi, DWORD PTR [eax+8]

; 3548 :             _Count -= _Count2 + 1;

  000ca	83 c8 ff	 or	 eax, -1
  000cd	2b c2		 sub	 eax, edx
  000cf	03 c8		 add	 ecx, eax
$LN57@equal_rang:

; 3541 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  000d1	85 c9		 test	 ecx, ecx
  000d3	7f dd		 jg	 SHORT $LL54@equal_rang
$LN55@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  000d5	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
  000d8	e9 72 ff ff ff	 jmp	 $LN5@equal_rang
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ENDP ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAXPAPAVCEffectMeshInstance@@QAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAXPAPAVCEffectMeshInstance@@QAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMeshInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAXPAPAVCEffectMeshInstance@@QAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMeshInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 41		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 2c	 add	 esi, 44			; 0000002cH
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00012	8b 4e f8	 mov	 ecx, DWORD PTR [esi-8]
  00015	85 c9		 test	 ecx, ecx
  00017	74 25		 je	 SHORT $LN25@Destroy_ra

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00019	8b 06		 mov	 eax, DWORD PTR [esi]
  0001b	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001d	83 e0 fc	 and	 eax, -4			; fffffffcH
  00020	50		 push	 eax
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00027	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00031	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 1699 :             _Myend   = pointer();

  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN25@Destroy_ra:
  0003e	8d 4e d4	 lea	 ecx, DWORD PTR [esi-44]
  00041	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00046	83 c6 30	 add	 esi, 48			; 00000030H
  00049	8d 46 d4	 lea	 eax, DWORD PTR [esi-44]
  0004c	3b c7		 cmp	 eax, edi
  0004e	75 c2		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00050	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00051	5e		 pop	 esi
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ; std::_Uninitialized_move<CEffectMeshInstance * *,std::allocator<CEffectMeshInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@YAPAPAVCEffectMeshInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshInstance@@@0@@Z ; std::_Uninitialized_move<CEffectMeshInstance * *,std::allocator<CEffectMeshInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z
_TEXT	SEGMENT
_rkInstance$ = 8					; size = 4
?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z PROC ; CEffectMeshInstance_DeleteTextureInstance, COMDAT

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 247  : 	std::vector<CGraphicImageInstance*> & rVector = rkInstance.TextureInstanceVector;

  00006	8b 7d 08	 mov	 edi, DWORD PTR _rkInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	8b 5f 28	 mov	 ebx, DWORD PTR [edi+40]
  0000c	8b 77 24	 mov	 esi, DWORD PTR [edi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	3b f3		 cmp	 esi, ebx
  00011	74 1c		 je	 SHORT $LN24@CEffectMes
$LL18@CEffectMes:

; 236  :         _Func(*_UFirst);

  00013	ff 36		 push	 DWORD PTR [esi]
  00015	e8 00 00 00 00	 call	 ?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ; CEffectMeshInstance_DeleteImageInstance
  0001a	83 c6 04	 add	 esi, 4
  0001d	83 c4 04	 add	 esp, 4
  00020	3b f3		 cmp	 esi, ebx
  00022	75 ef		 jne	 SHORT $LL18@CEffectMes
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 249  : 	rVector.clear();

  00024	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00027	89 47 28	 mov	 DWORD PTR [edi+40], eax
  0002a	5f		 pop	 edi

; 250  : }

  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN24@CEffectMes:

; 249  : 	rVector.clear();

  0002f	89 77 28	 mov	 DWORD PTR [edi+40], esi
  00032	5f		 pop	 edi

; 250  : }

  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ENDP ; CEffectMeshInstance_DeleteTextureInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z PROC ; CEffectMeshInstance_DeleteImageInstance, COMDAT

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00003	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 242  : 	CGraphicImageInstance::ms_kPool.Free(pkInstance);

  00008	8b 4d 08	 mov	 ecx, DWORD PTR _pkInstance$[ebp]
  0000b	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+24
  00014	74 0b		 je	 SHORT $LN8@CEffectMes

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00016	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00018	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 243  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
$LN8@CEffectMes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00021	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00024	51		 push	 ecx
  00025	50		 push	 eax
  00026	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  0002b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 243  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ENDP ; CEffectMeshInstance_DeleteImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A ; CEffectMeshInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CEffectMeshInstance::ms_kPool'', COMDAT

; 7    : CDynamicPool<CEffectMeshInstance>		CEffectMeshInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CEffectMeshInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z PROC ; CDynamicPool<CEffectMeshInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z ENDP ; CDynamicPool<CEffectMeshInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ PROC	; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ENDP	; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEffectMeshInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEffectMeshInstance@@UAEPAXI@Z PROC			; CEffectMeshInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEffectMeshInstance@@UAE@XZ ; CEffectMeshInstance::~CEffectMeshInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 60		 push	 96			; 00000060H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEffectMeshInstance@@UAEPAXI@Z ENDP			; CEffectMeshInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
;	COMDAT ??1?$CRef@VCEffectMesh@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CRef@VCEffectMesh@@@@QAE@XZ PROC			; CRef<CEffectMesh>::~CRef<CEffectMesh>, COMDAT
; _this$ = ecx

; 37   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CRef@VCEffectMesh@@@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 53   : 			if (m_pObject)

  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0b		 je	 SHORT $LN4@CRef

; 54   : 			{
; 55   : 				m_pObject->Release();

  0002b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@CRef:

; 38   : 			Clear();
; 39   : 		}

  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5e		 pop	 esi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
  00046	cc		 int	 3
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CRef@VCEffectMesh@@@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CRef@VCEffectMesh@@@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CRef@VCEffectMesh@@@@QAE@XZ ENDP			; CRef<CEffectMesh>::~CRef<CEffectMesh>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal, COMDAT
; _this$ = ecx

; 1732 :         return _Mypair._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 1733 :     }

  00002	c3		 ret	 0
?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 03	 sar	 edx, 3
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 04	 shl	 eax, 4
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z PROC ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00009	c1 e0 04	 shl	 eax, 4
  0000c	50		 push	 eax
  0000d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8

; 804  :     }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ENDP ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?isActive@CEffectMeshInstance@@IAEHXZ
_TEXT	SEGMENT
?isActive@CEffectMeshInstance@@IAEHXZ PROC		; CEffectMeshInstance::isActive, COMDAT
; _this$ = ecx

; 26   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 27   : 	if (!CEffectElementBaseInstance::isActive())

  00005	e8 00 00 00 00	 call	 ?isActive@CEffectElementBaseInstance@@QAE_NXZ ; CEffectElementBaseInstance::isActive
  0000a	84 c0		 test	 al, al
  0000c	74 6b		 je	 SHORT $LN3@isActive

; 28   : 		return FALSE;
; 29   : 
; 30   : 	if (!m_MeshFrameController.isActive())

  0000e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00011	6a 00		 push	 0
  00013	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00018	85 c0		 test	 eax, eax
  0001a	74 5d		 je	 SHORT $LN3@isActive
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001c	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0001f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00024	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00027	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00029	f7 e9		 imul	 ecx
  0002b	c1 fa 03	 sar	 edx, 3
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00035	74 42		 je	 SHORT $LN3@isActive
  00037	33 ff		 xor	 edi, edi
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@isActive:

; 35   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  00040	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00043	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00048	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 35   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  0004b	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0004e	03 cf		 add	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 36   : 		if (m_TextureInstanceVector[j].TextureFrameController.isActive(iCurrentFrame))

  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00056	85 c0		 test	 eax, eax
  00058	75 25		 jne	 SHORT $LN14@isActive
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005a	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0005d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00062	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00065	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00066	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00068	83 c7 30	 add	 edi, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0006b	c1 fa 03	 sar	 edx, 3
  0006e	8b c2		 mov	 eax, edx
  00070	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00073	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00075	3b d8		 cmp	 ebx, eax
  00077	72 c7		 jb	 SHORT $LL4@isActive
$LN3@isActive:
  00079	5f		 pop	 edi

; 37   : 			return TRUE;
; 38   : 	}
; 39   : 
; 40   : 	return FALSE;
; 41   : }

  0007a	5e		 pop	 esi
  0007b	33 c0		 xor	 eax, eax
  0007d	5b		 pop	 ebx
  0007e	c3		 ret	 0
$LN14@isActive:
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	b8 01 00 00 00	 mov	 eax, 1
  00086	5b		 pop	 ebx
  00087	c3		 ret	 0
?isActive@CEffectMeshInstance@@IAEHXZ ENDP		; CEffectMeshInstance::isActive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnRender@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
_fAlpha$1$ = -328					; size = 4
_dwG$1$ = -328						; size = 4
tv1939 = -328						; size = 4
_dwR$1$ = -324						; size = 4
_i$1$ = -324						; size = 4
_byType$1 = -317					; size = 1
_dwB$1$ = -316						; size = 4
_rTextureFrameController$1$ = -316			; size = 4
_Color$1$ = -312					; size = 4
_Position$1$ = -312					; size = 4
_fElapsedTime$ = -312					; size = 4
_Position$3$ = -308					; size = 4
_rFrameData$1$ = -308					; size = 4
_this$GSCopy$1$ = -304					; size = 4
tv2041 = -300						; size = 4
_pEffectMesh$1$ = -296					; size = 4
_result$2 = -292					; size = 8
tv1937 = -284						; size = 4
tv2026 = -280						; size = 4
_TableAlpha$3 = -276					; size = 4
tv2040 = -272						; size = 4
_q$4 = -268						; size = 16
_Color$5 = -252						; size = 16
_Position$6 = -236					; size = 12
_m_matWorld$7 = -224					; size = 64
$T8 = -160						; size = 64
_matTemp$9 = -160					; size = 64
$T10 = -160						; size = 64
_LastPosition$11 = -96					; size = 12
_Position$12 = -84					; size = 12
_matTemp$13 = -72					; size = 64
__$ArrayPad$ = -4					; size = 4
?OnRender@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnRender, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 44 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+328], eax
  0001a	56		 push	 esi
  0001b	8b f1		 mov	 esi, ecx
  0001d	57		 push	 edi
  0001e	89 74 24 20	 mov	 DWORD PTR _this$GSCopy$1$[esp+336], esi

; 63   : 	if (!isActive())

  00022	e8 00 00 00 00	 call	 ?isActive@CEffectMeshInstance@@IAEHXZ ; CEffectMeshInstance::isActive
  00027	85 c0		 test	 eax, eax
  00029	0f 84 62 09 00
	00		 je	 $LN3@OnRender

; 64   : 		return;
; 65   : 
; 66   : 	CEffectMesh * pEffectMesh = m_roMesh.GetPointer();

  0002f	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]

; 67   : 
; 68   : 	for (DWORD i = 0; i < pEffectMesh->GetMeshCount(); ++i)

  00032	33 ff		 xor	 edi, edi
  00034	8b c8		 mov	 ecx, eax
  00036	89 44 24 28	 mov	 DWORD PTR _pEffectMesh$1$[esp+336], eax
  0003a	89 7c 24 0c	 mov	 DWORD PTR _i$1$[esp+336], edi
  0003e	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
  00043	85 c0		 test	 eax, eax
  00045	0f 84 46 09 00
	00		 je	 $LN3@OnRender
  0004b	8d 56 2c	 lea	 edx, DWORD PTR [esi+44]
  0004e	89 54 24 40	 mov	 DWORD PTR tv2040[esp+336], edx
$LL4@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00052	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00055	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  00058	c1 e0 04	 shl	 eax, 4
  0005b	03 c8		 add	 ecx, eax
  0005d	89 44 24 24	 mov	 DWORD PTR tv2041[esp+336], eax
  00061	89 4c 24 14	 mov	 DWORD PTR _rTextureFrameController$1$[esp+336], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 73   : 		if (!rTextureFrameController.isActive(m_MeshFrameController.GetCurrentFrame()))

  00065	8b ca		 mov	 ecx, edx
  00067	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
  0006c	8b 4c 24 14	 mov	 ecx, DWORD PTR _rTextureFrameController$1$[esp+336]
  00070	0f b6 c0	 movzx	 eax, al
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00079	85 c0		 test	 eax, eax
  0007b	0f 84 f7 08 00
	00		 je	 $LN2@OnRender

; 74   : 			continue;
; 75   : 
; 76   : 		int iBillboardType = m_pMeshScript->GetBillboardType(i);

  00081	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00084	57		 push	 edi
  00085	e8 00 00 00 00	 call	 ?GetBillboardType@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::GetBillboardType
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0008a	c7 84 24 a8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+392], 0
  00095	c7 84 24 a4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+388], 0
  000a0	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+384], 0
  000ab	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+380], 0
  000b6	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+372], 0
  000c1	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+368], 0
  000cc	c7 84 24 8c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+364], 0
  000d7	c7 84 24 88 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+360], 0
  000e2	c7 84 24 80 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+352], 0
  000ed	c7 44 24 7c 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+348], 0
  000f5	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+344], 0
  000fd	c7 44 24 74 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+340], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00105	c7 84 24 ac 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+396], 1065353216 ; 3f800000H
  00110	c7 84 24 98 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+376], 1065353216 ; 3f800000H
  0011b	c7 84 24 84 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+356], 1065353216 ; 3f800000H
  00126	c7 44 24 70 00
	00 80 3f	 mov	 DWORD PTR _m_matWorld$7[esp+336], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 81   : 		switch(iBillboardType)

  0012e	83 e8 01	 sub	 eax, 1
  00131	0f 84 51 03 00
	00		 je	 $LN9@OnRender
  00137	83 e8 01	 sub	 eax, 1
  0013a	0f 84 3c 02 00
	00		 je	 $LN10@OnRender
  00140	83 e8 01	 sub	 eax, 1
  00143	0f 85 bd 03 00
	00		 jne	 $LN12@OnRender

; 105  : 
; 106  : 			case MESH_BILLBOARD_TYPE_MOVE:
; 107  : 				{
; 108  : 					D3DXVECTOR3 Position;
; 109  : 					m_pMeshScript->GetPosition(m_fLocalTime, Position);

  00149	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0014e	8d 44 24 64	 lea	 eax, DWORD PTR _Position$6[esp+336]
  00152	50		 push	 eax
  00153	51		 push	 ecx
  00154	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00157	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015c	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition

; 110  : 					D3DXVECTOR3 LastPosition;
; 111  : 					m_pMeshScript->GetPosition(m_fLocalTime-CTimer::Instance().GetElapsedSecond(), LastPosition);

  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00167	8d 84 24 f0 00
	00 00		 lea	 eax, DWORD PTR _LastPosition$11[esp+336]
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?GetElapsedSecond@CTimer@@QAEMXZ ; CTimer::GetElapsedSecond
  00174	d8 6e 0c	 fsubr	 DWORD PTR [esi+12]
  00177	51		 push	 ecx
  00178	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0017b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0017e	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  00183	f3 0f 10 54 24
	64		 movss	 xmm2, DWORD PTR _Position$6[esp+336]

; 214  :     y -= v.y;

  00189	f3 0f 10 4c 24
	68		 movss	 xmm1, DWORD PTR _Position$6[esp+340]
  0018f	f3 0f 5c 8c 24
	f4 00 00 00	 subss	 xmm1, DWORD PTR _LastPosition$11[esp+340]
  00198	f3 0f 5c 94 24
	f0 00 00 00	 subss	 xmm2, DWORD PTR _LastPosition$11[esp+336]

; 215  :     z -= v.z;

  001a1	f3 0f 10 44 24
	6c		 movss	 xmm0, DWORD PTR _Position$6[esp+344]
  001a7	f3 0f 5c 84 24
	f8 00 00 00	 subss	 xmm0, DWORD PTR _LastPosition$11[esp+344]
  001b0	f3 0f 11 4c 24
	68		 movss	 DWORD PTR _Position$6[esp+340], xmm1
  001b6	f3 0f 11 54 24
	64		 movss	 DWORD PTR _Position$6[esp+336], xmm2
  001bc	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c0	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 215  :     z -= v.z;

  001c4	f3 0f 11 44 24
	6c		 movss	 DWORD PTR _Position$6[esp+344], xmm0

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001ca	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001ce	f3 0f 58 ca	 addss	 xmm1, xmm2
  001d2	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 113  : 					if (D3DXVec3LengthSq(&Position)>0.001f)

  001d6	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3a83126f
  001dd	0f 86 23 03 00
	00		 jbe	 $LN12@OnRender

; 114  : 					{
; 115  : 						D3DXVec3Normalize(&Position,&Position);

  001e3	8d 44 24 64	 lea	 eax, DWORD PTR _Position$6[esp+336]
  001e7	50		 push	 eax
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001ee	f3 0f 10 74 24
	64		 movss	 xmm6, DWORD PTR _Position$6[esp+336]
  001f4	0f 57 d2	 xorps	 xmm2, xmm2

; 290  :     return x == v.x && y == v.y && z == v.z;

  001f7	f3 0f 10 4c 24
	6c		 movss	 xmm1, DWORD PTR _Position$6[esp+344]
  001fd	f3 0f 10 5c 24
	68		 movss	 xmm3, DWORD PTR _Position$6[esp+340]
  00203	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@bf800000

; 182  :     z = fz;

  0020b	0f 2e d6	 ucomiss xmm2, xmm6
  0020e	f3 0f 11 74 24
	18		 movss	 DWORD PTR _Position$1$[esp+336], xmm6

; 290  :     return x == v.x && y == v.y && z == v.z;

  00214	f3 0f 11 4c 24
	1c		 movss	 DWORD PTR _Position$3$[esp+336], xmm1

; 182  :     z = fz;

  0021a	9f		 lahf
  0021b	f6 c4 44	 test	 ah, 68			; 00000044H

; 290  :     return x == v.x && y == v.y && z == v.z;

  0021e	7a 32		 jp	 SHORT $LN34@OnRender
  00220	0f 2e fb	 ucomiss xmm7, xmm3
  00223	9f		 lahf
  00224	f6 c4 44	 test	 ah, 68			; 00000044H
  00227	7a 29		 jp	 SHORT $LN34@OnRender
  00229	0f 2e d1	 ucomiss xmm2, xmm1
  0022c	9f		 lahf
  0022d	f6 c4 44	 test	 ah, 68			; 00000044H
  00230	7a 20		 jp	 SHORT $LN34@OnRender

; 667  :     x = fx;

  00232	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00239	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
  0023d	50		 push	 eax
  0023e	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
  00242	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  00243	0f 11 44 24 4c	 movups	 XMMWORD PTR _q$4[esp+344], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00248	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  0024d	e9 b4 02 00 00	 jmp	 $LN12@OnRender
$LN34@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00252	0f 28 c6	 movaps	 xmm0, xmm6
  00255	0f 28 e3	 movaps	 xmm4, xmm3
  00258	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0025f	0f 28 e9	 movaps	 xmm5, xmm1
  00262	0f 57 25 00 00
	00 00		 xorps	 xmm4, DWORD PTR __xmm@80000000800000008000000080000000
  00269	0f 57 2d 00 00
	00 00		 xorps	 xmm5, DWORD PTR __xmm@80000000800000008000000080000000

; 182  :     z = fz;

  00270	0f 2e d0	 ucomiss xmm2, xmm0
  00273	9f		 lahf
  00274	f6 c4 44	 test	 ah, 68			; 00000044H

; 290  :     return x == v.x && y == v.y && z == v.z;

  00277	7a 32		 jp	 SHORT $LN35@OnRender
  00279	0f 2e fc	 ucomiss xmm7, xmm4
  0027c	9f		 lahf
  0027d	f6 c4 44	 test	 ah, 68			; 00000044H
  00280	7a 29		 jp	 SHORT $LN35@OnRender
  00282	0f 2e d5	 ucomiss xmm2, xmm5
  00285	9f		 lahf
  00286	f6 c4 44	 test	 ah, 68			; 00000044H
  00289	7a 20		 jp	 SHORT $LN35@OnRender

; 667  :     x = fx;

  0028b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00292	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
  00296	50		 push	 eax
  00297	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
  0029b	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  0029c	0f 11 44 24 4c	 movups	 XMMWORD PTR _q$4[esp+344], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  002a1	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  002a6	e9 5b 02 00 00	 jmp	 $LN12@OnRender
$LN35@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  002ab	0f 28 c3	 movaps	 xmm0, xmm3

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  002ae	f3 0f 59 ca	 mulss	 xmm1, xmm2

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  002b2	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f800000

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  002ba	f3 0f 59 c2	 mulss	 xmm0, xmm2

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  002be	f3 0f 11 4c 24
	38		 movss	 DWORD PTR tv2026[esp+336], xmm1
  002c4	f3 0f 11 44 24
	08		 movss	 DWORD PTR tv1939[esp+336], xmm0
  002ca	0f 28 c6	 movaps	 xmm0, xmm6
  002cd	f3 0f 59 c2	 mulss	 xmm0, xmm2
  002d1	f3 0f 11 44 24
	34		 movss	 DWORD PTR tv1937[esp+336], xmm0

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  002d7	f3 0f 5c c3	 subss	 xmm0, xmm3
  002db	f3 0f 58 c1	 addss	 xmm0, xmm1
  002df	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h

; 56   : 	float s = sqrtf((1+d)*2);

  002e2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  002ea	f3 0f 58 c0	 addss	 xmm0, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  002ee	0f 5a c0	 cvtps2pd xmm0, xmm0
  002f1	66 0f 2e c8	 ucomisd xmm1, xmm0
  002f5	77 06		 ja	 SHORT $LN172@OnRender
  002f7	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  002fb	eb 05		 jmp	 SHORT $LN173@OnRender
$LN172@OnRender:
  002fd	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN173@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00302	f3 0f 10 4c 24
	1c		 movss	 xmm1, DWORD PTR _Position$3$[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00308	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0030c	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@bf800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00314	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00315	f3 0f 10 54 24
	0c		 movss	 xmm2, DWORD PTR tv1939[esp+340]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  0031b	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0031f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00323	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00324	f3 0f 5c ca	 subss	 xmm1, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h

; 56   : 	float s = sqrtf((1+d)*2);

  00328	f3 0f 5e c8	 divss	 xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  0032c	f3 0f 11 4c 24
	4c		 movss	 DWORD PTR _q$4[esp+344], xmm1

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00332	f3 0f 10 4c 24
	3c		 movss	 xmm1, DWORD PTR tv1937[esp+344]
  00338	f3 0f 5c 4c 24
	40		 subss	 xmm1, DWORD PTR tv2026[esp+344]

; 667  :     x = fx;

  0033e	f3 0f 5e c8	 divss	 xmm1, xmm0

; 668  :     y = fy;

  00342	f3 0f 11 4c 24
	50		 movss	 DWORD PTR _q$4[esp+348], xmm1

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00348	f3 0f 10 4c 24
	20		 movss	 xmm1, DWORD PTR _Position$1$[esp+344]
  0034e	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@bf800000
  00356	f3 0f 5c d1	 subss	 xmm2, xmm1

; 668  :     y = fy;

  0035a	f3 0f 5e d0	 divss	 xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\GrpMath.h

; 58   : 	return D3DXQUATERNION(c.x/s,c.y/s,c.z/s,s*0.5f);

  0035e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 669  :     z = fz;

  00366	f3 0f 11 54 24
	54		 movss	 DWORD PTR _q$4[esp+352], xmm2

; 670  :     w = fw;

  0036c	f3 0f 11 44 24
	58		 movss	 DWORD PTR _q$4[esp+356], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00372	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  00377	e9 8a 01 00 00	 jmp	 $LN12@OnRender
$LN10@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0037c	c7 84 24 e8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+392], 0
  00387	c7 84 24 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+388], 0
  00392	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+384], 0
  0039d	c7 84 24 dc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+380], 0
  003a8	c7 84 24 d4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+372], 0
  003b3	c7 84 24 d0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+368], 0
  003be	c7 84 24 cc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+364], 0
  003c9	c7 84 24 c8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+360], 0
  003d4	c7 84 24 c0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+352], 0
  003df	c7 84 24 bc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+348], 0
  003ea	c7 84 24 b8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+344], 0
  003f5	c7 84 24 b4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+340], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00400	c7 84 24 ec 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+396], 1065353216 ; 3f800000H
  0040b	c7 84 24 d8 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+376], 1065353216 ; 3f800000H
  00416	c7 84 24 c4 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+356], 1065353216 ; 3f800000H
  00421	c7 84 24 b0 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+336], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 98   : 					D3DXMatrixInverse(&matTemp, NULL, &CScreen::GetViewMatrix());

  0042c	e8 00 00 00 00	 call	 ?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ ; CGraphicBase::GetViewMatrix
  00431	50		 push	 eax
  00432	6a 00		 push	 0
  00434	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR _matTemp$9[esp+344]
  0043b	50		 push	 eax
  0043c	e8 00 00 00 00	 call	 _D3DXMatrixInverse@12

; 99   : 					m_matWorld._11 = matTemp._11;

  00441	f3 0f 10 84 24
	b0 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+336]
  0044a	f3 0f 11 44 24
	70		 movss	 DWORD PTR _m_matWorld$7[esp+336], xmm0

; 100  : 					m_matWorld._12 = matTemp._12;

  00450	f3 0f 10 84 24
	b4 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+340]
  00459	f3 0f 11 44 24
	74		 movss	 DWORD PTR _m_matWorld$7[esp+340], xmm0

; 101  : 					m_matWorld._21 = matTemp._21;

  0045f	f3 0f 10 84 24
	c0 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+352]
  00468	f3 0f 11 84 24
	80 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+352], xmm0

; 102  : 					m_matWorld._22 = matTemp._22;

  00471	f3 0f 10 84 24
	c4 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+356]
  0047a	f3 0f 11 84 24
	84 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+356], xmm0

; 103  : 				}
; 104  : 				break;

  00483	e9 7e 00 00 00	 jmp	 $LN12@OnRender
$LN9@OnRender:

; 82   : 		{
; 83   : 			case MESH_BILLBOARD_TYPE_ALL:
; 84   : 				{
; 85   : 					D3DXMATRIX matTemp;
; 86   : 					D3DXMatrixRotationX(&matTemp, 90.0f);

  00488	51		 push	 ecx
  00489	8d 84 24 0c 01
	00 00		 lea	 eax, DWORD PTR _matTemp$13[esp+340]
  00490	c7 04 24 00 00
	b4 42		 mov	 DWORD PTR [esp], 1119092736 ; 42b40000H
  00497	50		 push	 eax
  00498	e8 00 00 00 00	 call	 _D3DXMatrixRotationX@8

; 87   : 					D3DXMatrixInverse(&m_matWorld, NULL, &CScreen::GetViewMatrix());

  0049d	e8 00 00 00 00	 call	 ?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ ; CGraphicBase::GetViewMatrix
  004a2	50		 push	 eax
  004a3	6a 00		 push	 0
  004a5	8d 44 24 78	 lea	 eax, DWORD PTR _m_matWorld$7[esp+344]
  004a9	50		 push	 eax
  004aa	e8 00 00 00 00	 call	 _D3DXMatrixInverse@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  004af	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  004b3	50		 push	 eax
  004b4	8d 84 24 0c 01
	00 00		 lea	 eax, DWORD PTR _matTemp$13[esp+340]
  004bb	50		 push	 eax
  004bc	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR $T10[esp+344]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 89   : 					m_matWorld = matTemp * m_matWorld;

  004c9	0f 10 84 24 b0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+336]
  004d1	0f 11 44 24 70	 movups	 XMMWORD PTR _m_matWorld$7[esp+336], xmm0
  004d6	0f 10 84 24 c0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+352]
  004de	0f 11 84 24 80
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+352], xmm0
  004e6	0f 10 84 24 d0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+368]
  004ee	0f 11 84 24 90
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+368], xmm0
  004f6	0f 10 84 24 e0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+384]
  004fe	0f 11 84 24 a0
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+384], xmm0
$LN12@OnRender:

; 118  : 					}
; 119  : 				}
; 120  : 				break;
; 121  : 		}
; 122  : 
; 123  : 		if (!m_pMeshScript->isBlendingEnable(i))

  00506	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00509	57		 push	 edi
  0050a	e8 00 00 00 00	 call	 ?isBlendingEnable@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::isBlendingEnable
  0050f	85 c0		 test	 eax, eax
  00511	75 10		 jne	 SHORT $LN13@OnRender

; 124  : 		{
; 125  : 			STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, FALSE);

  00513	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00519	50		 push	 eax
  0051a	6a 1b		 push	 27			; 0000001bH
  0051c	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 126  : 		}

  00521	eb 4e		 jmp	 SHORT $LN14@OnRender
$LN13@OnRender:

; 127  : 		else
; 128  : 		{
; 129  : 			int iBlendingSrcType = m_pMeshScript->GetBlendingSrcType(i);

  00523	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00526	57		 push	 edi
  00527	e8 00 00 00 00	 call	 ?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z ; CEffectMeshScript::GetBlendingSrcType

; 130  : 			int iBlendingDestType = m_pMeshScript->GetBlendingDestType(i);

  0052c	ff 74 24 0c	 push	 DWORD PTR _i$1$[esp+336]
  00530	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00533	0f b6 f8	 movzx	 edi, al
  00536	e8 00 00 00 00	 call	 ?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z ; CEffectMeshScript::GetBlendingDestType

; 131  : 			STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0053b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00541	6a 01		 push	 1
  00543	6a 1b		 push	 27			; 0000001bH
  00545	0f b6 f0	 movzx	 esi, al
  00548	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 132  : 			STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, iBlendingSrcType);

  0054d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00553	57		 push	 edi
  00554	6a 13		 push	 19			; 00000013H
  00556	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 133  : 			STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, iBlendingDestType);

  0055b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00561	56		 push	 esi
  00562	6a 14		 push	 20			; 00000014H
  00564	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  00569	8b 7c 24 0c	 mov	 edi, DWORD PTR _i$1$[esp+336]
  0056d	8b 74 24 20	 mov	 esi, DWORD PTR _this$GSCopy$1$[esp+336]
$LN14@OnRender:

; 134  : 		}
; 135  : 
; 136  : 		D3DXVECTOR3 Position;
; 137  : 		m_pMeshScript->GetPosition(m_fLocalTime, Position);

  00571	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00576	8d 84 24 fc 00
	00 00		 lea	 eax, DWORD PTR _Position$12[esp+336]
  0057d	50		 push	 eax
  0057e	51		 push	 ecx
  0057f	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00582	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00587	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition

; 138  : 		m_matWorld._41 = Position.x;

  0058c	f3 0f 10 84 24
	fc 00 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  00595	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  00599	ff 76 04	 push	 DWORD PTR [esi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 138  : 		m_matWorld._41 = Position.x;

  0059c	f3 0f 11 84 24
	a4 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+388], xmm0

; 139  : 		m_matWorld._42 = Position.y;

  005a5	f3 0f 10 84 24
	04 01 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+344]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005ae	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 139  : 		m_matWorld._42 = Position.y;

  005af	f3 0f 11 84 24
	ac 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+396], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005b8	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR $T8[esp+344]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 140  : 		m_matWorld._43 = Position.z;

  005bf	f3 0f 10 84 24
	0c 01 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+352]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005c8	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 140  : 		m_matWorld._43 = Position.z;

  005c9	f3 0f 11 84 24
	b4 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+404], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005d2	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 141  : 		m_matWorld = m_matWorld * *mc_pmatLocal;

  005d7	0f 10 84 24 b0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+336]

; 142  : 		STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorld);

  005df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  005e5	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  005e9	50		 push	 eax
  005ea	0f 11 44 24 74	 movups	 XMMWORD PTR _m_matWorld$7[esp+340], xmm0
  005ef	68 00 01 00 00	 push	 256			; 00000100H
  005f4	0f 10 84 24 c8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+360]
  005fc	0f 11 84 24 88
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+360], xmm0
  00604	0f 10 84 24 d8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+376]
  0060c	0f 11 84 24 98
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+376], xmm0
  00614	0f 10 84 24 e8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+392]
  0061c	0f 11 84 24 a8
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+392], xmm0
  00624	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00629	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 146  : 		if (m_pMeshScript->GetColorOperationType(i, &byType))

  00630	8d 44 24 13	 lea	 eax, DWORD PTR _byType$1[esp+336]
  00634	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00637	50		 push	 eax
  00638	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00639	0f 11 44 24 5c	 movups	 XMMWORD PTR _Color$5[esp+344], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 146  : 		if (m_pMeshScript->GetColorOperationType(i, &byType))

  0063e	e8 00 00 00 00	 call	 ?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z ; CEffectMeshScript::GetColorOperationType
  00643	85 c0		 test	 eax, eax
  00645	74 15		 je	 SHORT $LN15@OnRender

; 147  : 			STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, byType);

  00647	0f b6 44 24 13	 movzx	 eax, BYTE PTR _byType$1[esp+336]
  0064c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00652	50		 push	 eax
  00653	6a 01		 push	 1
  00655	6a 00		 push	 0
  00657	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
$LN15@OnRender:

; 148  : 		m_pMeshScript->GetColorFactor(i, &Color);

  0065c	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0065f	8d 44 24 54	 lea	 eax, DWORD PTR _Color$5[esp+336]
  00663	50		 push	 eax
  00664	57		 push	 edi
  00665	e8 00 00 00 00	 call	 ?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z ; CEffectMeshScript::GetColorFactor

; 149  : 
; 150  : 		TTimeEventTableFloat * TableAlpha;
; 151  : 
; 152  : 		float fAlpha = 1.0f;

  0066a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000

; 153  : 		if (m_pMeshScript->GetTimeTableAlphaPointer(i, &TableAlpha) && !TableAlpha->empty())

  00672	8d 44 24 3c	 lea	 eax, DWORD PTR _TableAlpha$3[esp+336]
  00676	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00679	50		 push	 eax
  0067a	57		 push	 edi
  0067b	f3 0f 11 44 24
	10		 movss	 DWORD PTR _fAlpha$1$[esp+344], xmm0
  00681	e8 00 00 00 00	 call	 ?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; CEffectMeshScript::GetTimeTableAlphaPointer
  00686	85 c0		 test	 eax, eax
  00688	0f 84 06 01 00
	00		 je	 $LN73@OnRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0068e	8b 4c 24 3c	 mov	 ecx, DWORD PTR _TableAlpha$3[esp+336]
  00692	8b 01		 mov	 eax, DWORD PTR [ecx]
  00694	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00697	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 153  : 		if (m_pMeshScript->GetTimeTableAlphaPointer(i, &TableAlpha) && !TableAlpha->empty())

  00699	0f 84 f5 00 00
	00		 je	 $LN73@OnRender

; 154  : 			GetTimeEventBlendValue(m_fLocalTime,*TableAlpha, &fAlpha);

  0069f	f3 0f 10 4e 0c	 movss	 xmm1, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  006a4	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 154  : 			GetTimeEventBlendValue(m_fLocalTime,*TableAlpha, &fAlpha);

  006a7	f3 0f 11 4c 24
	18		 movss	 DWORD PTR _fElapsedTime$[esp+336], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 120  :         _Ptr += _Off;

  006ad	3b d1		 cmp	 edx, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 232  : 	if(rVector.begin()+1==rVector.end())

  006af	75 10		 jne	 SHORT $LN69@OnRender

; 233  : 	{
; 234  : 		*pReturnValue = rVector.front().m_Value;

  006b1	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006b6	f3 0f 11 44 24
	08		 movss	 DWORD PTR _fAlpha$1$[esp+336], xmm0

; 235  : 		return;

  006bc	e9 d3 00 00 00	 jmp	 $LN73@OnRender
$LN69@OnRender:

; 236  : 	}
; 237  : 
; 238  : 	if (fElapsedTime < rVector.front().m_fTime)

  006c1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006c5	0f 2f c1	 comiss	 xmm0, xmm1
  006c8	76 10		 jbe	 SHORT $LN70@OnRender

; 239  : 	{
; 240  : 		*pReturnValue = rVector.front().m_Value;

  006ca	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006cf	f3 0f 11 44 24
	08		 movss	 DWORD PTR _fAlpha$1$[esp+336], xmm0

; 241  : 		return;

  006d5	e9 ba 00 00 00	 jmp	 $LN73@OnRender
$LN70@OnRender:

; 242  : 	}
; 243  : 
; 244  : 	if (fElapsedTime > rVector.back().m_fTime)

  006da	0f 2f 49 f8	 comiss	 xmm1, DWORD PTR [ecx-8]
  006de	76 10		 jbe	 SHORT $LN71@OnRender

; 245  : 	{
; 246  : 		*pReturnValue = rVector.back().m_Value;

  006e0	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  006e5	f3 0f 11 44 24
	08		 movss	 DWORD PTR _fAlpha$1$[esp+336], xmm0

; 247  : 		return;

  006eb	e9 a4 00 00 00	 jmp	 $LN73@OnRender
$LN71@OnRender:

; 252  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  006f0	8d 54 24 18	 lea	 edx, DWORD PTR _fElapsedTime$[esp+336]
  006f4	52		 push	 edx
  006f5	51		 push	 ecx
  006f6	50		 push	 eax
  006f7	8d 44 24 38	 lea	 eax, DWORD PTR _result$2[esp+348]
  006fb	50		 push	 eax
  006fc	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00701	8b 4c 24 40	 mov	 ecx, DWORD PTR _result$2[esp+356]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 252  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00705	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00708	8b 44 24 2c	 mov	 eax, DWORD PTR _result$2[esp+336]
  0070c	3b c1		 cmp	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 254  : 	if (result.first != result.second)

  0070e	74 16		 je	 SHORT $LN72@OnRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00710	50		 push	 eax
  00711	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00716	83 c4 04	 add	 esp, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 255  : 		*pReturnValue = result.first->m_Value;

  00719	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0071e	f3 0f 11 44 24
	08		 movss	 DWORD PTR _fAlpha$1$[esp+336], xmm0
  00724	eb 6e		 jmp	 SHORT $LN73@OnRender
$LN72@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 92   :         --_Ptr;

  00726	83 e8 08	 sub	 eax, 8

; 256  :         return _Const_cast(_Mybase::operator->());

  00729	51		 push	 ecx

; 92   :         --_Ptr;

  0072a	89 44 24 30	 mov	 DWORD PTR _result$2[esp+340], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  0072e	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00733	ff 74 24 30	 push	 DWORD PTR _result$2[esp+340]
  00737	8b f0		 mov	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 259  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00739	8b 44 24 28	 mov	 eax, DWORD PTR _this$GSCopy$1$[esp+344]
  0073d	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00741	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  00746	f3 0f 11 44 24
	10		 movss	 DWORD PTR _fAlpha$1$[esp+344], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  0074c	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 259  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00751	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00755	f3 0f 10 4c 24
	10		 movss	 xmm1, DWORD PTR _fAlpha$1$[esp+344]

; 260  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0075b	ff 74 24 34	 push	 DWORD PTR _result$2[esp+344]
  0075f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00763	f3 0f 5e c8	 divss	 xmm1, xmm0
  00767	f3 0f 11 4c 24
	14		 movss	 DWORD PTR _fAlpha$1$[esp+348], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  0076d	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 260  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00772	f3 0f 10 54 24
	14		 movss	 xmm2, DWORD PTR _fAlpha$1$[esp+348]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00778	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 260  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0077b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00780	f3 0f 5c 46 04	 subss	 xmm0, DWORD PTR [esi+4]
  00785	f3 0f 59 d0	 mulss	 xmm2, xmm0
  00789	f3 0f 58 56 04	 addss	 xmm2, DWORD PTR [esi+4]
  0078e	f3 0f 11 54 24
	08		 movss	 DWORD PTR _fAlpha$1$[esp+336], xmm2
$LN73@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 157  : 		CEffectMesh::TEffectMeshData * pMeshData = pEffectMesh->GetMeshDataPointer(i);

  00794	8b 4c 24 28	 mov	 ecx, DWORD PTR _pEffectMesh$1$[esp+336]
  00798	57		 push	 edi
  00799	e8 00 00 00 00	 call	 ?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z ; CEffectMesh::GetMeshDataPointer

; 158  : 
; 159  : 		assert(m_MeshFrameController.GetCurrentFrame() < pMeshData->EffectFrameDataVector.size());
; 160  : 		CEffectMesh::TEffectFrameData & rFrameData = pMeshData->EffectFrameDataVector[m_MeshFrameController.GetCurrentFrame()];

  0079e	8b 4c 24 40	 mov	 ecx, DWORD PTR tv2040[esp+336]
  007a2	8b f0		 mov	 esi, eax
  007a4	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  007a9	8b 4c 24 14	 mov	 ecx, DWORD PTR _rTextureFrameController$1$[esp+336]
  007ad	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  007b0	c1 e0 05	 shl	 eax, 5
  007b3	03 86 a0 00 00
	00		 add	 eax, DWORD PTR [esi+160]
  007b9	89 44 24 1c	 mov	 DWORD PTR _rFrameData$1$[esp+336], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  007bd	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  007c2	8b 74 24 20	 mov	 esi, DWORD PTR _this$GSCopy$1$[esp+336]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007c6	8b 54 24 24	 mov	 edx, DWORD PTR tv2041[esp+336]
  007ca	8b 7c 24 24	 mov	 edi, DWORD PTR tv2041[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  007ce	0f b6 c8	 movzx	 ecx, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  007d1	8b 46 50	 mov	 eax, DWORD PTR [esi+80]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007d4	8b 54 02 24	 mov	 edx, DWORD PTR [edx+eax+36]
  007d8	8b 44 07 28	 mov	 eax, DWORD PTR [edi+eax+40]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 163  : 		if (dwcurTextureFrame < m_TextureInstanceVector[i].TextureInstanceVector.size())

  007dc	8b 7c 24 0c	 mov	 edi, DWORD PTR _i$1$[esp+336]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  007e0	2b c2		 sub	 eax, edx
  007e2	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 163  : 		if (dwcurTextureFrame < m_TextureInstanceVector[i].TextureInstanceVector.size())

  007e5	3b c8		 cmp	 ecx, eax
  007e7	73 1d		 jae	 SHORT $LN17@OnRender

; 164  : 		{
; 165  : 			CGraphicImageInstance * pImageInstance = m_TextureInstanceVector[i].TextureInstanceVector[dwcurTextureFrame];
; 166  : 			STATEMANAGER.SetTexture(0, pImageInstance->GetTexturePointer()->GetD3DTexture());

  007e9	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  007ec	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  007f1	8b c8		 mov	 ecx, eax
  007f3	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  007f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  007fe	50		 push	 eax
  007ff	6a 00		 push	 0
  00801	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
$LN17@OnRender:

; 169  : 		Color.a = fAlpha * rFrameData.fVisibility;

  00806	8b 44 24 1c	 mov	 eax, DWORD PTR _rFrameData$1$[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  0080a	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 169  : 		Color.a = fAlpha * rFrameData.fVisibility;

  0080d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00812	f3 0f 59 44 24
	08		 mulss	 xmm0, DWORD PTR _fAlpha$1$[esp+336]
  00818	f3 0f 11 44 24
	18		 movss	 DWORD PTR _Color$1$[esp+336], xmm0
  0081e	f3 0f 11 44 24
	60		 movss	 DWORD PTR _Color$5[esp+348], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00824	f3 0f 10 44 24
	54		 movss	 xmm0, DWORD PTR _Color$5[esp+336]
  0082a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00831	72 0a		 jb	 SHORT $LN149@OnRender
  00833	c7 44 24 0c ff
	00 00 00	 mov	 DWORD PTR _dwR$1$[esp+336], 255 ; 000000ffH
  0083b	eb 2b		 jmp	 SHORT $LN148@OnRender
$LN149@OnRender:
  0083d	0f 2f c8	 comiss	 xmm1, xmm0
  00840	72 0a		 jb	 SHORT $LN147@OnRender
  00842	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR _dwR$1$[esp+336], 0
  0084a	eb 1c		 jmp	 SHORT $LN148@OnRender
$LN147@OnRender:
  0084c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00854	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0085c	e8 00 00 00 00	 call	 __ftoui3
  00861	89 44 24 0c	 mov	 DWORD PTR _dwR$1$[esp+336], eax
  00865	0f 57 c9	 xorps	 xmm1, xmm1
$LN148@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  00868	f3 0f 10 44 24
	58		 movss	 xmm0, DWORD PTR _Color$5[esp+340]
  0086e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00875	72 0a		 jb	 SHORT $LN153@OnRender
  00877	c7 44 24 08 ff
	00 00 00	 mov	 DWORD PTR _dwG$1$[esp+336], 255 ; 000000ffH
  0087f	eb 28		 jmp	 SHORT $LN152@OnRender
$LN153@OnRender:
  00881	0f 2f c8	 comiss	 xmm1, xmm0
  00884	72 0a		 jb	 SHORT $LN151@OnRender
  00886	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR _dwG$1$[esp+336], 0
  0088e	eb 19		 jmp	 SHORT $LN152@OnRender
$LN151@OnRender:
  00890	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00898	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  008a0	e8 00 00 00 00	 call	 __ftoui3
  008a5	89 44 24 08	 mov	 DWORD PTR _dwG$1$[esp+336], eax
$LN152@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  008a9	f3 0f 10 44 24
	5c		 movss	 xmm0, DWORD PTR _Color$5[esp+344]
  008af	0f 57 c9	 xorps	 xmm1, xmm1
  008b2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  008b9	72 0a		 jb	 SHORT $LN157@OnRender
  008bb	c7 44 24 14 ff
	00 00 00	 mov	 DWORD PTR _dwB$1$[esp+336], 255 ; 000000ffH
  008c3	eb 2b		 jmp	 SHORT $LN156@OnRender
$LN157@OnRender:
  008c5	0f 2f c8	 comiss	 xmm1, xmm0
  008c8	72 0a		 jb	 SHORT $LN155@OnRender
  008ca	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR _dwB$1$[esp+336], 0
  008d2	eb 1c		 jmp	 SHORT $LN156@OnRender
$LN155@OnRender:
  008d4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  008dc	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  008e4	e8 00 00 00 00	 call	 __ftoui3
  008e9	89 44 24 14	 mov	 DWORD PTR _dwB$1$[esp+336], eax
  008ed	0f 57 c9	 xorps	 xmm1, xmm1
$LN156@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  008f0	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _Color$1$[esp+336]
  008f6	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  008fd	72 07		 jb	 SHORT $LN161@OnRender
  008ff	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00904	eb 1e		 jmp	 SHORT $LN160@OnRender
$LN161@OnRender:
  00906	0f 2f c8	 comiss	 xmm1, xmm0
  00909	72 04		 jb	 SHORT $LN159@OnRender
  0090b	33 c0		 xor	 eax, eax
  0090d	eb 15		 jmp	 SHORT $LN160@OnRender
$LN159@OnRender:
  0090f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00917	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0091f	e8 00 00 00 00	 call	 __ftoui3
$LN160@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 170  : 		STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, DWORD(Color));

  00924	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  0092a	c1 e0 08	 shl	 eax, 8
  0092d	0b 44 24 0c	 or	 eax, DWORD PTR _dwR$1$[esp+336]
  00931	c1 e0 08	 shl	 eax, 8
  00934	0b 44 24 08	 or	 eax, DWORD PTR _dwG$1$[esp+336]
  00938	c1 e0 08	 shl	 eax, 8
  0093b	0b 44 24 14	 or	 eax, DWORD PTR _dwB$1$[esp+336]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 170  : 		STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, DWORD(Color));

  0093f	50		 push	 eax
  00940	6a 3c		 push	 60			; 0000003cH
  00942	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 171  : 		STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_TEX1);

  00947	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0094d	68 02 01 00 00	 push	 258			; 00000102H
  00952	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 172  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLELIST,

  00957	8b 4c 24 1c	 mov	 ecx, DWORD PTR _rFrameData$1$[esp+336]
  0095b	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  00960	6a 14		 push	 20			; 00000014H
  00962	f7 61 10	 mul	 DWORD PTR [ecx+16]
  00965	ff 71 14	 push	 DWORD PTR [ecx+20]
  00968	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0096e	d1 ea		 shr	 edx, 1
  00970	52		 push	 edx
  00971	6a 04		 push	 4
  00973	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
$LN2@OnRender:

; 67   : 
; 68   : 	for (DWORD i = 0; i < pEffectMesh->GetMeshCount(); ++i)

  00978	8b 4c 24 28	 mov	 ecx, DWORD PTR _pEffectMesh$1$[esp+336]
  0097c	47		 inc	 edi
  0097d	89 7c 24 0c	 mov	 DWORD PTR _i$1$[esp+336], edi
  00981	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
  00986	8d 56 2c	 lea	 edx, DWORD PTR [esi+44]
  00989	3b f8		 cmp	 edi, eax
  0098b	0f 82 c1 f6 ff
	ff		 jb	 $LL4@OnRender
$LN3@OnRender:

; 173  : 									 rFrameData.dwIndexCount/3,
; 174  : 									 &rFrameData.PDTVertexVector[0],
; 175  : 									 sizeof(TPTVertex));
; 176  : 		// Render //
; 177  : 	}
; 178  : }

  00991	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+336]
  00998	5f		 pop	 edi
  00999	5e		 pop	 esi
  0099a	33 cc		 xor	 ecx, esp
  0099c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009a1	8b e5		 mov	 esp, ebp
  009a3	5d		 pop	 ebp
  009a4	c3		 ret	 0
?OnRender@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnUpdate@CEffectMeshInstance@@MAE_NM@Z
_TEXT	SEGMENT
_j$1$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?OnUpdate@CEffectMeshInstance@@MAE_NM@Z PROC		; CEffectMeshInstance::OnUpdate, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 45   : 	if (!isActive())

  00007	e8 00 00 00 00	 call	 ?isActive@CEffectMeshInstance@@IAEHXZ ; CEffectMeshInstance::isActive
  0000c	85 c0		 test	 eax, eax
  0000e	75 09		 jne	 SHORT $LN5@OnUpdate

; 46   : 		return false;

  00010	32 c0		 xor	 al, al
  00012	5e		 pop	 esi

; 59   : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN5@OnUpdate:
  00019	53		 push	 ebx

; 47   : 
; 48   : 	if (m_MeshFrameController.isActive())

  0001a	6a 00		 push	 0
  0001c	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0001f	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00024	85 c0		 test	 eax, eax
  00026	74 13		 je	 SHORT $LN6@OnUpdate

; 49   : 		m_MeshFrameController.Update(fElapsedTime);

  00028	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0002d	51		 push	 ecx
  0002e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00031	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00036	e8 00 00 00 00	 call	 ?Update@CFrameController@@QAEXM@Z ; CFrameController::Update
$LN6@OnUpdate:

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0003b	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00042	89 4d fc	 mov	 DWORD PTR _j$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00045	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00048	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
  0004b	f7 e9		 imul	 ecx
  0004d	c1 fa 03	 sar	 edx, 3
  00050	8b c2		 mov	 eax, edx
  00052	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00055	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00057	74 59		 je	 SHORT $LN3@OnUpdate
  00059	57		 push	 edi
  0005a	33 ff		 xor	 edi, edi
  0005c	0f 1f 40 00	 npad	 4
$LL4@OnUpdate:

; 53   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  00060	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00063	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00068	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 53   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  0006b	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0006e	03 cf		 add	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 54   : 		if (m_TextureInstanceVector[j].TextureFrameController.isActive(iCurrentFrame))

  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00076	85 c0		 test	 eax, eax
  00078	74 15		 je	 SHORT $LN2@OnUpdate

; 55   : 			m_TextureInstanceVector[j].TextureFrameController.Update(fElapsedTime);

  0007a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0007f	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00080	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00083	03 cf		 add	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 55   : 			m_TextureInstanceVector[j].TextureFrameController.Update(fElapsedTime);

  00085	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008a	e8 00 00 00 00	 call	 ?Update@CFrameController@@QAEXM@Z ; CFrameController::Update
$LN2@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0008f	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00092	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00097	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0009a	83 c7 30	 add	 edi, 48			; 00000030H
  0009d	ff 45 fc	 inc	 DWORD PTR _j$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a0	f7 e9		 imul	 ecx
  000a2	c1 fa 03	 sar	 edx, 3
  000a5	8b c2		 mov	 eax, edx
  000a7	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000aa	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  000ac	39 45 fc	 cmp	 DWORD PTR _j$1$[ebp], eax
  000af	72 af		 jb	 SHORT $LL4@OnUpdate
  000b1	5f		 pop	 edi
$LN3@OnUpdate:

; 56   : 	}
; 57   : 
; 58   : 	return true;

  000b2	5b		 pop	 ebx
  000b3	b0 01		 mov	 al, 1
  000b5	5e		 pop	 esi

; 59   : }

  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?OnUpdate@CEffectMeshInstance@@MAE_NM@Z ENDP		; CEffectMeshInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnDestroy@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?OnDestroy@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnDestroy, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	53		 push	 ebx
  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00008	8b 70 50	 mov	 esi, DWORD PTR [eax+80]

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0000b	8d 58 50	 lea	 ebx, DWORD PTR [eax+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 257  : {

  0000e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000f	8b 78 54	 mov	 edi, DWORD PTR [eax+84]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 257  : {

  00012	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00015	3b f7		 cmp	 esi, edi
  00017	74 17		 je	 SHORT $LN17@OnDestroy
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@OnDestroy:

; 236  :         _Func(*_UFirst);

  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ; CEffectMeshInstance_DeleteTextureInstance
  00026	83 c6 30	 add	 esi, 48			; 00000030H
  00029	83 c4 04	 add	 esp, 4
  0002c	3b f7		 cmp	 esi, edi
  0002e	75 f0		 jne	 SHORT $LL18@OnDestroy
$LN17@OnDestroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00030	53		 push	 ebx
  00031	ff 73 04	 push	 DWORD PTR [ebx+4]
  00034	ff 33		 push	 DWORD PTR [ebx]
  00036	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1390 :         _Mylast = _Myfirst;

  0003b	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00040	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 68   : 
; 69   : 			m_pObject = pObject;

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  0004b	c7 40 5c 00 00
	00 00		 mov	 DWORD PTR [eax+92], 0
  00052	5b		 pop	 ebx

; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();
; 73   : 
; 74   : 			if (pOldObject)

  00053	85 c9		 test	 ecx, ecx
  00055	74 05		 je	 SHORT $LN26@OnDestroy

; 75   : 				pOldObject->Release();

  00057	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN26@OnDestroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 261  : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?OnDestroy@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnInitialize@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
?OnInitialize@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnInitialize, COMDAT
; _this$ = ecx

; 254  : }

  00000	c2 00 00	 ret	 0
?OnInitialize@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pTextureVector$1$ = -36				; size = 4
_pImage$1$ = -32					; size = 4
$T3 = -28						; size = 4
_pkNewData$4 = -28					; size = 4
_pImageInstance$5 = -28					; size = 4
tv884 = -24						; size = 4
_pMeshData$6 = -20					; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_j$1$ = 8						; size = 4
_pElement$ = 8						; size = 4
$T7 = 11						; size = 1
?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z PROC ; CEffectMeshInstance::OnSetDataPointer, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx

; 182  : 	CEffectMeshScript * pMesh = (CEffectMeshScript *)pElement;
; 183  : 	m_pMeshScript = pMesh;

  0002d	8b 7d 08	 mov	 edi, DWORD PTR _pElement$[ebp]

; 184  : 
; 185  : 	const char * c_szMeshFileName = pMesh->GetMeshFileName();

  00030	8b cf		 mov	 ecx, edi
  00032	89 7b 24	 mov	 DWORD PTR [ebx+36], edi
  00035	e8 00 00 00 00	 call	 ?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ ; CEffectMeshScript::GetMeshFileName

; 186  : 
; 187  : 	m_pEffectMesh = (CEffectMesh *) CResourceManager::Instance().GetResourcePointer(c_szMeshFileName);

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00046	89 43 28	 mov	 DWORD PTR [ebx+40], eax

; 188  : 
; 189  : 	if (!m_pEffectMesh)

  00049	85 c0		 test	 eax, eax
  0004b	0f 84 e7 02 00
	00		 je	 $LN104@OnSetDataP
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00051	8b 73 5c	 mov	 esi, DWORD PTR [ebx+92]

; 68   : 
; 69   : 			m_pObject = pObject;
; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();

  00054	8b c8		 mov	 ecx, eax
  00056	89 43 5c	 mov	 DWORD PTR [ebx+92], eax
  00059	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 73   : 
; 74   : 			if (pOldObject)

  0005e	85 f6		 test	 esi, esi
  00060	74 07		 je	 SHORT $LN15@OnSetDataP

; 75   : 				pOldObject->Release();

  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN15@OnSetDataP:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 194  : 	m_MeshFrameController.Clear();

  00069	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0006c	e8 00 00 00 00	 call	 ?Clear@CFrameController@@QAEXXZ ; CFrameController::Clear

; 195  : 	m_MeshFrameController.SetMaxFrame(m_roMesh.GetPointer()->GetFrameCount());

  00071	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]
  00074	e8 00 00 00 00	 call	 ?GetFrameCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetFrameCount
  00079	50		 push	 eax
  0007a	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0007d	e8 00 00 00 00	 call	 ?SetMaxFrame@CFrameController@@QAEXK@Z ; CFrameController::SetMaxFrame

; 196  : 	m_MeshFrameController.SetFrameTime(pMesh->GetMeshAnimationFrameDelay());

  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ ; CEffectMeshScript::GetMeshAnimationFrameDelay
  00089	51		 push	 ecx
  0008a	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0008d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00090	e8 00 00 00 00	 call	 ?SetFrameTime@CFrameController@@QAEXM@Z ; CFrameController::SetFrameTime

; 197  : 	m_MeshFrameController.SetLoopFlag(pMesh->isMeshAnimationLoop());

  00095	8b cf		 mov	 ecx, edi
  00097	e8 00 00 00 00	 call	 ?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ ; CEffectMeshScript::isMeshAnimationLoop
  0009c	50		 push	 eax
  0009d	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000a0	e8 00 00 00 00	 call	 ?SetLoopFlag@CFrameController@@QAEXH@Z ; CFrameController::SetLoopFlag

; 198  : 	m_MeshFrameController.SetLoopCount(pMesh->GetMeshAnimationLoopCount());

  000a5	8b cf		 mov	 ecx, edi
  000a7	e8 00 00 00 00	 call	 ?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ ; CEffectMeshScript::GetMeshAnimationLoopCount
  000ac	50		 push	 eax
  000ad	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000b0	e8 00 00 00 00	 call	 ?SetLoopCount@CFrameController@@QAEXH@Z ; CFrameController::SetLoopCount

; 199  : 	m_MeshFrameController.SetStartFrame(0);

  000b5	6a 00		 push	 0
  000b7	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000ba	e8 00 00 00 00	 call	 ?SetStartFrame@CFrameController@@QAEXK@Z ; CFrameController::SetStartFrame

; 200  : 
; 201  : 	m_TextureInstanceVector.clear();

  000bf	83 c3 50	 add	 ebx, 80			; 00000050H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000c2	53		 push	 ebx
  000c3	ff 73 04	 push	 DWORD PTR [ebx+4]
  000c6	ff 33		 push	 DWORD PTR [ebx]
  000c8	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1390 :         _Mylast = _Myfirst;

  000cd	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  000d2	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 202  : 	m_TextureInstanceVector.resize(m_pEffectMesh->GetMeshCount());

  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  000d8	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000db	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  000e0	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 202  : 	m_TextureInstanceVector.resize(m_pEffectMesh->GetMeshCount());

  000e3	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  000e5	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  000e7	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000ec	f7 e9		 imul	 ecx
  000ee	c1 fa 03	 sar	 edx, 3
  000f1	8b fa		 mov	 edi, edx
  000f3	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  000f6	03 fa		 add	 edi, edx

; 1216 :         if (_Newsize < _Oldsize) { // trim

  000f8	3b f7		 cmp	 esi, edi
  000fa	73 18		 jae	 SHORT $LN24@OnSetDataP

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000fc	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  000ff	8d 34 76	 lea	 esi, DWORD PTR [esi+esi*2]
  00102	c1 e6 04	 shl	 esi, 4
  00105	03 33		 add	 esi, DWORD PTR [ebx]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00107	53		 push	 ebx
  00108	50		 push	 eax
  00109	56		 push	 esi
  0010a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1220 :             _Mylast = _Newlast;

  0010f	89 73 04	 mov	 DWORD PTR [ebx+4], esi

; 1221 :             return;

  00112	eb 3a		 jmp	 SHORT $LN109@OnSetDataP
$LN24@OnSetDataP:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  00114	76 3b		 jbe	 SHORT $LN25@OnSetDataP

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00116	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00119	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0011e	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00120	f7 e9		 imul	 ecx
  00122	c1 fa 03	 sar	 edx, 3
  00125	8b c2		 mov	 eax, edx
  00127	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012a	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  0012c	3b f0		 cmp	 esi, eax
  0012e	76 0e		 jbe	 SHORT $LN26@OnSetDataP

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00130	8d 45 0b	 lea	 eax, DWORD PTR $T7[ebp]
  00133	8b cb		 mov	 ecx, ebx
  00135	50		 push	 eax
  00136	56		 push	 esi
  00137	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  0013c	eb 13		 jmp	 SHORT $LN25@OnSetDataP
$LN26@OnSetDataP:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0013e	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00141	2b f7		 sub	 esi, edi

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00143	53		 push	 ebx
  00144	56		 push	 esi
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0014b	89 43 04	 mov	 DWORD PTR [ebx+4], eax
$LN109@OnSetDataP:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0014e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN25@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00151	8b 75 f0	 mov	 esi, DWORD PTR _this$1$[ebp]
  00154	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00159	33 db		 xor	 ebx, ebx
  0015b	89 5d 08	 mov	 DWORD PTR _j$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0015e	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00161	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
  00164	f7 e9		 imul	 ecx
  00166	c1 fa 03	 sar	 edx, 3
  00169	8b c2		 mov	 eax, edx
  0016b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0016e	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00170	0f 84 c2 01 00
	00		 je	 $LN104@OnSetDataP
  00176	89 5d e8	 mov	 DWORD PTR tv884[ebp], ebx
  00179	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@OnSetDataP:

; 204  : 	{
; 205  : 		CEffectMeshScript::TMeshData * pMeshData;
; 206  : 		if (!m_pMeshScript->GetMeshDataPointer(j, &pMeshData))

  00180	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00183	8d 45 ec	 lea	 eax, DWORD PTR _pMeshData$6[ebp]
  00186	50		 push	 eax
  00187	53		 push	 ebx
  00188	e8 00 00 00 00	 call	 ?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z ; CEffectMeshScript::GetMeshDataPointer
  0018d	84 c0		 test	 al, al
  0018f	0f 84 7c 01 00
	00		 je	 $LN2@OnSetDataP

; 207  : 			continue;
; 208  : 
; 209  : 		CEffectMesh* pkEftMesh=m_roMesh.GetPointer();

  00195	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]

; 210  : 
; 211  : 		if (!pkEftMesh)

  00198	85 c9		 test	 ecx, ecx
  0019a	0f 84 71 01 00
	00		 je	 $LN2@OnSetDataP

; 212  : 			continue;
; 213  : 
; 214  : 		std::vector<CGraphicImage*>* pTextureVector = pkEftMesh->GetTextureVectorPointer(j);

  001a0	53		 push	 ebx
  001a1	e8 00 00 00 00	 call	 ?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ; CEffectMesh::GetTextureVectorPointer
  001a6	8b f8		 mov	 edi, eax
  001a8	89 7d dc	 mov	 DWORD PTR _pTextureVector$1$[ebp], edi

; 215  : 		if (!pTextureVector)

  001ab	85 ff		 test	 edi, edi
  001ad	0f 84 5e 01 00
	00		 je	 $LN2@OnSetDataP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001b3	8b 76 50	 mov	 esi, DWORD PTR [esi+80]
  001b6	8b 5d e8	 mov	 ebx, DWORD PTR tv884[ebp]
  001b9	03 f3		 add	 esi, ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 221  : 		rFrameController.Clear();

  001bb	8b ce		 mov	 ecx, esi
  001bd	e8 00 00 00 00	 call	 ?Clear@CFrameController@@QAEXXZ ; CFrameController::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c2	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 222  : 		rFrameController.SetMaxFrame(rTextureVector.size());

  001c5	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c7	2b 07		 sub	 eax, DWORD PTR [edi]
  001c9	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 222  : 		rFrameController.SetMaxFrame(rTextureVector.size());

  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?SetMaxFrame@CFrameController@@QAEXK@Z ; CFrameController::SetMaxFrame

; 223  : 		rFrameController.SetFrameTime(pMeshData->fTextureAnimationFrameDelay);

  001d2	8b 45 ec	 mov	 eax, DWORD PTR _pMeshData$6[ebp]
  001d5	51		 push	 ecx
  001d6	8b ce		 mov	 ecx, esi
  001d8	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  001dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e2	e8 00 00 00 00	 call	 ?SetFrameTime@CFrameController@@QAEXM@Z ; CFrameController::SetFrameTime

; 224  : 		rFrameController.SetLoopFlag(pMeshData->bTextureAnimationLoopEnable);

  001e7	8b 45 ec	 mov	 eax, DWORD PTR _pMeshData$6[ebp]
  001ea	8b ce		 mov	 ecx, esi
  001ec	ff 70 24	 push	 DWORD PTR [eax+36]
  001ef	e8 00 00 00 00	 call	 ?SetLoopFlag@CFrameController@@QAEXH@Z ; CFrameController::SetLoopFlag

; 225  : 		rFrameController.SetStartFrame(pMeshData->dwTextureAnimationStartFrame);

  001f4	8b 45 ec	 mov	 eax, DWORD PTR _pMeshData$6[ebp]
  001f7	8b ce		 mov	 ecx, esi
  001f9	ff 70 2c	 push	 DWORD PTR [eax+44]
  001fc	e8 00 00 00 00	 call	 ?SetStartFrame@CFrameController@@QAEXK@Z ; CFrameController::SetStartFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00201	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00204	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  00207	03 d8		 add	 ebx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 228  : 		rImageInstanceVector.clear();

  00209	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  0020c	89 4b 28	 mov	 DWORD PTR [ebx+40], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0020f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00212	8b d0		 mov	 edx, eax
  00214	8b 37		 mov	 esi, DWORD PTR [edi]
  00216	2b d6		 sub	 edx, esi
  00218	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0021b	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0021e	2b c1		 sub	 eax, ecx

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00220	c1 fa 02	 sar	 edx, 2

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00223	c1 f8 02	 sar	 eax, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00226	3b d0		 cmp	 edx, eax
  00228	76 1c		 jbe	 SHORT $LN105@OnSetDataP

; 1307 :             if (_Newcapacity > max_size()) {

  0022a	81 fa ff ff ff
	3f		 cmp	 edx, 1073741823		; 3fffffffH
  00230	0f 87 16 01 00
	00		 ja	 $LN97@OnSetDataP

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  00236	52		 push	 edx
  00237	8d 4b 24	 lea	 ecx, DWORD PTR [ebx+36]
  0023a	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
  0023f	8b 37		 mov	 esi, DWORD PTR [edi]
  00241	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00244	eb 03		 jmp	 SHORT $LN43@OnSetDataP
$LN105@OnSetDataP:

; 1233 :             _Orphan_range(_Oldlast, _Oldlast);
; 1234 :         }
; 1235 : 
; 1236 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1237 :     }
; 1238 : 
; 1239 : public:
; 1240 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {
; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }
; 1244 : 
; 1245 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Ty& _Val) {
; 1246 :         // trim or append copies of _Val, provide strong guarantee
; 1247 :         _Resize(_Newsize, _Val);
; 1248 :     }
; 1249 : 
; 1250 : private:
; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {
; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);
; 1258 : 
; 1259 :         const pointer _Newvec = _Getal().allocate(_Newcapacity);
; 1260 : 
; 1261 :         _TRY_BEGIN
; 1262 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1263 :         _CATCH_ALL
; 1264 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1265 :         _RERAISE;
; 1266 :         _CATCH_END
; 1267 : 
; 1268 :         _Change_array(_Newvec, _Size, _Newcapacity);
; 1269 :     }
; 1270 : 
; 1271 :     void _Clear_and_reserve_geometric(const size_type _Newsize) {
; 1272 :         auto& _My_data    = _Mypair._Myval2;
; 1273 :         pointer& _Myfirst = _My_data._Myfirst;
; 1274 :         pointer& _Mylast  = _My_data._Mylast;
; 1275 :         pointer& _Myend   = _My_data._Myend;
; 1276 : 
; 1277 : #if _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1278 :         _STL_INTERNAL_CHECK(_Newsize != 0);
; 1279 :         {
; 1280 :             _Lockit _Lock(_LOCK_DEBUG);
; 1281 :             _STL_INTERNAL_CHECK(!_My_data._Myproxy->_Myfirstiter); // asserts that all iterators are orphaned
; 1282 :         } // unlock
; 1283 : #endif // _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1284 : 
; 1285 :         if (_Newsize > max_size()) {
; 1286 :             _Xlength();
; 1287 :         }
; 1288 : 
; 1289 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1290 : 
; 1291 :         if (_Myfirst) { // destroy and deallocate old array
; 1292 :             _Destroy(_Myfirst, _Mylast);
; 1293 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));
; 1294 : 
; 1295 :             _Myfirst = pointer();
; 1296 :             _Mylast  = pointer();
; 1297 :             _Myend   = pointer();
; 1298 :         }
; 1299 : 
; 1300 :         _Buy_raw(_Newcapacity);
; 1301 :     }
; 1302 : 
; 1303 : public:
; 1304 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {
; 1305 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00246	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp]
$LN43@OnSetDataP:

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00249	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 230  : 		for (std::vector<CGraphicImage*>::iterator itor = rTextureVector.begin(); itor != rTextureVector.end(); ++itor)

  0024b	0f 84 ba 00 00
	00		 je	 $LN106@OnSetDataP
$LL7@OnSetDataP:

; 231  : 		{
; 232  : 			CGraphicImage * pImage = *itor;

  00251	8b 06		 mov	 eax, DWORD PTR [esi]
  00253	89 45 e0	 mov	 DWORD PTR _pImage$1$[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00256	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
  0025b	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16, eax
  00261	75 64		 jne	 SHORT $LN70@OnSetDataP

; 65   : 				T* pkNewData=new T;

  00263	6a 20		 push	 32			; 00000020H
  00265	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0026a	83 c4 04	 add	 esp, 4
  0026d	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  00270	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00277	85 c0		 test	 eax, eax
  00279	74 0b		 je	 SHORT $LN72@OnSetDataP
  0027b	8b c8		 mov	 ecx, eax
  0027d	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  00282	8b f8		 mov	 edi, eax
  00284	eb 02		 jmp	 SHORT $LN73@OnSetDataP
$LN72@OnSetDataP:
  00286	33 ff		 xor	 edi, edi
$LN73@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00288	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0028d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00294	89 7d e4	 mov	 DWORD PTR _pkNewData$4[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00297	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+12
  0029d	74 11		 je	 SHORT $LN80@OnSetDataP

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0029f	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002a1	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  002a8	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32

; 68   : 				return pkNewData;

  002ae	eb 22		 jmp	 SHORT $LN69@OnSetDataP
$LN80@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002b0	8d 4d e4	 lea	 ecx, DWORD PTR _pkNewData$4[ebp]
  002b3	51		 push	 ecx
  002b4	50		 push	 eax
  002b5	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
  002ba	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  002bf	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32

; 68   : 				return pkNewData;

  002c5	eb 0b		 jmp	 SHORT $LN69@OnSetDataP
$LN70@OnSetDataP:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  002c7	8b 78 fc	 mov	 edi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  002ca	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  002cd	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, eax
$LN69@OnSetDataP:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 234  : 			pImageInstance->SetImagePointer(pImage);

  002d2	ff 75 e0	 push	 DWORD PTR _pImage$1$[ebp]
  002d5	8b cf		 mov	 ecx, edi
  002d7	89 7d e4	 mov	 DWORD PTR _pImageInstance$5[ebp], edi
  002da	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  002df	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  002e2	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  002e5	74 08		 je	 SHORT $LN91@OnSetDataP

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002e7	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  002e9	83 43 28 04	 add	 DWORD PTR [ebx+40], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002ed	eb 0d		 jmp	 SHORT $LN5@OnSetDataP
$LN91@OnSetDataP:

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002ef	8d 4d e4	 lea	 ecx, DWORD PTR _pImageInstance$5[ebp]
  002f2	51		 push	 ecx
  002f3	50		 push	 eax
  002f4	8d 4b 24	 lea	 ecx, DWORD PTR [ebx+36]
  002f7	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN5@OnSetDataP:

; 149  :         return _Ptr == _Right._Ptr;

  002fc	8b 45 dc	 mov	 eax, DWORD PTR _pTextureVector$1$[ebp]

; 75   :         ++_Ptr;

  002ff	83 c6 04	 add	 esi, 4

; 149  :         return _Ptr == _Right._Ptr;

  00302	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 230  : 		for (std::vector<CGraphicImage*>::iterator itor = rTextureVector.begin(); itor != rTextureVector.end(); ++itor)

  00305	0f 85 46 ff ff
	ff		 jne	 $LL7@OnSetDataP
$LN106@OnSetDataP:

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0030b	8b 75 f0	 mov	 esi, DWORD PTR _this$1$[ebp]
  0030e	8b 5d 08	 mov	 ebx, DWORD PTR _j$1$[ebp]
$LN2@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00311	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00314	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00319	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0031c	43		 inc	 ebx
  0031d	83 45 e8 30	 add	 DWORD PTR tv884[ebp], 48 ; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00321	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00323	89 5d 08	 mov	 DWORD PTR _j$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00326	c1 fa 03	 sar	 edx, 3
  00329	8b c2		 mov	 eax, edx
  0032b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0032e	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00330	3b d8		 cmp	 ebx, eax
  00332	0f 82 48 fe ff
	ff		 jb	 $LL4@OnSetDataP
$LN104@OnSetDataP:

; 238  : }

  00338	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0033b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00342	59		 pop	 ecx
  00343	5f		 pop	 edi
  00344	5e		 pop	 esi
  00345	5b		 pop	 ebx
  00346	8b e5		 mov	 esp, ebp
  00348	5d		 pop	 ebp
  00349	c2 04 00	 ret	 4
$LN97@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1308 :                 _Xlength();

  0034c	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN108@OnSetDataP:
  00351	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z ENDP ; CEffectMeshInstance::OnSetDataPointer
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?Delete@CEffectMeshInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkMeshInstance$ = 8					; size = 4
?Delete@CEffectMeshInstance@@SAXPAV1@@Z PROC		; CEffectMeshInstance::Delete, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 21   : 	pkMeshInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkMeshInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 22   : 	ms_kPool.Free(pkMeshInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 23   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 23   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CEffectMeshInstance@@SAXPAV1@@Z ENDP		; CEffectMeshInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?New@CEffectMeshInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CEffectMeshInstance@@SAPAV1@XZ PROC		; CEffectMeshInstance::New, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CEffectMeshInstance@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 60		 push	 96			; 00000060H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0CEffectMeshInstance@@QAE@XZ ; CEffectMeshInstance::CEffectMeshInstance
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 16   : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 17   : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 16   : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 17   : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 17   : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CEffectMeshInstance@@SAPAV1@XZ$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@CEffectMeshInstance@@SAPAV1@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CEffectMeshInstance@@SAPAV1@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CEffectMeshInstance@@SAPAV1@XZ ENDP		; CEffectMeshInstance::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?DestroySystem@CEffectMeshInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CEffectMeshInstance@@SAXXZ PROC		; CEffectMeshInstance::DestroySystem, COMDAT

; 10   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 10   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 12   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 12   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CEffectMeshInstance@@SAXXZ ENDP		; CEffectMeshInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??1CEffectMeshInstance@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CEffectMeshInstance@@UAE@XZ PROC			; CEffectMeshInstance::~CEffectMeshInstance, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CEffectMeshInstance@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f9		 mov	 edi, ecx
  00026	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CEffectMeshInstance@@6B@

; 270  : 	Destroy();

  0002c	e8 00 00 00 00	 call	 ?Destroy@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Destroy
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 53   : 			if (m_pObject)

  00031	8b 4f 5c	 mov	 ecx, DWORD PTR [edi+92]

; 37   : 		{

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 			if (m_pObject)

  0003b	85 c9		 test	 ecx, ecx
  0003d	74 0c		 je	 SHORT $LN7@CEffectMes

; 54   : 			{
; 55   : 				m_pObject->Release();

  0003f	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00044	c7 47 5c 00 00
	00 00		 mov	 DWORD PTR [edi+92], 0
$LN7@CEffectMes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0004b	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 271  : }

  0004e	8d 5f 50	 lea	 ebx, DWORD PTR [edi+80]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00051	85 c0		 test	 eax, eax
  00053	74 45		 je	 SHORT $LN12@CEffectMes

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00055	53		 push	 ebx
  00056	ff 73 04	 push	 DWORD PTR [ebx+4]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0005f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00062	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00067	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00069	f7 e9		 imul	 ecx
  0006b	c1 fa 03	 sar	 edx, 3
  0006e	8b c2		 mov	 eax, edx
  00070	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00073	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00075	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00078	c1 e0 04	 shl	 eax, 4
  0007b	50		 push	 eax
  0007c	ff 33		 push	 DWORD PTR [ebx]
  0007e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00083	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00089	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0008c	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  00093	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN12@CEffectMes:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 271  : }

  0009a	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  0009d	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
  000a2	8b cf		 mov	 ecx, edi
  000a4	e8 00 00 00 00	 call	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
  000a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b3	59		 pop	 ecx
  000b4	5f		 pop	 edi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
  000ba	cc		 int	 3
  000bb	cc		 int	 3
  000bc	cc		 int	 3
  000bd	cc		 int	 3
  000be	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CEffectMeshInstance@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CEffectMeshInstance@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CEffectMeshInstance@@UAE@XZ ENDP			; CEffectMeshInstance::~CEffectMeshInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??0CEffectMeshInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEffectMeshInstance@@QAE@XZ PROC			; CEffectMeshInstance::CEffectMeshInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CEffectMeshInstance@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CEffectElementBaseInstance@@QAE@XZ ; CEffectElementBaseInstance::CEffectElementBaseInstance
  0002e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMeshInstance@@6B@
  0003e	e8 00 00 00 00	 call	 ??0CFrameController@@QAE@XZ ; CFrameController::CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00043	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0004a	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  00051	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterlib\Ref.h

; 20   : 		CRef() : m_pObject(NULL)

  00058	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMeshInstance.cpp

; 265  : 	Initialize();

  0005f	8b ce		 mov	 ecx, esi
  00061	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00065	e8 00 00 00 00	 call	 ?Initialize@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Initialize

; 266  : }

  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000e	e9 00 00 00 00	 jmp	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 50	 add	 ecx, 80			; 00000050H
  00019	e9 00 00 00 00	 jmp	 ??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00024	e9 00 00 00 00	 jmp	 ??1?$CRef@VCEffectMesh@@@@QAE@XZ ; CRef<CEffectMesh>::~CRef<CEffectMesh>
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
__ehhandler$??0CEffectMeshInstance@@QAE@XZ:
  0002e	90		 npad	 1
  0002f	90		 npad	 1
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CEffectMeshInstance@@QAE@XZ
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CEffectMeshInstance@@QAE@XZ ENDP			; CEffectMeshInstance::CEffectMeshInstance
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCFrameController@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFrameController@@UAEPAXI@Z PROC			; CFrameController::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCFrameController@@UAEPAXI@Z ENDP			; CFrameController::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
