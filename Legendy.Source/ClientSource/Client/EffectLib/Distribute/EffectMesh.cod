; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ ; CDynamicPool<CEffectMesh::SEffectMeshData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z ; CDynamicPool<CEffectMesh::SEffectMeshData>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCEffectMeshScript@@@@6B@	; CDynamicPool<CEffectMeshScript>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCEffectMeshScript@@@@@8	; CDynamicPool<CEffectMeshScript> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCEffectMeshScript@@@@8	; CDynamicPool<CEffectMeshScript>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCEffectMeshScript@@@@8	; CDynamicPool<CEffectMeshScript>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshScript@@@@8 ; CDynamicPool<CEffectMeshScript>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@VCEffectMeshScript@@@@6B@	; CDynamicPool<CEffectMeshScript>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z ; CDynamicPool<CEffectMeshScript>::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z:PROC ; CDynamicPool<CEffectMesh::SEffectMeshData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z:PROC ; CDynamicPool<CEffectMeshScript>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPool@VCEffectMeshScript@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCEffectMeshScript@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCEffectMeshScript@@@@6B@ ; CDynamicPool<CEffectMeshScript>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshScript@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshScript@@@@@8 ; CDynamicPool<CEffectMeshScript>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCEffectMeshScript@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshScript@@@@8 ; CDynamicPool<CEffectMeshScript>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCEffectMeshScript@@@@8 DD 00H	; CDynamicPool<CEffectMeshScript>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCEffectMeshScript@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCEffectMeshScript@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CEffectMeshScript> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCEffectMeshScript@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCEffectMeshScript@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCEffectMeshScript@@@@6B@ DD 00H	; CDynamicPool<CEffectMeshScript>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshScript@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshScript@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8 DD 00H ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CEffectMesh::SEffectMeshData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ DD 00H ; CDynamicPool<CEffectMesh::SEffectMeshData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ ; CDynamicPool<CEffectMesh::SEffectMeshData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?_Xlength@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@CAXXZ ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Xlength
PUBLIC	?_Xlength@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@CAXXZ ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Xlength
PUBLIC	?_Xlength@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@CAXXZ ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Xlength
PUBLIC	?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ	; CEffectMesh::SEffectMeshData::New
PUBLIC	?Delete@SEffectMeshData@CEffectMesh@@SAXPAU12@@Z ; CEffectMesh::SEffectMeshData::Delete
PUBLIC	?DestroySystem@SEffectMeshData@CEffectMesh@@SAXXZ ; CEffectMesh::SEffectMeshData::DestroySystem
PUBLIC	?Type@CEffectMesh@@SAKXZ			; CEffectMesh::Type
PUBLIC	??0CEffectMesh@@QAE@PBD@Z			; CEffectMesh::CEffectMesh
PUBLIC	??1CEffectMesh@@UAE@XZ				; CEffectMesh::~CEffectMesh
PUBLIC	?GetFrameCount@CEffectMesh@@QAEKXZ		; CEffectMesh::GetFrameCount
PUBLIC	?GetMeshCount@CEffectMesh@@QAEKXZ		; CEffectMesh::GetMeshCount
PUBLIC	?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z ; CEffectMesh::GetMeshDataPointer
PUBLIC	?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ; CEffectMesh::GetTextureVectorPointer
PUBLIC	?GetTextureVectorReference@CEffectMesh@@QAEAAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ; CEffectMesh::GetTextureVectorReference
PUBLIC	?GetMeshElementPointer@CEffectMesh@@QAEHKPAPAUSEffectMeshData@1@@Z ; CEffectMesh::GetMeshElementPointer
PUBLIC	?OnLoad@CEffectMesh@@MAE_NHPBX@Z		; CEffectMesh::OnLoad
PUBLIC	?OnClear@CEffectMesh@@MAEXXZ			; CEffectMesh::OnClear
PUBLIC	?OnIsEmpty@CEffectMesh@@MBE_NXZ			; CEffectMesh::OnIsEmpty
PUBLIC	?OnIsType@CEffectMesh@@MAE_NK@Z			; CEffectMesh::OnIsType
PUBLIC	?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z	; CEffectMesh::__LoadData_Ver001
PUBLIC	?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z	; CEffectMesh::__LoadData_Ver002
PUBLIC	?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Xlength
PUBLIC	??_GCEffectMesh@@UAEPAXI@Z			; CEffectMesh::`scalar deleting destructor'
PUBLIC	??0CEffectMeshScript@@QAE@XZ			; CEffectMeshScript::CEffectMeshScript
PUBLIC	??1CEffectMeshScript@@UAE@XZ			; CEffectMeshScript::~CEffectMeshScript
PUBLIC	?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ	; CEffectMeshScript::GetMeshFileName
PUBLIC	?ReserveMeshData@CEffectMeshScript@@QAEXK@Z	; CEffectMeshScript::ReserveMeshData
PUBLIC	?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z	; CEffectMeshScript::CheckMeshIndex
PUBLIC	?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z ; CEffectMeshScript::GetMeshDataPointer
PUBLIC	?GetMeshDataCount@CEffectMeshScript@@QAEHXZ	; CEffectMeshScript::GetMeshDataCount
PUBLIC	?GetBillboardType@CEffectMeshScript@@QAEHK@Z	; CEffectMeshScript::GetBillboardType
PUBLIC	?isBlendingEnable@CEffectMeshScript@@QAEHK@Z	; CEffectMeshScript::isBlendingEnable
PUBLIC	?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z	; CEffectMeshScript::GetBlendingSrcType
PUBLIC	?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z	; CEffectMeshScript::GetBlendingDestType
PUBLIC	?isTextureAlphaEnable@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::isTextureAlphaEnable
PUBLIC	?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z ; CEffectMeshScript::GetColorOperationType
PUBLIC	?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z ; CEffectMeshScript::GetColorFactor
PUBLIC	?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; CEffectMeshScript::GetTimeTableAlphaPointer
PUBLIC	?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ	; CEffectMeshScript::isMeshAnimationLoop
PUBLIC	?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ ; CEffectMeshScript::GetMeshAnimationLoopCount
PUBLIC	?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ ; CEffectMeshScript::GetMeshAnimationFrameDelay
PUBLIC	?isTextureAnimationLoop@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::isTextureAnimationLoop
PUBLIC	?GetTextureAnimationFrameDelay@CEffectMeshScript@@QAEMK@Z ; CEffectMeshScript::GetTextureAnimationFrameDelay
PUBLIC	?GetTextureAnimationStartFrame@CEffectMeshScript@@QAEKK@Z ; CEffectMeshScript::GetTextureAnimationStartFrame
PUBLIC	?OnClear@CEffectMeshScript@@MAEXXZ		; CEffectMeshScript::OnClear
PUBLIC	?OnIsData@CEffectMeshScript@@MAE_NXZ		; CEffectMeshScript::OnIsData
PUBLIC	?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z ; CEffectMeshScript::OnLoadScript
PUBLIC	??1?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::~vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >
PUBLIC	?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::resize
PUBLIC	?_Xlength@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Xlength
PUBLIC	?DestroySystem@CEffectMeshScript@@SAXXZ		; CEffectMeshScript::DestroySystem
PUBLIC	?New@CEffectMeshScript@@SAPAV1@XZ		; CEffectMeshScript::New
PUBLIC	?Delete@CEffectMeshScript@@SAXPAV1@@Z		; CEffectMeshScript::Delete
PUBLIC	??_GCEffectMeshScript@@UAEPAXI@Z		; CEffectMeshScript::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ ; CDynamicPool<CEffectMesh::SEffectMeshData>::~CDynamicPool<CEffectMesh::SEffectMeshData>
PUBLIC	?Delete@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@KAXPAUSEffectMeshData@CEffectMesh@@@Z ; CDynamicPool<CEffectMesh::SEffectMeshData>::Delete
PUBLIC	??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::~vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >
PUBLIC	?_Xlength@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@CAXXZ ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Xlength
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::~vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >
PUBLIC	?_Xlength@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@CAXXZ ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Xlength
PUBLIC	??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ	; CDynamicPool<CEffectMeshScript>::~CDynamicPool<CEffectMeshScript>
PUBLIC	?Delete@?$CDynamicPool@VCEffectMeshScript@@@@KAXPAVCEffectMeshScript@@@Z ; CDynamicPool<CEffectMeshScript>::Delete
PUBLIC	?_Xlength@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Xlength
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Emplace_reallocate<CEffectMeshScript * const &>
PUBLIC	??$_Destroy_range@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAXPAUD3DXVECTOR2@@QAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Destroy_range<std::allocator<D3DXVECTOR2> >
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Destroy_range@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@QAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Destroy_range<std::allocator<D3DXVECTOR3> >
PUBLIC	??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAXPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectMeshData *> >
PUBLIC	??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Emplace_reallocate<CEffectMesh::SEffectMeshData * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAXPAPAVCGraphicImage@@QAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicImage *> >
PUBLIC	??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
PUBLIC	??$_Destroy_range@V?$allocator@USPTVertex@@@std@@@std@@YAXPAUSPTVertex@@QAU1@AAV?$allocator@USPTVertex@@@0@@Z ; std::_Destroy_range<std::allocator<SPTVertex> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAXPAPAVCEffectMeshScript@@QAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ; std::_Uninitialized_move<CEffectMeshScript * *,std::allocator<CEffectMeshScript *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR2> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR3> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshScript::SMeshData> >
PUBLIC	??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ; std::_Uninitialized_move<CGraphicImage * *,std::allocator<CGraphicImage *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >
PUBLIC	??$_Copy_memmove@PAPAVCEffectMeshScript@@PAPAV1@@std@@YAPAPAVCEffectMeshScript@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshScript * *,CEffectMeshScript * *>
PUBLIC	??$_Zero_range@PAH@std@@YAPAHQAH0@Z		; std::_Zero_range<int *>
PUBLIC	??$_Copy_memmove@PAPAUSEffectMeshData@CEffectMesh@@PAPAU12@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@00@Z ; std::_Copy_memmove<CEffectMesh::SEffectMeshData * *,CEffectMesh::SEffectMeshData * *>
PUBLIC	??$_Zero_range@PAPAUSEffectMeshData@CEffectMesh@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0@Z ; std::_Zero_range<CEffectMesh::SEffectMeshData * *>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImage@@PAPAV1@@std@@YAPAPAVCGraphicImage@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImage * *,CGraphicImage * *>
PUBLIC	??$_Uninitialized_move@PAUD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Uninitialized_move<D3DXVECTOR2 *,std::allocator<D3DXVECTOR2> >
PUBLIC	??$_Uninitialized_move@PAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
PUBLIC	??$_Uninitialized_move@PAUD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Uninitialized_move<D3DXVECTOR3 *,std::allocator<D3DXVECTOR3> >
PUBLIC	??$_Uninitialized_move@PAUSMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@QAU12@0PAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Uninitialized_move<CEffectMeshScript::SMeshData *,std::allocator<CEffectMeshScript::SMeshData> >
PUBLIC	??$_Uninitialized_move@PAUSEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@QAU12@0PAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectFrameData *,std::allocator<CEffectMesh::SEffectFrameData> >
PUBLIC	??$_Uninitialized_move@PAUSPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@QAU1@0PAU1@AAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_move<SPTVertex *,std::allocator<SPTVertex> >
PUBLIC	??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
PUBLIC	?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A ; CEffectMesh::SEffectMeshData::ms_kPool
PUBLIC	??_7CEffectMesh@@6B@				; CEffectMesh::`vftable'
PUBLIC	?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A ; CEffectMeshScript::ms_kPool
PUBLIC	??_7CEffectMeshScript@@6B@			; CEffectMeshScript::`vftable'
PUBLIC	??_C@_0M@HCKGHODL@CEffectMesh@			; `string'
PUBLIC	??_C@_0L@HDPGDEFC@EffectData@			; `string'
PUBLIC	??_C@_0L@HDHCIEF@MDEData002@			; `string'
PUBLIC	??_C@_03BNIHALFD@ifl@				; `string'
PUBLIC	??_C@_0N@KFLKANCO@meshfilename@			; `string'
PUBLIC	??_C@_0BI@HOBONKKC@meshanimationloopenable@	; `string'
PUBLIC	??_C@_0BH@CNDNOBIC@meshanimationloopcount@	; `string'
PUBLIC	??_C@_0BI@DLPGELIN@meshanimationframedelay@	; `string'
PUBLIC	??_C@_0BB@IMKDGDDP@meshelementcount@		; `string'
PUBLIC	??_C@_0O@EJACNAIE@billboardtype@		; `string'
PUBLIC	??_C@_0P@LCDJDIBK@blendingenable@		; `string'
PUBLIC	??_C@_0BA@CALCJEKJ@blendingsrctype@		; `string'
PUBLIC	??_C@_0BB@PBNEFHNO@blendingdesttype@		; `string'
PUBLIC	??_C@_0BL@INILLDMC@textureanimationloopenable@	; `string'
PUBLIC	??_C@_0BL@MIGDCCON@textureanimationframedelay@	; `string'
PUBLIC	??_C@_0BL@PMOBBIKD@textureanimationstartframe@	; `string'
PUBLIC	??_C@_0BD@DAMHAFBJ@coloroperationtype@		; `string'
PUBLIC	??_C@_0M@PBDNNBOP@colorfactor@			; `string'
PUBLIC	??_C@_0P@KALIPJCI@timeeventalpha@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CEffectMesh@@6B@				; CEffectMesh::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEffectMesh@@@8				; CEffectMesh `RTTI Type Descriptor'
PUBLIC	??_R3CEffectMesh@@8				; CEffectMesh::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectMesh@@8				; CEffectMesh::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEffectMesh@@8			; CEffectMesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CResource@@8			; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCResource@@@8				; CResource `RTTI Type Descriptor'
PUBLIC	??_R3CResource@@8				; CResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CResource@@8				; CResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
PUBLIC	??_R4CEffectMeshScript@@6B@			; CEffectMeshScript::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEffectMeshScript@@@8			; CEffectMeshScript `RTTI Type Descriptor'
PUBLIC	??_R3CEffectMeshScript@@8			; CEffectMeshScript::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectMeshScript@@8			; CEffectMeshScript::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEffectMeshScript@@8		; CEffectMeshScript::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBase@@8		; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBase@@@8			; CEffectElementBase `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBase@@8			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBase@@8			; CEffectElementBase::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@bf800000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetFileExtension@@YAXPBDHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; GetFileExtension
EXTRN	?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; stl_lowers
EXTRN	?GetOnlyPathName@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; GetOnlyPathName
EXTRN	?GetOnlyPathName@@YAPBDPBD@Z:PROC		; GetOnlyPathName
EXTRN	?IsGlobalFileName@@YA_NPBD@Z:PROC		; IsGlobalFileName
EXTRN	??0CMemoryTextFileLoader@@QAE@XZ:PROC		; CMemoryTextFileLoader::CMemoryTextFileLoader
EXTRN	??1CMemoryTextFileLoader@@UAE@XZ:PROC		; CMemoryTextFileLoader::~CMemoryTextFileLoader
EXTRN	?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z:PROC	; CMemoryTextFileLoader::Bind
EXTRN	?GetLineCount@CMemoryTextFileLoader@@QAEKXZ:PROC ; CMemoryTextFileLoader::GetLineCount
EXTRN	?GetLineString@CMemoryTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CMemoryTextFileLoader::GetLineString
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?GetFileName@CTextFileLoader@@QAEPBDXZ:PROC	; CTextFileLoader::GetFileName
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z:PROC ; CTextFileLoader::GetTokenByte
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z:PROC ; CTextFileLoader::GetTokenColor
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?StringToType@CResource@@SAKPBD@Z:PROC		; CResource::StringToType
EXTRN	?CreateDeviceObjects@CResource@@UAE_NXZ:PROC	; CResource::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CResource@@UAEXXZ:PROC	; CResource::DestroyDeviceObjects
EXTRN	??0CResource@@QAE@PBD@Z:PROC			; CResource::CResource
EXTRN	??1CResource@@UAE@XZ:PROC			; CResource::~CResource
EXTRN	?OnIsType@CResource@@MAE_NK@Z:PROC		; CResource::OnIsType
EXTRN	?OnConstruct@CResource@@MAEXXZ:PROC		; CResource::OnConstruct
EXTRN	?OnSelfDestruct@CResource@@MAEXXZ:PROC		; CResource::OnSelfDestruct
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPackManager::Get
EXTRN	?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z:PROC ; GetTokenTimeEventFloat
EXTRN	??0CEffectElementBase@@QAE@XZ:PROC		; CEffectElementBase::CEffectElementBase
EXTRN	??1CEffectElementBase@@UAE@XZ:PROC		; CEffectElementBase::~CEffectElementBase
EXTRN	?Clear@CEffectElementBase@@QAEXXZ:PROC		; CEffectElementBase::Clear
EXTRN	??_ECEffectMesh@@UAEPAXI@Z:PROC			; CEffectMesh::`vector deleting destructor'
EXTRN	??_ECEffectMeshScript@@UAEPAXI@Z:PROC		; CEffectMeshScript::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A DD 01H DUP (?) ; CSingleton<CEterPackManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?s_type@?1??Type@CEffectMesh@@SAKXZ@4KA
_BSS	SEGMENT
?s_type@?1??Type@CEffectMesh@@SAKXZ@4KA DD 01H DUP (?)	; `CEffectMesh::Type'::`2'::s_type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA DD 01H DUP (?)	; `CEffectMesh::Type'::`2'::$TSS0
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@SEffectMeshData@CEffectMesh@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ ; ??ms_kPool$initializer$@SEffectMeshData@CEffectMesh@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CEffectElementBase@@8
rdata$r	SEGMENT
??_R2CEffectElementBase@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBase@@8 ; CEffectElementBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBase@@8
rdata$r	SEGMENT
??_R3CEffectElementBase@@8 DD 00H			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBase@@@8
data$r	SEGMENT
??_R0?AVCEffectElementBase@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBase@@8 DD FLAT:??_R0?AVCEffectElementBase@@@8 ; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectMeshScript@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectMeshScript@@8 DD FLAT:??_R0?AVCEffectMeshScript@@@8 ; CEffectMeshScript::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectMeshScript@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectMeshScript@@8
rdata$r	SEGMENT
??_R2CEffectMeshScript@@8 DD FLAT:??_R1A@?0A@EA@CEffectMeshScript@@8 ; CEffectMeshScript::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CEffectMeshScript@@8
rdata$r	SEGMENT
??_R3CEffectMeshScript@@8 DD 00H			; CEffectMeshScript::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CEffectMeshScript@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectMeshScript@@@8
data$r	SEGMENT
??_R0?AVCEffectMeshScript@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectMeshScript `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectMeshScript@@', 00H
data$r	ENDS
;	COMDAT ??_R4CEffectMeshScript@@6B@
rdata$r	SEGMENT
??_R4CEffectMeshScript@@6B@ DD 00H			; CEffectMeshScript::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEffectMeshScript@@@8
	DD	FLAT:??_R3CEffectMeshScript@@8
rdata$r	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$r	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CResource@@8
rdata$r	SEGMENT
??_R2CResource@@8 DD FLAT:??_R1A@?0A@EA@CResource@@8	; CResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CResource@@8
rdata$r	SEGMENT
??_R3CResource@@8 DD 00H				; CResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCResource@@@8
data$r	SEGMENT
??_R0?AVCResource@@@8 DD FLAT:??_7type_info@@6B@	; CResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCResource@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CResource@@8 DD FLAT:??_R0?AVCResource@@@8 ; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectMesh@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectMesh@@8 DD FLAT:??_R0?AVCEffectMesh@@@8 ; CEffectMesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectMesh@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectMesh@@8
rdata$r	SEGMENT
??_R2CEffectMesh@@8 DD FLAT:??_R1A@?0A@EA@CEffectMesh@@8 ; CEffectMesh::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CResource@@8
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CEffectMesh@@8
rdata$r	SEGMENT
??_R3CEffectMesh@@8 DD 00H				; CEffectMesh::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CEffectMesh@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectMesh@@@8
data$r	SEGMENT
??_R0?AVCEffectMesh@@@8 DD FLAT:??_7type_info@@6B@	; CEffectMesh `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectMesh@@', 00H
data$r	ENDS
;	COMDAT ??_R4CEffectMesh@@6B@
rdata$r	SEGMENT
??_R4CEffectMesh@@6B@ DD 00H				; CEffectMesh::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEffectMesh@@@8
	DD	FLAT:??_R3CEffectMesh@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KALIPJCI@timeeventalpha@
CONST	SEGMENT
??_C@_0P@KALIPJCI@timeeventalpha@ DB 'timeeventalpha', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PBDNNBOP@colorfactor@
CONST	SEGMENT
??_C@_0M@PBDNNBOP@colorfactor@ DB 'colorfactor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DAMHAFBJ@coloroperationtype@
CONST	SEGMENT
??_C@_0BD@DAMHAFBJ@coloroperationtype@ DB 'coloroperationtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PMOBBIKD@textureanimationstartframe@
CONST	SEGMENT
??_C@_0BL@PMOBBIKD@textureanimationstartframe@ DB 'textureanimationstartf'
	DB	'rame', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MIGDCCON@textureanimationframedelay@
CONST	SEGMENT
??_C@_0BL@MIGDCCON@textureanimationframedelay@ DB 'textureanimationframed'
	DB	'elay', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@INILLDMC@textureanimationloopenable@
CONST	SEGMENT
??_C@_0BL@INILLDMC@textureanimationloopenable@ DB 'textureanimationloopen'
	DB	'able', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PBNEFHNO@blendingdesttype@
CONST	SEGMENT
??_C@_0BB@PBNEFHNO@blendingdesttype@ DB 'blendingdesttype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CALCJEKJ@blendingsrctype@
CONST	SEGMENT
??_C@_0BA@CALCJEKJ@blendingsrctype@ DB 'blendingsrctype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LCDJDIBK@blendingenable@
CONST	SEGMENT
??_C@_0P@LCDJDIBK@blendingenable@ DB 'blendingenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJACNAIE@billboardtype@
CONST	SEGMENT
??_C@_0O@EJACNAIE@billboardtype@ DB 'billboardtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IMKDGDDP@meshelementcount@
CONST	SEGMENT
??_C@_0BB@IMKDGDDP@meshelementcount@ DB 'meshelementcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DLPGELIN@meshanimationframedelay@
CONST	SEGMENT
??_C@_0BI@DLPGELIN@meshanimationframedelay@ DB 'meshanimationframedelay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNDNOBIC@meshanimationloopcount@
CONST	SEGMENT
??_C@_0BH@CNDNOBIC@meshanimationloopcount@ DB 'meshanimationloopcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HOBONKKC@meshanimationloopenable@
CONST	SEGMENT
??_C@_0BI@HOBONKKC@meshanimationloopenable@ DB 'meshanimationloopenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KFLKANCO@meshfilename@
CONST	SEGMENT
??_C@_0N@KFLKANCO@meshfilename@ DB 'meshfilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03BNIHALFD@ifl@
CONST	SEGMENT
??_C@_03BNIHALFD@ifl@ DB 'ifl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDHCIEF@MDEData002@
CONST	SEGMENT
??_C@_0L@HDHCIEF@MDEData002@ DB 'MDEData002', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDPGDEFC@EffectData@
CONST	SEGMENT
??_C@_0L@HDPGDEFC@EffectData@ DB 'EffectData', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCKGHODL@CEffectMesh@
CONST	SEGMENT
??_C@_0M@HCKGHODL@CEffectMesh@ DB 'CEffectMesh', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CEffectMeshScript@@6B@
CONST	SEGMENT
??_7CEffectMeshScript@@6B@ DD FLAT:??_R4CEffectMeshScript@@6B@ ; CEffectMeshScript::`vftable'
	DD	FLAT:??_ECEffectMeshScript@@UAEPAXI@Z
	DD	FLAT:?OnClear@CEffectMeshScript@@MAEXXZ
	DD	FLAT:?OnIsData@CEffectMeshScript@@MAE_NXZ
	DD	FLAT:?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7CEffectMesh@@6B@
CONST	SEGMENT
??_7CEffectMesh@@6B@ DD FLAT:??_R4CEffectMesh@@6B@	; CEffectMesh::`vftable'
	DD	FLAT:??_ECEffectMesh@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CResource@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CResource@@MAEXXZ
	DD	FLAT:?CreateDeviceObjects@CResource@@UAE_NXZ
	DD	FLAT:?DestroyDeviceObjects@CResource@@UAEXXZ
	DD	FLAT:?OnLoad@CEffectMesh@@MAE_NHPBX@Z
	DD	FLAT:?OnClear@CEffectMesh@@MAEXXZ
	DD	FLAT:?OnIsEmpty@CEffectMesh@@MBE_NXZ
	DD	FLAT:?OnIsType@CEffectMesh@@MAE_NK@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A DD FLAT:??_7?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@ ; CEffectMesh::SEffectMeshData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A DD FLAT:??_7?$CDynamicPool@VCEffectMeshScript@@@@6B@ ; CEffectMeshScript::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshScript@@@@QAEPAVCEffectMeshScript@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCEffectMeshScript@@@@QAEPAVCEffectMeshScript@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCEffectMeshScript@@@@QAEPAVCEffectMeshScript@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshScript@@@@QAEPAVCEffectMeshScript@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CEffectMeshScript@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CEffectMeshScript@@SAPAV1@XZ$0
__ehfuncinfo$?New@CEffectMeshScript@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CEffectMeshScript@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$7
	DD	0ffffffffH
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$8
	DD	0ffffffffH
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$9
	DD	0ffffffffH
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$10
	DD	0ffffffffH
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$11
	DD	0ffffffffH
	DD	00H
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$12
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$13
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$14
	DD	05H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$15
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CEffectMesh@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CEffectMesh@@SAKXZ$0
__ehfuncinfo$?Type@CEffectMesh@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CEffectMesh@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CEffectMeshScript@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CEffectMeshScript@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z PROC		; std::_Copy_memmove<int *,int *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ENDP		; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@QAU1@0PAU1@AAV?$allocator@USPTVertex@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@QAU1@0PAU1@AAV?$allocator@USPTVertex@@@0@@Z PROC ; std::_Uninitialized_move<SPTVertex *,std::allocator<SPTVertex> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 16		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00011	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00014	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00017	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]

; 1509 :         ++_Last;

  0001a	83 c1 14	 add	 ecx, 20			; 00000014H

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0001d	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1509 :         ++_Last;

  00020	83 c0 14	 add	 eax, 20			; 00000014H

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00023	3b ce		 cmp	 ecx, esi
  00025	75 ea		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  00027	5e		 pop	 esi

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninitialized_move@PAUSPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@QAU1@0PAU1@AAV?$allocator@USPTVertex@@@0@@Z ENDP ; std::_Uninitialized_move<SPTVertex *,std::allocator<SPTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@QAU12@0PAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@QAU12@0PAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMesh::SEffectFrameData *,std::allocator<CEffectMesh::SEffectFrameData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b c3		 cmp	 eax, ebx
  00010	74 7a		 je	 SHORT $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00012	57		 push	 edi
  00013	8b fe		 mov	 edi, esi
  00015	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  00018	8d 48 1c	 lea	 ecx, DWORD PTR [eax+28]
  0001b	2b f8		 sub	 edi, eax
  0001d	0f 1f 00	 npad	 3
$LL4@Uninitiali:
  00020	8a 41 e4	 mov	 al, BYTE PTR [ecx-28]

; 1509 :         ++_Last;

  00023	8d 49 20	 lea	 ecx, DWORD PTR [ecx+32]
  00026	88 06		 mov	 BYTE PTR [esi], al
  00028	8d 52 20	 lea	 edx, DWORD PTR [edx+32]
  0002b	8b 41 c8	 mov	 eax, DWORD PTR [ecx-56]
  0002e	83 c6 20	 add	 esi, 32			; 00000020H
  00031	89 42 cc	 mov	 DWORD PTR [edx-52], eax
  00034	8b 41 cc	 mov	 eax, DWORD PTR [ecx-52]
  00037	89 42 d0	 mov	 DWORD PTR [edx-48], eax
  0003a	8b 41 d0	 mov	 eax, DWORD PTR [ecx-48]
  0003d	89 42 d4	 mov	 DWORD PTR [edx-44], eax
  00040	8b 41 d4	 mov	 eax, DWORD PTR [ecx-44]
  00043	89 42 d8	 mov	 DWORD PTR [edx-40], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00046	c7 42 dc 00 00
	00 00		 mov	 DWORD PTR [edx-36], 0
  0004d	c7 42 e0 00 00
	00 00		 mov	 DWORD PTR [edx-32], 0
  00054	c7 44 0f e0 00
	00 00 00	 mov	 DWORD PTR [edi+ecx-32], 0

; 386  :         _Myfirst = _Right._Myfirst;

  0005c	8b 41 d8	 mov	 eax, DWORD PTR [ecx-40]
  0005f	89 42 dc	 mov	 DWORD PTR [edx-36], eax

; 387  :         _Mylast  = _Right._Mylast;

  00062	8b 41 dc	 mov	 eax, DWORD PTR [ecx-36]
  00065	89 42 e0	 mov	 DWORD PTR [edx-32], eax

; 388  :         _Myend   = _Right._Myend;

  00068	8b 41 e0	 mov	 eax, DWORD PTR [ecx-32]
  0006b	89 44 0f e0	 mov	 DWORD PTR [edi+ecx-32], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0006f	8d 41 e4	 lea	 eax, DWORD PTR [ecx-28]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 390  :         _Right._Myfirst = pointer();

  00072	c7 41 d8 00 00
	00 00		 mov	 DWORD PTR [ecx-40], 0

; 391  :         _Right._Mylast  = pointer();

  00079	c7 41 dc 00 00
	00 00		 mov	 DWORD PTR [ecx-36], 0

; 392  :         _Right._Myend   = pointer();

  00080	c7 41 e0 00 00
	00 00		 mov	 DWORD PTR [ecx-32], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00087	3b c3		 cmp	 eax, ebx
  00089	75 95		 jne	 SHORT $LL4@Uninitiali
  0008b	5f		 pop	 edi
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0008c	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0008f	56		 push	 esi
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  00099	8b c6		 mov	 eax, esi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx

; 1664 :     }
; 1665 : }

  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
??$_Uninitialized_move@PAUSEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@QAU12@0PAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMesh::SEffectFrameData *,std::allocator<CEffectMesh::SEffectFrameData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@QAU12@0PAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@QAU12@0PAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMeshScript::SMeshData *,std::allocator<CEffectMeshScript::SMeshData> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b c3		 cmp	 eax, ebx
  00010	0f 84 9f 00 00
	00		 je	 $LN3@Uninitiali

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00016	57		 push	 edi
  00017	8b fe		 mov	 edi, esi
  00019	8d 56 34	 lea	 edx, DWORD PTR [esi+52]
  0001c	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  0001f	2b f8		 sub	 edi, eax
$LL4@Uninitiali:
  00021	0f b6 41 c8	 movzx	 eax, BYTE PTR [ecx-56]

; 1509 :         ++_Last;

  00025	8d 49 3c	 lea	 ecx, DWORD PTR [ecx+60]
  00028	88 06		 mov	 BYTE PTR [esi], al
  0002a	8d 52 3c	 lea	 edx, DWORD PTR [edx+60]
  0002d	8b 41 90	 mov	 eax, DWORD PTR [ecx-112]
  00030	83 c6 3c	 add	 esi, 60			; 0000003cH
  00033	89 42 94	 mov	 DWORD PTR [edx-108], eax
  00036	0f b6 41 94	 movzx	 eax, BYTE PTR [ecx-108]
  0003a	88 42 98	 mov	 BYTE PTR [edx-104], al
  0003d	0f b6 41 95	 movzx	 eax, BYTE PTR [ecx-107]
  00041	88 42 99	 mov	 BYTE PTR [edx-103], al
  00044	8b 41 98	 mov	 eax, DWORD PTR [ecx-104]
  00047	89 42 9c	 mov	 DWORD PTR [edx-100], eax
  0004a	0f b6 41 9c	 movzx	 eax, BYTE PTR [ecx-100]
  0004e	88 42 a0	 mov	 BYTE PTR [edx-96], al
  00051	0f 10 41 a0	 movups	 xmm0, XMMWORD PTR [ecx-96]
  00055	0f 11 42 a4	 movups	 XMMWORD PTR [edx-92], xmm0
  00059	8b 41 b0	 mov	 eax, DWORD PTR [ecx-80]
  0005c	89 42 b4	 mov	 DWORD PTR [edx-76], eax
  0005f	8b 41 b4	 mov	 eax, DWORD PTR [ecx-76]
  00062	89 42 b8	 mov	 DWORD PTR [edx-72], eax
  00065	8b 41 b8	 mov	 eax, DWORD PTR [ecx-72]
  00068	89 42 bc	 mov	 DWORD PTR [edx-68], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0006b	c7 42 c0 00 00
	00 00		 mov	 DWORD PTR [edx-64], 0
  00072	c7 42 c4 00 00
	00 00		 mov	 DWORD PTR [edx-60], 0
  00079	c7 44 0f c4 00
	00 00 00	 mov	 DWORD PTR [edi+ecx-60], 0

; 386  :         _Myfirst = _Right._Myfirst;

  00081	8b 41 bc	 mov	 eax, DWORD PTR [ecx-68]
  00084	89 42 c0	 mov	 DWORD PTR [edx-64], eax

; 387  :         _Mylast  = _Right._Mylast;

  00087	8b 41 c0	 mov	 eax, DWORD PTR [ecx-64]
  0008a	89 42 c4	 mov	 DWORD PTR [edx-60], eax

; 388  :         _Myend   = _Right._Myend;

  0008d	8b 41 c4	 mov	 eax, DWORD PTR [ecx-60]
  00090	89 44 0f c4	 mov	 DWORD PTR [edi+ecx-60], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00094	8d 41 c8	 lea	 eax, DWORD PTR [ecx-56]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 390  :         _Right._Myfirst = pointer();

  00097	c7 41 bc 00 00
	00 00		 mov	 DWORD PTR [ecx-68], 0

; 391  :         _Right._Mylast  = pointer();

  0009e	c7 41 c0 00 00
	00 00		 mov	 DWORD PTR [ecx-64], 0

; 392  :         _Right._Myend   = pointer();

  000a5	c7 41 c4 00 00
	00 00		 mov	 DWORD PTR [ecx-60], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  000ac	3b c3		 cmp	 eax, ebx
  000ae	0f 85 6d ff ff
	ff		 jne	 $LL4@Uninitiali
  000b4	5f		 pop	 edi
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  000b5	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  000b8	56		 push	 esi
  000b9	56		 push	 esi
  000ba	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >
  000bf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();

  000c2	8b c6		 mov	 eax, esi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx

; 1664 :     }
; 1665 : }

  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
??$_Uninitialized_move@PAUSMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@QAU12@0PAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMeshScript::SMeshData *,std::allocator<CEffectMeshScript::SMeshData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z PROC ; std::_Uninitialized_move<D3DXVECTOR3 *,std::allocator<D3DXVECTOR3> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 18		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00011	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  00015	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00019	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]

; 1509 :         ++_Last;

  0001c	83 c1 0c	 add	 ecx, 12			; 0000000cH

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0001f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1509 :         ++_Last;

  00022	83 c0 0c	 add	 eax, 12			; 0000000cH

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00025	3b ce		 cmp	 ecx, esi
  00027	75 e8		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  00029	5e		 pop	 esi

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Uninitialized_move@PAUD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z ENDP ; std::_Uninitialized_move<D3DXVECTOR3 *,std::allocator<D3DXVECTOR3> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,std::allocator<int> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ; std::_Copy_memmove<int *,int *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z PROC ; std::_Uninitialized_move<D3DXVECTOR2 *,std::allocator<D3DXVECTOR2> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 14		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00011	8b 11		 mov	 edx, DWORD PTR [ecx]
  00013	89 10		 mov	 DWORD PTR [eax], edx
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 1509 :         ++_Last;

  00018	83 c1 08	 add	 ecx, 8

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0001b	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1509 :         ++_Last;

  0001e	83 c0 08	 add	 eax, 8

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1656 :         return _Dest + (_ULast - _UFirst);
; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {

  00021	3b ce		 cmp	 ecx, esi
  00023	75 ec		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  00025	5e		 pop	 esi

; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Uninitialized_move@PAUD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z ENDP ; std::_Uninitialized_move<D3DXVECTOR2 *,std::allocator<D3DXVECTOR2> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImage@@PAPAV1@@std@@YAPAPAVCGraphicImage@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImage@@PAPAV1@@std@@YAPAPAVCGraphicImage@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImage * *,CGraphicImage * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImage@@PAPAV1@@std@@YAPAPAVCGraphicImage@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImage * *,CGraphicImage * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAPAUSEffectMeshData@CEffectMesh@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAUSEffectMeshData@CEffectMesh@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0@Z PROC ; std::_Zero_range<CEffectMesh::SEffectMeshData * *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAUSEffectMeshData@CEffectMesh@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0@Z ENDP ; std::_Zero_range<CEffectMesh::SEffectMeshData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSEffectMeshData@CEffectMesh@@PAPAU12@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSEffectMeshData@CEffectMesh@@PAPAU12@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CEffectMesh::SEffectMeshData * *,CEffectMesh::SEffectMeshData * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSEffectMeshData@CEffectMesh@@PAPAU12@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CEffectMesh::SEffectMeshData * *,CEffectMesh::SEffectMeshData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Zero_range@PAH@std@@YAPAHQAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAH@std@@YAPAHQAH0@Z PROC		; std::_Zero_range<int *>, COMDAT

; 1814 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1815 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1816 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1817 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1818 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1819 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAH@std@@YAPAHQAH0@Z ENDP		; std::_Zero_range<int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCEffectMeshScript@@PAPAV1@@std@@YAPAPAVCEffectMeshScript@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCEffectMeshScript@@PAPAV1@@std@@YAPAPAVCEffectMeshScript@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CEffectMeshScript * *,CEffectMeshScript * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCEffectMeshScript@@PAPAV1@@std@@YAPAPAVCEffectMeshScript@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CEffectMeshScript * *,CEffectMeshScript * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	57		 push	 edi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  0000a	85 c0		 test	 eax, eax
  0000c	74 1a		 je	 SHORT $LN18@Uninitiali
  0000e	56		 push	 esi
  0000f	8d 34 80	 lea	 esi, DWORD PTR [eax+eax*4]
  00012	c1 e6 02	 shl	 esi, 2
  00015	56		 push	 esi
  00016	6a 00		 push	 0
  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 _memset
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00024	5e		 pop	 esi
  00025	5f		 pop	 edi

; 1838 :     }
; 1839 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN18@Uninitiali:

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00028	8b c7		 mov	 eax, edi
  0002a	5f		 pop	 edi

; 1838 :     }
; 1839 : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1833 :         for (; 0 < _Count; --_Count) {

  0000a	85 c9		 test	 ecx, ecx
  0000c	74 2d		 je	 SHORT $LN3@Uninitiali
  0000e	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
$LL4@Uninitiali:
  00011	0f 57 c0	 xorps	 xmm0, xmm0

; 1509 :         ++_Last;

  00014	8d 40 20	 lea	 eax, DWORD PTR [eax+32]

; 694  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00017	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  0001a	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0

; 1509 :         ++_Last;

  0001e	83 c6 20	 add	 esi, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00021	c7 40 d8 00 00
	00 00		 mov	 DWORD PTR [eax-40], 0
  00028	c7 40 dc 00 00
	00 00		 mov	 DWORD PTR [eax-36], 0
  0002f	c7 40 e0 00 00
	00 00		 mov	 DWORD PTR [eax-32], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1833 :         for (; 0 < _Count; --_Count) {

  00036	83 e9 01	 sub	 ecx, 1
  00039	75 d6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0003b	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  0003e	56		 push	 esi
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00048	8b c6		 mov	 eax, esi
  0004a	5e		 pop	 esi

; 1838 :     }
; 1839 : }

  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicImage * *,std::allocator<CGraphicImage *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImage@@PAPAV1@@std@@YAPAPAVCGraphicImage@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImage * *,CGraphicImage * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicImage * *,std::allocator<CGraphicImage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAPAUSEffectMeshData@CEffectMesh@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0@Z ; std::_Zero_range<CEffectMesh::SEffectMeshData * *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSEffectMeshData@CEffectMesh@@PAPAU12@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@00@Z ; std::_Copy_memmove<CEffectMesh::SEffectMeshData * *,CEffectMesh::SEffectMeshData * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshScript::SMeshData> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1833 :         for (; 0 < _Count; --_Count) {

  0000a	85 d2		 test	 edx, edx
  0000c	74 2f		 je	 SHORT $LN3@Uninitiali
  0000e	8b ca		 mov	 ecx, edx
  00010	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00013	c1 e1 04	 shl	 ecx, 4
  00016	2b ca		 sub	 ecx, edx
  00018	8d 34 8e	 lea	 esi, DWORD PTR [esi+ecx*4]
  0001b	0f 1f 44 00 00	 npad	 5
$LL4@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00020	c7 40 f8 00 00
	00 00		 mov	 DWORD PTR [eax-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00027	8d 40 3c	 lea	 eax, DWORD PTR [eax+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0002a	c7 40 c4 00 00
	00 00		 mov	 DWORD PTR [eax-60], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.h

; 105  : 				TimeEventAlpha.clear();

  00031	c7 40 c0 00 00
	00 00		 mov	 DWORD PTR [eax-64], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1833 :         for (; 0 < _Count; --_Count) {

  00038	83 ea 01	 sub	 edx, 1
  0003b	75 e3		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  0003d	ff 75 10	 push	 DWORD PTR __Al$[ebp]
  00040	56		 push	 esi
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  0004a	8b c6		 mov	 eax, esi
  0004c	5e		 pop	 esi

; 1838 :     }
; 1839 : }

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshScript::SMeshData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR3> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00009	85 c0		 test	 eax, eax
  0000b	74 08		 je	 SHORT $LN16@Uninitiali
  0000d	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00010	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 1838 :     }
; 1839 : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
$LN16@Uninitiali:

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  00015	8b c1		 mov	 eax, ecx

; 1838 :     }
; 1839 : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR3> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<int> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  0000d	56		 push	 esi
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$_Zero_range@PAH@std@@YAPAHQAH0@Z ; std::_Zero_range<int *>
  00014	83 c4 08	 add	 esp, 8

; 1830 :         return _First + _Count;

  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi

; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {
; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR2> >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00009	85 c9		 test	 ecx, ecx
  0000b	74 03		 je	 SHORT $LN4@Uninitiali
  0000d	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
$LN4@Uninitiali:

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();
; 1838 :     }
; 1839 : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR2> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z PROC ; std::_Uninitialized_move<CEffectMeshScript * *,std::allocator<CEffectMeshScript *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCEffectMeshScript@@PAPAV1@@std@@YAPAPAVCEffectMeshScript@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshScript * *,CEffectMeshScript * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ENDP ; std::_Uninitialized_move<CEffectMeshScript * *,std::allocator<CEffectMeshScript *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv299 = -4						; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b d9		 mov	 ebx, ecx
  0000c	81 ff cc cc cc
	0c		 cmp	 edi, 214748364		; 0cccccccH
  00012	0f 87 d2 00 00
	00		 ja	 $LN36@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0001b	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00024	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00027	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00029	c1 fa 03	 sar	 edx, 3
  0002c	8b c2		 mov	 eax, edx
  0002e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00031	03 c2		 add	 eax, edx
  00033	89 45 08	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0003b	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0003d	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00042	c1 fa 03	 sar	 edx, 3
  00045	8b ca		 mov	 ecx, edx
  00047	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004a	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0004c	8b d1		 mov	 edx, ecx
  0004e	d1 ea		 shr	 edx, 1
  00050	2b c2		 sub	 eax, edx
  00052	3b c8		 cmp	 ecx, eax
  00054	77 14		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00056	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00059	3b c7		 cmp	 eax, edi
  0005b	72 0d		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0005d	3d cc cc cc 0c	 cmp	 eax, 214748364		; 0cccccccH
  00062	0f 87 87 00 00
	00		 ja	 $LN37@Resize_rea
  00068	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0006a	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  0006c	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0006f	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00072	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00073	89 45 fc	 mov	 DWORD PTR tv299[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007e	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00080	8b c7		 mov	 eax, edi
  00082	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00084	53		 push	 ebx
  00085	50		 push	 eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00086	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  00089	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00092	53		 push	 ebx
  00093	56		 push	 esi
  00094	ff 73 04	 push	 DWORD PTR [ebx+4]
  00097	ff 33		 push	 DWORD PTR [ebx]
  00099	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@QAU1@0PAU1@AAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_move<SPTVertex *,std::allocator<SPTVertex> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0009e	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a0	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000a3	85 c0		 test	 eax, eax
  000a5	74 27		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000a7	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000aa	2b c8		 sub	 ecx, eax
  000ac	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000b1	f7 e9		 imul	 ecx
  000b3	c1 fa 03	 sar	 edx, 3
  000b6	8b c2		 mov	 eax, edx
  000b8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000bb	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bd	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000c0	c1 e0 02	 shl	 eax, 2
  000c3	50		 push	 eax
  000c4	ff 33		 push	 DWORD PTR [ebx]
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000ce	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  000d1	89 33		 mov	 DWORD PTR [ebx], esi
  000d3	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000d6	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d9	8b 45 fc	 mov	 eax, DWORD PTR tv299[ebp]
  000dc	5f		 pop	 edi
  000dd	03 c6		 add	 eax, esi
  000df	5e		 pop	 esi
  000e0	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  000e3	5b		 pop	 ebx

; 1208 :     }

  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000ea	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@CAXXZ ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ef	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000f4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	07		 cmp	 edi, 134217727		; 07ffffffH
  00012	0f 87 a7 00 00
	00		 ja	 $LN38@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]
  00022	c1 f9 05	 sar	 ecx, 5
  00025	89 4d fc	 mov	 DWORD PTR __Oldsize$1$[ebp], ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0002b	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0002d	c1 f9 05	 sar	 ecx, 5

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00030	8b d1		 mov	 edx, ecx
  00032	d1 ea		 shr	 edx, 1
  00034	2b c2		 sub	 eax, edx
  00036	3b c8		 cmp	 ecx, eax
  00038	77 11		 ja	 SHORT $LN36@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0003a	8d 1c 0a	 lea	 ebx, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003d	3b df		 cmp	 ebx, edi
  0003f	72 0a		 jb	 SHORT $LN36@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00041	81 fb ff ff ff
	07		 cmp	 ebx, 134217727		; 07ffffffH
  00047	77 7b		 ja	 SHORT $LN39@Resize_rea
  00049	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN36@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0004b	8b df		 mov	 ebx, edi
$LN18@Resize_rea:
  0004d	c1 e3 05	 shl	 ebx, 5

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	53		 push	 ebx
  00051	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00056	8b d0		 mov	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00058	8b cf		 mov	 ecx, edi
  0005a	8b 45 fc	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  0005d	2b c8		 sub	 ecx, eax

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005f	56		 push	 esi

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00060	c1 e0 05	 shl	 eax, 5

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00063	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00064	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00066	89 55 08	 mov	 DWORD PTR __Newvec$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0006f	56		 push	 esi
  00070	ff 75 08	 push	 DWORD PTR __Newvec$1$[ebp]
  00073	ff 76 04	 push	 DWORD PTR [esi+4]
  00076	ff 36		 push	 DWORD PTR [esi]
  00078	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@QAU12@0PAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectFrameData *,std::allocator<CEffectMesh::SEffectFrameData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007d	8b 06		 mov	 eax, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0007f	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00082	85 c0		 test	 eax, eax
  00084	74 1e		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00086	56		 push	 esi
  00087	ff 76 04	 push	 DWORD PTR [esi+4]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00092	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00095	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00097	83 e0 e0	 and	 eax, -32		; ffffffe0H
  0009a	50		 push	 eax
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a1	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1680 :         _Myfirst = _Newvec;

  000a4	8b 45 08	 mov	 eax, DWORD PTR __Newvec$1$[ebp]

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000a7	c1 e7 05	 shl	 edi, 5
  000aa	89 06		 mov	 DWORD PTR [esi], eax
  000ac	03 f8		 add	 edi, eax
  000ae	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000b1	03 c3		 add	 eax, ebx
  000b3	5f		 pop	 edi
  000b4	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx

; 1208 :     }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
$LN38@Resize_rea:

; 1184 :             _Xlength();

  000bf	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@CAXXZ ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Xlength
$LN39@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000c4	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN35@Resize_rea:
  000c9	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv299 = -8						; size = 4
__Newvec$1$ = -4					; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	81 fb 44 44 44
	04		 cmp	 ebx, 71582788		; 04444444H
  00014	0f 87 f9 00 00
	00		 ja	 $LN38@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0001a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001d	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00022	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00024	f7 e9		 imul	 ecx
  00026	03 d1		 add	 edx, ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0002b	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002d	c1 fa 05	 sar	 edx, 5
  00030	8b c2		 mov	 eax, edx
  00032	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00035	03 c2		 add	 eax, edx
  00037	89 45 08	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0003a	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0003f	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00041	b8 44 44 44 04	 mov	 eax, 71582788		; 04444444H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00046	03 d1		 add	 edx, ecx
  00048	c1 fa 05	 sar	 edx, 5
  0004b	8b ca		 mov	 ecx, edx
  0004d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00050	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00052	8b d1		 mov	 edx, ecx
  00054	d1 ea		 shr	 edx, 1
  00056	2b c2		 sub	 eax, edx
  00058	3b c8		 cmp	 ecx, eax
  0005a	77 14		 ja	 SHORT $LN36@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005c	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0005f	3b c3		 cmp	 eax, ebx
  00061	72 0d		 jb	 SHORT $LN36@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00063	3d 44 44 44 04	 cmp	 eax, 71582788		; 04444444H
  00068	0f 87 aa 00 00
	00		 ja	 $LN39@Resize_rea
  0006e	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN36@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00070	8b c3		 mov	 eax, ebx
$LN18@Resize_rea:
  00072	8b c8		 mov	 ecx, eax
  00074	c1 e1 04	 shl	 ecx, 4
  00077	2b c8		 sub	 ecx, eax
  00079	c1 e1 02	 shl	 ecx, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007c	51		 push	 ecx

; 65   :     return _Count * _Ty_size;

  0007d	89 4d f8	 mov	 DWORD PTR tv299[ebp], ecx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00088	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0008a	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	89 75 fc	 mov	 DWORD PTR __Newvec$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0008f	2b c1		 sub	 eax, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00091	57		 push	 edi
  00092	50		 push	 eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00093	8b c1		 mov	 eax, ecx
  00095	c1 e0 04	 shl	 eax, 4
  00098	2b c1		 sub	 eax, ecx
  0009a	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshScript::SMeshData> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a3	57		 push	 edi
  000a4	56		 push	 esi
  000a5	ff 77 04	 push	 DWORD PTR [edi+4]
  000a8	ff 37		 push	 DWORD PTR [edi]
  000aa	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@QAU12@0PAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Uninitialized_move<CEffectMeshScript::SMeshData *,std::allocator<CEffectMeshScript::SMeshData> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000af	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000b1	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b4	85 c9		 test	 ecx, ecx
  000b6	74 3b		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000b8	57		 push	 edi
  000b9	ff 77 04	 push	 DWORD PTR [edi+4]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000c2	8b 37		 mov	 esi, DWORD PTR [edi]
  000c4	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  000c9	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000cc	2b ce		 sub	 ecx, esi
  000ce	f7 e9		 imul	 ecx
  000d0	03 d1		 add	 edx, ecx
  000d2	c1 fa 05	 sar	 edx, 5
  000d5	8b ca		 mov	 ecx, edx
  000d7	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000da	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000dc	8b c1		 mov	 eax, ecx
  000de	c1 e0 04	 shl	 eax, 4
  000e1	2b c1		 sub	 eax, ecx
  000e3	c1 e0 02	 shl	 eax, 2
  000e6	50		 push	 eax
  000e7	56		 push	 esi
  000e8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ed	8b 75 fc	 mov	 esi, DWORD PTR __Newvec$1$[ebp]
  000f0	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000f3	8b c3		 mov	 eax, ebx
  000f5	89 37		 mov	 DWORD PTR [edi], esi
  000f7	c1 e0 04	 shl	 eax, 4
  000fa	2b c3		 sub	 eax, ebx
  000fc	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000ff	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00102	8b 45 f8	 mov	 eax, DWORD PTR tv299[ebp]
  00105	03 c6		 add	 eax, esi
  00107	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0010a	5f		 pop	 edi
  0010b	5e		 pop	 esi
  0010c	5b		 pop	 ebx

; 1208 :     }

  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c2 08 00	 ret	 8
$LN38@Resize_rea:

; 1184 :             _Xlength();

  00113	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Xlength
$LN39@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00118	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN35@Resize_rea:
  0011d	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv319 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 1183 :         if (_Newsize > max_size()) {

  00005	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	81 fe 55 55 55
	15		 cmp	 esi, 357913941		; 15555555H
  00011	0f 87 9c 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00017	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0001a	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001f	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00021	f7 e9		 imul	 ecx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00023	b8 55 55 55 15	 mov	 eax, 357913941		; 15555555H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	d1 fa		 sar	 edx, 1
  0002a	8b ca		 mov	 ecx, edx
  0002c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0002f	03 ca		 add	 ecx, edx

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00031	8b d1		 mov	 edx, ecx
  00033	d1 ea		 shr	 edx, 1
  00035	2b c2		 sub	 eax, edx
  00037	3b c8		 cmp	 ecx, eax
  00039	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0003b	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003e	3b c6		 cmp	 eax, esi
  00040	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00042	3d 55 55 55 15	 cmp	 eax, 357913941		; 15555555H
  00047	77 6f		 ja	 SHORT $LN37@Resize_rea
  00049	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0004b	8b c6		 mov	 eax, esi
$LN18@Resize_rea:
  0004d	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00050	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00053	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00054	89 45 08	 mov	 DWORD PTR tv319[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0005c	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005d	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0005f	53		 push	 ebx
  00060	ff 77 04	 push	 DWORD PTR [edi+4]
  00063	ff 37		 push	 DWORD PTR [edi]
  00065	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Uninitialized_move<D3DXVECTOR3 *,std::allocator<D3DXVECTOR3> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0006a	8b 07		 mov	 eax, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0006c	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0006f	85 c0		 test	 eax, eax
  00071	74 26		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00073	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00076	2b c8		 sub	 ecx, eax
  00078	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0007d	f7 e9		 imul	 ecx
  0007f	d1 fa		 sar	 edx, 1
  00081	8b c2		 mov	 eax, edx
  00083	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00086	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0008b	c1 e0 02	 shl	 eax, 2
  0008e	50		 push	 eax
  0008f	ff 37		 push	 DWORD PTR [edi]
  00091	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00096	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00099	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  0009c	89 1f		 mov	 DWORD PTR [edi], ebx
  0009e	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  000a1	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000a4	8b 45 08	 mov	 eax, DWORD PTR tv319[ebp]
  000a7	03 c3		 add	 eax, ebx
  000a9	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx

; 1208 :     }

  000af	5d		 pop	 ebp
  000b0	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000b3	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@CAXXZ ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000b8	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000bd	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv346 = -4						; size = 4
__Newvec$1$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b f1		 mov	 esi, ecx
  0000c	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00012	0f 87 92 00 00
	00		 ja	 $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00025	2b 1e		 sub	 ebx, DWORD PTR [esi]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002a	8b d1		 mov	 edx, ecx

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fb 02	 sar	 ebx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0002f	d1 ea		 shr	 edx, 1
  00031	2b c2		 sub	 eax, edx
  00033	3b c8		 cmp	 ecx, eax
  00035	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00037	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0003a	3b c7		 cmp	 eax, edi
  0003c	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0003e	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00043	77 6a		 ja	 SHORT $LN37@Resize_rea
  00045	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00047	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  00049	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0004d	89 45 fc	 mov	 DWORD PTR tv346[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00055	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00057	89 45 08	 mov	 DWORD PTR __Newvec$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0005a	2b cb		 sub	 ecx, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0005c	56		 push	 esi
  0005d	51		 push	 ecx

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  0005e	8d 0c 98	 lea	 ecx, DWORD PTR [eax+ebx*4]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00067	8b 5d 08	 mov	 ebx, DWORD PTR __Newvec$1$[ebp]
  0006a	56		 push	 esi
  0006b	53		 push	 ebx
  0006c	ff 76 04	 push	 DWORD PTR [esi+4]
  0006f	ff 36		 push	 DWORD PTR [esi]
  00071	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00078	83 c4 20	 add	 esp, 32			; 00000020H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0007b	85 c9		 test	 ecx, ecx
  0007d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00082	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	83 e0 fc	 and	 eax, -4			; fffffffcH
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00091	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00094	89 1e		 mov	 DWORD PTR [esi], ebx
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00099	8b 45 fc	 mov	 eax, DWORD PTR tv346[ebp]
  0009c	03 c3		 add	 eax, ebx
  0009e	5f		 pop	 edi
  0009f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx

; 1208 :     }

  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  000aa	e8 00 00 00 00	 call	 ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000af	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  000b4	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv353 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1183 :         if (_Newsize > max_size()) {

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	81 ff ff ff ff
	1f		 cmp	 edi, 536870911		; 1fffffffH
  00011	77 75		 ja	 SHORT $LN36@Resize_rea

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00013	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00016	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0001b	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0001d	c1 f9 03	 sar	 ecx, 3

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00020	8b d1		 mov	 edx, ecx
  00022	d1 ea		 shr	 edx, 1
  00024	2b c2		 sub	 eax, edx
  00026	3b c8		 cmp	 ecx, eax
  00028	77 10		 ja	 SHORT $LN34@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0002a	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0002d	3b c7		 cmp	 eax, edi
  0002f	72 09		 jb	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00031	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00036	77 55		 ja	 SHORT $LN37@Resize_rea
  00038	eb 02		 jmp	 SHORT $LN18@Resize_rea
$LN34@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0003a	8b c7		 mov	 eax, edi
$LN18@Resize_rea:
  0003c	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00040	89 45 08	 mov	 DWORD PTR tv353[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00043	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00048	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00049	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0004b	53		 push	 ebx
  0004c	ff 76 04	 push	 DWORD PTR [esi+4]
  0004f	ff 36		 push	 DWORD PTR [esi]
  00051	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@QAU1@0PAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Uninitialized_move<D3DXVECTOR2 *,std::allocator<D3DXVECTOR2> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00056	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00058	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  0005b	85 c9		 test	 ecx, ecx
  0005d	74 12		 je	 SHORT $LN29@Resize_rea

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0005f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00062	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00064	83 e0 f8	 and	 eax, -8			; fffffff8H
  00067	50		 push	 eax
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006e	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  00071	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  00074	89 1e		 mov	 DWORD PTR [esi], ebx
  00076	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00079	8b 45 08	 mov	 eax, DWORD PTR tv353[ebp]
  0007c	03 c3		 add	 eax, ebx
  0007e	5f		 pop	 edi
  0007f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx

; 1208 :     }

  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
$LN36@Resize_rea:

; 1184 :             _Xlength();

  00088	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@CAXXZ ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Xlength
$LN37@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0008d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN33@Resize_rea:
  00092	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAXPAPAVCEffectMeshScript@@QAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAXPAPAVCEffectMeshScript@@QAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMeshScript *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAXPAPAVCEffectMeshScript@@QAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMeshScript *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USPTVertex@@@std@@@std@@YAXPAUSPTVertex@@QAU1@AAV?$allocator@USPTVertex@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USPTVertex@@@std@@@std@@YAXPAUSPTVertex@@QAU1@AAV?$allocator@USPTVertex@@@0@@Z PROC ; std::_Destroy_range<std::allocator<SPTVertex> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USPTVertex@@@std@@@std@@YAXPAUSPTVertex@@QAU1@AAV?$allocator@USPTVertex@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<SPTVertex> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  0000b	3b f3		 cmp	 esi, ebx
  0000d	74 4f		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 1c	 add	 esi, 28			; 0000001cH
  00012	57		 push	 edi
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00013	8b 7e f8	 mov	 edi, DWORD PTR [esi-8]
  00016	85 ff		 test	 edi, edi
  00018	74 39		 je	 SHORT $LN25@Destroy_ra

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0001a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001c	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00021	2b cf		 sub	 ecx, edi
  00023	f7 e9		 imul	 ecx
  00025	c1 fa 03	 sar	 edx, 3
  00028	8b c2		 mov	 eax, edx
  0002a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002f	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00032	c1 e0 02	 shl	 eax, 2
  00035	50		 push	 eax
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003c	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00046	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 1699 :             _Myend   = pointer();

  0004d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN25@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  00053	83 c6 20	 add	 esi, 32			; 00000020H
  00056	8d 46 e4	 lea	 eax, DWORD PTR [esi-28]
  00059	3b c3		 cmp	 eax, ebx
  0005b	75 b6		 jne	 SHORT $LL4@Destroy_ra
  0005d	5f		 pop	 edi
$LN3@Destroy_ra:
  0005e	5e		 pop	 esi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  0005f	5b		 pop	 ebx
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAXPAPAVCGraphicImage@@QAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAXPAPAVCGraphicImage@@QAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicImage *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAXPAPAVCGraphicImage@@QAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicImage *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Emplace_reallocate<CEffectMesh::SEffectMeshData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_move<CEffectMesh::SEffectMeshData * *,std::allocator<CEffectMesh::SEffectMeshData *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Emplace_reallocate<CEffectMesh::SEffectMeshData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAXPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAXPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectMeshData *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAXPAPAUSEffectMeshData@CEffectMesh@@QAPAU12@AAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectMeshData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 39		 je	 SHORT $LN3@Destroy_ra
  0000f	83 c6 38	 add	 esi, 56			; 00000038H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00012	8b 4e f8	 mov	 ecx, DWORD PTR [esi-8]
  00015	85 c9		 test	 ecx, ecx
  00017	74 25		 je	 SHORT $LN25@Destroy_ra

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00019	8b 06		 mov	 eax, DWORD PTR [esi]
  0001b	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001d	83 e0 f8	 and	 eax, -8			; fffffff8H
  00020	50		 push	 eax
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00027	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00031	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 1699 :             _Myend   = pointer();

  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN25@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 959  :         for (; _First != _Last; ++_First) {

  0003e	83 c6 3c	 add	 esi, 60			; 0000003cH
  00041	8d 46 c8	 lea	 eax, DWORD PTR [esi-56]
  00044	3b c7		 cmp	 eax, edi
  00046	75 ca		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  00048	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00049	5e		 pop	 esi
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@QAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@QAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z PROC ; std::_Destroy_range<std::allocator<D3DXVECTOR3> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAXPAUD3DXVECTOR3@@QAU1@AAV?$allocator@UD3DXVECTOR3@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<D3DXVECTOR3> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAHQAHAAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAXPAUD3DXVECTOR2@@QAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAXPAUD3DXVECTOR2@@QAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z PROC ; std::_Destroy_range<std::allocator<D3DXVECTOR2> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAXPAUD3DXVECTOR2@@QAU1@AAV?$allocator@UD3DXVECTOR2@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<D3DXVECTOR2> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Emplace_reallocate<CEffectMeshScript * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ; std::_Uninitialized_move<CEffectMeshScript * *,std::allocator<CEffectMeshScript *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@YAPAPAVCEffectMeshScript@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCEffectMeshScript@@@0@@Z ; std::_Uninitialized_move<CEffectMeshScript * *,std::allocator<CEffectMeshScript *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Emplace_reallocate<CEffectMeshScript * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ; std::_Uninitialized_move<CGraphicImage * *,std::allocator<CGraphicImage *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@YAPAPAVCGraphicImage@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImage@@@0@@Z ; std::_Uninitialized_move<CGraphicImage * *,std::allocator<CGraphicImage *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@CAXXZ ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z
_TEXT	SEGMENT
__Right_size$1$ = -12					; size = 4
__Fancyptr$1 = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Ptr$1$ = 16						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4372 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Left$[ebp]

; 4372 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  0000b	57		 push	 edi

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0000f	90		 npad	 1
$LL34@operator:
  00010	8a 06		 mov	 al, BYTE PTR [esi]
  00012	46		 inc	 esi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL34@operator

; 4373 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4374 :     const auto _Left_size  = _Convert_size<_Size_type>(_Traits::length(_Left));
; 4375 :     const auto _Right_size = _Right.size();

  00017	8b 5d 10	 mov	 ebx, DWORD PTR __Right$[ebp]

; 321  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b f1		 sub	 esi, ecx

; 4376 :     if (_Right.max_size() - _Right_size < _Left_size) {

  0001c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00021	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00024	2b c1		 sub	 eax, ecx
  00026	89 4d f4	 mov	 DWORD PTR __Right_size$1$[ebp], ecx
  00029	3b c6		 cmp	 eax, esi
  0002b	0f 82 a0 00 00
	00		 jb	 $LN37@operator

; 2153 :         return _BUF_SIZE <= _Myres;

  00031	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2145 :         if (_Large_string_engaged()) {

  00035	72 02		 jb	 SHORT $LN11@operator

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  00037	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN11@operator:

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2447 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003c	03 ce		 add	 ecx, esi

; 2448 :         size_type _New_capacity = _BUF_SIZE - 1;

  0003e	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00043	89 4d fc	 mov	 DWORD PTR __New_size$1$[ebp], ecx

; 2449 :         auto& _My_data          = _Mypair._Myval2;
; 2450 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00046	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2124 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

  00049	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  00050	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 2453 :         if (_New_capacity < _New_size) {

  00057	3b cf		 cmp	 ecx, edi
  00059	76 42		 jbe	 SHORT $LN16@operator

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0005b	8b f9		 mov	 edi, ecx
  0005d	83 cf 0f	 or	 edi, 15			; 0000000fH
  00060	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00066	76 07		 jbe	 SHORT $LN23@operator

; 4203 :             return _Max;

  00068	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
  0006d	eb 0a		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0006f	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00074	3b f8		 cmp	 edi, eax
  00076	0f 42 f8	 cmovb	 edi, eax
$LN22@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00079	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2455 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00082	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  00085	89 45 f8	 mov	 DWORD PTR __Fancyptr$1[ebp], eax

; 2456 :             _Ptr                    = _Unfancy(_Fancyptr);
; 2457 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  00088	8d 45 f8	 lea	 eax, DWORD PTR __Fancyptr$1[ebp]
  0008b	50		 push	 eax
  0008c	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0008f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
$LN16@operator:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009d	56		 push	 esi
  0009e	ff 75 0c	 push	 DWORD PTR __Left$[ebp]

; 2461 :         _My_data._Myres  = _New_capacity;

  000a1	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000a4	8b 7d 10	 mov	 edi, DWORD PTR __Ptr$1$[ebp]
  000a7	57		 push	 edi

; 2460 :         _My_data._Mysize = _New_size;

  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000ab	e8 00 00 00 00	 call	 _memcpy
  000b0	ff 75 f4	 push	 DWORD PTR __Right_size$1$[ebp]

; 2463 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000b3	8d 0c 37	 lea	 ecx, DWORD PTR [edi+esi]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000b6	53		 push	 ebx
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 _memcpy

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000bd	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  000c0	83 c4 18	 add	 esp, 24			; 00000018H

; 2464 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000c3	c6 04 07 00	 mov	 BYTE PTR [edi+eax], 0

; 4378 :     }
; 4379 : 
; 4380 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

  000c7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx

; 4381 : }

  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN37@operator:

; 4377 :         _Xlen_string();

  000d1	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN35@operator:
  000d6	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CEffectMeshScript::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A ; CEffectMeshScript::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ ; CDynamicPool<CEffectMeshScript>::~CDynamicPool<CEffectMeshScript>
??__F?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CEffectMeshScript::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??__E?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CEffectMeshScript::ms_kPool'', COMDAT

; 430  : CDynamicPool<CEffectMeshScript> CEffectMeshScript::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CEffectMeshScript::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CEffectMeshScript::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z PROC	; CDynamicPool<CEffectMeshScript>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ ; CDynamicPool<CEffectMeshScript>::~CDynamicPool<CEffectMeshScript>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCEffectMeshScript@@@@UAEPAXI@Z ENDP	; CDynamicPool<CEffectMeshScript>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCEffectMeshScript@@@@KAXPAVCEffectMeshScript@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCEffectMeshScript@@@@KAXPAVCEffectMeshScript@@@Z PROC ; CDynamicPool<CEffectMeshScript>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCEffectMeshScript@@@@KAXPAVCEffectMeshScript@@@Z ENDP ; CDynamicPool<CEffectMeshScript>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ PROC	; CDynamicPool<CEffectMeshScript>::~CDynamicPool<CEffectMeshScript>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCEffectMeshScript@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCEffectMeshScript@@@@UAE@XZ ENDP	; CDynamicPool<CEffectMeshScript>::~CDynamicPool<CEffectMeshScript>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@CAXXZ PROC ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@CAXXZ ENDP ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ PROC ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::~vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 f8	 and	 eax, -8			; fffffff8H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ ENDP ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::~vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@CAXXZ PROC ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@CAXXZ ENDP ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ PROC ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::~vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 39		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00011	2b d1		 sub	 edx, ecx
  00013	f7 ea		 imul	 edx
  00015	d1 fa		 sar	 edx, 1
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00021	c1 e0 02	 shl	 eax, 2
  00024	50		 push	 eax
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00031	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00034	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  0003b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00042	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00043	c3		 ret	 0
??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ ENDP ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::~vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CEffectMesh::SEffectMeshData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A ; CEffectMesh::SEffectMeshData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ ; CDynamicPool<CEffectMesh::SEffectMeshData>::~CDynamicPool<CEffectMesh::SEffectMeshData>
??__F?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CEffectMesh::SEffectMeshData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??__E?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CEffectMesh::SEffectMeshData::ms_kPool'', COMDAT

; 7    : CDynamicPool<CEffectMesh::SEffectMeshData> CEffectMesh::SEffectMeshData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CEffectMesh::SEffectMeshData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CEffectMesh::SEffectMeshData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z PROC ; CDynamicPool<CEffectMesh::SEffectMeshData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ ; CDynamicPool<CEffectMesh::SEffectMeshData>::~CDynamicPool<CEffectMesh::SEffectMeshData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAEPAXI@Z ENDP ; CDynamicPool<CEffectMesh::SEffectMeshData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@KAXPAUSEffectMeshData@CEffectMesh@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@KAXPAUSEffectMeshData@CEffectMesh@@@Z PROC ; CDynamicPool<CEffectMesh::SEffectMeshData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 110  : 			delete pkData;

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	0f 84 8f 00 00
	00		 je	 $LN6@Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000f	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00015	85 c9		 test	 ecx, ecx
  00017	74 33		 je	 SHORT $LN14@Delete

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00019	8b 86 b4 00 00
	00		 mov	 eax, DWORD PTR [esi+180]
  0001f	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00021	83 e0 fc	 and	 eax, -4			; fffffffcH
  00024	50		 push	 eax
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0002b	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00035	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00038	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 1699 :             _Myend   = pointer();

  00042	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
$LN14@Delete:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0004c	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  00052	57		 push	 edi
  00053	8d be a0 00 00
	00		 lea	 edi, DWORD PTR [esi+160]
  00059	85 c0		 test	 eax, eax
  0005b	74 32		 je	 SHORT $LN21@Delete

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0005d	57		 push	 edi
  0005e	ff 77 04	 push	 DWORD PTR [edi+4]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00067	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00069	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006e	83 e0 e0	 and	 eax, -32		; ffffffe0H
  00071	50		 push	 eax
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00078	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00081	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00088	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN21@Delete:
  0008f	68 b8 00 00 00	 push	 184			; 000000b8H
  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009a	83 c4 08	 add	 esp, 8
  0009d	5f		 pop	 edi
$LN6@Delete:
  0009e	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 111  : 		}

  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
?Delete@?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@KAXPAUSEffectMeshData@CEffectMesh@@@Z ENDP ; CDynamicPool<CEffectMesh::SEffectMeshData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ PROC ; CDynamicPool<CEffectMesh::SEffectMeshData>::~CDynamicPool<CEffectMesh::SEffectMeshData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@UAE@XZ ENDP ; CDynamicPool<CEffectMesh::SEffectMeshData>::~CDynamicPool<CEffectMesh::SEffectMeshData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEffectMeshScript@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEffectMeshScript@@UAEPAXI@Z PROC			; CEffectMeshScript::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEffectMeshScript@@UAE@XZ ; CEffectMeshScript::~CEffectMeshScript
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 44		 push	 68			; 00000044H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEffectMeshScript@@UAEPAXI@Z ENDP			; CEffectMeshScript::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?Delete@CEffectMeshScript@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@CEffectMeshScript@@SAXPAV1@@Z PROC		; CEffectMeshScript::Delete, COMDAT

; 443  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 444  : 	pkData->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CEffectElementBase@@QAEXXZ ; CEffectElementBase::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 445  : 	ms_kPool.Free(pkData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 446  : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Emplace_reallocate<CEffectMeshScript * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 446  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CEffectMeshScript@@SAXPAV1@@Z ENDP		; CEffectMeshScript::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?New@CEffectMeshScript@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CEffectMeshScript@@SAPAV1@XZ PROC			; CEffectMeshScript::New, COMDAT

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CEffectMeshScript@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 44		 push	 68			; 00000044H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0CEffectMeshScript@@QAE@XZ ; CEffectMeshScript::CEffectMeshScript
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 439  : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 440  : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshScript@@@?$vector@PAVCEffectMeshScript@@V?$allocator@PAVCEffectMeshScript@@@std@@@std@@QAEPAPAVCEffectMeshScript@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshScript *,std::allocator<CEffectMeshScript *> >::_Emplace_reallocate<CEffectMeshScript * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 439  : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 440  : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 440  : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CEffectMeshScript@@SAPAV1@XZ$0:
  00000	6a 44		 push	 68			; 00000044H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@CEffectMeshScript@@SAPAV1@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CEffectMeshScript@@SAPAV1@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CEffectMeshScript@@SAPAV1@XZ ENDP			; CEffectMeshScript::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?DestroySystem@CEffectMeshScript@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CEffectMeshScript@@SAXXZ PROC		; CEffectMeshScript::DestroySystem, COMDAT

; 433  : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 433  : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 435  : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+16
  00041	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+8, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 435  : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshScript@@2V?$CDynamicPool@VCEffectMeshScript@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CEffectMeshScript@@SAXXZ ENDP		; CEffectMeshScript::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
$T1 = 11						; size = 1
?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z PROC ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::resize, COMDAT
; _this$ = ecx

; 1240 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00008	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0000d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00010	8b f1		 mov	 esi, ecx
  00012	2b 37		 sub	 esi, DWORD PTR [edi]
  00014	f7 ee		 imul	 esi
  00016	03 d6		 add	 edx, esi

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00018	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  0001b	c1 fa 05	 sar	 edx, 5
  0001e	8b da		 mov	 ebx, edx
  00020	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00023	03 da		 add	 ebx, edx
  00025	3b f3		 cmp	 esi, ebx
  00027	73 21		 jae	 SHORT $LN4@resize

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00029	8b 17		 mov	 edx, DWORD PTR [edi]
  0002b	8b c6		 mov	 eax, esi
  0002d	c1 e0 04	 shl	 eax, 4
  00030	2b c6		 sub	 eax, esi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00032	57		 push	 edi
  00033	51		 push	 ecx

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00034	8d 34 82	 lea	 esi, DWORD PTR [edx+eax*4]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1220 :             _Mylast = _Newlast;

  00040	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00043	5f		 pop	 edi

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN4@resize:

; 1224 :         if (_Newsize > _Oldsize) { // append

  0004a	76 41		 jbe	 SHORT $LN5@resize

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0004c	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004f	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00054	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00056	f7 e9		 imul	 ecx
  00058	03 d1		 add	 edx, ecx
  0005a	c1 fa 05	 sar	 edx, 5
  0005d	8b c2		 mov	 eax, edx
  0005f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00062	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00064	3b f0		 cmp	 esi, eax
  00066	76 13		 jbe	 SHORT $LN6@resize

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00068	8d 45 0b	 lea	 eax, DWORD PTR $T1[ebp]
  0006b	8b cf		 mov	 ecx, edi
  0006d	50		 push	 eax
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::_Resize_reallocate<std::_Value_init_tag>
  00074	5f		 pop	 edi

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
$LN6@resize:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0007b	57		 push	 edi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0007c	2b f3		 sub	 esi, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0007e	56		 push	 esi
  0007f	ff 77 04	 push	 DWORD PTR [edi+4]
  00082	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAPAUSMeshData@CEffectMeshScript@@PAU12@IAAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMeshScript::SMeshData> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00087	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@resize:
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAE@XZ PROC ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::~vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 4b		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	03 d1		 add	 edx, ecx
  00021	c1 fa 05	 sar	 edx, 5
  00024	8b ca		 mov	 ecx, edx
  00026	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00029	03 ca		 add	 ecx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	8b c1		 mov	 eax, ecx
  0002d	c1 e0 04	 shl	 eax, 4
  00030	2b c1		 sub	 eax, ecx
  00032	c1 e0 02	 shl	 eax, 2
  00035	50		 push	 eax
  00036	ff 37		 push	 DWORD PTR [edi]
  00038	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0003d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00046	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0004d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  00054	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00055	c3		 ret	 0
??1?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAE@XZ ENDP ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::~vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_GotoChild$2 = -92					; size = 4
_dwMeshElementCount$ = -88				; size = 4
tv4871 = -84						; size = 4
_this$GSCopy$1$ = -80					; size = 4
__My_data$2$ = -80					; size = 4
__New_ptr$3 = -76					; size = 4
__New_ptr$4 = -76					; size = 4
__New_ptr$5 = -76					; size = 4
__New_ptr$6 = -76					; size = 4
__New_ptr$7 = -76					; size = 4
$T8 = -72						; size = 4
_i$1$ = -72						; size = 4
$T9 = -72						; size = 4
__New_ptr$10 = -72					; size = 4
__New_ptr$11 = -72					; size = 4
__New_ptr$12 = -72					; size = 4
__New_ptr$13 = -72					; size = 4
$T14 = -65						; size = 1
$T15 = -65						; size = 1
$T16 = -65						; size = 1
$T17 = -65						; size = 1
$T18 = -65						; size = 1
$T19 = -65						; size = 1
$T20 = -65						; size = 1
$T21 = -65						; size = 1
$T22 = -65						; size = 1
$T23 = -65						; size = 1
$T24 = -65						; size = 1
$T25 = -65						; size = 1
$T26 = -65						; size = 1
$T27 = -64						; size = 24
$T28 = -64						; size = 24
$T29 = -40						; size = 24
$T30 = -40						; size = 24
$T31 = -40						; size = 24
$T32 = -40						; size = 24
$T33 = -40						; size = 24
$T34 = -40						; size = 24
$T35 = -40						; size = 24
$T36 = -40						; size = 24
$T37 = -40						; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z PROC ; CEffectMeshScript::OnLoadScript, COMDAT
; _this$ = ecx

; 606  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d b0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0002d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@KFLKANCO@meshfilename@
  00035	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@KFLKANCO@meshfilename@+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 606  : {

  0003a	8b 75 08	 mov	 esi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00044	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 12 ; 0000000cH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0004b	66 0f d6 45 d8	 movq	 QWORD PTR $T41[ebp], xmm0
  00050	89 45 e0	 mov	 DWORD PTR $T41[ebp+8], eax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00053	c6 45 e4 00	 mov	 BYTE PTR $T41[ebp+12], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 607  : 	if (rTextFileLoader.GetTokenString("meshfilename", &m_strMeshFileName))

  00057	8d 79 2c	 lea	 edi, DWORD PTR [ecx+44]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	57		 push	 edi
  00062	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  00065	8b ce		 mov	 ecx, esi
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006d	8b 4d ec	 mov	 ecx, DWORD PTR $T41[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 607  : 	if (rTextFileLoader.GetTokenString("meshfilename", &m_strMeshFileName))

  00070	89 45 b8	 mov	 DWORD PTR $T9[ebp], eax
  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0007d	72 10		 jb	 SHORT $LN95@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007f	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00080	51		 push	 ecx
  00081	ff 75 d8	 push	 DWORD PTR $T41[ebp]
  00084	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00089	8b 45 b8	 mov	 eax, DWORD PTR $T9[ebp]
  0008c	83 c4 08	 add	 esp, 8
$LN95@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 607  : 	if (rTextFileLoader.GetTokenString("meshfilename", &m_strMeshFileName))

  0008f	85 c0		 test	 eax, eax
  00091	0f 84 a5 08 00
	00		 je	 $LN5@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00097	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  0009b	8b c7		 mov	 eax, edi
  0009d	72 02		 jb	 SHORT $LN922@OnLoadScri

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  0009f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN922@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 609  : 		if (!IsGlobalFileName(m_strMeshFileName.c_str()))

  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?IsGlobalFileName@@YA_NPBD@Z ; IsGlobalFileName
  000a7	83 c4 04	 add	 esp, 4
  000aa	84 c0		 test	 al, al
  000ac	0f 85 85 00 00
	00		 jne	 $LN130@OnLoadScri

; 610  : 		{
; 611  : 			m_strMeshFileName = GetOnlyPathName(rTextFileLoader.GetFileName()) + m_strMeshFileName;

  000b2	57		 push	 edi
  000b3	8b ce		 mov	 ecx, esi
  000b5	e8 00 00 00 00	 call	 ?GetFileName@CTextFileLoader@@QAEPBDXZ ; CTextFileLoader::GetFileName
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
  000c0	83 c4 04	 add	 esp, 4
  000c3	50		 push	 eax
  000c4	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	89 45 b8	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2587 :         if (this != _STD addressof(_Right)) {

  000d3	3b f8		 cmp	 edi, eax
  000d5	74 4b		 je	 SHORT $LN125@OnLoadScri

; 2153 :         return _BUF_SIZE <= _Myres;

  000d7	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000da	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000dd	72 11		 jb	 SHORT $LN114@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000df	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e2	50		 push	 eax
  000e3	ff 37		 push	 DWORD PTR [edi]
  000e5	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ea	8b 45 b8	 mov	 eax, DWORD PTR $T8[ebp]
  000ed	83 c4 08	 add	 esp, 8
$LN114@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  000f0	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000f7	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000fe	c6 07 00	 mov	 BYTE PTR [edi], 0

; 2606 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00101	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00104	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  00107	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  0010c	66 0f d6 47 10	 movq	 QWORD PTR [edi+16], xmm0

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00111	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00118	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0011f	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN125@OnLoadScri:

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00122	8b 45 ec	 mov	 eax, DWORD PTR $T40[ebp+20]
  00125	83 f8 10	 cmp	 eax, 16			; 00000010H
  00128	72 0d		 jb	 SHORT $LN130@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0012a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0012b	50		 push	 eax
  0012c	ff 75 d8	 push	 DWORD PTR $T40[ebp]
  0012f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00134	83 c4 08	 add	 esp, 8
$LN130@OnLoadScri:

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00137	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00139	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00140	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00147	c6 45 d8 00	 mov	 BYTE PTR $T39[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0014b	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00150	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BI@HOBONKKC@meshanimationloopenable@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00157	8b d0		 mov	 edx, eax

; 4229 :         _Mypair._Myval2._Orphan_all();
; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00159	c7 45 e8 17 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 23 ; 00000017H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00160	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 31 ; 0000001fH
  00167	89 55 b8	 mov	 DWORD PTR __New_ptr$13[ebp], edx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0016a	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  0016d	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BI@HOBONKKC@meshanimationloopenable@+16
  00173	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00176	66 8b 0d 14 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BI@HOBONKKC@meshanimationloopenable@+20
  0017d	66 89 4a 14	 mov	 WORD PTR [edx+20], cx
  00181	a0 16 00 00 00	 mov	 al, BYTE PTR ??_C@_0BI@HOBONKKC@meshanimationloopenable@+22
  00186	88 42 16	 mov	 BYTE PTR [edx+22], al

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00189	8d 45 b8	 lea	 eax, DWORD PTR __New_ptr$13[ebp]
  0018c	50		 push	 eax
  0018d	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00190	c6 42 17 00	 mov	 BYTE PTR [edx+23], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  0019a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 619  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopenable", &m_isMeshAnimationLoop))

  0019d	8b 7d b0	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  001a0	8b ce		 mov	 ecx, esi
  001a2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  001a9	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  001ac	50		 push	 eax
  001ad	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  001b6	85 c0		 test	 eax, eax
  001b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001bf	8b 45 ec	 mov	 eax, DWORD PTR $T39[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 619  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopenable", &m_isMeshAnimationLoop))

  001c2	0f 94 45 bf	 sete	 BYTE PTR $T26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001c6	83 f8 10	 cmp	 eax, 16			; 00000010H
  001c9	72 0d		 jb	 SHORT $LN186@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001cb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001cc	50		 push	 eax
  001cd	ff 75 d8	 push	 DWORD PTR $T39[ebp]
  001d0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001d5	83 c4 08	 add	 esp, 8
$LN186@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 619  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopenable", &m_isMeshAnimationLoop))

  001d8	80 7d bf 00	 cmp	 BYTE PTR $T26[ebp], 0
  001dc	0f 85 5a 07 00
	00		 jne	 $LN5@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001e2	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  001e4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001eb	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001f2	c6 45 d8 00	 mov	 BYTE PTR $T38[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001f6	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  001fb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BH@CNDNOBIC@meshanimationloopcount@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00202	c7 45 e8 16 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 22 ; 00000016H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00209	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00210	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00213	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BH@CNDNOBIC@meshanimationloopcount@+16
  00219	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0021c	66 8b 0d 14 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BH@CNDNOBIC@meshanimationloopcount@+20
  00223	66 89 48 14	 mov	 WORD PTR [eax+20], cx

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00227	89 45 b8	 mov	 DWORD PTR __New_ptr$12[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0022a	c6 40 16 00	 mov	 BYTE PTR [eax+22], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0022e	8d 45 b8	 lea	 eax, DWORD PTR __New_ptr$12[ebp]
  00231	50		 push	 eax
  00232	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  00235	50		 push	 eax
  00236	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  0023b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 621  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopcount", &m_iMeshAnimationLoopCount))

  0023e	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  00241	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00248	50		 push	 eax
  00249	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  0024c	8b ce		 mov	 ecx, esi
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
  00254	85 c0		 test	 eax, eax
  00256	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0025d	8b 45 ec	 mov	 eax, DWORD PTR $T38[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 621  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopcount", &m_iMeshAnimationLoopCount))

  00260	0f 94 45 bf	 sete	 BYTE PTR $T25[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00264	83 f8 10	 cmp	 eax, 16			; 00000010H
  00267	72 0d		 jb	 SHORT $LN242@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00269	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0026a	50		 push	 eax
  0026b	ff 75 d8	 push	 DWORD PTR $T38[ebp]
  0026e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00273	83 c4 08	 add	 esp, 8
$LN242@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 621  : 	if (!rTextFileLoader.GetTokenInteger("meshanimationloopcount", &m_iMeshAnimationLoopCount))

  00276	80 7d bf 00	 cmp	 BYTE PTR $T25[ebp], 0
  0027a	74 07		 je	 SHORT $LN9@OnLoadScri

; 622  : 	{
; 623  : 		m_iMeshAnimationLoopCount = 0;

  0027c	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN9@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00283	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00285	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0028c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00293	c6 45 d8 00	 mov	 BYTE PTR $T37[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00297	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0029c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BI@DLPGELIN@meshanimationframedelay@

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  002a3	8b d0		 mov	 edx, eax

; 4229 :         _Mypair._Myval2._Orphan_all();
; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  002a5	c7 45 e8 17 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 23 ; 00000017H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  002ac	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 31 ; 0000001fH
  002b3	89 55 b8	 mov	 DWORD PTR __New_ptr$11[ebp], edx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  002b6	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  002b9	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BI@DLPGELIN@meshanimationframedelay@+16
  002bf	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  002c2	66 8b 0d 14 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BI@DLPGELIN@meshanimationframedelay@+20
  002c9	66 89 4a 14	 mov	 WORD PTR [edx+20], cx
  002cd	a0 16 00 00 00	 mov	 al, BYTE PTR ??_C@_0BI@DLPGELIN@meshanimationframedelay@+22
  002d2	88 42 16	 mov	 BYTE PTR [edx+22], al

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  002d5	8d 45 b8	 lea	 eax, DWORD PTR __New_ptr$11[ebp]
  002d8	50		 push	 eax
  002d9	8d 45 d8	 lea	 eax, DWORD PTR $T37[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  002dc	c6 42 17 00	 mov	 BYTE PTR [edx+23], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  002e0	50		 push	 eax
  002e1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  002e6	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 625  : 	if (!rTextFileLoader.GetTokenFloat("meshanimationframedelay", &m_fMeshAnimationFrameDelay))

  002e9	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  002ec	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  002f3	50		 push	 eax
  002f4	8d 45 d8	 lea	 eax, DWORD PTR $T37[ebp]
  002f7	8b ce		 mov	 ecx, esi
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  002ff	85 c0		 test	 eax, eax
  00301	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00308	8b 45 ec	 mov	 eax, DWORD PTR $T37[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 625  : 	if (!rTextFileLoader.GetTokenFloat("meshanimationframedelay", &m_fMeshAnimationFrameDelay))

  0030b	0f 94 45 bf	 sete	 BYTE PTR $T24[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0030f	83 f8 10	 cmp	 eax, 16			; 00000010H
  00312	72 0d		 jb	 SHORT $LN298@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00314	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00315	50		 push	 eax
  00316	ff 75 d8	 push	 DWORD PTR $T37[ebp]
  00319	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0031e	83 c4 08	 add	 esp, 8
$LN298@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 625  : 	if (!rTextFileLoader.GetTokenFloat("meshanimationframedelay", &m_fMeshAnimationFrameDelay))

  00321	80 7d bf 00	 cmp	 BYTE PTR $T24[ebp], 0
  00325	0f 85 11 06 00
	00		 jne	 $LN5@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0032b	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0032d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00334	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0033b	c6 45 d8 00	 mov	 BYTE PTR $T36[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0033f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00344	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@IMKDGDDP@meshelementcount@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0034b	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 16 ; 00000010H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00352	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00359	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0035c	89 45 b8	 mov	 DWORD PTR __New_ptr$10[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0035f	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00363	8d 45 b8	 lea	 eax, DWORD PTR __New_ptr$10[ebp]
  00366	50		 push	 eax
  00367	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00370	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 629  : 	if (!rTextFileLoader.GetTokenDoubleWord("meshelementcount", &dwMeshElementCount))

  00373	8d 45 a8	 lea	 eax, DWORD PTR _dwMeshElementCount$[ebp]
  00376	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0037d	50		 push	 eax
  0037e	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  00381	8b ce		 mov	 ecx, esi
  00383	50		 push	 eax
  00384	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  00389	85 c0		 test	 eax, eax
  0038b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00392	8b 45 ec	 mov	 eax, DWORD PTR $T36[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 629  : 	if (!rTextFileLoader.GetTokenDoubleWord("meshelementcount", &dwMeshElementCount))

  00395	0f 94 45 bf	 sete	 BYTE PTR $T23[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00399	83 f8 10	 cmp	 eax, 16			; 00000010H
  0039c	72 0d		 jb	 SHORT $LN354@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0039e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0039f	50		 push	 eax
  003a0	ff 75 d8	 push	 DWORD PTR $T36[ebp]
  003a3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  003a8	83 c4 08	 add	 esp, 8
$LN354@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 629  : 	if (!rTextFileLoader.GetTokenDoubleWord("meshelementcount", &dwMeshElementCount))

  003ab	80 7d bf 00	 cmp	 BYTE PTR $T23[ebp], 0
  003af	0f 85 87 05 00
	00		 jne	 $LN5@OnLoadScri

; 632  : 	m_MeshDataVector.clear();

  003b5	83 c7 20	 add	 edi, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  003b8	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 632  : 	m_MeshDataVector.clear();

  003b9	89 7d b0	 mov	 DWORD PTR __My_data$2$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  003bc	ff 77 04	 push	 DWORD PTR [edi+4]
  003bf	ff 37		 push	 DWORD PTR [edi]
  003c1	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1390 :         _Mylast = _Myfirst;

  003c6	8b 07		 mov	 eax, DWORD PTR [edi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  003c8	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 633  : 	m_MeshDataVector.resize(dwMeshElementCount);

  003cb	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  003cd	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 633  : 	m_MeshDataVector.resize(dwMeshElementCount);

  003d0	ff 75 a8	 push	 DWORD PTR _dwMeshElementCount$[ebp]
  003d3	e8 00 00 00 00	 call	 ?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::resize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003d8	8b 45 b0	 mov	 eax, DWORD PTR __My_data$2$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 634  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  003db	33 ff		 xor	 edi, edi
  003dd	89 7d b8	 mov	 DWORD PTR _i$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003e0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003e3	2b 08		 sub	 ecx, DWORD PTR [eax]
  003e5	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  003ea	f7 e9		 imul	 ecx
  003ec	03 d1		 add	 edx, ecx
  003ee	c1 fa 05	 sar	 edx, 5
  003f1	8b c2		 mov	 eax, edx
  003f3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003f6	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 634  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  003f8	0f 84 29 05 00
	00		 je	 $LN3@OnLoadScri
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 49   : 			CGotoChild(CTextFileLoader * pOwner, DWORD dwIndex) : m_pOwner(pOwner)

  003fe	89 75 a4	 mov	 DWORD PTR _GotoChild$2[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 632  : 	m_MeshDataVector.clear();

  00401	89 7d ac	 mov	 DWORD PTR tv4871[ebp], edi
$LL4@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 51   : 				m_pOwner->SetChildNode(dwIndex);

  00404	57		 push	 edi
  00405	8b ce		 mov	 ecx, esi
  00407	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0040c	8b 7d b0	 mov	 edi, DWORD PTR __My_data$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0040f	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@EJACNAIE@billboardtype@+8
  00414	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@EJACNAIE@billboardtype@
  0041c	89 45 e0	 mov	 DWORD PTR $T35[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0041f	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00421	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@EJACNAIE@billboardtype@+12
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00426	03 7d ac	 add	 edi, DWORD PTR tv4871[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 636  : 		CTextFileLoader::CGotoChild GotoChild(&rTextFileLoader, i);

  00429	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00430	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00437	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 13 ; 0000000dH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0043e	66 0f d6 45 d8	 movq	 QWORD PTR $T35[ebp], xmm0
  00443	88 45 e4	 mov	 BYTE PTR $T35[ebp+12], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00446	c6 45 e5 00	 mov	 BYTE PTR $T35[ebp+13], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 640  : 		if (!rTextFileLoader.GetTokenByte("billboardtype", &rMeshData.byBillboardType))

  0044a	57		 push	 edi
  0044b	8d 45 d8	 lea	 eax, DWORD PTR $T35[ebp]
  0044e	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00452	50		 push	 eax
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0045a	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0045c	8b 45 ec	 mov	 eax, DWORD PTR $T35[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 640  : 		if (!rTextFileLoader.GetTokenByte("billboardtype", &rMeshData.byBillboardType))

  0045f	0f 94 45 bf	 sete	 BYTE PTR $T22[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00463	83 f8 10	 cmp	 eax, 16			; 00000010H
  00466	72 0d		 jb	 SHORT $LN420@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00468	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00469	50		 push	 eax
  0046a	ff 75 d8	 push	 DWORD PTR $T35[ebp]
  0046d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00472	83 c4 08	 add	 esp, 8
$LN420@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 640  : 		if (!rTextFileLoader.GetTokenByte("billboardtype", &rMeshData.byBillboardType))

  00475	80 7d bf 00	 cmp	 BYTE PTR $T22[ebp], 0
  00479	0f 85 af 04 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0047f	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@LCDJDIBK@blendingenable@+8
  00484	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@LCDJDIBK@blendingenable@
  0048c	89 45 e0	 mov	 DWORD PTR $T34[ebp+8], eax
  0048f	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@LCDJDIBK@blendingenable@+12

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00495	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T34[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0049c	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T34[ebp+16], 14 ; 0000000eH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  004a3	66 0f d6 45 d8	 movq	 QWORD PTR $T34[ebp], xmm0
  004a8	66 89 45 e4	 mov	 WORD PTR $T34[ebp+12], ax

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  004ac	c6 45 e6 00	 mov	 BYTE PTR $T34[ebp+14], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 642  : 		if (!rTextFileLoader.GetTokenBoolean("blendingenable", &rMeshData.bBlendingEnable))

  004b0	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  004b3	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  004b7	50		 push	 eax
  004b8	8d 45 d8	 lea	 eax, DWORD PTR $T34[ebp]
  004bb	8b ce		 mov	 ecx, esi
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  004c3	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004c5	8b 45 ec	 mov	 eax, DWORD PTR $T34[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 642  : 		if (!rTextFileLoader.GetTokenBoolean("blendingenable", &rMeshData.bBlendingEnable))

  004c8	0f 94 45 bf	 sete	 BYTE PTR $T21[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004cc	83 f8 10	 cmp	 eax, 16			; 00000010H
  004cf	72 0d		 jb	 SHORT $LN479@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004d1	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d2	50		 push	 eax
  004d3	ff 75 d8	 push	 DWORD PTR $T34[ebp]
  004d6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  004db	83 c4 08	 add	 esp, 8
$LN479@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 642  : 		if (!rTextFileLoader.GetTokenBoolean("blendingenable", &rMeshData.bBlendingEnable))

  004de	80 7d bf 00	 cmp	 BYTE PTR $T21[ebp], 0
  004e2	0f 85 46 04 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  004e8	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@CALCJEKJ@blendingsrctype@+8
  004ed	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@CALCJEKJ@blendingsrctype@
  004f5	89 45 c8	 mov	 DWORD PTR $T28[ebp+8], eax
  004f8	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@CALCJEKJ@blendingsrctype@+12
  004fe	66 89 45 cc	 mov	 WORD PTR $T28[ebp+12], ax
  00502	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@CALCJEKJ@blendingsrctype@+14

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00507	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T28[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  0050e	c7 45 d0 0f 00
	00 00		 mov	 DWORD PTR $T28[ebp+16], 15 ; 0000000fH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00515	66 0f d6 45 c0	 movq	 QWORD PTR $T28[ebp], xmm0
  0051a	88 45 ce	 mov	 BYTE PTR $T28[ebp+14], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0051d	c6 45 cf 00	 mov	 BYTE PTR $T28[ebp+15], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 644  : 		if (!rTextFileLoader.GetTokenByte("blendingsrctype", &rMeshData.byBlendingSrcType))

  00521	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00524	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00528	50		 push	 eax
  00529	8d 45 c0	 lea	 eax, DWORD PTR $T28[ebp]
  0052c	8b ce		 mov	 ecx, esi
  0052e	50		 push	 eax
  0052f	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00534	85 c0		 test	 eax, eax
  00536	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0053a	8b 45 d4	 mov	 eax, DWORD PTR $T28[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 644  : 		if (!rTextFileLoader.GetTokenByte("blendingsrctype", &rMeshData.byBlendingSrcType))

  0053d	0f 94 45 bf	 sete	 BYTE PTR $T20[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00541	83 f8 10	 cmp	 eax, 16			; 00000010H
  00544	72 0d		 jb	 SHORT $LN538@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00546	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00547	50		 push	 eax
  00548	ff 75 c0	 push	 DWORD PTR $T28[ebp]
  0054b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00550	83 c4 08	 add	 esp, 8
$LN538@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 644  : 		if (!rTextFileLoader.GetTokenByte("blendingsrctype", &rMeshData.byBlendingSrcType))

  00553	80 7d bf 00	 cmp	 BYTE PTR $T20[ebp], 0
  00557	0f 85 d1 03 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0055d	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0055f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00566	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0056d	c6 45 d8 00	 mov	 BYTE PTR $T33[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00571	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00576	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@PBNEFHNO@blendingdesttype@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0057d	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 16 ; 00000010H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00584	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0058b	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0058e	89 45 b4	 mov	 DWORD PTR __New_ptr$7[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00591	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00595	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$7[ebp]
  00598	50		 push	 eax
  00599	8d 45 d8	 lea	 eax, DWORD PTR $T33[ebp]
  0059c	50		 push	 eax
  0059d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  005a2	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 646  : 		if (!rTextFileLoader.GetTokenByte("blendingdesttype", &rMeshData.byBlendingDestType))

  005a5	8d 47 09	 lea	 eax, DWORD PTR [edi+9]
  005a8	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  005ac	50		 push	 eax
  005ad	8d 45 d8	 lea	 eax, DWORD PTR $T33[ebp]
  005b0	8b ce		 mov	 ecx, esi
  005b2	50		 push	 eax
  005b3	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  005b8	85 c0		 test	 eax, eax
  005ba	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005be	8b 45 ec	 mov	 eax, DWORD PTR $T33[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 646  : 		if (!rTextFileLoader.GetTokenByte("blendingdesttype", &rMeshData.byBlendingDestType))

  005c1	0f 94 45 bf	 sete	 BYTE PTR $T19[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005c5	83 f8 10	 cmp	 eax, 16			; 00000010H
  005c8	72 0d		 jb	 SHORT $LN597@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  005ca	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005cb	50		 push	 eax
  005cc	ff 75 d8	 push	 DWORD PTR $T33[ebp]
  005cf	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  005d4	83 c4 08	 add	 esp, 8
$LN597@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 646  : 		if (!rTextFileLoader.GetTokenByte("blendingdesttype", &rMeshData.byBlendingDestType))

  005d7	80 7d bf 00	 cmp	 BYTE PTR $T19[ebp], 0
  005db	0f 85 4d 03 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  005e1	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005e3	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005ea	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005f1	c6 45 d8 00	 mov	 BYTE PTR $T32[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  005f5	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  005fa	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BL@INILLDMC@textureanimationloopenable@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00601	c7 45 e8 1a 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 26 ; 0000001aH

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00608	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0060f	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00612	89 45 b4	 mov	 DWORD PTR __New_ptr$6[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00615	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BL@INILLDMC@textureanimationloopenable@+16
  0061d	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  00622	66 8b 0d 18 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BL@INILLDMC@textureanimationloopenable@+24
  00629	66 89 48 18	 mov	 WORD PTR [eax+24], cx

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0062d	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00631	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$6[ebp]
  00634	50		 push	 eax
  00635	8d 45 d8	 lea	 eax, DWORD PTR $T32[ebp]
  00638	50		 push	 eax
  00639	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  0063e	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 649  : 		if (!rTextFileLoader.GetTokenBoolean("textureanimationloopenable", &rMeshData.bTextureAnimationLoopEnable))

  00641	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  00644	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00648	50		 push	 eax
  00649	8d 45 d8	 lea	 eax, DWORD PTR $T32[ebp]
  0064c	8b ce		 mov	 ecx, esi
  0064e	50		 push	 eax
  0064f	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  00654	85 c0		 test	 eax, eax
  00656	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0065a	8b 45 ec	 mov	 eax, DWORD PTR $T32[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 649  : 		if (!rTextFileLoader.GetTokenBoolean("textureanimationloopenable", &rMeshData.bTextureAnimationLoopEnable))

  0065d	0f 94 45 bf	 sete	 BYTE PTR $T18[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00661	83 f8 10	 cmp	 eax, 16			; 00000010H
  00664	72 0d		 jb	 SHORT $LN656@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00666	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00667	50		 push	 eax
  00668	ff 75 d8	 push	 DWORD PTR $T32[ebp]
  0066b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00670	83 c4 08	 add	 esp, 8
$LN656@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 649  : 		if (!rTextFileLoader.GetTokenBoolean("textureanimationloopenable", &rMeshData.bTextureAnimationLoopEnable))

  00673	80 7d bf 00	 cmp	 BYTE PTR $T18[ebp], 0
  00677	0f 85 b1 02 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0067d	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0067f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00686	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0068d	c6 45 d8 00	 mov	 BYTE PTR $T31[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00691	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00696	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BL@MIGDCCON@textureanimationframedelay@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0069d	c7 45 e8 1a 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 26 ; 0000001aH

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  006a4	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  006ab	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  006ae	89 45 b4	 mov	 DWORD PTR __New_ptr$5[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  006b1	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BL@MIGDCCON@textureanimationframedelay@+16
  006b9	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  006be	66 8b 0d 18 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BL@MIGDCCON@textureanimationframedelay@+24
  006c5	66 89 48 18	 mov	 WORD PTR [eax+24], cx

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  006c9	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  006cd	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$5[ebp]
  006d0	50		 push	 eax
  006d1	8d 45 d8	 lea	 eax, DWORD PTR $T31[ebp]
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  006da	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 651  : 		if (!rTextFileLoader.GetTokenFloat("textureanimationframedelay", &rMeshData.fTextureAnimationFrameDelay))

  006dd	8d 47 28	 lea	 eax, DWORD PTR [edi+40]
  006e0	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  006e4	50		 push	 eax
  006e5	8d 45 d8	 lea	 eax, DWORD PTR $T31[ebp]
  006e8	8b ce		 mov	 ecx, esi
  006ea	50		 push	 eax
  006eb	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  006f0	85 c0		 test	 eax, eax
  006f2	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006f6	8b 45 ec	 mov	 eax, DWORD PTR $T31[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 651  : 		if (!rTextFileLoader.GetTokenFloat("textureanimationframedelay", &rMeshData.fTextureAnimationFrameDelay))

  006f9	0f 94 45 bf	 sete	 BYTE PTR $T17[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006fd	83 f8 10	 cmp	 eax, 16			; 00000010H
  00700	72 0d		 jb	 SHORT $LN715@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00702	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00703	50		 push	 eax
  00704	ff 75 d8	 push	 DWORD PTR $T31[ebp]
  00707	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0070c	83 c4 08	 add	 esp, 8
$LN715@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 651  : 		if (!rTextFileLoader.GetTokenFloat("textureanimationframedelay", &rMeshData.fTextureAnimationFrameDelay))

  0070f	80 7d bf 00	 cmp	 BYTE PTR $T17[ebp], 0
  00713	0f 85 15 02 00
	00		 jne	 $LN899@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00719	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0071b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00722	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00729	c6 45 d8 00	 mov	 BYTE PTR $T30[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0072d	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00732	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BL@PMOBBIKD@textureanimationstartframe@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  00739	c7 45 e8 1a 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 26 ; 0000001aH

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00740	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00747	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0074a	89 45 b4	 mov	 DWORD PTR __New_ptr$4[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0074d	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BL@PMOBBIKD@textureanimationstartframe@+16
  00755	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  0075a	66 8b 0d 18 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BL@PMOBBIKD@textureanimationstartframe@+24
  00761	66 89 48 18	 mov	 WORD PTR [eax+24], cx

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00765	c6 40 1a 00	 mov	 BYTE PTR [eax+26], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00769	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$4[ebp]
  0076c	50		 push	 eax
  0076d	8d 45 d8	 lea	 eax, DWORD PTR $T30[ebp]
  00770	50		 push	 eax
  00771	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00776	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 653  : 		if (!rTextFileLoader.GetTokenDoubleWord("textureanimationstartframe", &rMeshData.dwTextureAnimationStartFrame))

  00779	8d 47 2c	 lea	 eax, DWORD PTR [edi+44]
  0077c	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00780	50		 push	 eax
  00781	8d 45 d8	 lea	 eax, DWORD PTR $T30[ebp]
  00784	8b ce		 mov	 ecx, esi
  00786	50		 push	 eax
  00787	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  0078c	85 c0		 test	 eax, eax
  0078e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00792	8b 45 ec	 mov	 eax, DWORD PTR $T30[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 653  : 		if (!rTextFileLoader.GetTokenDoubleWord("textureanimationstartframe", &rMeshData.dwTextureAnimationStartFrame))

  00795	0f 94 45 bf	 sete	 BYTE PTR $T16[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00799	83 f8 10	 cmp	 eax, 16			; 00000010H
  0079c	72 0d		 jb	 SHORT $LN774@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0079e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0079f	50		 push	 eax
  007a0	ff 75 d8	 push	 DWORD PTR $T30[ebp]
  007a3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  007a8	83 c4 08	 add	 esp, 8
$LN774@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 653  : 		if (!rTextFileLoader.GetTokenDoubleWord("textureanimationstartframe", &rMeshData.dwTextureAnimationStartFrame))

  007ab	80 7d bf 00	 cmp	 BYTE PTR $T16[ebp], 0
  007af	74 07		 je	 SHORT $LN18@OnLoadScri

; 654  : 		{
; 655  : 			rMeshData.dwTextureAnimationStartFrame = 0;

  007b1	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
$LN18@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  007b8	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  007ba	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T29[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  007c1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  007c8	c6 45 d8 00	 mov	 BYTE PTR $T29[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  007cc	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  007d1	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DAMHAFBJ@coloroperationtype@

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  007d8	c7 45 e8 12 00
	00 00		 mov	 DWORD PTR $T29[ebp+16], 18 ; 00000012H

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  007df	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 31 ; 0000001fH

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  007e6	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  007e9	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BD@DAMHAFBJ@coloroperationtype@+16
  007f0	66 89 48 10	 mov	 WORD PTR [eax+16], cx

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  007f4	89 45 b4	 mov	 DWORD PTR __New_ptr$3[ebp], eax

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  007f7	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  007fb	8d 45 b4	 lea	 eax, DWORD PTR __New_ptr$3[ebp]
  007fe	50		 push	 eax
  007ff	8d 45 d8	 lea	 eax, DWORD PTR $T29[ebp]
  00802	50		 push	 eax
  00803	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00808	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 658  : 		if (!rTextFileLoader.GetTokenByte("coloroperationtype", &rMeshData.byColorOperationType))

  0080b	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0080e	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00812	50		 push	 eax
  00813	8d 45 d8	 lea	 eax, DWORD PTR $T29[ebp]
  00816	8b ce		 mov	 ecx, esi
  00818	50		 push	 eax
  00819	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  0081e	85 c0		 test	 eax, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00820	8b 45 ec	 mov	 eax, DWORD PTR $T29[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 658  : 		if (!rTextFileLoader.GetTokenByte("coloroperationtype", &rMeshData.byColorOperationType))

  00823	0f 94 45 bf	 sete	 BYTE PTR $T15[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00827	83 f8 10	 cmp	 eax, 16			; 00000010H
  0082a	72 0d		 jb	 SHORT $LN830@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0082c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0082d	50		 push	 eax
  0082e	ff 75 d8	 push	 DWORD PTR $T29[ebp]
  00831	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00836	83 c4 08	 add	 esp, 8
$LN830@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 658  : 		if (!rTextFileLoader.GetTokenByte("coloroperationtype", &rMeshData.byColorOperationType))

  00839	80 7d bf 00	 cmp	 BYTE PTR $T15[ebp], 0
  0083d	74 04		 je	 SHORT $LN19@OnLoadScri

; 659  : 		{
; 660  : 			rMeshData.byColorOperationType = D3DTOP_MODULATE;

  0083f	c6 47 10 04	 mov	 BYTE PTR [edi+16], 4
$LN19@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00843	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@PBDNNBOP@colorfactor@+8
  00849	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@PBDNNBOP@colorfactor@
  00851	66 89 45 c8	 mov	 WORD PTR $T27[ebp+8], ax
  00855	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@PBDNNBOP@colorfactor@+10

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0085a	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T27[ebp+20], 15 ; 0000000fH

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00861	c7 45 d0 0b 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 11 ; 0000000bH

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00868	66 0f d6 45 c0	 movq	 QWORD PTR $T27[ebp], xmm0
  0086d	88 45 ca	 mov	 BYTE PTR $T27[ebp+10], al

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00870	c6 45 cb 00	 mov	 BYTE PTR $T27[ebp+11], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 662  : 		if (!rTextFileLoader.GetTokenColor("colorfactor", &rMeshData.ColorFactor))

  00874	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00877	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0087b	50		 push	 eax
  0087c	8d 45 c0	 lea	 eax, DWORD PTR $T27[ebp]
  0087f	8b ce		 mov	 ecx, esi
  00881	50		 push	 eax
  00882	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
  00887	85 c0		 test	 eax, eax
  00889	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0088d	8b 45 d4	 mov	 eax, DWORD PTR $T27[ebp+20]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 662  : 		if (!rTextFileLoader.GetTokenColor("colorfactor", &rMeshData.ColorFactor))

  00890	0f 94 45 bf	 sete	 BYTE PTR $T14[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00894	83 f8 10	 cmp	 eax, 16			; 00000010H
  00897	72 0d		 jb	 SHORT $LN886@OnLoadScri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00899	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0089a	50		 push	 eax
  0089b	ff 75 c0	 push	 DWORD PTR $T27[ebp]
  0089e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  008a3	83 c4 08	 add	 esp, 8
$LN886@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 662  : 		if (!rTextFileLoader.GetTokenColor("colorfactor", &rMeshData.ColorFactor))

  008a6	80 7d bf 00	 cmp	 BYTE PTR $T14[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  008aa	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  008b1	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T27[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  008b8	c6 45 c0 00	 mov	 BYTE PTR $T27[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 662  : 		if (!rTextFileLoader.GetTokenColor("colorfactor", &rMeshData.ColorFactor))

  008bc	74 0b		 je	 SHORT $LN20@OnLoadScri
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 920  :     r = fr;

  008be	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 664  : 			rMeshData.ColorFactor = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  008c5	0f 11 47 14	 movups	 XMMWORD PTR [edi+20], xmm0
$LN20@OnLoadScri:

; 665  : 		}
; 666  : 
; 667  : 		if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventalpha", &rMeshData.TimeEventAlpha))

  008c9	83 c7 30	 add	 edi, 48			; 00000030H
  008cc	57		 push	 edi
  008cd	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KALIPJCI@timeeventalpha@
  008d2	56		 push	 esi
  008d3	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  008d8	83 c4 0c	 add	 esp, 12			; 0000000cH
  008db	85 c0		 test	 eax, eax
  008dd	75 05		 jne	 SHORT $LN21@OnLoadScri

; 668  : 		{
; 669  : 			rMeshData.TimeEventAlpha.clear();

  008df	8b 07		 mov	 eax, DWORD PTR [edi]
  008e1	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN21@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 55   : 				m_pOwner->SetParentNode();

  008e4	8b ce		 mov	 ecx, esi
  008e6	c7 45 fc 15 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 21 ; 00000015H
  008ed	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  008f2	8b 45 b0	 mov	 eax, DWORD PTR __My_data$2$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 634  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  008f5	8b 7d b8	 mov	 edi, DWORD PTR _i$1$[ebp]
  008f8	83 45 ac 3c	 add	 DWORD PTR tv4871[ebp], 60 ; 0000003cH
  008fc	47		 inc	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 56   : 			}

  008fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00904	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00907	2b 08		 sub	 ecx, DWORD PTR [eax]
  00909	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0090e	f7 e9		 imul	 ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 634  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  00910	89 7d b8	 mov	 DWORD PTR _i$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00913	03 d1		 add	 edx, ecx
  00915	c1 fa 05	 sar	 edx, 5
  00918	8b c2		 mov	 eax, edx
  0091a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0091d	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 634  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  0091f	3b f8		 cmp	 edi, eax
  00921	0f 82 dd fa ff
	ff		 jb	 $LL4@OnLoadScri
$LN3@OnLoadScri:

; 670  : 		}
; 671  : 	}
; 672  : 
; 673  : 	return TRUE;

  00927	b8 01 00 00 00	 mov	 eax, 1
  0092c	eb 10		 jmp	 SHORT $LN1@OnLoadScri
$LN899@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h

; 55   : 				m_pOwner->SetParentNode();

  0092e	8b ce		 mov	 ecx, esi
  00930	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  00937	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN5@OnLoadScri:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 674  : }

  0093c	33 c0		 xor	 eax, eax
$LN1@OnLoadScri:
  0093e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00941	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00948	59		 pop	 ecx
  00949	5f		 pop	 edi
  0094a	5e		 pop	 esi
  0094b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0094e	33 cd		 xor	 ecx, ebp
  00950	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00955	8b e5		 mov	 esp, ebp
  00957	5d		 pop	 ebp
  00958	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$2:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$3:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$4:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$5:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$6:
  00028	8d 4d a4	 lea	 ecx, DWORD PTR _GotoChild$2[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$7:
  00030	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00033	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$8:
  00038	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$9:
  00040	8d 4d c0	 lea	 ecx, DWORD PTR $T28[ebp]
  00043	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$10:
  00048	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  0004b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$11:
  00050	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$12:
  00058	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  0005b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$13:
  00060	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  00063	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$14:
  00068	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  0006b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z$15:
  00070	8d 4d c0	 lea	 ecx, DWORD PTR $T27[ebp]
  00073	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00078	cc		 int	 3
  00079	cc		 int	 3
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
__ehhandler$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z:
  0007d	90		 npad	 1
  0007e	90		 npad	 1
  0007f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00083	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00086	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00089	33 c8		 xor	 ecx, eax
  0008b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00090	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00093	33 c8		 xor	 ecx, eax
  00095	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnLoadScript@CEffectMeshScript@@MAEHAAVCTextFileLoader@@@Z ENDP ; CEffectMeshScript::OnLoadScript
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnIsData@CEffectMeshScript@@MAE_NXZ
_TEXT	SEGMENT
?OnIsData@CEffectMeshScript@@MAE_NXZ PROC		; CEffectMeshScript::OnIsData, COMDAT
; _this$ = ecx

; 678  : 	if (0 == m_strMeshFileName.length())

  00000	83 79 3c 00	 cmp	 DWORD PTR [ecx+60], 0
  00004	0f 95 c0	 setne	 al

; 679  : 		return false;
; 680  : 
; 681  : 	return true;
; 682  : }

  00007	c3		 ret	 0
?OnIsData@CEffectMeshScript@@MAE_NXZ ENDP		; CEffectMeshScript::OnIsData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnClear@CEffectMeshScript@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CEffectMeshScript@@MAEXXZ PROC			; CEffectMeshScript::OnClear, COMDAT
; _this$ = ecx

; 685  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 689  : 
; 690  : 	m_MeshDataVector.clear();

  00004	8d 77 20	 lea	 esi, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00007	56		 push	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 686  : 	m_isMeshAnimationLoop = false;

  00008	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 687  : 	m_iMeshAnimationLoopCount = 0;

  0000f	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0

; 688  : 	m_fMeshAnimationFrameDelay = 0.02f;

  00016	c7 47 1c 0a d7
	a3 3c		 mov	 DWORD PTR [edi+28], 1017370378 ; 3ca3d70aH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0001d	ff 76 04	 push	 DWORD PTR [esi+4]
  00020	ff 36		 push	 DWORD PTR [esi]
  00022	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1390 :         _Mylast = _Myfirst;

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 691  : 	m_strMeshFileName = "";

  00029	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  0002f	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2984 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00032	6a 00		 push	 0
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00039	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 692  : }

  00040	c3		 ret	 0
?OnClear@CEffectMeshScript@@MAEXXZ ENDP			; CEffectMeshScript::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetTextureAnimationStartFrame@CEffectMeshScript@@QAEKK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetTextureAnimationStartFrame@CEffectMeshScript@@QAEKK@Z PROC ; CEffectMeshScript::GetTextureAnimationStartFrame, COMDAT
; _this$ = ecx

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 599  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetTexture

; 600  : 		return 0;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 603  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@GetTexture:

; 601  : 
; 602  : 	return m_MeshDataVector[dwMeshIndex].dwTextureAnimationStartFrame;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 603  : }

  00027	5e		 pop	 esi
  00028	8b 44 88 2c	 mov	 eax, DWORD PTR [eax+ecx*4+44]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?GetTextureAnimationStartFrame@CEffectMeshScript@@QAEKK@Z ENDP ; CEffectMeshScript::GetTextureAnimationStartFrame
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetTextureAnimationFrameDelay@CEffectMeshScript@@QAEMK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetTextureAnimationFrameDelay@CEffectMeshScript@@QAEMK@Z PROC ; CEffectMeshScript::GetTextureAnimationFrameDelay, COMDAT
; _this$ = ecx

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 591  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetTexture

; 592  : 		return 0.0f;

  00014	d9 ee		 fldz
  00016	5f		 pop	 edi

; 595  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@GetTexture:

; 593  : 
; 594  : 	return m_MeshDataVector[dwMeshIndex].fTextureAnimationFrameDelay;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 595  : }

  00027	5e		 pop	 esi
  00028	d9 44 88 28	 fld	 DWORD PTR [eax+ecx*4+40]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?GetTextureAnimationFrameDelay@CEffectMeshScript@@QAEMK@Z ENDP ; CEffectMeshScript::GetTextureAnimationFrameDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?isTextureAnimationLoop@CEffectMeshScript@@QAEHK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?isTextureAnimationLoop@CEffectMeshScript@@QAEHK@Z PROC	; CEffectMeshScript::isTextureAnimationLoop, COMDAT
; _this$ = ecx

; 583  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 584  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@isTextureA

; 585  : 		return 0.0f;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 588  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@isTextureA:

; 586  : 
; 587  : 	return m_MeshDataVector[dwMeshIndex].bTextureAnimationLoopEnable;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 588  : }

  00027	5e		 pop	 esi
  00028	8b 44 88 24	 mov	 eax, DWORD PTR [eax+ecx*4+36]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?isTextureAnimationLoop@CEffectMeshScript@@QAEHK@Z ENDP	; CEffectMeshScript::isTextureAnimationLoop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ
_TEXT	SEGMENT
?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ PROC ; CEffectMeshScript::GetMeshAnimationFrameDelay, COMDAT
; _this$ = ecx

; 579  : 	return m_fMeshAnimationFrameDelay;

  00000	d9 41 1c	 fld	 DWORD PTR [ecx+28]

; 580  : }

  00003	c3		 ret	 0
?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ ENDP ; CEffectMeshScript::GetMeshAnimationFrameDelay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ
_TEXT	SEGMENT
?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ PROC ; CEffectMeshScript::GetMeshAnimationLoopCount, COMDAT
; _this$ = ecx

; 575  : 	return m_iMeshAnimationLoopCount;

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 576  : }

  00003	c3		 ret	 0
?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ ENDP ; CEffectMeshScript::GetMeshAnimationLoopCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ
_TEXT	SEGMENT
?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ PROC	; CEffectMeshScript::isMeshAnimationLoop, COMDAT
; _this$ = ecx

; 571  : 	return m_isMeshAnimationLoop;

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 572  : }

  00003	c3		 ret	 0
?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ ENDP	; CEffectMeshScript::isMeshAnimationLoop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
_pTimeEventAlpha$ = 12					; size = 4
?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z PROC ; CEffectMeshScript::GetTimeTableAlphaPointer, COMDAT
; _this$ = ecx

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 560  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetTimeTab

; 561  : 		return FALSE;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 564  : 
; 565  : 	return TRUE;
; 566  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetTimeTab:

; 563  : 	*pTimeEventAlpha = &m_MeshDataVector[dwMeshIndex].TimeEventAlpha;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 563  : 	*pTimeEventAlpha = &m_MeshDataVector[dwMeshIndex].TimeEventAlpha;

  00026	83 c0 30	 add	 eax, 48			; 00000030H
  00029	5f		 pop	 edi

; 564  : 
; 565  : 	return TRUE;
; 566  : }

  0002a	5e		 pop	 esi
  0002b	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  0002e	8b 45 0c	 mov	 eax, DWORD PTR _pTimeEventAlpha$[ebp]
  00031	89 08		 mov	 DWORD PTR [eax], ecx
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ENDP ; CEffectMeshScript::GetTimeTableAlphaPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
_pColor$ = 12						; size = 4
?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z PROC ; CEffectMeshScript::GetColorFactor, COMDAT
; _this$ = ecx

; 549  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 550  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetColorFa

; 551  : 		return FALSE;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 556  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetColorFa:

; 552  : 
; 553  : 	*pColor = m_MeshDataVector[dwMeshIndex].ColorFactor;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 556  : }

  00027	5e		 pop	 esi
  00028	0f 10 44 88 14	 movups	 xmm0, XMMWORD PTR [eax+ecx*4+20]
  0002d	8b 45 0c	 mov	 eax, DWORD PTR _pColor$[ebp]
  00030	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z ENDP ; CEffectMeshScript::GetColorFactor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
_pbyType$ = 12						; size = 4
?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z PROC ; CEffectMeshScript::GetColorOperationType, COMDAT
; _this$ = ecx

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 541  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetColorOp

; 542  : 		return FALSE;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 547  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN2@GetColorOp:

; 543  : 
; 544  : 	*pbyType = m_MeshDataVector[dwMeshIndex].byColorOperationType;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 547  : }

  00027	5e		 pop	 esi
  00028	8a 4c 88 10	 mov	 cl, BYTE PTR [eax+ecx*4+16]
  0002c	8b 45 0c	 mov	 eax, DWORD PTR _pbyType$[ebp]
  0002f	88 08		 mov	 BYTE PTR [eax], cl
  00031	b8 01 00 00 00	 mov	 eax, 1
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z ENDP ; CEffectMeshScript::GetColorOperationType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?isTextureAlphaEnable@CEffectMeshScript@@QAEHK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?isTextureAlphaEnable@CEffectMeshScript@@QAEHK@Z PROC	; CEffectMeshScript::isTextureAlphaEnable, COMDAT
; _this$ = ecx

; 532  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 533  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@isTextureA

; 534  : 		return false;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 537  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@isTextureA:

; 535  : 
; 536  : 	return m_MeshDataVector[dwMeshIndex].bTextureAlphaEnable;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 537  : }

  00027	5e		 pop	 esi
  00028	8b 44 88 0c	 mov	 eax, DWORD PTR [eax+ecx*4+12]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?isTextureAlphaEnable@CEffectMeshScript@@QAEHK@Z ENDP	; CEffectMeshScript::isTextureAlphaEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z PROC	; CEffectMeshScript::GetBlendingDestType, COMDAT
; _this$ = ecx

; 525  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 526  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 06		 jne	 SHORT $LN2@GetBlendin

; 530  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN2@GetBlendin:

; 527  : 		return false;
; 528  : 
; 529  : 	return m_MeshDataVector[dwMeshIndex].byBlendingDestType;

  0001a	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001d	8b ce		 mov	 ecx, esi
  0001f	c1 e1 04	 shl	 ecx, 4
  00022	2b ce		 sub	 ecx, esi
  00024	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 530  : }

  00025	5e		 pop	 esi
  00026	8a 44 88 09	 mov	 al, BYTE PTR [eax+ecx*4+9]
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z ENDP	; CEffectMeshScript::GetBlendingDestType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z PROC	; CEffectMeshScript::GetBlendingSrcType, COMDAT
; _this$ = ecx

; 518  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 519  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 06		 jne	 SHORT $LN2@GetBlendin

; 523  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN2@GetBlendin:

; 520  : 		return false;
; 521  : 
; 522  : 	return m_MeshDataVector[dwMeshIndex].byBlendingSrcType;

  0001a	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001d	8b ce		 mov	 ecx, esi
  0001f	c1 e1 04	 shl	 ecx, 4
  00022	2b ce		 sub	 ecx, esi
  00024	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 523  : }

  00025	5e		 pop	 esi
  00026	8a 44 88 08	 mov	 al, BYTE PTR [eax+ecx*4+8]
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z ENDP	; CEffectMeshScript::GetBlendingSrcType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?isBlendingEnable@CEffectMeshScript@@QAEHK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?isBlendingEnable@CEffectMeshScript@@QAEHK@Z PROC	; CEffectMeshScript::isBlendingEnable, COMDAT
; _this$ = ecx

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 512  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@isBlending

; 513  : 		return FALSE;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 516  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@isBlending:

; 514  : 
; 515  : 	return m_MeshDataVector[dwMeshIndex].bBlendingEnable;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 516  : }

  00027	5e		 pop	 esi
  00028	8b 44 88 04	 mov	 eax, DWORD PTR [eax+ecx*4+4]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?isBlendingEnable@CEffectMeshScript@@QAEHK@Z ENDP	; CEffectMeshScript::isBlendingEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetBillboardType@CEffectMeshScript@@QAEHK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetBillboardType@CEffectMeshScript@@QAEHK@Z PROC	; CEffectMeshScript::GetBillboardType, COMDAT
; _this$ = ecx

; 504  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 505  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 08		 jne	 SHORT $LN2@GetBillboa

; 506  : 		return 0;

  00014	5f		 pop	 edi
  00015	33 c0		 xor	 eax, eax

; 509  : }

  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
$LN2@GetBillboa:

; 507  : 
; 508  : 	return m_MeshDataVector[dwMeshIndex].byBillboardType;

  0001c	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001f	8b ce		 mov	 ecx, esi
  00021	c1 e1 04	 shl	 ecx, 4
  00024	2b ce		 sub	 ecx, esi
  00026	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 509  : }

  00027	5e		 pop	 esi
  00028	0f b6 04 88	 movzx	 eax, BYTE PTR [eax+ecx*4]
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?GetBillboardType@CEffectMeshScript@@QAEHK@Z ENDP	; CEffectMeshScript::GetBillboardType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshDataCount@CEffectMeshScript@@QAEHXZ
_TEXT	SEGMENT
?GetMeshDataCount@CEffectMeshScript@@QAEHXZ PROC	; CEffectMeshScript::GetMeshDataCount, COMDAT
; _this$ = ecx

; 499  : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00001	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]
  00004	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00009	2b 71 20	 sub	 esi, DWORD PTR [ecx+32]
  0000c	f7 ee		 imul	 esi
  0000e	03 d6		 add	 edx, esi
  00010	c1 fa 05	 sar	 edx, 5
  00013	8b c2		 mov	 eax, edx
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 500  : 	return m_MeshDataVector.size();

  0001a	5e		 pop	 esi

; 501  : }

  0001b	c3		 ret	 0
?GetMeshDataCount@CEffectMeshScript@@QAEHXZ ENDP	; CEffectMeshScript::GetMeshDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
_ppMeshData$ = 12					; size = 4
?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z PROC ; CEffectMeshScript::GetMeshDataPointer, COMDAT
; _this$ = ecx

; 489  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 490  : 	if (!CheckMeshIndex(dwMeshIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwMeshIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ; CEffectMeshScript::CheckMeshIndex
  00010	84 c0		 test	 al, al
  00012	75 06		 jne	 SHORT $LN2@GetMeshDat

; 496  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN2@GetMeshDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0001a	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0001d	8b ce		 mov	 ecx, esi
  0001f	c1 e1 04	 shl	 ecx, 4
  00022	2b ce		 sub	 ecx, esi
  00024	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 496  : }

  00025	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00026	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 493  : 	*ppMeshData = &m_MeshDataVector[dwMeshIndex];

  00029	8b 45 0c	 mov	 eax, DWORD PTR _ppMeshData$[ebp]
  0002c	89 08		 mov	 DWORD PTR [eax], ecx

; 494  : 
; 495  : 	return true;

  0002e	b0 01		 mov	 al, 1

; 496  : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z ENDP ; CEffectMeshScript::GetMeshDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z PROC	; CEffectMeshScript::CheckMeshIndex, COMDAT
; _this$ = ecx

; 481  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]
  00007	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0000c	2b 71 20	 sub	 esi, DWORD PTR [ecx+32]
  0000f	f7 ee		 imul	 esi
  00011	03 d6		 add	 edx, esi
  00013	c1 fa 05	 sar	 edx, 5
  00016	8b c2		 mov	 eax, edx
  00018	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001b	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 482  : 	if (dwMeshIndex >= m_MeshDataVector.size())

  0001d	39 45 08	 cmp	 DWORD PTR _dwMeshIndex$[ebp], eax
  00020	5e		 pop	 esi
  00021	0f 92 c0	 setb	 al

; 483  : 		return false;
; 484  : 
; 485  : 	return true;
; 486  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?CheckMeshIndex@CEffectMeshScript@@QAE_NK@Z ENDP	; CEffectMeshScript::CheckMeshIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?ReserveMeshData@CEffectMeshScript@@QAEXK@Z
_TEXT	SEGMENT
_dwMeshCount$ = 8					; size = 4
?ReserveMeshData@CEffectMeshScript@@QAEXK@Z PROC	; CEffectMeshScript::ReserveMeshData, COMDAT
; _this$ = ecx

; 449  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 59 20	 mov	 ebx, DWORD PTR [ecx+32]
  00007	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 449  : {

  0000c	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0000d	8d 71 20	 lea	 esi, DWORD PTR [ecx+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 449  : {

  00010	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00011	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00014	8b cf		 mov	 ecx, edi
  00016	2b cb		 sub	 ecx, ebx
  00018	f7 e9		 imul	 ecx
  0001a	03 d1		 add	 edx, ecx
  0001c	c1 fa 05	 sar	 edx, 5
  0001f	8b c2		 mov	 eax, edx
  00021	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00024	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 450  : 	if (m_MeshDataVector.size() == dwMeshCount)

  00026	3b 45 08	 cmp	 eax, DWORD PTR _dwMeshCount$[ebp]
  00029	0f 84 99 00 00
	00		 je	 $LN3@ReserveMes
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0002f	56		 push	 esi
  00030	57		 push	 edi
  00031	53		 push	 ebx
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@YAXPAUSMeshData@CEffectMeshScript@@QAU12@AAV?$allocator@USMeshData@CEffectMeshScript@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshScript::SMeshData> >

; 1390 :         _Mylast = _Myfirst;

  00037	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 454  : 	m_MeshDataVector.resize(dwMeshCount);

  0003c	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 454  : 	m_MeshDataVector.resize(dwMeshCount);

  00041	ff 75 08	 push	 DWORD PTR _dwMeshCount$[ebp]
  00044	e8 00 00 00 00	 call	 ?resize@?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAEXI@Z ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::resize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00049	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0004c	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00051	2b 0e		 sub	 ecx, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 456  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  00053	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00055	f7 e9		 imul	 ecx
  00057	03 d1		 add	 edx, ecx
  00059	c1 fa 05	 sar	 edx, 5
  0005c	8b c2		 mov	 eax, edx
  0005e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00061	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 456  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  00063	74 63		 je	 SHORT $LN3@ReserveMes
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00065	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 453  : 	m_MeshDataVector.clear();

  0006c	33 ff		 xor	 edi, edi
  0006e	66 90		 npad	 2
$LL4@ReserveMes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00070	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 456  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  00072	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00073	03 c7		 add	 eax, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 456  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  00075	83 c7 3c	 add	 edi, 60			; 0000003cH

; 457  : 	{
; 458  : 		TMeshData & rMeshData = m_MeshDataVector[i];
; 459  : 
; 460  : 		rMeshData.byBillboardType = MESH_BILLBOARD_TYPE_NONE;

  00078	c6 00 00	 mov	 BYTE PTR [eax], 0

; 461  : 		rMeshData.bBlendingEnable = TRUE;

  0007b	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 462  : 		rMeshData.byBlendingSrcType = D3DBLEND_SRCCOLOR;

  00082	66 c7 40 08 03
	02		 mov	 WORD PTR [eax+8], 515	; 00000203H

; 463  : 		rMeshData.byBlendingDestType = D3DBLEND_ONE;
; 464  : 		rMeshData.bTextureAlphaEnable = FALSE;

  00088	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 465  : 
; 466  : 		rMeshData.byColorOperationType = D3DTOP_MODULATE;

  0008f	c6 40 10 04	 mov	 BYTE PTR [eax+16], 4

; 467  : 		rMeshData.ColorFactor = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  00093	0f 11 48 14	 movups	 XMMWORD PTR [eax+20], xmm1

; 468  : 
; 469  : 		rMeshData.bTextureAnimationLoopEnable = true;

  00097	c7 40 24 01 00
	00 00		 mov	 DWORD PTR [eax+36], 1

; 470  : 		rMeshData.fTextureAnimationFrameDelay = 0.02f;

  0009e	c7 40 28 0a d7
	a3 3c		 mov	 DWORD PTR [eax+40], 1017370378 ; 3ca3d70aH

; 471  : 		rMeshData.dwTextureAnimationStartFrame = 0;

  000a5	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000ac	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  000b1	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b4	2b 0e		 sub	 ecx, DWORD PTR [esi]
  000b6	f7 e9		 imul	 ecx
  000b8	03 d1		 add	 edx, ecx
  000ba	c1 fa 05	 sar	 edx, 5
  000bd	8b c2		 mov	 eax, edx
  000bf	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000c2	03 c2		 add	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 456  : 	for (DWORD i = 0; i < m_MeshDataVector.size(); ++i)

  000c4	3b d8		 cmp	 ebx, eax
  000c6	72 a8		 jb	 SHORT $LL4@ReserveMes
$LN3@ReserveMes:
  000c8	5f		 pop	 edi

; 472  : 	}
; 473  : }

  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	5d		 pop	 ebp
  000cc	c2 04 00	 ret	 4
?ReserveMeshData@CEffectMeshScript@@QAEXK@Z ENDP	; CEffectMeshScript::ReserveMeshData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ
_TEXT	SEGMENT
?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ PROC	; CEffectMeshScript::GetMeshFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00000	83 79 40 10	 cmp	 DWORD PTR [ecx+64], 16	; 00000010H

; 3668 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 2145 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetMeshFil
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 477  : 	return m_strMeshFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetMeshFil:

; 478  : }

  0000b	c3		 ret	 0
?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ ENDP	; CEffectMeshScript::GetMeshFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??1CEffectMeshScript@@UAE@XZ
_TEXT	SEGMENT
??1CEffectMeshScript@@UAE@XZ PROC			; CEffectMeshScript::~CEffectMeshScript, COMDAT
; _this$ = ecx

; 698  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMeshScript@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@CEffectMes

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 2c	 push	 DWORD PTR [esi+44]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@CEffectMes:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 699  : }

  0001e	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 699  : }

  00033	e8 00 00 00 00	 call	 ??1?$vector@USMeshData@CEffectMeshScript@@V?$allocator@USMeshData@CEffectMeshScript@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >::~vector<CEffectMeshScript::SMeshData,std::allocator<CEffectMeshScript::SMeshData> >
  00038	8b ce		 mov	 ecx, esi
  0003a	5e		 pop	 esi
  0003b	e9 00 00 00 00	 jmp	 ??1CEffectElementBase@@UAE@XZ ; CEffectElementBase::~CEffectElementBase
??1CEffectMeshScript@@UAE@XZ ENDP			; CEffectMeshScript::~CEffectMeshScript
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??0CEffectMeshScript@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEffectMeshScript@@QAE@XZ PROC			; CEffectMeshScript::CEffectMeshScript, COMDAT
; _this$ = ecx

; 695  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	e8 00 00 00 00	 call	 ??0CEffectElementBase@@QAE@XZ ; CEffectElementBase::CEffectElementBase
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMeshScript@@6B@

; 696  : }

  00015	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00017	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0001e	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00025	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0002c	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00033	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003a	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 696  : }

  0003e	5e		 pop	 esi
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??0CEffectMeshScript@@QAE@XZ ENDP			; CEffectMeshScript::CEffectMeshScript
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEffectMesh@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEffectMesh@@UAEPAXI@Z PROC				; CEffectMesh::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEffectMesh@@UAE@XZ	; CEffectMesh::~CEffectMesh
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 44		 push	 68			; 00000044H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEffectMesh@@UAEPAXI@Z ENDP				; CEffectMesh::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z
_TEXT	SEGMENT
_stTokenVector$2 = -560					; size = 12
_textFileLoader$3 = -548				; size = 16
__My_data$1$ = -532					; size = 4
_pMotionData$4 = -528					; size = 4
_n$1$ = -524						; size = 4
_iIndexVector$ = -520					; size = 12
_v3VertexVector$2$ = -508				; size = 4
_iIndexVector$2$ = -504					; size = 4
_v3TextureVertexVector$2$ = -500			; size = 4
_iTextureIndexVector$2$ = -496				; size = 4
_v3VertexVector$ = -492					; size = 12
_v3TextureVertexVector$ = -480				; size = 12
_iTextureIndexVector$ = -468				; size = 12
_this$GSCopy$1$ = -456					; size = 4
_pMeshData$1$ = -452					; size = 4
__Old_capacity$1$ = -448				; size = 4
_j$1$ = -448						; size = 4
tv2918 = -448						; size = 4
_i$1$ = -444						; size = 4
tv2956 = -444						; size = 4
__Count$1$ = -440					; size = 4
tv2978 = -440						; size = 4
tv2958 = -440						; size = 4
__New_size$1$ = -436					; size = 4
__Result$2$ = -436					; size = 4
__Newsize$1$ = -436					; size = 4
tv2967 = -436						; size = 4
tv2957 = -436						; size = 4
tv2818 = -432						; size = 4
__New_ptr$5 = -432					; size = 4
__Old_capacity$1$ = -428				; size = 4
_i$1$ = -428						; size = 4
__New_ptr$6 = -428					; size = 4
_pImage$7 = -428					; size = 4
_pImage$8 = -428					; size = 4
_c_pbBuf$GSCopy$4$ = -424				; size = 4
__Result$1$ = -420					; size = 4
__My_data$1$ = -420					; size = 4
$T9 = -413						; size = 1
$T10 = -413						; size = 1
$T11 = -413						; size = 1
$T12 = -413						; size = 1
$T13 = -413						; size = 1
$T14 = -413						; size = 1
$T15 = -413						; size = 1
_File$16 = -412						; size = 324
_strExtension$17 = -88					; size = 24
_strPathName$18 = -64					; size = 24
_strTextureFileName$19 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iSize$ = 8						; size = 4
_c_pbBuf$ = 12						; size = 4
?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z PROC		; CEffectMesh::__LoadData_Ver002, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f9		 mov	 edi, ecx
  0002f	89 bd 38 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00035	8b 75 0c	 mov	 esi, DWORD PTR _c_pbBuf$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00038	33 c0		 xor	 eax, eax
  0003a	c7 85 14 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _v3VertexVector$[ebp], 0
  00044	c7 85 18 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _v3VertexVector$[ebp+4], 0
  0004e	89 85 04 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$2$[ebp], eax
  00054	89 85 1c fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 103  : 	std::vector<D3DXVECTOR3> v3VertexVector;

  0005a	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005d	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp], eax
  00063	89 85 fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], eax
  00069	89 85 08 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$2$[ebp], eax
  0006f	89 85 00 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+8], eax
  00075	89 85 20 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp], eax
  0007b	89 85 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], eax
  00081	89 85 0c fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$2$[ebp], eax
  00087	89 85 28 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+8], eax
  0008d	89 85 2c fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp], eax
  00093	89 85 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], eax
  00099	89 85 10 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$2$[ebp], eax
  0009f	89 85 34 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 108  : 	m_iGeomCount = *(int *)c_pbBuf;

  000a5	8b 06		 mov	 eax, DWORD PTR [esi]
  000a7	89 47 2c	 mov	 DWORD PTR [edi+44], eax

; 109  : 	c_pbBuf += 4;
; 110  : 	m_iFrameCount = *(int *)c_pbBuf;

  000aa	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 111  : 	c_pbBuf += 4;

  000ad	83 c6 08	 add	 esi, 8
  000b0	89 47 30	 mov	 DWORD PTR [edi+48], eax

; 112  : 
; 113  : 	m_pEffectMeshDataVector.clear();

  000b3	8d 47 34	 lea	 eax, DWORD PTR [edi+52]
  000b6	8b 10		 mov	 edx, DWORD PTR [eax]
  000b8	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 114  : 	m_pEffectMeshDataVector.resize(m_iGeomCount);

  000bb	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  000be	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c2	89 85 ec fd ff
	ff		 mov	 DWORD PTR __My_data$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  000c8	85 c9		 test	 ecx, ecx
  000ca	74 2f		 je	 SHORT $LN57@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000cc	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000cf	2b c2		 sub	 eax, edx
  000d1	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  000d4	3b c8		 cmp	 ecx, eax
  000d6	76 12		 jbe	 SHORT $LN58@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  000d8	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  000de	50		 push	 eax
  000df	51		 push	 ecx
  000e0	8d 4f 34	 lea	 ecx, DWORD PTR [edi+52]
  000e3	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  000e8	eb 11		 jmp	 SHORT $LN57@LoadData_V
$LN58@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000ea	8d 47 34	 lea	 eax, DWORD PTR [edi+52]
  000ed	50		 push	 eax
  000ee	51		 push	 ecx
  000ef	52		 push	 edx
  000f0	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >
  000f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000f8	89 47 38	 mov	 DWORD PTR [edi+56], eax
$LN57@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 116  : 	for (short n = 0; n < m_iGeomCount; ++n)

  000fb	83 7f 2c 00	 cmp	 DWORD PTR [edi+44], 0
  000ff	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _n$1$[ebp], 0
  00109	0f 8e f8 0a 00
	00		 jle	 $LN377@LoadData_V
  0010f	90		 npad	 1
$LL4@LoadData_V:

; 117  : 	{
; 118  : 		SEffectMeshData * pMeshData = SEffectMeshData::New();

  00110	e8 00 00 00 00	 call	 ?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ ; CEffectMesh::SEffectMeshData::New

; 119  : 
; 120  : 		memcpy(pMeshData->szObjectName, c_pbBuf, 32);

  00115	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00118	8b d0		 mov	 edx, eax

; 121  : 		c_pbBuf += 32;
; 122  : 		memcpy(pMeshData->szDiffuseMapFileName, c_pbBuf, 128);

  0011a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0011f	89 95 3c fe ff
	ff		 mov	 DWORD PTR _pMeshData$1$[ebp], edx
  00125	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00128	8d 7a 20	 lea	 edi, DWORD PTR [edx+32]
  0012b	0f 10 46 10	 movups	 xmm0, XMMWORD PTR [esi+16]
  0012f	83 c6 20	 add	 esi, 32			; 00000020H
  00132	89 b5 58 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], esi

; 123  : 		c_pbBuf += 128;

  00138	83 ad 58 fe ff
	ff 80		 sub	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], -128 ; ffffff80H
  0013f	0f 11 42 10	 movups	 XMMWORD PTR [edx+16], xmm0
  00143	f3 a5		 rep movsd

; 125  : 		pMeshData->EffectFrameDataVector.clear();

  00145	8d ba a0 00 00
	00		 lea	 edi, DWORD PTR [edx+160]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0014b	57		 push	 edi
  0014c	ff 77 04	 push	 DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 125  : 		pMeshData->EffectFrameDataVector.clear();

  0014f	89 bd 5c fe ff
	ff		 mov	 DWORD PTR __My_data$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00155	ff 37		 push	 DWORD PTR [edi]
  00157	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 126  : 		pMeshData->EffectFrameDataVector.resize(m_iFrameCount);

  0015c	8b b5 38 fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  00162	8b c7		 mov	 eax, edi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00164	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00167	8b 10		 mov	 edx, DWORD PTR [eax]

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00169	8b ca		 mov	 ecx, edx

; 1390 :         _Mylast = _Myfirst;

  0016b	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0016e	8b 38		 mov	 edi, DWORD PTR [eax]
  00170	2b cf		 sub	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 126  : 		pMeshData->EffectFrameDataVector.resize(m_iFrameCount);

  00172	8b 76 30	 mov	 esi, DWORD PTR [esi+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00175	c1 f9 05	 sar	 ecx, 5

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00178	3b f1		 cmp	 esi, ecx
  0017a	73 18		 jae	 SHORT $LN69@LoadData_V

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0017c	50		 push	 eax

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  0017d	c1 e6 05	 shl	 esi, 5
  00180	03 f7		 add	 esi, edi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00182	52		 push	 edx
  00183	56		 push	 esi
  00184	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1220 :             _Mylast = _Newlast;

  00189	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  0018f	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1221 :             return;

  00192	eb 3e		 jmp	 SHORT $LN409@LoadData_V
$LN69@LoadData_V:

; 1224 :         if (_Newsize > _Oldsize) { // append

  00194	76 3f		 jbe	 SHORT $LN70@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00196	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00199	2b c7		 sub	 eax, edi
  0019b	c1 f8 05	 sar	 eax, 5

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  0019e	3b f0		 cmp	 esi, eax
  001a0	76 1b		 jbe	 SHORT $LN71@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  001a2	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR __My_data$1$[ebp]
  001a8	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T14[ebp]
  001ae	50		 push	 eax
  001af	56		 push	 esi
  001b0	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  001b5	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  001bb	eb 18		 jmp	 SHORT $LN70@LoadData_V
$LN71@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001bd	8b bd 5c fe ff
	ff		 mov	 edi, DWORD PTR __My_data$1$[ebp]

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001c3	2b f1		 sub	 esi, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001c5	57		 push	 edi
  001c6	56		 push	 esi
  001c7	52		 push	 edx
  001c8	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001cd	89 47 04	 mov	 DWORD PTR [edi+4], eax
  001d0	8b c7		 mov	 eax, edi
$LN409@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 128  : 		for(int i = 0; i < m_iFrameCount; ++i)

  001d2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN70@LoadData_V:
  001d5	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  001db	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  001e5	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  001e9	0f 8e e4 03 00
	00		 jle	 $LN6@LoadData_V
  001ef	33 ff		 xor	 edi, edi
$LL7@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001f1	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 132  : 			memcpy(&rFrameData.byChangedFrame, c_pbBuf, sizeof(BYTE));

  001f3	8b b5 58 fe ff
	ff		 mov	 esi, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001f9	89 8d 50 fe ff
	ff		 mov	 DWORD PTR tv2818[ebp], ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 132  : 			memcpy(&rFrameData.byChangedFrame, c_pbBuf, sizeof(BYTE));

  001ff	8a 06		 mov	 al, BYTE PTR [esi]
  00201	88 04 0f	 mov	 BYTE PTR [edi+ecx], al

; 133  : 			c_pbBuf += sizeof(BYTE);
; 134  : 
; 135  : 			memcpy(&rFrameData.fVisibility, c_pbBuf, sizeof(float));

  00204	8b 46 01	 mov	 eax, DWORD PTR [esi+1]
  00207	89 44 0f 04	 mov	 DWORD PTR [edi+ecx+4], eax

; 136  : 			c_pbBuf += sizeof(float);
; 137  : 
; 138  : 			memcpy(&rFrameData.dwVertexCount, c_pbBuf, sizeof(DWORD));

  0020b	8b 56 05	 mov	 edx, DWORD PTR [esi+5]

; 139  : 			c_pbBuf += sizeof(DWORD);

  0020e	83 c6 09	 add	 esi, 9
  00211	89 b5 58 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], esi

; 140  : 
; 141  : 			memcpy(&rFrameData.dwIndexCount, c_pbBuf, sizeof(DWORD));
; 142  : 			c_pbBuf += sizeof(DWORD);

  00217	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  0021d	83 c0 04	 add	 eax, 4
  00220	89 54 0f 08	 mov	 DWORD PTR [edi+ecx+8], edx
  00224	8b 36		 mov	 esi, DWORD PTR [esi]
  00226	89 85 58 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], eax

; 143  : 
; 144  : 			memcpy(&rFrameData.dwTextureVertexCount, c_pbBuf, sizeof(DWORD));
; 145  : 			c_pbBuf += sizeof(DWORD);

  0022c	83 85 58 fe ff
	ff 04		 add	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], 4
  00233	89 74 0f 10	 mov	 DWORD PTR [edi+ecx+16], esi
  00237	8b 00		 mov	 eax, DWORD PTR [eax]
  00239	89 44 0f 0c	 mov	 DWORD PTR [edi+ecx+12], eax

; 146  : 
; 147  : 			v3VertexVector.clear();

  0023d	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _v3VertexVector$[ebp]
  00243	89 95 4c fe ff
	ff		 mov	 DWORD PTR __Newsize$1$[ebp], edx
  00249	89 85 18 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  0024f	85 d2		 test	 edx, edx
  00251	74 69		 je	 SHORT $LN83@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00253	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR _v3VertexVector$2$[ebp]
  00259	2b c8		 sub	 ecx, eax
  0025b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00260	f7 e9		 imul	 ecx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00262	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00268	d1 fa		 sar	 edx, 1
  0026a	8b c2		 mov	 eax, edx
  0026c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0026f	03 c2		 add	 eax, edx
  00271	3b c8		 cmp	 ecx, eax
  00273	76 2b		 jbe	 SHORT $LN84@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00275	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  0027b	50		 push	 eax
  0027c	51		 push	 ecx
  0027d	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Resize_reallocate<std::_Value_init_tag>
  00288	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR tv2818[ebp]
  0028e	8b 74 07 10	 mov	 esi, DWORD PTR [edi+eax+16]

; 1228 :                 return;

  00292	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR _v3VertexVector$[ebp+8]
  00298	89 85 04 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$2$[ebp], eax
  0029e	eb 1c		 jmp	 SHORT $LN83@LoadData_V
$LN84@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  002a0	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _v3VertexVector$[ebp]
  002a6	50		 push	 eax
  002a7	51		 push	 ecx
  002a8	ff b5 14 fe ff
	ff		 push	 DWORD PTR _v3VertexVector$[ebp]
  002ae	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR3> >
  002b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  002b6	89 85 18 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+4], eax
$LN83@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 149  : 			iIndexVector.clear();

  002bc	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR _iIndexVector$[ebp]
  002c2	89 8d fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  002c8	85 f6		 test	 esi, esi
  002ca	74 47		 je	 SHORT $LN92@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  002cc	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$2$[ebp]
  002d2	2b c1		 sub	 eax, ecx
  002d4	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  002d7	3b f0		 cmp	 esi, eax
  002d9	76 21		 jbe	 SHORT $LN93@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  002db	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  002e1	50		 push	 eax
  002e2	56		 push	 esi
  002e3	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _iIndexVector$[ebp]
  002e9	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  002ee	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$[ebp+8]
  002f4	89 85 08 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$2$[ebp], eax
  002fa	eb 17		 jmp	 SHORT $LN92@LoadData_V
$LN93@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  002fc	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _iIndexVector$[ebp]
  00302	50		 push	 eax
  00303	56		 push	 esi
  00304	51		 push	 ecx
  00305	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
  0030a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0030d	89 85 fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], eax
$LN92@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 152  : 			v3TextureVertexVector.resize(rFrameData.dwTextureVertexCount);

  00313	8b b5 50 fe ff
	ff		 mov	 esi, DWORD PTR tv2818[ebp]
  00319	8b 95 20 fe ff
	ff		 mov	 edx, DWORD PTR _v3TextureVertexVector$[ebp]
  0031f	89 95 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], edx
  00325	8b 4c 37 0c	 mov	 ecx, DWORD PTR [edi+esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00329	85 c9		 test	 ecx, ecx
  0032b	74 47		 je	 SHORT $LN101@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0032d	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$2$[ebp]
  00333	2b c2		 sub	 eax, edx
  00335	c1 f8 03	 sar	 eax, 3

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00338	3b c8		 cmp	 ecx, eax
  0033a	76 21		 jbe	 SHORT $LN102@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  0033c	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00342	50		 push	 eax
  00343	51		 push	 ecx
  00344	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _v3TextureVertexVector$[ebp]
  0034a	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  0034f	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp+8]
  00355	89 85 0c fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$2$[ebp], eax
  0035b	eb 17		 jmp	 SHORT $LN101@LoadData_V
$LN102@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0035d	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00363	50		 push	 eax
  00364	51		 push	 ecx
  00365	52		 push	 edx
  00366	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR2> >
  0036b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0036e	89 85 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], eax
$LN101@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 154  : 			iTextureIndexVector.resize(rFrameData.dwIndexCount);

  00374	8b 4c 37 10	 mov	 ecx, DWORD PTR [edi+esi+16]
  00378	8b 95 2c fe ff
	ff		 mov	 edx, DWORD PTR _iTextureIndexVector$[ebp]
  0037e	89 95 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00384	85 c9		 test	 ecx, ecx
  00386	74 47		 je	 SHORT $LN110@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00388	8b 85 10 fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$2$[ebp]
  0038e	2b c2		 sub	 eax, edx
  00390	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00393	3b c8		 cmp	 ecx, eax
  00395	76 21		 jbe	 SHORT $LN111@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00397	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  0039d	50		 push	 eax
  0039e	51		 push	 ecx
  0039f	8d 8d 2c fe ff
	ff		 lea	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  003a5	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  003aa	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$[ebp+8]
  003b0	89 85 10 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$2$[ebp], eax
  003b6	eb 17		 jmp	 SHORT $LN110@LoadData_V
$LN111@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  003b8	8d 85 2c fe ff
	ff		 lea	 eax, DWORD PTR _iTextureIndexVector$[ebp]
  003be	50		 push	 eax
  003bf	51		 push	 ecx
  003c0	52		 push	 edx
  003c1	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
  003c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  003c9	89 85 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], eax
$LN110@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 156  : 			memcpy(&v3VertexVector[0], c_pbBuf, rFrameData.dwVertexCount*sizeof(D3DXVECTOR3));

  003cf	8b 44 37 08	 mov	 eax, DWORD PTR [edi+esi+8]
  003d3	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  003d6	c1 e0 02	 shl	 eax, 2
  003d9	50		 push	 eax
  003da	ff b5 58 fe ff
	ff		 push	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  003e0	ff b5 14 fe ff
	ff		 push	 DWORD PTR _v3VertexVector$[ebp]
  003e6	e8 00 00 00 00	 call	 _memcpy

; 157  : 			c_pbBuf += rFrameData.dwVertexCount*sizeof(D3DXVECTOR3);

  003eb	8b 44 37 08	 mov	 eax, DWORD PTR [edi+esi+8]
  003ef	8b 8d 58 fe ff
	ff		 mov	 ecx, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  003f5	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  003f8	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]

; 158  : 			memcpy(&iIndexVector[0], c_pbBuf, rFrameData.dwIndexCount*sizeof(int));

  003fb	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR tv2818[ebp]
  00401	8b 44 07 10	 mov	 eax, DWORD PTR [edi+eax+16]
  00405	c1 e0 02	 shl	 eax, 2
  00408	50		 push	 eax
  00409	56		 push	 esi
  0040a	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _iIndexVector$[ebp]
  00410	e8 00 00 00 00	 call	 _memcpy

; 159  : 			c_pbBuf += rFrameData.dwIndexCount*sizeof(int);

  00415	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR tv2818[ebp]
  0041b	8b 44 0f 10	 mov	 eax, DWORD PTR [edi+ecx+16]
  0041f	8d 34 86	 lea	 esi, DWORD PTR [esi+eax*4]

; 160  : 			memcpy(&v3TextureVertexVector[0], c_pbBuf, rFrameData.dwTextureVertexCount*sizeof(D3DXVECTOR2));

  00422	8b 44 0f 0c	 mov	 eax, DWORD PTR [edi+ecx+12]
  00426	c1 e0 03	 shl	 eax, 3
  00429	50		 push	 eax
  0042a	56		 push	 esi
  0042b	ff b5 20 fe ff
	ff		 push	 DWORD PTR _v3TextureVertexVector$[ebp]
  00431	e8 00 00 00 00	 call	 _memcpy

; 161  : 			c_pbBuf += rFrameData.dwTextureVertexCount*sizeof(D3DXVECTOR2);

  00436	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR tv2818[ebp]
  0043c	8b 44 0f 0c	 mov	 eax, DWORD PTR [edi+ecx+12]
  00440	8d 34 c6	 lea	 esi, DWORD PTR [esi+eax*8]

; 162  : 			memcpy(&iTextureIndexVector[0], c_pbBuf, rFrameData.dwIndexCount*sizeof(int));

  00443	8b 44 0f 10	 mov	 eax, DWORD PTR [edi+ecx+16]
  00447	c1 e0 02	 shl	 eax, 2
  0044a	50		 push	 eax
  0044b	56		 push	 esi
  0044c	ff b5 2c fe ff
	ff		 push	 DWORD PTR _iTextureIndexVector$[ebp]
  00452	e8 00 00 00 00	 call	 _memcpy

; 163  : 			c_pbBuf += rFrameData.dwIndexCount*sizeof(int);

  00457	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR tv2818[ebp]
  0045d	83 c4 30	 add	 esp, 48			; 00000030H
  00460	8b 44 07 10	 mov	 eax, DWORD PTR [edi+eax+16]
  00464	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]

; 164  : 
; 165  : 			///////////////////////////////
; 166  : 
; 167  : 			rFrameData.PDTVertexVector.clear();

  00467	8b b5 50 fe ff
	ff		 mov	 esi, DWORD PTR tv2818[ebp]
  0046d	89 85 58 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], eax
  00473	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  00476	03 d7		 add	 edx, edi
  00478	8b 02		 mov	 eax, DWORD PTR [edx]
  0047a	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  0047d	83 7c 37 10 00	 cmp	 DWORD PTR [edi+esi+16], 0
  00482	76 50		 jbe	 SHORT $LN127@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00484	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00487	2b c8		 sub	 ecx, eax
  00489	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0048e	f7 e9		 imul	 ecx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00490	8b 4c 37 10	 mov	 ecx, DWORD PTR [edi+esi+16]
  00494	c1 fa 03	 sar	 edx, 3
  00497	8b c2		 mov	 eax, edx
  00499	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0049c	03 c2		 add	 eax, edx
  0049e	3b c8		 cmp	 ecx, eax
  004a0	76 19		 jbe	 SHORT $LN128@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  004a2	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  004a8	50		 push	 eax
  004a9	51		 push	 ecx
  004aa	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  004ad	03 cf		 add	 ecx, edi
  004af	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  004b4	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  004b7	03 d7		 add	 edx, edi
  004b9	eb 19		 jmp	 SHORT $LN127@LoadData_V
$LN128@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  004bb	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  004be	03 c7		 add	 eax, edi
  004c0	50		 push	 eax
  004c1	51		 push	 ecx
  004c2	ff 30		 push	 DWORD PTR [eax]
  004c4	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  004c9	8d 56 14	 lea	 edx, DWORD PTR [esi+20]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  004cc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  004cf	03 d7		 add	 edx, edi
  004d1	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN127@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 169  : 			for (DWORD j = 0; j < rFrameData.dwIndexCount; ++j)

  004d4	83 7c 37 10 00	 cmp	 DWORD PTR [edi+esi+16], 0
  004d9	c7 85 40 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$1$[ebp], 0
  004e3	0f 86 c5 00 00
	00		 jbe	 $LN5@LoadData_V
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  004e9	8b b5 f8 fd ff
	ff		 mov	 esi, DWORD PTR _iIndexVector$[ebp]
  004ef	33 c0		 xor	 eax, eax
  004f1	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  004f7	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@bf800000
  004ff	89 b5 44 fe ff
	ff		 mov	 DWORD PTR tv2956[ebp], esi
  00505	8b f1		 mov	 esi, ecx
  00507	29 b5 44 fe ff
	ff		 sub	 DWORD PTR tv2956[ebp], esi
  0050d	89 85 48 fe ff
	ff		 mov	 DWORD PTR tv2958[ebp], eax
  00513	89 8d 4c fe ff
	ff		 mov	 DWORD PTR tv2957[ebp], ecx
  00519	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@LoadData_V:

; 1504 :         return _My_data._Myfirst[_Pos];

  00520	8b 12		 mov	 edx, DWORD PTR [edx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 179  : 				rVertex.position = v3VertexVector[dwIndex];

  00522	8b b5 14 fe ff
	ff		 mov	 esi, DWORD PTR _v3VertexVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00528	03 d0		 add	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 173  : 				DWORD dwIndex = iIndexVector[j];

  0052a	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR tv2956[ebp]
  00530	83 85 48 fe ff
	ff 14		 add	 DWORD PTR tv2958[ebp], 20 ; 00000014H
  00537	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]

; 174  : 				DWORD dwTextureIndex = iTextureIndexVector[j];

  0053a	8b 09		 mov	 ecx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0053c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 179  : 				rVertex.position = v3VertexVector[dwIndex];

  0053f	f3 0f 7e 04 86	 movq	 xmm0, QWORD PTR [esi+eax*4]
  00544	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  00548	8b 44 86 08	 mov	 eax, DWORD PTR [esi+eax*4+8]
  0054c	8b b5 50 fe ff
	ff		 mov	 esi, DWORD PTR tv2818[ebp]
  00552	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 180  : 				rVertex.texCoord = v3TextureVertexVector[dwTextureIndex];

  00555	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  0055b	8b 04 c8	 mov	 eax, DWORD PTR [eax+ecx*8]
  0055e	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  00561	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00567	8b 44 c8 04	 mov	 eax, DWORD PTR [eax+ecx*8+4]
  0056b	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR tv2957[ebp]
  00571	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00574	83 c1 04	 add	 ecx, 4

; 181  : 				rVertex.texCoord.y *= -1;

  00577	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  0057c	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  00582	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00586	40		 inc	 eax
  00587	89 85 40 fe ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  0058d	89 8d 4c fe ff
	ff		 mov	 DWORD PTR tv2957[ebp], ecx
  00593	f3 0f 11 42 10	 movss	 DWORD PTR [edx+16], xmm0
  00598	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  0059b	3b 44 37 10	 cmp	 eax, DWORD PTR [edi+esi+16]
  0059f	8d 14 3a	 lea	 edx, DWORD PTR [edx+edi]
  005a2	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR tv2958[ebp]
  005a8	0f 82 72 ff ff
	ff		 jb	 $LL10@LoadData_V
$LN5@LoadData_V:

; 128  : 		for(int i = 0; i < m_iFrameCount; ++i)

  005ae	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  005b4	83 c7 20	 add	 edi, 32			; 00000020H
  005b7	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  005bd	40		 inc	 eax
  005be	89 85 54 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  005c4	3b 41 30	 cmp	 eax, DWORD PTR [ecx+48]
  005c7	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  005cd	0f 8c 1e fc ff
	ff		 jl	 $LL7@LoadData_V
$LN6@LoadData_V:

; 182  : 			}
; 183  : 		}
; 184  : 
; 185  : 		////////////////////////////////////
; 186  : 
; 187  : 		pMeshData->pImageVector.clear();

  005d3	8b 8d 3c fe ff
	ff		 mov	 ecx, DWORD PTR _pMeshData$1$[ebp]
  005d9	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  005df	8d b9 ac 00 00
	00		 lea	 edi, DWORD PTR [ecx+172]
  005e5	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005e8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strExtension$17[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005ef	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strExtension$17[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005f6	c6 45 a8 00	 mov	 BYTE PTR _strExtension$17[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 190  : 		GetFileExtension(pMeshData->szDiffuseMapFileName, strlen(pMeshData->szDiffuseMapFileName), &strExtension);

  005fa	8d 71 20	 lea	 esi, DWORD PTR [ecx+32]
  005fd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00601	8b ce		 mov	 ecx, esi
  00603	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL400@LoadData_V:
  00606	8a 01		 mov	 al, BYTE PTR [ecx]
  00608	41		 inc	 ecx
  00609	84 c0		 test	 al, al
  0060b	75 f9		 jne	 SHORT $LL400@LoadData_V
  0060d	8d 45 a8	 lea	 eax, DWORD PTR _strExtension$17[ebp]
  00610	2b ca		 sub	 ecx, edx
  00612	50		 push	 eax
  00613	51		 push	 ecx
  00614	56		 push	 esi
  00615	e8 00 00 00 00	 call	 ?GetFileExtension@@YAXPBDHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetFileExtension

; 191  : 		stl_lowers(strExtension);

  0061a	8d 45 a8	 lea	 eax, DWORD PTR _strExtension$17[ebp]
  0061d	50		 push	 eax
  0061e	e8 00 00 00 00	 call	 ?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stl_lowers
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00623	8b 75 b8	 mov	 esi, DWORD PTR _strExtension$17[ebp+16]

; 2144 :         const value_type* _Result = _Bx._Buf;

  00626	8d 4d a8	 lea	 ecx, DWORD PTR _strExtension$17[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 191  : 		stl_lowers(strExtension);

  00629	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0062c	b8 03 00 00 00	 mov	 eax, 3

; 2145 :         if (_Large_string_engaged()) {

  00631	83 7d bc 10	 cmp	 DWORD PTR _strExtension$17[ebp+20], 16 ; 00000010H

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00635	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_03BNIHALFD@ifl@

; 2145 :         if (_Large_string_engaged()) {

  0063a	0f 43 4d a8	 cmovae	 ecx, DWORD PTR _strExtension$17[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0063e	83 fe 03	 cmp	 esi, 3
  00641	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  00644	83 ee 04	 sub	 esi, 4
  00647	72 18		 jb	 SHORT $LN403@LoadData_V
  00649	0f 1f 80 00 00
	00 00		 npad	 7
$LL404@LoadData_V:
  00650	8b 01		 mov	 eax, DWORD PTR [ecx]
  00652	3b 02		 cmp	 eax, DWORD PTR [edx]
  00654	75 10		 jne	 SHORT $LN402@LoadData_V
  00656	83 c1 04	 add	 ecx, 4
  00659	83 c2 04	 add	 edx, 4
  0065c	83 ee 04	 sub	 esi, 4
  0065f	73 ef		 jae	 SHORT $LL404@LoadData_V
$LN403@LoadData_V:
  00661	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00664	74 34		 je	 SHORT $LN401@LoadData_V
$LN402@LoadData_V:
  00666	8a 01		 mov	 al, BYTE PTR [ecx]
  00668	3a 02		 cmp	 al, BYTE PTR [edx]
  0066a	75 27		 jne	 SHORT $LN405@LoadData_V
  0066c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0066f	74 29		 je	 SHORT $LN401@LoadData_V
  00671	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00674	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00677	75 1a		 jne	 SHORT $LN405@LoadData_V
  00679	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0067c	74 1c		 je	 SHORT $LN401@LoadData_V
  0067e	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00681	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00684	75 0d		 jne	 SHORT $LN405@LoadData_V
  00686	83 fe ff	 cmp	 esi, -1
  00689	74 0f		 je	 SHORT $LN401@LoadData_V
  0068b	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0068e	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00691	74 07		 je	 SHORT $LN401@LoadData_V
$LN405@LoadData_V:
  00693	1b c0		 sbb	 eax, eax
  00695	83 c8 01	 or	 eax, 1
  00698	eb 02		 jmp	 SHORT $LN406@LoadData_V
$LN401@LoadData_V:
  0069a	33 c0		 xor	 eax, eax
$LN406@LoadData_V:

; 513  :     if (_Ans != 0) {

  0069c	85 c0		 test	 eax, eax
  0069e	0f 85 45 04 00
	00		 jne	 $LN14@LoadData_V

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  006a4	8b 45 b8	 mov	 eax, DWORD PTR _strExtension$17[ebp+16]
  006a7	83 f8 03	 cmp	 eax, 3
  006aa	73 05		 jae	 SHORT $LN162@LoadData_V

; 518  :         return -1;

  006ac	83 c8 ff	 or	 eax, -1
  006af	eb 0b		 jmp	 SHORT $LN163@LoadData_V
$LN162@LoadData_V:

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  006b1	b9 03 00 00 00	 mov	 ecx, 3
  006b6	3b c8		 cmp	 ecx, eax
  006b8	1b c0		 sbb	 eax, eax
  006ba	f7 d8		 neg	 eax
$LN163@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 193  : 		if (0 == strExtension.compare("ifl"))

  006bc	85 c0		 test	 eax, eax
  006be	0f 85 25 04 00
	00		 jne	 $LN14@LoadData_V

; 194  : 		{
; 195  : 			LPCVOID pMotionData;
; 196  : 			CMappedFile File;

  006c4	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  006ca	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 197  : 
; 198  : 			if (CEterPackManager::Instance().Get(File, pMeshData->szDiffuseMapFileName, &pMotionData))

  006cf	8b b5 3c fe ff
	ff		 mov	 esi, DWORD PTR _pMeshData$1$[ebp]
  006d5	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _pMotionData$4[ebp]
  006db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  006e1	83 c6 20	 add	 esi, 32			; 00000020H
  006e4	50		 push	 eax
  006e5	56		 push	 esi
  006e6	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _File$16[ebp]
  006ec	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  006f0	50		 push	 eax
  006f1	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  006f6	84 c0		 test	 al, al
  006f8	0f 84 de 03 00
	00		 je	 $LN16@LoadData_V

; 199  : 			{
; 200  : 				CMemoryTextFileLoader textFileLoader;

  006fe	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00704	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00709	c7 85 d0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp], 0
  00713	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp+4], 0
  0071d	c7 85 d8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 203  : 				textFileLoader.Bind(File.Size(), pMotionData);

  00727	ff b5 f0 fd ff
	ff		 push	 DWORD PTR _pMotionData$4[ebp]
  0072d	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  00733	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00737	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0073c	50		 push	 eax
  0073d	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00743	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  00748	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0074f	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00756	c6 45 c0 00	 mov	 BYTE PTR _strPathName$18[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 206  : 				GetOnlyPathName(pMeshData->szDiffuseMapFileName, strPathName);

  0075a	8d 45 c0	 lea	 eax, DWORD PTR _strPathName$18[ebp]
  0075d	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00761	50		 push	 eax
  00762	56		 push	 esi
  00763	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetOnlyPathName
  00768	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0076b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00772	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00779	c6 45 d8 00	 mov	 BYTE PTR _strTextureFileName$19[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 209  : 				for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  0077d	33 f6		 xor	 esi, esi
  0077f	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00783	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00789	89 b5 44 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  0078f	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00794	85 c0		 test	 eax, eax
  00796	0f 84 e7 02 00
	00		 je	 $LN12@LoadData_V
  0079c	0f 1f 40 00	 npad	 4
$LL13@LoadData_V:

; 210  : 				{
; 211  : 					const std::string & c_rstrFileName = textFileLoader.GetLineString(i);

  007a0	56		 push	 esi
  007a1	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  007a7	e8 00 00 00 00	 call	 ?GetLineString@CMemoryTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CMemoryTextFileLoader::GetLineString
  007ac	89 85 5c fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  007b2	83 c0 10	 add	 eax, 16			; 00000010H
  007b5	89 85 48 fe ff
	ff		 mov	 DWORD PTR tv2978[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 213  : 					if (c_rstrFileName.empty())

  007bb	83 38 00	 cmp	 DWORD PTR [eax], 0
  007be	0f 84 a5 02 00
	00		 je	 $LN11@LoadData_V
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  007c4	83 7d d4 10	 cmp	 DWORD PTR _strPathName$18[ebp+20], 16 ; 00000010H
  007c8	8d 45 c0	 lea	 eax, DWORD PTR _strPathName$18[ebp]

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007cb	8b 4d ec	 mov	 ecx, DWORD PTR _strTextureFileName$19[ebp+20]

; 2145 :         if (_Large_string_engaged()) {

  007ce	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strPathName$18[ebp]

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007d2	8b 7d d0	 mov	 edi, DWORD PTR _strPathName$18[ebp+16]

; 2145 :         if (_Large_string_engaged()) {

  007d5	89 85 4c fe ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007db	89 8d 40 fe ff
	ff		 mov	 DWORD PTR __Old_capacity$1$[ebp], ecx
  007e1	3b f9		 cmp	 edi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  007e3	77 21		 ja	 SHORT $LN206@LoadData_V

; 2136 :         if (_Large_string_engaged()) {

  007e5	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  007e8	89 7d e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], edi
  007eb	57		 push	 edi

; 2135 :         value_type* _Result = _Bx._Buf;

  007ec	8d 75 d8	 lea	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 2136 :         if (_Large_string_engaged()) {

  007ef	0f 43 75 d8	 cmovae	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  007f3	50		 push	 eax
  007f4	56		 push	 esi
  007f5	e8 00 00 00 00	 call	 _memmove
  007fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  007fd	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2971 :             return *this;

  00801	e9 9a 00 00 00	 jmp	 $LN218@LoadData_V
$LN206@LoadData_V:

; 4221 :         if (_New_size > max_size()) {

  00806	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  0080c	0f 87 17 04 00
	00		 ja	 $LN386@LoadData_V

; 4222 :             _Xlen_string(); // result too long
; 4223 :         }
; 4224 : 
; 4225 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00812	8b f7		 mov	 esi, edi
  00814	83 ce 0f	 or	 esi, 15			; 0000000fH

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00817	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0081d	76 07		 jbe	 SHORT $LN223@LoadData_V

; 4203 :             return _Max;

  0081f	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00824	eb 1e		 jmp	 SHORT $LN222@LoadData_V
$LN223@LoadData_V:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00826	8b d1		 mov	 edx, ecx
  00828	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0082d	d1 ea		 shr	 edx, 1
  0082f	2b c2		 sub	 eax, edx
  00831	3b c8		 cmp	 ecx, eax
  00833	76 07		 jbe	 SHORT $LN224@LoadData_V

; 4207 :             return _Max;

  00835	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  0083a	eb 08		 jmp	 SHORT $LN222@LoadData_V
$LN224@LoadData_V:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0083c	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  0083f	3b f0		 cmp	 esi, eax
  00841	0f 42 f0	 cmovb	 esi, eax
$LN222@LoadData_V:

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00844	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00847	50		 push	 eax
  00848	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0084d	57		 push	 edi
  0084e	ff b5 4c fe ff
	ff		 push	 DWORD PTR __Result$2$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00854	89 85 54 fe ff
	ff		 mov	 DWORD PTR __New_ptr$6[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0085a	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0085b	89 7d e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0085e	89 75 ec	 mov	 DWORD PTR _strTextureFileName$19[ebp+20], esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00861	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00866	8b b5 54 fe ff
	ff		 mov	 esi, DWORD PTR __New_ptr$6[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0086c	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0086f	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR __Old_capacity$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00875	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  00879	83 f8 10	 cmp	 eax, 16			; 00000010H
  0087c	72 0f		 jb	 SHORT $LN217@LoadData_V

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  0087e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0087f	50		 push	 eax
  00880	ff 75 d8	 push	 DWORD PTR _strTextureFileName$19[ebp]
  00883	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00888	89 75 d8	 mov	 DWORD PTR _strTextureFileName$19[ebp], esi

; 4236 :         } else {

  0088b	eb 10		 jmp	 SHORT $LN411@LoadData_V
$LN217@LoadData_V:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0088d	8d 85 54 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$6[ebp]
  00893	50		 push	 eax
  00894	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
  00897	50		 push	 eax
  00898	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN411@LoadData_V:

; 2145 :         if (_Large_string_engaged()) {

  0089d	83 c4 08	 add	 esp, 8
$LN218@LoadData_V:
  008a0	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  008a6	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  008aa	72 08		 jb	 SHORT $LN245@LoadData_V

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  008ac	8b 00		 mov	 eax, DWORD PTR [eax]
  008ae	89 85 5c fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
$LN245@LoadData_V:

; 2832 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  008b4	8b 8d 48 fe ff
	ff		 mov	 ecx, DWORD PTR tv2978[ebp]

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  008ba	8b 55 ec	 mov	 edx, DWORD PTR _strTextureFileName$19[ebp+20]
  008bd	8b c2		 mov	 eax, edx
  008bf	8b 7d e8	 mov	 edi, DWORD PTR _strTextureFileName$19[ebp+16]
  008c2	2b c7		 sub	 eax, edi
  008c4	89 95 54 fe ff
	ff		 mov	 DWORD PTR __Old_capacity$1$[ebp], edx

; 2832 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  008ca	8b 09		 mov	 ecx, DWORD PTR [ecx]
  008cc	89 8d 48 fe ff
	ff		 mov	 DWORD PTR __Count$1$[ebp], ecx

; 2860 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  008d2	3b c8		 cmp	 ecx, eax
  008d4	77 32		 ja	 SHORT $LN250@LoadData_V

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  008d6	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]

; 2136 :         if (_Large_string_engaged()) {

  008d9	83 fa 10	 cmp	 edx, 16			; 00000010H
  008dc	8d 75 d8	 lea	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  008df	89 45 e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], eax

; 2136 :         if (_Large_string_engaged()) {

  008e2	0f 43 75 d8	 cmovae	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  008e6	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]

; 2863 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  008ec	03 f7		 add	 esi, edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  008ee	51		 push	 ecx
  008ef	50		 push	 eax
  008f0	56		 push	 esi
  008f1	e8 00 00 00 00	 call	 _memmove

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  008f6	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR __Count$1$[ebp]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  008fc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  008ff	c6 04 06 00	 mov	 BYTE PTR [esi+eax], 0

; 2865 :             return *this;

  00903	e9 0a 01 00 00	 jmp	 $LN262@LoadData_V
$LN250@LoadData_V:

; 4248 :         const size_type _Old_size = _My_data._Mysize;

  00908	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0090d	2b c7		 sub	 eax, edi

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  0090f	3b c1		 cmp	 eax, ecx
  00911	0f 82 12 03 00
	00		 jb	 $LN386@LoadData_V

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  00917	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0091a	8b f0		 mov	 esi, eax

; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  0091c	89 85 4c fe ff
	ff		 mov	 DWORD PTR __New_size$1$[ebp], eax

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00922	83 ce 0f	 or	 esi, 15			; 0000000fH
  00925	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0092b	76 07		 jbe	 SHORT $LN267@LoadData_V

; 4203 :             return _Max;

  0092d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00932	eb 1e		 jmp	 SHORT $LN266@LoadData_V
$LN267@LoadData_V:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00934	8b ca		 mov	 ecx, edx
  00936	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0093b	d1 e9		 shr	 ecx, 1
  0093d	2b c1		 sub	 eax, ecx
  0093f	3b d0		 cmp	 edx, eax
  00941	76 07		 jbe	 SHORT $LN268@LoadData_V

; 4207 :             return _Max;

  00943	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00948	eb 08		 jmp	 SHORT $LN266@LoadData_V
$LN268@LoadData_V:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0094a	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0094d	3b f0		 cmp	 esi, eax
  0094f	0f 42 f0	 cmovb	 esi, eax
$LN266@LoadData_V:

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00952	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00955	50		 push	 eax
  00956	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4259 :         _My_data._Mysize      = _New_size;

  0095b	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR __New_size$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00961	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  00964	83 bd 54 fe ff
	ff 10		 cmp	 DWORD PTR __Old_capacity$1$[ebp], 16 ; 00000010H
  0096b	89 75 ec	 mov	 DWORD PTR _strTextureFileName$19[ebp+20], esi
  0096e	8b b5 48 fe ff
	ff		 mov	 esi, DWORD PTR __Count$1$[ebp]
  00974	89 4d e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], ecx
  00977	8d 0c 38	 lea	 ecx, DWORD PTR [eax+edi]
  0097a	89 8d 4c fe ff
	ff		 mov	 DWORD PTR tv2967[ebp], ecx
  00980	89 85 50 fe ff
	ff		 mov	 DWORD PTR __New_ptr$5[ebp], eax
  00986	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  00989	89 8d 40 fe ff
	ff		 mov	 DWORD PTR tv2918[ebp], ecx
  0098f	57		 push	 edi
  00990	72 46		 jb	 SHORT $LN261@LoadData_V

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00992	8b 75 d8	 mov	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00995	56		 push	 esi
  00996	50		 push	 eax
  00997	e8 00 00 00 00	 call	 _memcpy
  0099c	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR __Count$1$[ebp]
  009a2	50		 push	 eax
  009a3	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  009a9	50		 push	 eax
  009aa	ff b5 4c fe ff
	ff		 push	 DWORD PTR tv2967[ebp]
  009b0	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  009b5	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR tv2918[ebp]
  009bb	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  009bf	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR __Old_capacity$1$[ebp]
  009c5	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009c6	50		 push	 eax
  009c7	56		 push	 esi
  009c8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  009cd	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR __New_ptr$5[ebp]
  009d3	89 45 d8	 mov	 DWORD PTR _strTextureFileName$19[ebp], eax

; 4267 :         } else {

  009d6	eb 37		 jmp	 SHORT $LN412@LoadData_V
$LN261@LoadData_V:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  009d8	8d 4d d8	 lea	 ecx, DWORD PTR _strTextureFileName$19[ebp]
  009db	51		 push	 ecx
  009dc	50		 push	 eax
  009dd	e8 00 00 00 00	 call	 _memcpy
  009e2	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  009e8	56		 push	 esi
  009e9	50		 push	 eax
  009ea	ff b5 4c fe ff
	ff		 push	 DWORD PTR tv2967[ebp]
  009f0	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  009f5	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR tv2918[ebp]
  009fb	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  009ff	8d 85 50 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$5[ebp]
  00a05	50		 push	 eax
  00a06	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
  00a09	50		 push	 eax
  00a0a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN412@LoadData_V:

; 2144 :         const value_type* _Result = _Bx._Buf;

  00a0f	83 c4 20	 add	 esp, 32			; 00000020H
$LN262@LoadData_V:

; 2145 :         if (_Large_string_engaged()) {

  00a12	83 7d ec 10	 cmp	 DWORD PTR _strTextureFileName$19[ebp+20], 16 ; 00000010H
  00a16	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 219  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00a1f	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strTextureFileName$19[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 219  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a23	50		 push	 eax
  00a24	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a29	8b bd 3c fe ff
	ff		 mov	 edi, DWORD PTR _pMeshData$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 219  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a2f	8b c8		 mov	 ecx, eax
  00a31	89 8d 54 fe ff
	ff		 mov	 DWORD PTR _pImage$8[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a37	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  00a3d	3b 87 b4 00 00
	00		 cmp	 eax, DWORD PTR [edi+180]
  00a43	74 0b		 je	 SHORT $LN301@LoadData_V

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00a45	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00a47	83 87 b0 00 00
	00 04		 add	 DWORD PTR [edi+176], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00a4e	eb 13		 jmp	 SHORT $LN413@LoadData_V
$LN301@LoadData_V:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00a50	8d 8d 54 fe ff
	ff		 lea	 ecx, DWORD PTR _pImage$8[ebp]
  00a56	51		 push	 ecx
  00a57	50		 push	 eax
  00a58	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00a5e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
$LN413@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 209  : 				for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  00a63	8b b5 44 fe ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN11@LoadData_V:
  00a69	46		 inc	 esi
  00a6a	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00a70	89 b5 44 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  00a76	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00a7b	3b f0		 cmp	 esi, eax
  00a7d	0f 82 1d fd ff
	ff		 jb	 $LL13@LoadData_V
$LN12@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a83	8b 45 ec	 mov	 eax, DWORD PTR _strTextureFileName$19[ebp+20]
  00a86	83 f8 10	 cmp	 eax, 16			; 00000010H
  00a89	72 0d		 jb	 SHORT $LN309@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a8b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a8c	50		 push	 eax
  00a8d	ff 75 d8	 push	 DWORD PTR _strTextureFileName$19[ebp]
  00a90	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00a95	83 c4 08	 add	 esp, 8
$LN309@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a98	8b 45 d4	 mov	 eax, DWORD PTR _strPathName$18[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00a9b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00aa2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00aa9	c6 45 d8 00	 mov	 BYTE PTR _strTextureFileName$19[ebp], 0

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00aad	83 f8 10	 cmp	 eax, 16			; 00000010H
  00ab0	72 0d		 jb	 SHORT $LN319@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ab2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ab3	50		 push	 eax
  00ab4	ff 75 c0	 push	 DWORD PTR _strPathName$18[ebp]
  00ab7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00abc	83 c4 08	 add	 esp, 8
$LN319@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 223  : 			}

  00abf	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00ac5	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00acc	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ad3	c6 45 c0 00	 mov	 BYTE PTR _strPathName$18[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 223  : 			}

  00ad7	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN16@LoadData_V:

; 224  : 		}

  00adc	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  00ae2	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00ae7	eb 3c		 jmp	 SHORT $LN336@LoadData_V
$LN14@LoadData_V:

; 227  : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(pMeshData->szDiffuseMapFileName);

  00ae9	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR _pMeshData$1$[ebp]
  00aef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00af5	83 c0 20	 add	 eax, 32			; 00000020H
  00af8	50		 push	 eax
  00af9	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00afe	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00b00	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 227  : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(pMeshData->szDiffuseMapFileName);

  00b03	89 8d 54 fe ff
	ff		 mov	 DWORD PTR _pImage$7[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00b09	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00b0c	74 08		 je	 SHORT $LN337@LoadData_V

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00b0e	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00b10	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00b14	eb 0f		 jmp	 SHORT $LN336@LoadData_V
$LN337@LoadData_V:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00b16	8d 8d 54 fe ff
	ff		 lea	 ecx, DWORD PTR _pImage$7[ebp]
  00b1c	51		 push	 ecx
  00b1d	50		 push	 eax
  00b1e	8b cf		 mov	 ecx, edi
  00b20	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
$LN336@LoadData_V:

; 1504 :         return _My_data._Myfirst[_Pos];

  00b25	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 234  : 		m_pEffectMeshDataVector[n] = pMeshData;

  00b2b	8b b5 f4 fd ff
	ff		 mov	 esi, DWORD PTR _n$1$[ebp]
  00b31	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR _pMeshData$1$[ebp]
  00b37	0f bf ce	 movsx	 ecx, si
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00b3a	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 235  : 	}

  00b3c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00b40	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00b43	8b 45 bc	 mov	 eax, DWORD PTR _strExtension$17[ebp+20]
  00b46	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b49	72 0d		 jb	 SHORT $LN347@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b4b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b4c	50		 push	 eax
  00b4d	ff 75 a8	 push	 DWORD PTR _strExtension$17[ebp]
  00b50	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b55	83 c4 08	 add	 esp, 8
$LN347@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 116  : 	for (short n = 0; n < m_iGeomCount; ++n)

  00b58	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00b5e	46		 inc	 esi
  00b5f	0f bf c6	 movsx	 eax, si
  00b62	89 b5 f4 fd ff
	ff		 mov	 DWORD PTR _n$1$[ebp], esi
  00b68	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  00b6b	7d 0b		 jge	 SHORT $LN399@LoadData_V
  00b6d	8b b5 58 fe ff
	ff		 mov	 esi, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  00b73	e9 98 f5 ff ff	 jmp	 $LL4@LoadData_V
$LN399@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b78	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$[ebp]
  00b7e	85 c0		 test	 eax, eax
  00b80	74 15		 je	 SHORT $LN356@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00b82	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR _iTextureIndexVector$2$[ebp]
  00b88	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b8a	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00b8d	51		 push	 ecx
  00b8e	50		 push	 eax
  00b8f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b94	83 c4 08	 add	 esp, 8
$LN356@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b97	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00b9d	85 c0		 test	 eax, eax
  00b9f	74 15		 je	 SHORT $LN363@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00ba1	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _v3TextureVertexVector$2$[ebp]
  00ba7	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ba9	83 e1 f8	 and	 ecx, -8			; fffffff8H
  00bac	51		 push	 ecx
  00bad	50		 push	 eax
  00bae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bb3	83 c4 08	 add	 esp, 8
$LN363@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00bb6	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$[ebp]
  00bbc	85 c0		 test	 eax, eax
  00bbe	74 15		 je	 SHORT $LN370@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00bc0	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR _iIndexVector$2$[ebp]
  00bc6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bc8	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00bcb	51		 push	 ecx
  00bcc	50		 push	 eax
  00bcd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bd2	83 c4 08	 add	 esp, 8
$LN370@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00bd5	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00bdb	85 c9		 test	 ecx, ecx
  00bdd	74 28		 je	 SHORT $LN377@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00bdf	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR _v3VertexVector$2$[ebp]
  00be5	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00bea	2b d1		 sub	 edx, ecx
  00bec	f7 ea		 imul	 edx
  00bee	d1 fa		 sar	 edx, 1
  00bf0	8b c2		 mov	 eax, edx
  00bf2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00bf5	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bf7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00bfa	c1 e0 02	 shl	 eax, 2
  00bfd	50		 push	 eax
  00bfe	51		 push	 ecx
  00bff	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00c04	83 c4 08	 add	 esp, 8
$LN377@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 237  : 	return TRUE;

  00c07	b8 01 00 00 00	 mov	 eax, 1

; 238  : }

  00c0c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c0f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c16	59		 pop	 ecx
  00c17	5f		 pop	 edi
  00c18	5e		 pop	 esi
  00c19	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c1c	33 cd		 xor	 ecx, ebp
  00c1e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c23	8b e5		 mov	 esp, ebp
  00c25	5d		 pop	 ebp
  00c26	c2 08 00	 ret	 8
$LN386@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4250 :             _Xlen_string(); // result too long

  00c29	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN408@LoadData_V:
  00c2e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$0:
  00000	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::~vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$1:
  0000b	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _iIndexVector$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$2:
  00016	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _v3TextureVertexVector$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::~vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$3:
  00021	8d 8d 2c fe ff
	ff		 lea	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$4:
  0002c	8d 4d a8	 lea	 ecx, DWORD PTR _strExtension$17[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$5:
  00034	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$6:
  0003f	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$7:
  0004a	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _stTokenVector$2[ebp]
  00050	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$8:
  00055	8d 4d c0	 lea	 ecx, DWORD PTR _strPathName$18[ebp]
  00058	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z$9:
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR _strTextureFileName$19[ebp]
  00060	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	cc		 int	 3
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
__ehhandler$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z:
  0006a	90		 npad	 1
  0006b	90		 npad	 1
  0006c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00070	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00073	8b 8a d0 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-560]
  00079	33 c8		 xor	 ecx, eax
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00083	33 c8		 xor	 ecx, eax
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z
  0008f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z ENDP		; CEffectMesh::__LoadData_Ver002
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z
_TEXT	SEGMENT
_stTokenVector$2 = -572					; size = 12
_textFileLoader$3 = -560				; size = 16
__My_data$1$ = -544					; size = 4
_pMotionData$4 = -540					; size = 4
_n$1$ = -536						; size = 4
_j$1$ = -532						; size = 4
_dwIndexCount$1$ = -528					; size = 4
_dwVertexCount$1$ = -524				; size = 4
_iIndexVector$ = -520					; size = 12
_v3VertexVector$2$ = -508				; size = 4
_iIndexVector$2$ = -504					; size = 4
_v3TextureVertexVector$2$ = -500			; size = 4
_iTextureIndexVector$2$ = -496				; size = 4
_v3VertexVector$ = -492					; size = 12
_v3TextureVertexVector$ = -480				; size = 12
_iTextureIndexVector$ = -468				; size = 12
_this$GSCopy$1$ = -456					; size = 4
_pMeshData$1$ = -452					; size = 4
_c_pbBuf$GSCopy$4$ = -448				; size = 4
tv3021 = -444						; size = 4
tv3001 = -444						; size = 4
__New_ptr$5 = -444					; size = 4
tv2999 = -440						; size = 4
_i$1$ = -440						; size = 4
__My_data$1$ = -436					; size = 4
__Old_capacity$1$ = -432				; size = 4
_i$1$ = -432						; size = 4
__New_ptr$6 = -432					; size = 4
__Old_size$1$ = -428					; size = 4
__Old_capacity$1$ = -428				; size = 4
tv3000 = -428						; size = 4
tv2961 = -428						; size = 4
__New_size$1$ = -424					; size = 4
__Result$2$ = -424					; size = 4
tv3010 = -424						; size = 4
_dwTextureVertexCount$1$ = -424				; size = 4
_pImage$7 = -424					; size = 4
_pImage$8 = -424					; size = 4
__Result$1$ = -420					; size = 4
tv2863 = -420						; size = 4
$T9 = -413						; size = 1
$T10 = -413						; size = 1
$T11 = -413						; size = 1
$T12 = -413						; size = 1
$T13 = -413						; size = 1
$T14 = -413						; size = 1
$T15 = -413						; size = 1
_File$16 = -412						; size = 324
_strExtension$17 = -88					; size = 24
_strPathName$18 = -64					; size = 24
_strTextureFileName$19 = -40				; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iSize$ = 8						; size = 4
_c_pbBuf$ = 12						; size = 4
?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z PROC		; CEffectMesh::__LoadData_Ver001, COMDAT
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 30 02 00
	00		 sub	 esp, 560		; 00000230H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 b5 38 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00035	8b 55 0c	 mov	 edx, DWORD PTR _c_pbBuf$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00038	33 c0		 xor	 eax, eax
  0003a	c7 85 14 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _v3VertexVector$[ebp], 0
  00044	c7 85 18 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _v3VertexVector$[ebp+4], 0
  0004e	89 85 04 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$2$[ebp], eax
  00054	89 85 1c fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 242  : 	std::vector<D3DXVECTOR3> v3VertexVector;

  0005a	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0005d	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp], eax
  00063	89 85 fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], eax
  00069	89 85 08 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$2$[ebp], eax
  0006f	89 85 00 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+8], eax
  00075	89 85 20 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp], eax
  0007b	89 85 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], eax
  00081	89 85 0c fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$2$[ebp], eax
  00087	89 85 28 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+8], eax
  0008d	89 85 2c fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp], eax
  00093	89 85 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], eax
  00099	89 85 10 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$2$[ebp], eax
  0009f	89 85 34 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 247  : 	m_iGeomCount = *(int *)c_pbBuf;

  000a5	8b 02		 mov	 eax, DWORD PTR [edx]

; 248  : 	c_pbBuf += 4;
; 249  : 	m_iFrameCount = *(int *)c_pbBuf;
; 250  : 	c_pbBuf += 4;
; 251  : 
; 252  : 	m_pEffectMeshDataVector.clear();

  000a7	8d 7e 34	 lea	 edi, DWORD PTR [esi+52]
  000aa	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  000ad	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b0	83 c2 08	 add	 edx, 8
  000b3	89 46 30	 mov	 DWORD PTR [esi+48], eax
  000b6	89 95 40 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], edx
  000bc	8b 17		 mov	 edx, DWORD PTR [edi]
  000be	89 57 04	 mov	 DWORD PTR [edi+4], edx

; 253  : 	m_pEffectMeshDataVector.resize(m_iGeomCount);

  000c1	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  000c4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c8	89 bd e0 fd ff
	ff		 mov	 DWORD PTR __My_data$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  000ce	85 c9		 test	 ecx, ecx
  000d0	74 2b		 je	 SHORT $LN57@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000d2	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000d5	2b c2		 sub	 eax, edx
  000d7	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  000da	3b c8		 cmp	 ecx, eax
  000dc	76 11		 jbe	 SHORT $LN58@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  000de	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  000e4	50		 push	 eax
  000e5	51		 push	 ecx
  000e6	8b cf		 mov	 ecx, edi
  000e8	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  000ed	eb 0e		 jmp	 SHORT $LN57@LoadData_V
$LN58@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000ef	57		 push	 edi
  000f0	51		 push	 ecx
  000f1	52		 push	 edx
  000f2	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@YAPAPAUSEffectMeshData@CEffectMesh@@PAPAU12@IAAV?$allocator@PAUSEffectMeshData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectMeshData *> >
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000fa	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN57@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 255  : 	for (short n = 0; n < m_iGeomCount; ++n)

  000fd	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00101	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _n$1$[ebp], 0
  0010b	0f 8e e0 0a 00
	00		 jle	 $LN377@LoadData_V
$LL4@LoadData_V:

; 256  : 	{
; 257  : 		SEffectMeshData * pMeshData = SEffectMeshData::New();

  00111	e8 00 00 00 00	 call	 ?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ ; CEffectMesh::SEffectMeshData::New

; 258  : 
; 259  : 		memcpy(pMeshData->szObjectName, c_pbBuf, 32);

  00116	8b 95 40 fe ff
	ff		 mov	 edx, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]

; 260  : 		c_pbBuf += 32;
; 261  : 		memcpy(pMeshData->szDiffuseMapFileName, c_pbBuf, 128);

  0011c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00121	89 85 3c fe ff
	ff		 mov	 DWORD PTR _pMeshData$1$[ebp], eax
  00127	8d 78 20	 lea	 edi, DWORD PTR [eax+32]
  0012a	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  0012d	8d 72 20	 lea	 esi, DWORD PTR [edx+32]
  00130	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00133	0f 10 42 10	 movups	 xmm0, XMMWORD PTR [edx+16]
  00137	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
  0013b	f3 a5		 rep movsd

; 278  : 
; 279  : 		pMeshData->EffectFrameDataVector.clear();

  0013d	8b bd 3c fe ff
	ff		 mov	 edi, DWORD PTR _pMeshData$1$[ebp]
  00143	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00149	81 c7 a0 00 00
	00		 add	 edi, 160		; 000000a0H
  0014f	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00155	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 270  : 		memcpy(&dwVertexCount, c_pbBuf, sizeof(DWORD));

  00156	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _dwVertexCount$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0015c	ff 77 04	 push	 DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 276  : 		memcpy(&dwTextureVertexCount, c_pbBuf, sizeof(DWORD));

  0015f	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]

; 277  : 		c_pbBuf += sizeof(DWORD);

  00165	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0016b	ff 37		 push	 DWORD PTR [edi]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 273  : 		memcpy(&dwIndexCount, c_pbBuf, sizeof(DWORD));

  0016d	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _dwIndexCount$1$[ebp], ecx

; 276  : 		memcpy(&dwTextureVertexCount, c_pbBuf, sizeof(DWORD));

  00173	89 85 58 fe ff
	ff		 mov	 DWORD PTR _dwTextureVertexCount$1$[ebp], eax

; 277  : 		c_pbBuf += sizeof(DWORD);

  00179	89 95 40 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], edx

; 278  : 
; 279  : 		pMeshData->EffectFrameDataVector.clear();

  0017f	89 bd 4c fe ff
	ff		 mov	 DWORD PTR __My_data$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00185	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 280  : 		pMeshData->EffectFrameDataVector.resize(m_iFrameCount);

  0018a	8b b5 38 fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1390 :         _Mylast = _Myfirst;

  00190	8b c7		 mov	 eax, edi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00192	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00195	8b 10		 mov	 edx, DWORD PTR [eax]

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00197	8b ca		 mov	 ecx, edx

; 1390 :         _Mylast = _Myfirst;

  00199	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0019c	8b 38		 mov	 edi, DWORD PTR [eax]
  0019e	2b cf		 sub	 ecx, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 280  : 		pMeshData->EffectFrameDataVector.resize(m_iFrameCount);

  001a0	8b 76 30	 mov	 esi, DWORD PTR [esi+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  001a3	c1 f9 05	 sar	 ecx, 5

; 1216 :         if (_Newsize < _Oldsize) { // trim

  001a6	3b f1		 cmp	 esi, ecx
  001a8	73 18		 jae	 SHORT $LN69@LoadData_V

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  001aa	50		 push	 eax

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  001ab	c1 e6 05	 shl	 esi, 5
  001ae	03 f7		 add	 esi, edi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  001b0	52		 push	 edx
  001b1	56		 push	 esi
  001b2	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1220 :             _Mylast = _Newlast;

  001b7	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  001bd	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1221 :             return;

  001c0	eb 3e		 jmp	 SHORT $LN409@LoadData_V
$LN69@LoadData_V:

; 1224 :         if (_Newsize > _Oldsize) { // append

  001c2	76 3f		 jbe	 SHORT $LN70@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  001c4	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001c7	2b c7		 sub	 eax, edi
  001c9	c1 f8 05	 sar	 eax, 5

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  001cc	3b f0		 cmp	 esi, eax
  001ce	76 1b		 jbe	 SHORT $LN71@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  001d0	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR __My_data$1$[ebp]
  001d6	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T14[ebp]
  001dc	50		 push	 eax
  001dd	56		 push	 esi
  001de	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  001e3	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  001e9	eb 18		 jmp	 SHORT $LN70@LoadData_V
$LN71@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001eb	8b bd 4c fe ff
	ff		 mov	 edi, DWORD PTR __My_data$1$[ebp]

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001f1	2b f1		 sub	 esi, ecx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  001f3	57		 push	 edi
  001f4	56		 push	 esi
  001f5	52		 push	 edx
  001f6	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAPAUSEffectFrameData@CEffectMesh@@PAU12@IAAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<CEffectMesh::SEffectFrameData> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  001fb	89 47 04	 mov	 DWORD PTR [edi+4], eax
  001fe	8b c7		 mov	 eax, edi
$LN409@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 282  : 		for(int i = 0; i < m_iFrameCount; ++i)

  00200	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN70@LoadData_V:
  00203	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00209	c7 85 50 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00213	83 79 30 00	 cmp	 DWORD PTR [ecx+48], 0
  00217	0f 8e be 03 00
	00		 jle	 $LN6@LoadData_V
  0021d	33 ff		 xor	 edi, edi
  0021f	90		 npad	 1
$LL7@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00220	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 288  : 			rFrameData.dwTextureVertexCount = dwTextureVertexCount;

  00222	8b 95 58 fe ff
	ff		 mov	 edx, DWORD PTR _dwTextureVertexCount$1$[ebp]
  00228	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _dwVertexCount$1$[ebp]
  0022e	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _dwIndexCount$1$[ebp]
  00234	89 54 3e 0c	 mov	 DWORD PTR [esi+edi+12], edx

; 289  : 
; 290  : 			v3VertexVector.clear();

  00238	8b 95 14 fe ff
	ff		 mov	 edx, DWORD PTR _v3VertexVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0023e	89 b5 5c fe ff
	ff		 mov	 DWORD PTR tv2863[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 286  : 			rFrameData.dwVertexCount = dwVertexCount;

  00244	89 44 3e 08	 mov	 DWORD PTR [esi+edi+8], eax

; 287  : 			rFrameData.dwIndexCount = dwIndexCount;

  00248	89 4c 3e 10	 mov	 DWORD PTR [esi+edi+16], ecx

; 289  : 
; 290  : 			v3VertexVector.clear();

  0024c	89 95 18 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00252	85 c0		 test	 eax, eax
  00254	74 69		 je	 SHORT $LN83@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00256	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR _v3VertexVector$2$[ebp]
  0025c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00261	2b ca		 sub	 ecx, edx
  00263	f7 e9		 imul	 ecx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00265	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR _dwVertexCount$1$[ebp]
  0026b	d1 fa		 sar	 edx, 1
  0026d	8b c2		 mov	 eax, edx
  0026f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00272	03 c2		 add	 eax, edx
  00274	3b c8		 cmp	 ecx, eax
  00276	76 25		 jbe	 SHORT $LN84@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00278	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  0027e	50		 push	 eax
  0027f	51		 push	 ecx
  00280	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00286	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  0028b	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR _v3VertexVector$[ebp+8]
  00291	8b 4c 3e 10	 mov	 ecx, DWORD PTR [esi+edi+16]
  00295	89 85 04 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$2$[ebp], eax
  0029b	eb 22		 jmp	 SHORT $LN83@LoadData_V
$LN84@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0029d	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _v3VertexVector$[ebp]
  002a3	50		 push	 eax
  002a4	51		 push	 ecx
  002a5	ff b5 14 fe ff
	ff		 push	 DWORD PTR _v3VertexVector$[ebp]
  002ab	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR3@@@std@@@std@@YAPAUD3DXVECTOR3@@PAU1@IAAV?$allocator@UD3DXVECTOR3@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR3> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  002b0	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _dwIndexCount$1$[ebp]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  002b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  002b9	89 85 18 fe ff
	ff		 mov	 DWORD PTR _v3VertexVector$[ebp+4], eax
$LN83@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 292  : 			iIndexVector.clear();

  002bf	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR _iIndexVector$[ebp]
  002c5	89 95 fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  002cb	85 c9		 test	 ecx, ecx
  002cd	74 47		 je	 SHORT $LN92@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  002cf	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$2$[ebp]
  002d5	2b c2		 sub	 eax, edx
  002d7	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  002da	3b c8		 cmp	 ecx, eax
  002dc	76 21		 jbe	 SHORT $LN93@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  002de	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  002e4	50		 push	 eax
  002e5	51		 push	 ecx
  002e6	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _iIndexVector$[ebp]
  002ec	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  002f1	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$[ebp+8]
  002f7	89 85 08 fe ff
	ff		 mov	 DWORD PTR _iIndexVector$2$[ebp], eax
  002fd	eb 17		 jmp	 SHORT $LN92@LoadData_V
$LN93@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  002ff	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _iIndexVector$[ebp]
  00305	50		 push	 eax
  00306	51		 push	 ecx
  00307	52		 push	 edx
  00308	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
  0030d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00310	89 85 fc fd ff
	ff		 mov	 DWORD PTR _iIndexVector$[ebp+4], eax
$LN92@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 295  : 			v3TextureVertexVector.resize(rFrameData.dwTextureVertexCount);

  00316	8b 4c 3e 0c	 mov	 ecx, DWORD PTR [esi+edi+12]
  0031a	8b 95 20 fe ff
	ff		 mov	 edx, DWORD PTR _v3TextureVertexVector$[ebp]
  00320	89 95 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00326	85 c9		 test	 ecx, ecx
  00328	74 47		 je	 SHORT $LN101@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0032a	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$2$[ebp]
  00330	2b c2		 sub	 eax, edx
  00332	c1 f8 03	 sar	 eax, 3

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00335	3b c8		 cmp	 ecx, eax
  00337	76 21		 jbe	 SHORT $LN102@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00339	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  0033f	50		 push	 eax
  00340	51		 push	 ecx
  00341	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _v3TextureVertexVector$[ebp]
  00347	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  0034c	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp+8]
  00352	89 85 0c fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$2$[ebp], eax
  00358	eb 17		 jmp	 SHORT $LN101@LoadData_V
$LN102@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0035a	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00360	50		 push	 eax
  00361	51		 push	 ecx
  00362	52		 push	 edx
  00363	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3DXVECTOR2@@@std@@@std@@YAPAUD3DXVECTOR2@@PAU1@IAAV?$allocator@UD3DXVECTOR2@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3DXVECTOR2> >
  00368	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0036b	89 85 24 fe ff
	ff		 mov	 DWORD PTR _v3TextureVertexVector$[ebp+4], eax
$LN101@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 297  : 			iTextureIndexVector.resize(rFrameData.dwIndexCount);

  00371	8b 4c 3e 10	 mov	 ecx, DWORD PTR [esi+edi+16]
  00375	8b 95 2c fe ff
	ff		 mov	 edx, DWORD PTR _iTextureIndexVector$[ebp]
  0037b	89 95 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  00381	85 c9		 test	 ecx, ecx
  00383	74 47		 je	 SHORT $LN110@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00385	8b 85 10 fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$2$[ebp]
  0038b	2b c2		 sub	 eax, edx
  0038d	c1 f8 02	 sar	 eax, 2

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00390	3b c8		 cmp	 ecx, eax
  00392	76 21		 jbe	 SHORT $LN111@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00394	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  0039a	50		 push	 eax
  0039b	51		 push	 ecx
  0039c	8d 8d 2c fe ff
	ff		 lea	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  003a2	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  003a7	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$[ebp+8]
  003ad	89 85 10 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$2$[ebp], eax
  003b3	eb 17		 jmp	 SHORT $LN110@LoadData_V
$LN111@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  003b5	8d 85 2c fe ff
	ff		 lea	 eax, DWORD PTR _iTextureIndexVector$[ebp]
  003bb	50		 push	 eax
  003bc	51		 push	 ecx
  003bd	52		 push	 edx
  003be	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPAHPAHIAAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
  003c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  003c6	89 85 30 fe ff
	ff		 mov	 DWORD PTR _iTextureIndexVector$[ebp+4], eax
$LN110@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 299  : 			memcpy(&rFrameData.fVisibility, c_pbBuf, sizeof(float));

  003cc	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  003d2	8b 01		 mov	 eax, DWORD PTR [ecx]

; 300  : 			c_pbBuf += sizeof(float);

  003d4	83 c1 04	 add	 ecx, 4
  003d7	89 44 3e 04	 mov	 DWORD PTR [esi+edi+4], eax

; 301  : 			memcpy(&v3VertexVector[0], c_pbBuf, rFrameData.dwVertexCount*sizeof(D3DXVECTOR3));

  003db	8b 44 3e 08	 mov	 eax, DWORD PTR [esi+edi+8]
  003df	89 8d 40 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], ecx
  003e5	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  003e8	c1 e0 02	 shl	 eax, 2
  003eb	50		 push	 eax
  003ec	51		 push	 ecx
  003ed	ff b5 14 fe ff
	ff		 push	 DWORD PTR _v3VertexVector$[ebp]
  003f3	e8 00 00 00 00	 call	 _memcpy

; 302  : 			c_pbBuf += rFrameData.dwVertexCount*sizeof(D3DXVECTOR3);

  003f8	8b 44 3e 08	 mov	 eax, DWORD PTR [esi+edi+8]
  003fc	8b 95 40 fe ff
	ff		 mov	 edx, DWORD PTR _c_pbBuf$GSCopy$4$[ebp]
  00402	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00405	8d 34 82	 lea	 esi, DWORD PTR [edx+eax*4]

; 303  : 			memcpy(&iIndexVector[0], c_pbBuf, rFrameData.dwIndexCount*sizeof(int));

  00408	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR tv2863[ebp]
  0040e	8b 44 38 10	 mov	 eax, DWORD PTR [eax+edi+16]
  00412	c1 e0 02	 shl	 eax, 2
  00415	50		 push	 eax
  00416	56		 push	 esi
  00417	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _iIndexVector$[ebp]
  0041d	e8 00 00 00 00	 call	 _memcpy

; 304  : 			c_pbBuf += rFrameData.dwIndexCount*sizeof(int);

  00422	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR tv2863[ebp]
  00428	8b 44 39 10	 mov	 eax, DWORD PTR [ecx+edi+16]
  0042c	8d 34 86	 lea	 esi, DWORD PTR [esi+eax*4]

; 305  : 			memcpy(&v3TextureVertexVector[0], c_pbBuf, rFrameData.dwTextureVertexCount*sizeof(D3DXVECTOR2));

  0042f	8b 44 39 0c	 mov	 eax, DWORD PTR [ecx+edi+12]
  00433	c1 e0 03	 shl	 eax, 3
  00436	50		 push	 eax
  00437	56		 push	 esi
  00438	ff b5 20 fe ff
	ff		 push	 DWORD PTR _v3TextureVertexVector$[ebp]
  0043e	e8 00 00 00 00	 call	 _memcpy

; 306  : 			c_pbBuf += rFrameData.dwTextureVertexCount*sizeof(D3DXVECTOR2);

  00443	8b 8d 5c fe ff
	ff		 mov	 ecx, DWORD PTR tv2863[ebp]
  00449	8b 44 39 0c	 mov	 eax, DWORD PTR [ecx+edi+12]
  0044d	8d 34 c6	 lea	 esi, DWORD PTR [esi+eax*8]

; 307  : 			memcpy(&iTextureIndexVector[0], c_pbBuf, rFrameData.dwIndexCount*sizeof(int));

  00450	8b 44 39 10	 mov	 eax, DWORD PTR [ecx+edi+16]
  00454	c1 e0 02	 shl	 eax, 2
  00457	50		 push	 eax
  00458	56		 push	 esi
  00459	ff b5 2c fe ff
	ff		 push	 DWORD PTR _iTextureIndexVector$[ebp]
  0045f	e8 00 00 00 00	 call	 _memcpy

; 308  : 			c_pbBuf += rFrameData.dwIndexCount*sizeof(int);

  00464	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR tv2863[ebp]
  0046a	83 c4 30	 add	 esp, 48			; 00000030H
  0046d	8b 44 38 10	 mov	 eax, DWORD PTR [eax+edi+16]
  00471	8d 14 86	 lea	 edx, DWORD PTR [esi+eax*4]

; 309  : 
; 310  : 			///////////////////////////////
; 311  : 
; 312  : 			rFrameData.PDTVertexVector.clear();

  00474	8b b5 5c fe ff
	ff		 mov	 esi, DWORD PTR tv2863[ebp]
  0047a	89 95 40 fe ff
	ff		 mov	 DWORD PTR _c_pbBuf$GSCopy$4$[ebp], edx
  00480	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  00483	03 d7		 add	 edx, edi
  00485	8b 02		 mov	 eax, DWORD PTR [edx]
  00487	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1224 :         if (_Newsize > _Oldsize) { // append

  0048a	83 7c 3e 10 00	 cmp	 DWORD PTR [esi+edi+16], 0
  0048f	76 50		 jbe	 SHORT $LN127@LoadData_V

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00491	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00494	2b c8		 sub	 ecx, eax
  00496	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0049b	f7 e9		 imul	 ecx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  0049d	8b 4c 3e 10	 mov	 ecx, DWORD PTR [esi+edi+16]
  004a1	c1 fa 03	 sar	 edx, 3
  004a4	8b c2		 mov	 eax, edx
  004a6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  004a9	03 c2		 add	 eax, edx
  004ab	3b c8		 cmp	 ecx, eax
  004ad	76 19		 jbe	 SHORT $LN128@LoadData_V

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  004af	8d 85 63 fe ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  004b5	50		 push	 eax
  004b6	51		 push	 ecx
  004b7	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  004ba	03 cf		 add	 ecx, edi
  004bc	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  004c1	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  004c4	03 d7		 add	 edx, edi
  004c6	eb 19		 jmp	 SHORT $LN127@LoadData_V
$LN128@LoadData_V:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  004c8	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  004cb	03 c7		 add	 eax, edi
  004cd	50		 push	 eax
  004ce	51		 push	 ecx
  004cf	ff 30		 push	 DWORD PTR [eax]
  004d1	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@USPTVertex@@@std@@@std@@YAPAUSPTVertex@@PAU1@IAAV?$allocator@USPTVertex@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<SPTVertex> >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  004d6	8d 56 14	 lea	 edx, DWORD PTR [esi+20]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  004d9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  004dc	03 d7		 add	 edx, edi
  004de	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN127@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 314  : 			for (DWORD j = 0; j < rFrameData.dwIndexCount; ++j)

  004e1	83 7c 3e 10 00	 cmp	 DWORD PTR [esi+edi+16], 0
  004e6	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$1$[ebp], 0
  004f0	0f 86 c0 00 00
	00		 jbe	 $LN5@LoadData_V
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  004f6	8b b5 f8 fd ff
	ff		 mov	 esi, DWORD PTR _iIndexVector$[ebp]
  004fc	33 c0		 xor	 eax, eax
  004fe	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  00504	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@bf800000
  0050c	89 b5 48 fe ff
	ff		 mov	 DWORD PTR tv2999[ebp], esi
  00512	8b f1		 mov	 esi, ecx
  00514	29 b5 48 fe ff
	ff		 sub	 DWORD PTR tv2999[ebp], esi
  0051a	89 85 44 fe ff
	ff		 mov	 DWORD PTR tv3001[ebp], eax
  00520	89 8d 54 fe ff
	ff		 mov	 DWORD PTR tv3000[ebp], ecx
$LL10@LoadData_V:

; 1504 :         return _My_data._Myfirst[_Pos];

  00526	8b 12		 mov	 edx, DWORD PTR [edx]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 324  : 				rVertex.position = v3VertexVector[dwIndex];

  00528	8b b5 14 fe ff
	ff		 mov	 esi, DWORD PTR _v3VertexVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0052e	03 d0		 add	 edx, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 318  : 				DWORD dwIndex = iIndexVector[j];

  00530	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR tv2999[ebp]
  00536	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]

; 319  : 				DWORD dwTextureIndex = iTextureIndexVector[j];

  00539	8b 09		 mov	 ecx, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0053b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 324  : 				rVertex.position = v3VertexVector[dwIndex];

  0053e	f3 0f 7e 04 86	 movq	 xmm0, QWORD PTR [esi+eax*4]
  00543	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  00547	8b 44 86 08	 mov	 eax, DWORD PTR [esi+eax*4+8]
  0054b	8b b5 5c fe ff
	ff		 mov	 esi, DWORD PTR tv2863[ebp]
  00551	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 325  : 				rVertex.texCoord = v3TextureVertexVector[dwTextureIndex];

  00554	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  0055a	8b 04 c8	 mov	 eax, DWORD PTR [eax+ecx*8]
  0055d	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  00560	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00566	8b 44 c8 04	 mov	 eax, DWORD PTR [eax+ecx*8+4]
  0056a	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv3000[ebp]
  00570	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00573	83 c1 04	 add	 ecx, 4

; 326  : 				rVertex.texCoord.y *= -1;

  00576	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  0057b	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR tv3001[ebp]
  00581	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00585	83 c0 14	 add	 eax, 20			; 00000014H
  00588	89 85 44 fe ff
	ff		 mov	 DWORD PTR tv3001[ebp], eax
  0058e	89 8d 54 fe ff
	ff		 mov	 DWORD PTR tv3000[ebp], ecx
  00594	f3 0f 11 42 10	 movss	 DWORD PTR [edx+16], xmm0
  00599	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _j$1$[ebp]
  0059f	42		 inc	 edx
  005a0	3b 54 3e 10	 cmp	 edx, DWORD PTR [esi+edi+16]
  005a4	89 95 ec fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], edx
  005aa	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  005ad	8d 14 3a	 lea	 edx, DWORD PTR [edx+edi]
  005b0	0f 82 70 ff ff
	ff		 jb	 $LL10@LoadData_V
$LN5@LoadData_V:

; 282  : 		for(int i = 0; i < m_iFrameCount; ++i)

  005b6	8b 85 38 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  005bc	83 c7 20	 add	 edi, 32			; 00000020H
  005bf	8b 95 50 fe ff
	ff		 mov	 edx, DWORD PTR _i$1$[ebp]
  005c5	42		 inc	 edx
  005c6	89 95 50 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edx
  005cc	3b 50 30	 cmp	 edx, DWORD PTR [eax+48]
  005cf	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
  005d5	0f 8c 45 fc ff
	ff		 jl	 $LL7@LoadData_V
$LN6@LoadData_V:

; 327  : 			}
; 328  : 		}
; 329  : 
; 330  : 		////////////////////////////////////
; 331  : 
; 332  : 		pMeshData->pImageVector.clear();

  005db	8b 8d 3c fe ff
	ff		 mov	 ecx, DWORD PTR _pMeshData$1$[ebp]
  005e1	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  005e7	8d b9 ac 00 00
	00		 lea	 edi, DWORD PTR [ecx+172]
  005ed	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  005f0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strExtension$17[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  005f7	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strExtension$17[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  005fe	c6 45 a8 00	 mov	 BYTE PTR _strExtension$17[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 335  : 		GetFileExtension(pMeshData->szDiffuseMapFileName, strlen(pMeshData->szDiffuseMapFileName), &strExtension);

  00602	8d 71 20	 lea	 esi, DWORD PTR [ecx+32]
  00605	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00609	8b ce		 mov	 ecx, esi
  0060b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0060e	66 90		 npad	 2
$LL400@LoadData_V:
  00610	8a 01		 mov	 al, BYTE PTR [ecx]
  00612	41		 inc	 ecx
  00613	84 c0		 test	 al, al
  00615	75 f9		 jne	 SHORT $LL400@LoadData_V
  00617	8d 45 a8	 lea	 eax, DWORD PTR _strExtension$17[ebp]
  0061a	2b ca		 sub	 ecx, edx
  0061c	50		 push	 eax
  0061d	51		 push	 ecx
  0061e	56		 push	 esi
  0061f	e8 00 00 00 00	 call	 ?GetFileExtension@@YAXPBDHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetFileExtension

; 336  : 		stl_lowers(strExtension);

  00624	8d 45 a8	 lea	 eax, DWORD PTR _strExtension$17[ebp]
  00627	50		 push	 eax
  00628	e8 00 00 00 00	 call	 ?stl_lowers@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stl_lowers
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0062d	8b 75 b8	 mov	 esi, DWORD PTR _strExtension$17[ebp+16]

; 2144 :         const value_type* _Result = _Bx._Buf;

  00630	8d 4d a8	 lea	 ecx, DWORD PTR _strExtension$17[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 336  : 		stl_lowers(strExtension);

  00633	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00636	b8 03 00 00 00	 mov	 eax, 3

; 2145 :         if (_Large_string_engaged()) {

  0063b	83 7d bc 10	 cmp	 DWORD PTR _strExtension$17[ebp+20], 16 ; 00000010H

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0063f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_03BNIHALFD@ifl@

; 2145 :         if (_Large_string_engaged()) {

  00644	0f 43 4d a8	 cmovae	 ecx, DWORD PTR _strExtension$17[ebp]

; 511  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00648	83 fe 03	 cmp	 esi, 3
  0064b	0f 47 f0	 cmova	 esi, eax

; 301  :         return _CSTD memcmp(_First1, _First2, _Count);

  0064e	83 ee 04	 sub	 esi, 4
  00651	72 11		 jb	 SHORT $LN403@LoadData_V
$LL404@LoadData_V:
  00653	8b 01		 mov	 eax, DWORD PTR [ecx]
  00655	3b 02		 cmp	 eax, DWORD PTR [edx]
  00657	75 10		 jne	 SHORT $LN402@LoadData_V
  00659	83 c1 04	 add	 ecx, 4
  0065c	83 c2 04	 add	 edx, 4
  0065f	83 ee 04	 sub	 esi, 4
  00662	73 ef		 jae	 SHORT $LL404@LoadData_V
$LN403@LoadData_V:
  00664	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00667	74 34		 je	 SHORT $LN401@LoadData_V
$LN402@LoadData_V:
  00669	8a 01		 mov	 al, BYTE PTR [ecx]
  0066b	3a 02		 cmp	 al, BYTE PTR [edx]
  0066d	75 27		 jne	 SHORT $LN405@LoadData_V
  0066f	83 fe fd	 cmp	 esi, -3			; fffffffdH
  00672	74 29		 je	 SHORT $LN401@LoadData_V
  00674	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00677	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  0067a	75 1a		 jne	 SHORT $LN405@LoadData_V
  0067c	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0067f	74 1c		 je	 SHORT $LN401@LoadData_V
  00681	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00684	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00687	75 0d		 jne	 SHORT $LN405@LoadData_V
  00689	83 fe ff	 cmp	 esi, -1
  0068c	74 0f		 je	 SHORT $LN401@LoadData_V
  0068e	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  00691	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00694	74 07		 je	 SHORT $LN401@LoadData_V
$LN405@LoadData_V:
  00696	1b c0		 sbb	 eax, eax
  00698	83 c8 01	 or	 eax, 1
  0069b	eb 02		 jmp	 SHORT $LN406@LoadData_V
$LN401@LoadData_V:
  0069d	33 c0		 xor	 eax, eax
$LN406@LoadData_V:

; 513  :     if (_Ans != 0) {

  0069f	85 c0		 test	 eax, eax
  006a1	0f 85 33 04 00
	00		 jne	 $LN14@LoadData_V

; 514  :         return _Ans;
; 515  :     }
; 516  : 
; 517  :     if (_Left_size < _Right_size) {

  006a7	8b 45 b8	 mov	 eax, DWORD PTR _strExtension$17[ebp+16]
  006aa	83 f8 03	 cmp	 eax, 3
  006ad	73 05		 jae	 SHORT $LN162@LoadData_V

; 518  :         return -1;

  006af	83 c8 ff	 or	 eax, -1
  006b2	eb 0b		 jmp	 SHORT $LN163@LoadData_V
$LN162@LoadData_V:

; 519  :     }
; 520  : 
; 521  :     if (_Left_size > _Right_size) {

  006b4	b9 03 00 00 00	 mov	 ecx, 3
  006b9	3b c8		 cmp	 ecx, eax
  006bb	1b c0		 sbb	 eax, eax
  006bd	f7 d8		 neg	 eax
$LN163@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 338  : 		if (0 == strExtension.compare("ifl"))

  006bf	85 c0		 test	 eax, eax
  006c1	0f 85 13 04 00
	00		 jne	 $LN14@LoadData_V

; 339  : 		{
; 340  : 			LPCVOID pMotionData;
; 341  : 			CMappedFile File;

  006c7	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  006cd	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 342  : 
; 343  : 			if (CEterPackManager::Instance().Get(File, pMeshData->szDiffuseMapFileName, &pMotionData))

  006d2	8b b5 3c fe ff
	ff		 mov	 esi, DWORD PTR _pMeshData$1$[ebp]
  006d8	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _pMotionData$4[ebp]
  006de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  006e4	83 c6 20	 add	 esi, 32			; 00000020H
  006e7	50		 push	 eax
  006e8	56		 push	 esi
  006e9	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _File$16[ebp]
  006ef	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  006f3	50		 push	 eax
  006f4	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  006f9	84 c0		 test	 al, al
  006fb	0f 84 cc 03 00
	00		 je	 $LN16@LoadData_V

; 344  : 			{
; 345  : 				CMemoryTextFileLoader textFileLoader;

  00701	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00707	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0070c	c7 85 c4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp], 0
  00716	c7 85 c8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp+4], 0
  00720	c7 85 cc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _stTokenVector$2[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 348  : 				textFileLoader.Bind(File.Size(), pMotionData);

  0072a	ff b5 e4 fd ff
	ff		 push	 DWORD PTR _pMotionData$4[ebp]
  00730	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  00736	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0073a	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0073f	50		 push	 eax
  00740	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00746	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0074b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00752	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00759	c6 45 c0 00	 mov	 BYTE PTR _strPathName$18[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 351  : 				GetOnlyPathName(pMeshData->szDiffuseMapFileName, strPathName);

  0075d	8d 45 c0	 lea	 eax, DWORD PTR _strPathName$18[ebp]
  00760	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00764	50		 push	 eax
  00765	56		 push	 esi
  00766	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAXPBDAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GetOnlyPathName
  0076b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4293 :         _Mypair._Myval2._Mysize = 0;

  0076e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+16], 0

; 4294 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00775	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+20], 15 ; 0000000fH

; 4295 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4296 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0077c	c6 45 d8 00	 mov	 BYTE PTR _strTextureFileName$19[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 354  : 				for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  00780	33 f6		 xor	 esi, esi
  00782	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00786	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  0078c	89 b5 48 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  00792	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00797	85 c0		 test	 eax, eax
  00799	0f 84 d5 02 00
	00		 je	 $LN12@LoadData_V
  0079f	90		 npad	 1
$LL13@LoadData_V:

; 355  : 				{
; 356  : 					const std::string & c_rstrFileName = textFileLoader.GetLineString(i);

  007a0	56		 push	 esi
  007a1	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  007a7	e8 00 00 00 00	 call	 ?GetLineString@CMemoryTextFileLoader@@QAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CMemoryTextFileLoader::GetLineString
  007ac	89 85 5c fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 3764 :         return size() == 0;

  007b2	83 c0 10	 add	 eax, 16			; 00000010H
  007b5	89 85 44 fe ff
	ff		 mov	 DWORD PTR tv3021[ebp], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 358  : 					if (c_rstrFileName.empty())

  007bb	83 38 00	 cmp	 DWORD PTR [eax], 0
  007be	0f 84 96 02 00
	00		 je	 $LN11@LoadData_V
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  007c4	83 7d d4 10	 cmp	 DWORD PTR _strPathName$18[ebp+20], 16 ; 00000010H
  007c8	8d 45 c0	 lea	 eax, DWORD PTR _strPathName$18[ebp]

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007cb	8b 4d ec	 mov	 ecx, DWORD PTR _strTextureFileName$19[ebp+20]

; 2145 :         if (_Large_string_engaged()) {

  007ce	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strPathName$18[ebp]

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007d2	8b 7d d0	 mov	 edi, DWORD PTR _strPathName$18[ebp+16]

; 2145 :         if (_Large_string_engaged()) {

  007d5	89 85 58 fe ff
	ff		 mov	 DWORD PTR __Result$2$[ebp], eax

; 2750 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  007db	89 8d 54 fe ff
	ff		 mov	 DWORD PTR __Old_capacity$1$[ebp], ecx
  007e1	3b f9		 cmp	 edi, ecx

; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  007e3	77 21		 ja	 SHORT $LN206@LoadData_V

; 2136 :         if (_Large_string_engaged()) {

  007e5	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2968 :             _Mypair._Myval2._Mysize = _Count;

  007e8	89 7d e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], edi
  007eb	57		 push	 edi

; 2135 :         value_type* _Result = _Bx._Buf;

  007ec	8d 75 d8	 lea	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 2136 :         if (_Large_string_engaged()) {

  007ef	0f 43 75 d8	 cmovae	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  007f3	50		 push	 eax
  007f4	56		 push	 esi
  007f5	e8 00 00 00 00	 call	 _memmove
  007fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  007fd	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2971 :             return *this;

  00801	e9 9a 00 00 00	 jmp	 $LN218@LoadData_V
$LN206@LoadData_V:

; 4221 :         if (_New_size > max_size()) {

  00806	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  0080c	0f 87 01 04 00
	00		 ja	 $LN386@LoadData_V

; 4222 :             _Xlen_string(); // result too long
; 4223 :         }
; 4224 : 
; 4225 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00812	8b f7		 mov	 esi, edi
  00814	83 ce 0f	 or	 esi, 15			; 0000000fH

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00817	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0081d	76 07		 jbe	 SHORT $LN223@LoadData_V

; 4203 :             return _Max;

  0081f	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00824	eb 1e		 jmp	 SHORT $LN222@LoadData_V
$LN223@LoadData_V:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00826	8b d1		 mov	 edx, ecx
  00828	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0082d	d1 ea		 shr	 edx, 1
  0082f	2b c2		 sub	 eax, edx
  00831	3b c8		 cmp	 ecx, eax
  00833	76 07		 jbe	 SHORT $LN224@LoadData_V

; 4207 :             return _Max;

  00835	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  0083a	eb 08		 jmp	 SHORT $LN222@LoadData_V
$LN224@LoadData_V:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0083c	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  0083f	3b f0		 cmp	 esi, eax
  00841	0f 42 f0	 cmovb	 esi, eax
$LN222@LoadData_V:

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00844	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00847	50		 push	 eax
  00848	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0084d	57		 push	 edi
  0084e	ff b5 58 fe ff
	ff		 push	 DWORD PTR __Result$2$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00854	89 85 50 fe ff
	ff		 mov	 DWORD PTR __New_ptr$6[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0085a	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0085b	89 7d e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  0085e	89 75 ec	 mov	 DWORD PTR _strTextureFileName$19[ebp+20], esi

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00861	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00866	8b b5 50 fe ff
	ff		 mov	 esi, DWORD PTR __New_ptr$6[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0086c	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0086f	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR __Old_capacity$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00875	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  00879	83 f8 10	 cmp	 eax, 16			; 00000010H
  0087c	72 0f		 jb	 SHORT $LN217@LoadData_V

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  0087e	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0087f	50		 push	 eax
  00880	ff 75 d8	 push	 DWORD PTR _strTextureFileName$19[ebp]
  00883	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00888	89 75 d8	 mov	 DWORD PTR _strTextureFileName$19[ebp], esi

; 4236 :         } else {

  0088b	eb 10		 jmp	 SHORT $LN411@LoadData_V
$LN217@LoadData_V:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0088d	8d 85 50 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$6[ebp]
  00893	50		 push	 eax
  00894	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
  00897	50		 push	 eax
  00898	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN411@LoadData_V:

; 2145 :         if (_Large_string_engaged()) {

  0089d	83 c4 08	 add	 esp, 8
$LN218@LoadData_V:
  008a0	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  008a6	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  008aa	72 08		 jb	 SHORT $LN245@LoadData_V

; 2146 :             _Result = _Unfancy(_Bx._Ptr);

  008ac	8b 00		 mov	 eax, DWORD PTR [eax]
  008ae	89 85 5c fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
$LN245@LoadData_V:

; 2832 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  008b4	8b bd 44 fe ff
	ff		 mov	 edi, DWORD PTR tv3021[ebp]

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  008ba	8b 55 ec	 mov	 edx, DWORD PTR _strTextureFileName$19[ebp+20]
  008bd	8b c2		 mov	 eax, edx
  008bf	8b 4d e8	 mov	 ecx, DWORD PTR _strTextureFileName$19[ebp+16]
  008c2	2b c1		 sub	 eax, ecx
  008c4	89 8d 54 fe ff
	ff		 mov	 DWORD PTR __Old_size$1$[ebp], ecx

; 2832 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  008ca	8b 3f		 mov	 edi, DWORD PTR [edi]

; 2859 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  008cc	89 95 50 fe ff
	ff		 mov	 DWORD PTR __Old_capacity$1$[ebp], edx

; 2860 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  008d2	3b f8		 cmp	 edi, eax
  008d4	77 2c		 ja	 SHORT $LN250@LoadData_V

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  008d6	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]

; 2136 :         if (_Large_string_engaged()) {

  008d9	83 fa 10	 cmp	 edx, 16			; 00000010H
  008dc	8d 75 d8	 lea	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 2861 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  008df	89 45 e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], eax

; 2136 :         if (_Large_string_engaged()) {

  008e2	0f 43 75 d8	 cmovae	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  008e6	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]

; 2863 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  008ec	03 f1		 add	 esi, ecx

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  008ee	57		 push	 edi
  008ef	50		 push	 eax
  008f0	56		 push	 esi
  008f1	e8 00 00 00 00	 call	 _memmove
  008f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2864 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  008f9	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 2865 :             return *this;

  008fd	e9 01 01 00 00	 jmp	 $LN262@LoadData_V
$LN250@LoadData_V:

; 4248 :         const size_type _Old_size = _My_data._Mysize;

  00902	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00907	2b c1		 sub	 eax, ecx

; 4249 :         if (max_size() - _Old_size < _Size_increase) {

  00909	3b c7		 cmp	 eax, edi
  0090b	0f 82 02 03 00
	00		 jb	 $LN386@LoadData_V

; 4251 :         }
; 4252 : 
; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  00911	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00914	8b f0		 mov	 esi, eax

; 4253 :         const size_type _New_size     = _Old_size + _Size_increase;

  00916	89 85 58 fe ff
	ff		 mov	 DWORD PTR __New_size$1$[ebp], eax

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0091c	83 ce 0f	 or	 esi, 15			; 0000000fH
  0091f	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00925	76 07		 jbe	 SHORT $LN267@LoadData_V

; 4203 :             return _Max;

  00927	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  0092c	eb 1e		 jmp	 SHORT $LN266@LoadData_V
$LN267@LoadData_V:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0092e	8b ca		 mov	 ecx, edx
  00930	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00935	d1 e9		 shr	 ecx, 1
  00937	2b c1		 sub	 eax, ecx
  00939	3b d0		 cmp	 edx, eax
  0093b	76 07		 jbe	 SHORT $LN268@LoadData_V

; 4207 :             return _Max;

  0093d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  00942	eb 08		 jmp	 SHORT $LN266@LoadData_V
$LN268@LoadData_V:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00944	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00947	3b f0		 cmp	 esi, eax
  00949	0f 42 f0	 cmovb	 esi, eax
$LN266@LoadData_V:

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0094c	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0094f	50		 push	 eax
  00950	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4257 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00955	8b c8		 mov	 ecx, eax

; 4258 :         _My_data._Orphan_all();
; 4259 :         _My_data._Mysize      = _New_size;
; 4260 :         _My_data._Myres       = _New_capacity;

  00957	89 75 ec	 mov	 DWORD PTR _strTextureFileName$19[ebp+20], esi
  0095a	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR __New_size$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00960	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4262 :         if (_BUF_SIZE <= _Old_capacity) {

  00963	83 bd 50 fe ff
	ff 10		 cmp	 DWORD PTR __Old_capacity$1$[ebp], 16 ; 00000010H
  0096a	89 45 e8	 mov	 DWORD PTR _strTextureFileName$19[ebp+16], eax
  0096d	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR __Old_size$1$[ebp]
  00973	89 8d 44 fe ff
	ff		 mov	 DWORD PTR __New_ptr$5[ebp], ecx
  00979	50		 push	 eax
  0097a	8d 34 01	 lea	 esi, DWORD PTR [ecx+eax]
  0097d	8d 14 08	 lea	 edx, DWORD PTR [eax+ecx]
  00980	89 b5 58 fe ff
	ff		 mov	 DWORD PTR tv3010[ebp], esi
  00986	89 95 54 fe ff
	ff		 mov	 DWORD PTR tv2961[ebp], edx
  0098c	72 40		 jb	 SHORT $LN261@LoadData_V

; 4263 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0098e	8b 75 d8	 mov	 esi, DWORD PTR _strTextureFileName$19[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00991	56		 push	 esi
  00992	51		 push	 ecx
  00993	e8 00 00 00 00	 call	 _memcpy
  00998	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  0099e	57		 push	 edi
  0099f	50		 push	 eax
  009a0	ff b5 58 fe ff
	ff		 push	 DWORD PTR tv3010[ebp]
  009a6	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  009ab	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR tv2961[ebp]
  009b1	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4265 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  009b5	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR __Old_capacity$1$[ebp]
  009bb	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009bc	50		 push	 eax
  009bd	56		 push	 esi
  009be	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4266 :             _My_data._Bx._Ptr = _New_ptr;

  009c3	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR __New_ptr$5[ebp]
  009c9	89 45 d8	 mov	 DWORD PTR _strTextureFileName$19[ebp], eax

; 4267 :         } else {

  009cc	eb 32		 jmp	 SHORT $LN412@LoadData_V
$LN261@LoadData_V:

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  009ce	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
  009d1	50		 push	 eax
  009d2	51		 push	 ecx
  009d3	e8 00 00 00 00	 call	 _memcpy
  009d8	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR __Result$1$[ebp]
  009de	57		 push	 edi
  009df	50		 push	 eax
  009e0	56		 push	 esi
  009e1	e8 00 00 00 00	 call	 _memcpy

; 2874 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  009e6	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR tv2961[ebp]
  009ec	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4269 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  009f0	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$5[ebp]
  009f6	50		 push	 eax
  009f7	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
  009fa	50		 push	 eax
  009fb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN412@LoadData_V:

; 2144 :         const value_type* _Result = _Bx._Buf;

  00a00	83 c4 20	 add	 esp, 32			; 00000020H
$LN262@LoadData_V:

; 2145 :         if (_Large_string_engaged()) {

  00a03	83 7d ec 10	 cmp	 DWORD PTR _strTextureFileName$19[ebp+20], 16 ; 00000010H
  00a07	8d 45 d8	 lea	 eax, DWORD PTR _strTextureFileName$19[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 364  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a0a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2145 :         if (_Large_string_engaged()) {

  00a10	0f 43 45 d8	 cmovae	 eax, DWORD PTR _strTextureFileName$19[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 364  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a14	50		 push	 eax
  00a15	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a1a	8b bd 3c fe ff
	ff		 mov	 edi, DWORD PTR _pMeshData$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 364  : 					CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(strTextureFileName.c_str());

  00a20	8b c8		 mov	 ecx, eax
  00a22	89 8d 58 fe ff
	ff		 mov	 DWORD PTR _pImage$8[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a28	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  00a2e	3b 87 b4 00 00
	00		 cmp	 eax, DWORD PTR [edi+180]
  00a34	74 0b		 je	 SHORT $LN301@LoadData_V

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00a36	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00a38	83 87 b0 00 00
	00 04		 add	 DWORD PTR [edi+176], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00a3f	eb 13		 jmp	 SHORT $LN413@LoadData_V
$LN301@LoadData_V:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00a41	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _pImage$8[ebp]
  00a47	51		 push	 ecx
  00a48	50		 push	 eax
  00a49	8d 8f ac 00 00
	00		 lea	 ecx, DWORD PTR [edi+172]
  00a4f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
$LN413@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 354  : 				for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  00a54	8b b5 48 fe ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN11@LoadData_V:
  00a5a	46		 inc	 esi
  00a5b	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00a61	89 b5 48 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  00a67	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00a6c	3b f0		 cmp	 esi, eax
  00a6e	0f 82 2c fd ff
	ff		 jb	 $LL13@LoadData_V
$LN12@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a74	8b 45 ec	 mov	 eax, DWORD PTR _strTextureFileName$19[ebp+20]
  00a77	83 f8 10	 cmp	 eax, 16			; 00000010H
  00a7a	72 0d		 jb	 SHORT $LN309@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a7c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a7d	50		 push	 eax
  00a7e	ff 75 d8	 push	 DWORD PTR _strTextureFileName$19[ebp]
  00a81	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00a86	83 c4 08	 add	 esp, 8
$LN309@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a89	8b 45 d4	 mov	 eax, DWORD PTR _strPathName$18[ebp+20]

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00a8c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00a93	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _strTextureFileName$19[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00a9a	c6 45 d8 00	 mov	 BYTE PTR _strTextureFileName$19[ebp], 0

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a9e	83 f8 10	 cmp	 eax, 16			; 00000010H
  00aa1	72 0d		 jb	 SHORT $LN319@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00aa3	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00aa4	50		 push	 eax
  00aa5	ff 75 c0	 push	 DWORD PTR _strPathName$18[ebp]
  00aa8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00aad	83 c4 08	 add	 esp, 8
$LN319@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 368  : 			}

  00ab0	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00ab6	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00abd	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strPathName$18[ebp+20], 15 ; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00ac4	c6 45 c0 00	 mov	 BYTE PTR _strPathName$18[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 368  : 			}

  00ac8	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN16@LoadData_V:

; 369  : 		}

  00acd	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  00ad3	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00ad8	eb 3c		 jmp	 SHORT $LN336@LoadData_V
$LN14@LoadData_V:

; 372  : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(pMeshData->szDiffuseMapFileName);

  00ada	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR _pMeshData$1$[ebp]
  00ae0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00ae6	83 c0 20	 add	 eax, 32			; 00000020H
  00ae9	50		 push	 eax
  00aea	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00aef	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00af1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 372  : 			CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer(pMeshData->szDiffuseMapFileName);

  00af4	89 8d 58 fe ff
	ff		 mov	 DWORD PTR _pImage$7[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00afa	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00afd	74 08		 je	 SHORT $LN337@LoadData_V

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00aff	89 08		 mov	 DWORD PTR [eax], ecx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00b01	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00b05	eb 0f		 jmp	 SHORT $LN336@LoadData_V
$LN337@LoadData_V:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00b07	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _pImage$7[ebp]
  00b0d	51		 push	 ecx
  00b0e	50		 push	 eax
  00b0f	8b cf		 mov	 ecx, edi
  00b11	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImage@@@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@QAEPAPAVCGraphicImage@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Emplace_reallocate<CGraphicImage * const &>
$LN336@LoadData_V:

; 1504 :         return _My_data._Myfirst[_Pos];

  00b16	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR __My_data$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 379  : 		m_pEffectMeshDataVector[n] = pMeshData;

  00b1c	8b b5 e8 fd ff
	ff		 mov	 esi, DWORD PTR _n$1$[ebp]
  00b22	8b 95 3c fe ff
	ff		 mov	 edx, DWORD PTR _pMeshData$1$[ebp]
  00b28	0f bf ce	 movsx	 ecx, si
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00b2b	8b 00		 mov	 eax, DWORD PTR [eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 380  : 	}

  00b2d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00b31	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2153 :         return _BUF_SIZE <= _Myres;

  00b34	8b 45 bc	 mov	 eax, DWORD PTR _strExtension$17[ebp+20]
  00b37	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b3a	72 0d		 jb	 SHORT $LN347@LoadData_V

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b3c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b3d	50		 push	 eax
  00b3e	ff 75 a8	 push	 DWORD PTR _strExtension$17[ebp]
  00b41	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b46	83 c4 08	 add	 esp, 8
$LN347@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 255  : 	for (short n = 0; n < m_iGeomCount; ++n)

  00b49	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00b4f	46		 inc	 esi
  00b50	0f bf c6	 movsx	 eax, si
  00b53	89 b5 e8 fd ff
	ff		 mov	 DWORD PTR _n$1$[ebp], esi
  00b59	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  00b5c	0f 8c af f5 ff
	ff		 jl	 $LL4@LoadData_V
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b62	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _iTextureIndexVector$[ebp]
  00b68	85 c0		 test	 eax, eax
  00b6a	74 15		 je	 SHORT $LN356@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00b6c	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR _iTextureIndexVector$2$[ebp]
  00b72	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b74	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00b77	51		 push	 ecx
  00b78	50		 push	 eax
  00b79	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b7e	83 c4 08	 add	 esp, 8
$LN356@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00b81	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _v3TextureVertexVector$[ebp]
  00b87	85 c0		 test	 eax, eax
  00b89	74 15		 je	 SHORT $LN363@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00b8b	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _v3TextureVertexVector$2$[ebp]
  00b91	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b93	83 e1 f8	 and	 ecx, -8			; fffffff8H
  00b96	51		 push	 ecx
  00b97	50		 push	 eax
  00b98	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00b9d	83 c4 08	 add	 esp, 8
$LN363@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00ba0	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _iIndexVector$[ebp]
  00ba6	85 c0		 test	 eax, eax
  00ba8	74 15		 je	 SHORT $LN370@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00baa	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR _iIndexVector$2$[ebp]
  00bb0	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bb2	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00bb5	51		 push	 ecx
  00bb6	50		 push	 eax
  00bb7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bbc	83 c4 08	 add	 esp, 8
$LN370@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00bbf	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00bc5	85 c9		 test	 ecx, ecx
  00bc7	74 28		 je	 SHORT $LN377@LoadData_V

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00bc9	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR _v3VertexVector$2$[ebp]
  00bcf	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00bd4	2b d1		 sub	 edx, ecx
  00bd6	f7 ea		 imul	 edx
  00bd8	d1 fa		 sar	 edx, 1
  00bda	8b c2		 mov	 eax, edx
  00bdc	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00bdf	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00be1	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00be4	c1 e0 02	 shl	 eax, 2
  00be7	50		 push	 eax
  00be8	51		 push	 ecx
  00be9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00bee	83 c4 08	 add	 esp, 8
$LN377@LoadData_V:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 382  : 	return TRUE;

  00bf1	b8 01 00 00 00	 mov	 eax, 1

; 383  : }

  00bf6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bf9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c00	59		 pop	 ecx
  00c01	5f		 pop	 edi
  00c02	5e		 pop	 esi
  00c03	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c06	33 cd		 xor	 ecx, ebp
  00c08	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c0d	8b e5		 mov	 esp, ebp
  00c0f	5d		 pop	 ebp
  00c10	c2 08 00	 ret	 8
$LN386@LoadData_V:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4250 :             _Xlen_string(); // result too long

  00c13	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN408@LoadData_V:
  00c18	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$0:
  00000	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _v3VertexVector$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::~vector<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$1:
  0000b	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _iIndexVector$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$2:
  00016	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR _v3TextureVertexVector$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@UD3DXVECTOR2@@V?$allocator@UD3DXVECTOR2@@@std@@@std@@QAE@XZ ; std::vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >::~vector<D3DXVECTOR2,std::allocator<D3DXVECTOR2> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$3:
  00021	8d 8d 2c fe ff
	ff		 lea	 ecx, DWORD PTR _iTextureIndexVector$[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$4:
  0002c	8d 4d a8	 lea	 ecx, DWORD PTR _strExtension$17[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$5:
  00034	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _File$16[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$6:
  0003f	8d 8d d0 fd ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$3[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$7:
  0004a	8d 8d c4 fd ff
	ff		 lea	 ecx, DWORD PTR _stTokenVector$2[ebp]
  00050	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$8:
  00055	8d 4d c0	 lea	 ecx, DWORD PTR _strPathName$18[ebp]
  00058	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z$9:
  0005d	8d 4d d8	 lea	 ecx, DWORD PTR _strTextureFileName$19[ebp]
  00060	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	cc		 int	 3
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
  00069	cc		 int	 3
__ehhandler$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z:
  0006a	90		 npad	 1
  0006b	90		 npad	 1
  0006c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00070	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00073	8b 8a c4 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-572]
  00079	33 c8		 xor	 ecx, eax
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00083	33 c8		 xor	 ecx, eax
  00085	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z
  0008f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z ENDP		; CEffectMesh::__LoadData_Ver001
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnIsType@CEffectMesh@@MAE_NK@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?OnIsType@CEffectMesh@@MAE_NK@Z PROC			; CEffectMesh::OnIsType, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 65   : 	if (CEffectMesh::Type() == type)

  00006	e8 00 00 00 00	 call	 ?Type@CEffectMesh@@SAKXZ ; CEffectMesh::Type
  0000b	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  0000e	3b c2		 cmp	 eax, edx
  00010	75 07		 jne	 SHORT $LN2@OnIsType

; 66   : 		return true;

  00012	b0 01		 mov	 al, 1
  00014	5e		 pop	 esi

; 69   : }

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN2@OnIsType:

; 67   : 
; 68   : 	return CResource::OnIsType(type);

  00019	52		 push	 edx
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?OnIsType@CResource@@MAE_NK@Z ; CResource::OnIsType
  00021	5e		 pop	 esi

; 69   : }

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?OnIsType@CEffectMesh@@MAE_NK@Z ENDP			; CEffectMesh::OnIsType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnIsEmpty@CEffectMesh@@MBE_NXZ
_TEXT	SEGMENT
?OnIsEmpty@CEffectMesh@@MBE_NXZ PROC			; CEffectMesh::OnIsEmpty, COMDAT
; _this$ = ecx

; 414  : 	return !m_isData;

  00000	80 79 40 00	 cmp	 BYTE PTR [ecx+64], 0
  00004	0f 94 c0	 sete	 al

; 415  : }

  00007	c3		 ret	 0
?OnIsEmpty@CEffectMesh@@MBE_NXZ ENDP			; CEffectMesh::OnIsEmpty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnClear@CEffectMesh@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CEffectMesh@@MAEXXZ PROC			; CEffectMesh::OnClear, COMDAT
; _this$ = ecx

; 396  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 397  : 	if (!m_isData)

  00003	80 7e 40 00	 cmp	 BYTE PTR [esi+64], 0
  00007	74 6c		 je	 SHORT $LN1@OnClear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00009	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  0000c	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  0000f	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 400  : 	for (DWORD i = 0; i < m_pEffectMeshDataVector.size(); ++i)

  00011	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 400  : 	for (DWORD i = 0; i < m_pEffectMeshDataVector.size(); ++i)

  00015	33 db		 xor	 ebx, ebx
  00017	85 c0		 test	 eax, eax
  00019	74 52		 je	 SHORT $LN3@OnClear
  0001b	57		 push	 edi
  0001c	0f 1f 40 00	 npad	 4
$LL4@OnClear:

; 401  : 	{
; 402  : 		m_pEffectMeshDataVector[i]->pImageVector.clear();

  00020	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00023	8b 0c 98	 mov	 ecx, DWORD PTR [eax+ebx*4]
  00026	8b 81 ac 00 00
	00		 mov	 eax, DWORD PTR [ecx+172]
  0002c	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 403  : 		m_pEffectMeshDataVector[i]->EffectFrameDataVector.clear();

  00032	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00035	8b 3c 98	 mov	 edi, DWORD PTR [eax+ebx*4]
  00038	81 c7 a0 00 00
	00		 add	 edi, 160		; 000000a0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0003e	57		 push	 edi
  0003f	ff 77 04	 push	 DWORD PTR [edi+4]
  00042	ff 37		 push	 DWORD PTR [edi]
  00044	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1390 :         _Mylast = _Myfirst;

  00049	8b 07		 mov	 eax, DWORD PTR [edi]
  0004b	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 405  : 		SEffectMeshData::Delete(m_pEffectMeshDataVector[i]);

  0004e	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00051	ff 34 98	 push	 DWORD PTR [eax+ebx*4]
  00054	e8 00 00 00 00	 call	 ?Delete@SEffectMeshData@CEffectMesh@@SAXPAU12@@Z ; CEffectMesh::SEffectMeshData::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00059	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 400  : 	for (DWORD i = 0; i < m_pEffectMeshDataVector.size(); ++i)

  0005c	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005d	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 405  : 		SEffectMeshData::Delete(m_pEffectMeshDataVector[i]);

  00060	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00063	2b c1		 sub	 eax, ecx
  00065	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 400  : 	for (DWORD i = 0; i < m_pEffectMeshDataVector.size(); ++i)

  00068	3b d8		 cmp	 ebx, eax
  0006a	72 b4		 jb	 SHORT $LL4@OnClear
  0006c	5f		 pop	 edi
$LN3@OnClear:

; 406  : 	}
; 407  : 	m_pEffectMeshDataVector.clear();

  0006d	89 4e 38	 mov	 DWORD PTR [esi+56], ecx

; 408  : 
; 409  : 	m_isData = false;

  00070	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0
  00074	5b		 pop	 ebx
$LN1@OnClear:

; 410  : }

  00075	5e		 pop	 esi
  00076	c3		 ret	 0
?OnClear@CEffectMesh@@MAEXXZ ENDP			; CEffectMesh::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?OnLoad@CEffectMesh@@MAE_NHPBX@Z
_TEXT	SEGMENT
_szHeader$ = -12					; size = 11
_iSize$ = 8						; size = 4
_c_pvBuf$ = 12						; size = 4
?OnLoad@CEffectMesh@@MAE_NHPBX@Z PROC			; CEffectMesh::OnLoad, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	if (!c_pvBuf)

  00003	8b 55 0c	 mov	 edx, DWORD PTR _c_pvBuf$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	85 d2		 test	 edx, edx
  0000f	74 5a		 je	 SHORT $LN6@OnLoad

; 74   : 		return false;
; 75   : 
; 76   : 	const BYTE * c_pbBuf = static_cast<const BYTE *> (c_pvBuf);
; 77   : 
; 78   : 	char szHeader[10+1];
; 79   : 	memcpy(szHeader, c_pbBuf, 10+1);

  00011	66 8b 42 08	 mov	 ax, WORD PTR [edx+8]

; 80   : 	c_pbBuf += 10+1;

  00015	8d 7a 0b	 lea	 edi, DWORD PTR [edx+11]
  00018	f3 0f 7e 02	 movq	 xmm0, QWORD PTR [edx]

; 81   : 
; 82   : 	if (0 == strcmp("EffectData", szHeader))

  0001c	8d 4d f4	 lea	 ecx, DWORD PTR _szHeader$[ebp]
  0001f	66 89 45 fc	 mov	 WORD PTR _szHeader$[ebp+8], ax
  00023	8a 42 0a	 mov	 al, BYTE PTR [edx+10]
  00026	88 45 fe	 mov	 BYTE PTR _szHeader$[ebp+10], al
  00029	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@HDPGDEFC@EffectData@
  0002e	66 0f d6 45 f4	 movq	 QWORD PTR _szHeader$[ebp], xmm0
$LL10@OnLoad:
  00033	8a 10		 mov	 dl, BYTE PTR [eax]
  00035	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00037	75 1a		 jne	 SHORT $LN11@OnLoad
  00039	84 d2		 test	 dl, dl
  0003b	74 12		 je	 SHORT $LN12@OnLoad
  0003d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00040	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00043	75 0e		 jne	 SHORT $LN11@OnLoad
  00045	83 c0 02	 add	 eax, 2
  00048	83 c1 02	 add	 ecx, 2
  0004b	84 d2		 test	 dl, dl
  0004d	75 e4		 jne	 SHORT $LL10@OnLoad
$LN12@OnLoad:
  0004f	33 c0		 xor	 eax, eax
  00051	eb 05		 jmp	 SHORT $LN13@OnLoad
$LN11@OnLoad:
  00053	1b c0		 sbb	 eax, eax
  00055	83 c8 01	 or	 eax, 1
$LN13@OnLoad:
  00058	85 c0		 test	 eax, eax
  0005a	75 19		 jne	 SHORT $LN3@OnLoad

; 83   : 	{
; 84   : 		if (!__LoadData_Ver001(iSize, c_pbBuf))

  0005c	57		 push	 edi
  0005d	ff 75 08	 push	 DWORD PTR _iSize$[ebp]
  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?__LoadData_Ver001@CEffectMesh@@IAEHHPBE@Z ; CEffectMesh::__LoadData_Ver001
  00067	85 c0		 test	 eax, eax
  00069	75 4d		 jne	 SHORT $LN8@OnLoad
$LN6@OnLoad:
  0006b	5f		 pop	 edi

; 90   : 			return false;
; 91   : 	}
; 92   : 	else
; 93   : 	{
; 94   : 		return false;

  0006c	32 c0		 xor	 al, al

; 99   : }

  0006e	5e		 pop	 esi
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
$LN3@OnLoad:

; 85   : 			return false;
; 86   : 	}
; 87   : 	else if (0 == strcmp("MDEData002", szHeader))

  00075	8d 4d f4	 lea	 ecx, DWORD PTR _szHeader$[ebp]
  00078	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@HDHCIEF@MDEData002@
  0007d	0f 1f 00	 npad	 3
$LL14@OnLoad:
  00080	8a 10		 mov	 dl, BYTE PTR [eax]
  00082	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00084	75 1a		 jne	 SHORT $LN15@OnLoad
  00086	84 d2		 test	 dl, dl
  00088	74 12		 je	 SHORT $LN16@OnLoad
  0008a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0008d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00090	75 0e		 jne	 SHORT $LN15@OnLoad
  00092	83 c0 02	 add	 eax, 2
  00095	83 c1 02	 add	 ecx, 2
  00098	84 d2		 test	 dl, dl
  0009a	75 e4		 jne	 SHORT $LL14@OnLoad
$LN16@OnLoad:
  0009c	33 c0		 xor	 eax, eax
  0009e	eb 05		 jmp	 SHORT $LN17@OnLoad
$LN15@OnLoad:
  000a0	1b c0		 sbb	 eax, eax
  000a2	83 c8 01	 or	 eax, 1
$LN17@OnLoad:
  000a5	85 c0		 test	 eax, eax
  000a7	75 c2		 jne	 SHORT $LN6@OnLoad

; 88   : 	{
; 89   : 		if (!__LoadData_Ver002(iSize, c_pbBuf))

  000a9	57		 push	 edi
  000aa	ff 75 08	 push	 DWORD PTR _iSize$[ebp]
  000ad	8b ce		 mov	 ecx, esi
  000af	e8 00 00 00 00	 call	 ?__LoadData_Ver002@CEffectMesh@@IAEHHPBE@Z ; CEffectMesh::__LoadData_Ver002
  000b4	85 c0		 test	 eax, eax
  000b6	74 b3		 je	 SHORT $LN6@OnLoad
$LN8@OnLoad:
  000b8	5f		 pop	 edi

; 95   : 	}
; 96   : 
; 97   : 	m_isData = true;

  000b9	c6 46 40 01	 mov	 BYTE PTR [esi+64], 1

; 98   : 	return true;

  000bd	b0 01		 mov	 al, 1

; 99   : }

  000bf	5e		 pop	 esi
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?OnLoad@CEffectMesh@@MAE_NHPBX@Z ENDP			; CEffectMesh::OnLoad
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshElementPointer@CEffectMesh@@QAEHKPAPAUSEffectMeshData@1@@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
_ppMeshData$ = 12					; size = 4
?GetMeshElementPointer@CEffectMesh@@QAEHKPAPAUSEffectMeshData@1@@Z PROC ; CEffectMesh::GetMeshElementPointer, COMDAT
; _this$ = ecx

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 387  : 	if (dwMeshIndex >= m_pEffectMeshDataVector.size())

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _dwMeshIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000e	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 387  : 	if (dwMeshIndex >= m_pEffectMeshDataVector.size())

  00011	3b c8		 cmp	 ecx, eax
  00013	72 06		 jb	 SHORT $LN2@GetMeshEle

; 388  : 		return FALSE;

  00015	33 c0		 xor	 eax, eax

; 393  : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
$LN2@GetMeshEle:

; 389  : 
; 390  : 	*ppMeshData = m_pEffectMeshDataVector[dwMeshIndex];

  0001b	8b 45 0c	 mov	 eax, DWORD PTR _ppMeshData$[ebp]
  0001e	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00021	89 08		 mov	 DWORD PTR [eax], ecx

; 391  : 
; 392  : 	return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1

; 393  : }

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?GetMeshElementPointer@CEffectMesh@@QAEHKPAPAUSEffectMeshData@1@@Z ENDP ; CEffectMesh::GetMeshElementPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetTextureVectorReference@CEffectMesh@@QAEAAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetTextureVectorReference@CEffectMesh@@QAEAAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z PROC ; CEffectMesh::GetTextureVectorReference, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 	return m_pEffectMeshDataVector[dwMeshIndex]->pImageVector;

  00003	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00006	8b 45 08	 mov	 eax, DWORD PTR _dwMeshIndex$[ebp]
  00009	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0000c	05 ac 00 00 00	 add	 eax, 172		; 000000acH

; 55   : }

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetTextureVectorReference@CEffectMesh@@QAEAAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ENDP ; CEffectMesh::GetTextureVectorReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z PROC ; CEffectMesh::GetTextureVectorPointer, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00006	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00009	2b c2		 sub	 eax, edx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 46   : 	if (dwMeshIndex>=m_pEffectMeshDataVector.size())

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _dwMeshIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000e	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 46   : 	if (dwMeshIndex>=m_pEffectMeshDataVector.size())

  00011	3b c8		 cmp	 ecx, eax
  00013	72 06		 jb	 SHORT $LN2@GetTexture

; 47   : 		return NULL;

  00015	33 c0		 xor	 eax, eax

; 50   : }

  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
$LN2@GetTexture:

; 48   : 
; 49   : 	return &m_pEffectMeshDataVector[dwMeshIndex]->pImageVector;

  0001b	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  0001e	05 ac 00 00 00	 add	 eax, 172		; 000000acH

; 50   : }

  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ENDP ; CEffectMesh::GetTextureVectorPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z
_TEXT	SEGMENT
_dwMeshIndex$ = 8					; size = 4
?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z PROC ; CEffectMesh::GetMeshDataPointer, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 40   : 	assert(dwMeshIndex < m_pEffectMeshDataVector.size());
; 41   : 	return m_pEffectMeshDataVector[dwMeshIndex];

  00003	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00006	8b 45 08	 mov	 eax, DWORD PTR _dwMeshIndex$[ebp]
  00009	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 42   : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z ENDP ; CEffectMesh::GetMeshDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetMeshCount@CEffectMesh@@QAEKXZ
_TEXT	SEGMENT
?GetMeshCount@CEffectMesh@@QAEKXZ PROC			; CEffectMesh::GetMeshCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00003	2b 41 34	 sub	 eax, DWORD PTR [ecx+52]
  00006	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 36   : }

  00009	c3		 ret	 0
?GetMeshCount@CEffectMesh@@QAEKXZ ENDP			; CEffectMesh::GetMeshCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?GetFrameCount@CEffectMesh@@QAEKXZ
_TEXT	SEGMENT
?GetFrameCount@CEffectMesh@@QAEKXZ PROC			; CEffectMesh::GetFrameCount, COMDAT
; _this$ = ecx

; 30   : 	return m_iFrameCount;

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]

; 31   : }

  00003	c3		 ret	 0
?GetFrameCount@CEffectMesh@@QAEKXZ ENDP			; CEffectMesh::GetFrameCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??1CEffectMesh@@UAE@XZ
_TEXT	SEGMENT
??1CEffectMesh@@UAE@XZ PROC				; CEffectMesh::~CEffectMesh, COMDAT
; _this$ = ecx

; 425  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMesh@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CEffectMes

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
$LN6@CEffectMes:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 426  : }

  00037	8b ce		 mov	 ecx, esi
  00039	5e		 pop	 esi
  0003a	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
??1CEffectMesh@@UAE@XZ ENDP				; CEffectMesh::~CEffectMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ??0CEffectMesh@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_szFileName$ = 8					; size = 4
??0CEffectMesh@@QAE@PBD@Z PROC				; CEffectMesh::CEffectMesh, COMDAT
; _this$ = ecx

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	e8 00 00 00 00	 call	 ??0CResource@@QAE@PBD@Z	; CResource::CResource
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMesh@@6B@

; 422  : }

  00018	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0001a	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00021	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00028	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 419  : 	m_iGeomCount = 0;

  0002f	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 420  : 	m_iFrameCount = 0;

  00036	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 421  : 	m_isData = false;

  0003d	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0

; 422  : }

  00041	5e		 pop	 esi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0CEffectMesh@@QAE@PBD@Z ENDP				; CEffectMesh::CEffectMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?Type@CEffectMesh@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CEffectMesh@@SAKXZ PROC				; CEffectMesh::Type, COMDAT

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CEffectMesh@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 59   : 	static TType s_type = StringToType("CEffectMesh");

  00022	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0002e	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA
  00036	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0003c	7f 14		 jg	 SHORT $LN9@Type
$LN5@Type:

; 60   : 	return s_type;
; 61   : }

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_type@?1??Type@CEffectMesh@@SAKXZ@4KA
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004d	59		 pop	 ecx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN9@Type:

; 59   : 	static TType s_type = StringToType("CEffectMesh");

  00052	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA
  00057	e8 00 00 00 00	 call	 __Init_thread_header
  0005c	83 c4 04	 add	 esp, 4
  0005f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA, -1
  00066	75 d6		 jne	 SHORT $LN5@Type
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HCKGHODL@CEffectMesh@
  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	e8 00 00 00 00	 call	 ?StringToType@CResource@@SAKPBD@Z ; CResource::StringToType
  00079	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?s_type@?1??Type@CEffectMesh@@SAKXZ@4KA, eax
  00083	e8 00 00 00 00	 call	 __Init_thread_footer
  00088	83 c4 08	 add	 esp, 8
  0008b	eb b1		 jmp	 SHORT $LN5@Type
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CEffectMesh@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CEffectMesh@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CEffectMesh@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CEffectMesh@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CEffectMesh@@SAKXZ ENDP				; CEffectMesh::Type
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?DestroySystem@SEffectMeshData@CEffectMesh@@SAXXZ
_TEXT	SEGMENT
__ULast$1$ = -4						; size = 4
?DestroySystem@SEffectMeshData@CEffectMesh@@SAXXZ PROC	; CEffectMesh::SEffectMeshData::DestroySystem, COMDAT

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00004	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 23   : {

  00009	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+4
  00010	89 45 fc	 mov	 DWORD PTR __ULast$1$[ebp], eax
  00013	3b f8		 cmp	 edi, eax
  00015	0f 84 c5 00 00
	00		 je	 $LN52@DestroySys
  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	0f 1f 00	 npad	 3
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00020	8b 37		 mov	 esi, DWORD PTR [edi]
  00022	85 f6		 test	 esi, esi
  00024	0f 84 90 00 00
	00		 je	 $LN18@DestroySys
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0002a	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00030	85 c9		 test	 ecx, ecx
  00032	74 33		 je	 SHORT $LN35@DestroySys

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00034	8b 86 b4 00 00
	00		 mov	 eax, DWORD PTR [esi+180]
  0003a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00046	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00050	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00053	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0

; 1699 :             _Myend   = pointer();

  0005d	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
$LN35@DestroySys:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00067	8b 86 a0 00 00
	00		 mov	 eax, DWORD PTR [esi+160]
  0006d	8d 9e a0 00 00
	00		 lea	 ebx, DWORD PTR [esi+160]
  00073	85 c0		 test	 eax, eax
  00075	74 32		 je	 SHORT $LN42@DestroySys

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00077	53		 push	 ebx
  00078	ff 73 04	 push	 DWORD PTR [ebx+4]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00081	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00083	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00086	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	83 e0 e0	 and	 eax, -32		; ffffffe0H
  0008b	50		 push	 eax
  0008c	51		 push	 ecx
  0008d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00092	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00098	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0009b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1699 :             _Myend   = pointer();

  000a2	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN42@DestroySys:
  000a9	68 b8 00 00 00	 push	 184			; 000000b8H
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b4	8b 45 fc	 mov	 eax, DWORD PTR __ULast$1$[ebp]
  000b7	83 c4 08	 add	 esp, 8
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ba	83 c7 04	 add	 edi, 4
  000bd	3b f8		 cmp	 edi, eax
  000bf	0f 85 5b ff ff
	ff		 jne	 $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000c5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+4
  000ca	5e		 pop	 esi
  000cb	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 25   : }

  000d0	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+16
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  000d5	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 25   : }

  000d6	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20, eax
  000db	5f		 pop	 edi
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
$LN52@DestroySys:
  000e0	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+16
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000e5	89 3d 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+8, edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 25   : }

  000eb	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20, eax
  000f0	5f		 pop	 edi
  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c3		 ret	 0
?DestroySystem@SEffectMeshData@CEffectMesh@@SAXXZ ENDP	; CEffectMesh::SEffectMeshData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?Delete@SEffectMeshData@CEffectMesh@@SAXPAU12@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@SEffectMeshData@CEffectMesh@@SAXPAU12@@Z PROC	; CEffectMesh::SEffectMeshData::Delete, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 16   : 	pkData->EffectFrameDataVector.clear();

  00005	8b 7d 08	 mov	 edi, DWORD PTR _pkData$[ebp]
  00008	8d b7 a0 00 00
	00		 lea	 esi, DWORD PTR [edi+160]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0000e	56		 push	 esi
  0000f	ff 76 04	 push	 DWORD PTR [esi+4]
  00012	ff 36		 push	 DWORD PTR [esi]
  00014	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@YAXPAUSEffectFrameData@CEffectMesh@@QAU12@AAV?$allocator@USEffectFrameData@CEffectMesh@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMesh::SEffectFrameData> >

; 1390 :         _Mylast = _Myfirst;

  00019	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 17   : 	pkData->pImageVector.clear();

  00021	8b 87 ac 00 00
	00		 mov	 eax, DWORD PTR [edi+172]
  00027	89 87 b0 00 00
	00		 mov	 DWORD PTR [edi+176], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0002d	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 19   : 	ms_kPool.Free(pkData);

  00032	89 7d 08	 mov	 DWORD PTR _pkData$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00035	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+24
  0003b	74 0d		 je	 SHORT $LN12@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003d	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0003f	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20, 4
  00046	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 20   : }

  00047	5e		 pop	 esi
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN12@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0004d	51		 push	 ecx
  0004e	50		 push	 eax
  0004f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+16
  00054	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Emplace_reallocate<CEffectMesh::SEffectMeshData * const &>
  00059	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 20   : }

  0005a	5e		 pop	 esi
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Delete@SEffectMeshData@CEffectMesh@@SAXPAU12@@Z ENDP	; CEffectMesh::SEffectMeshData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp
;	COMDAT ?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ PROC	; CEffectMesh::SEffectMeshData::New, COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+16, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00010	0f 85 96 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00016	56		 push	 esi
  00017	68 b8 00 00 00	 push	 184			; 000000b8H
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	85 f6		 test	 esi, esi
  00028	74 3e		 je	 SHORT $LN6@New
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0002a	c7 86 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+160], 0
  00034	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  0003e	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
  00048	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  00052	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  0005c	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00066	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00068	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 66   : 				m_kVct_pkData.push_back(pkNewData);

  0006f	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00072	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+12
  00078	74 16		 je	 SHORT $LN28@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0007a	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 11   : 	return ms_kPool.Alloc();

  0007c	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  0007e	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00085	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 11   : 	return ms_kPool.Alloc();

  0008b	5e		 pop	 esi

; 12   : }

  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN28@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00090	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00093	51		 push	 ecx
  00094	50		 push	 eax
  00095	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+4
  0009a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSEffectMeshData@CEffectMesh@@@?$vector@PAUSEffectMeshData@CEffectMesh@@V?$allocator@PAUSEffectMeshData@CEffectMesh@@@std@@@std@@QAEPAPAUSEffectMeshData@CEffectMesh@@QAPAU23@ABQAU23@@Z ; std::vector<CEffectMesh::SEffectMeshData *,std::allocator<CEffectMesh::SEffectMeshData *> >::_Emplace_reallocate<CEffectMesh::SEffectMeshData * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0009f	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 11   : 	return ms_kPool.Alloc();

  000a5	8b c6		 mov	 eax, esi
  000a7	5e		 pop	 esi

; 12   : }

  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ac	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000af	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000b2	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@SEffectMeshData@CEffectMesh@@2V?$CDynamicPool@USEffectMeshData@CEffectMesh@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectMesh.cpp

; 12   : }

  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
?New@SEffectMeshData@CEffectMesh@@SAPAU12@XZ ENDP	; CEffectMesh::SEffectMeshData::New
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImage *,std::allocator<CGraphicImage *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USEffectFrameData@CEffectMesh@@V?$allocator@USEffectFrameData@CEffectMesh@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMesh::SEffectFrameData,std::allocator<CEffectMesh::SEffectFrameData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@CAXXZ PROC ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USPTVertex@@V?$allocator@USPTVertex@@@std@@@std@@CAXXZ ENDP ; std::vector<SPTVertex,std::allocator<SPTVertex> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 902  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 903  :         _Left = _STD move(_Right);
; 904  :     }
; 905  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 879  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 880  :         _Left = _Right;
; 881  :     }
; 882  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 				m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 			}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2964 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 2965 :         // assign [_Ptr, _Ptr + _Count)
; 2966 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2135 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2153 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2136 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2137 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2967 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2968 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 363  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2969 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 2970 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 2981 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4221 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4201 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4202 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4203 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4204 :         }
; 4205 : 
; 4206 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4207 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4208 :         }
; 4209 : 
; 4210 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4228 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0008c	50		 push	 eax

; 4230 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4231 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00093	e8 00 00 00 00	 call	 _memcpy

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 328  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 2978 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4233 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4234 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 2981 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4235 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 2981 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4237 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2981 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4222 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2722 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2153 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4301 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4302 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4303 :             auto& _Al          = _Getal();
; 4304 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4305 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring

; 4308 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4309 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4310 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4311 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2723 :         _Tidy_deallocate();
; 2724 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2725 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2726 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2727 :         _Mypair._Myval2._Myproxy = nullptr;
; 2728 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2729 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2730 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2201 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
