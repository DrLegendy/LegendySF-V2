; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCParticleSystemInstance@@@@6B@ ; CDynamicPool<CParticleSystemInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z ; CDynamicPool<CParticleSystemInstance>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_R4?$CDynamicPool@VCParticleSystemInstance@@@@6B@ ; CDynamicPool<CParticleSystemInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCParticleSystemInstance@@@@@8 ; CDynamicPool<CParticleSystemInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCParticleSystemInstance@@@@8 ; CDynamicPool<CParticleSystemInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCParticleSystemInstance@@@@8 ; CDynamicPool<CParticleSystemInstance>::`RTTI Base Class Array'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemInstance@@@@8 ; CDynamicPool<CParticleSystemInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CParticleSystemInstance>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemInstance@@@@@8 ; CDynamicPool<CParticleSystemInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCParticleSystemInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemInstance@@@@8 ; CDynamicPool<CParticleSystemInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCParticleSystemInstance@@@@8 DD 00H ; CDynamicPool<CParticleSystemInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCParticleSystemInstance@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCParticleSystemInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CParticleSystemInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCParticleSystemInstance@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCParticleSystemInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCParticleSystemInstance@@@@6B@ DD 00H ; CDynamicPool<CParticleSystemInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCParticleSystemInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCParticleSystemInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCParticleSystemInstance@@@@6B@ ; CDynamicPool<CParticleSystemInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?DestroySystem@CParticleSystemInstance@@SAXXZ	; CParticleSystemInstance::DestroySystem
PUBLIC	?New@CParticleSystemInstance@@SAPAV1@XZ		; CParticleSystemInstance::New
PUBLIC	?Delete@CParticleSystemInstance@@SAXPAV1@@Z	; CParticleSystemInstance::Delete
PUBLIC	??0CParticleSystemInstance@@QAE@XZ		; CParticleSystemInstance::CParticleSystemInstance
PUBLIC	??1CParticleSystemInstance@@UAE@XZ		; CParticleSystemInstance::~CParticleSystemInstance
PUBLIC	?OnSetDataPointer@CParticleSystemInstance@@UAEXPAVCEffectElementBase@@@Z ; CParticleSystemInstance::OnSetDataPointer
PUBLIC	?CreateParticles@CParticleSystemInstance@@QAEXM@Z ; CParticleSystemInstance::CreateParticles
PUBLIC	?GetEmissionCount@CParticleSystemInstance@@QAEKXZ ; CParticleSystemInstance::GetEmissionCount
PUBLIC	?OnInitialize@CParticleSystemInstance@@MAEXXZ	; CParticleSystemInstance::OnInitialize
PUBLIC	?OnDestroy@CParticleSystemInstance@@MAEXXZ	; CParticleSystemInstance::OnDestroy
PUBLIC	?OnUpdate@CParticleSystemInstance@@MAE_NM@Z	; CParticleSystemInstance::OnUpdate
PUBLIC	?OnRender@CParticleSystemInstance@@MAEXXZ	; CParticleSystemInstance::OnRender
PUBLIC	?deallocate@?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@QAEXQAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@I@Z ; std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > >::deallocate
PUBLIC	??1?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
PUBLIC	?_Destroy@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@0@Z ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Destroy
PUBLIC	?_Xlength@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Xlength
PUBLIC	?_Getal@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@XZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Getal
PUBLIC	??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??_GCParticleSystemInstance@@UAEPAXI@Z		; CParticleSystemInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ ; CDynamicPool<CParticleSystemInstance>::~CDynamicPool<CParticleSystemInstance>
PUBLIC	?Delete@?$CDynamicPool@VCParticleSystemInstance@@@@KAXPAVCParticleSystemInstance@@@Z ; CDynamicPool<CParticleSystemInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Xlength
PUBLIC	??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::TwoSideRenderer>
PUBLIC	??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::ThreeSideRenderer>
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Emplace_reallocate<CParticleSystemInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAXPAPAVCParticleSystemInstance@@QAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CParticleSystemInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>
PUBLIC	??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ; std::_Uninitialized_move<CParticleSystemInstance * *,std::allocator<CParticleSystemInstance *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<CParticleInstance *,void *> *>
PUBLIC	??$_Copy_memmove@PAPAVCParticleSystemInstance@@PAPAV1@@std@@YAPAPAVCParticleSystemInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemInstance * *,CParticleSystemInstance * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
PUBLIC	??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > *,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>
PUBLIC	??1?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A ; CParticleSystemInstance::ms_kPool
PUBLIC	??_7CParticleSystemInstance@@6B@		; CParticleSystemInstance::`vftable'
PUBLIC	??_C@_0O@NKNMEGII@list?5too?5long@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CParticleSystemInstance@@6B@		; CParticleSystemInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCParticleSystemInstance@@@8		; CParticleSystemInstance `RTTI Type Descriptor'
PUBLIC	??_R3CParticleSystemInstance@@8			; CParticleSystemInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CParticleSystemInstance@@8			; CParticleSystemInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CParticleSystemInstance@@8	; CParticleSystemInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBaseInstance@@8	; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBaseInstance@@@8		; CEffectElementBaseInstance `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Base Class Array'
PUBLIC	__real@3727c5ac
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@42652ee0
PUBLIC	__real@42c80000
PUBLIC	__real@447a0000
PUBLIC	__real@c2c80000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	_D3DXVec3TransformNormal@12:PROC
EXTRN	?random@@YAKXZ:PROC				; random
EXTRN	?frandom@@YAMMM@Z:PROC				; frandom
EXTRN	?random_range@@YAJJJ@Z:PROC			; random_range
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z:PROC ; CEffectElementBase::GetPosition
EXTRN	?GetEmitterShape@CEmitterProperty@@QAEEXZ:PROC	; CEmitterProperty::GetEmitterShape
EXTRN	?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ:PROC ; CEmitterProperty::GetEmitterAdvancedType
EXTRN	?isEmitFromEdge@CEmitterProperty@@QAEHXZ:PROC	; CEmitterProperty::isEmitFromEdge
EXTRN	?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingSize
EXTRN	?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingAngularVelocity
EXTRN	?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingDirectionX
EXTRN	?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingDirectionY
EXTRN	?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingDirectionZ
EXTRN	?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmittingVelocity
EXTRN	?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetEmissionCountPerSecond
EXTRN	?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetParticleLifeTime
EXTRN	?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetParticleSizeX
EXTRN	?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z:PROC ; CEmitterProperty::GetParticleSizeY
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTextureReference
EXTRN	?New@CGraphicImageInstance@@SAPAV1@XZ:PROC	; CGraphicImageInstance::New
EXTRN	?Delete@CGraphicImageInstance@@SAXPAV1@@Z:PROC	; CGraphicImageInstance::Delete
EXTRN	?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ:PROC ; CParticleSystemData::GetEmitterPropertyPointer
EXTRN	?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ:PROC ; CParticleSystemData::GetParticlePropertyPointer
EXTRN	?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z:PROC ; CParticleSystemData::BuildDecorator
EXTRN	??0CEffectElementBaseInstance@@QAE@XZ:PROC	; CEffectElementBaseInstance::CEffectElementBaseInstance
EXTRN	??1CEffectElementBaseInstance@@UAE@XZ:PROC	; CEffectElementBaseInstance::~CEffectElementBaseInstance
EXTRN	?Initialize@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Initialize
EXTRN	?Destroy@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Destroy
EXTRN	?isActive@CEffectElementBaseInstance@@QAE_NXZ:PROC ; CEffectElementBaseInstance::isActive
EXTRN	?GetRadiusApproximation@CParticleInstance@@QAEMXZ:PROC ; CParticleInstance::GetRadiusApproximation
EXTRN	?Update@CParticleInstance@@QAEHMM@Z:PROC	; CParticleInstance::Update
EXTRN	?New@CParticleInstance@@SAPAV1@XZ:PROC		; CParticleInstance::New
EXTRN	?DestroySystem@CParticleInstance@@SAXXZ:PROC	; CParticleInstance::DestroySystem
EXTRN	?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CParticleInstance::Transform
EXTRN	?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z:PROC ; CParticleInstance::Transform
EXTRN	?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ:PROC ; CParticleInstance::GetParticleMeshPointer
EXTRN	?DeleteThis@CParticleInstance@@QAEXXZ:PROC	; CParticleInstance::DeleteThis
EXTRN	?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z:PROC ; Frustum::ViewVolumeTest
EXTRN	?Identity@CScreen@@SAXXZ:PROC			; CScreen::Identity
EXTRN	??_ECParticleSystemInstance@@UAEPAXI@Z:PROC	; CParticleSystemInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CIatan2:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	?ms_frustum@CScreen@@1VFrustum@@A:BYTE		; CScreen::ms_frustum
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CParticleSystemInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CParticleSystemInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c2c80000
CONST	SEGMENT
__real@c2c80000 DD 0c2c80000r			; -100
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT ??_R2CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R2CEffectElementBaseInstance@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8 ; CEffectElementBaseInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R3CEffectElementBaseInstance@@8 DD 00H		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBaseInstance@@@8
data$r	SEGMENT
??_R0?AVCEffectElementBaseInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBaseInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBaseInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBaseInstance@@8 DD FLAT:??_R0?AVCEffectElementBaseInstance@@@8 ; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CParticleSystemInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CParticleSystemInstance@@8 DD FLAT:??_R0?AVCParticleSystemInstance@@@8 ; CParticleSystemInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CParticleSystemInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CParticleSystemInstance@@8
rdata$r	SEGMENT
??_R2CParticleSystemInstance@@8 DD FLAT:??_R1A@?0A@EA@CParticleSystemInstance@@8 ; CParticleSystemInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CParticleSystemInstance@@8
rdata$r	SEGMENT
??_R3CParticleSystemInstance@@8 DD 00H			; CParticleSystemInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CParticleSystemInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCParticleSystemInstance@@@8
data$r	SEGMENT
??_R0?AVCParticleSystemInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CParticleSystemInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCParticleSystemInstance@@', 00H
data$r	ENDS
;	COMDAT ??_R4CParticleSystemInstance@@6B@
rdata$r	SEGMENT
??_R4CParticleSystemInstance@@6B@ DD 00H		; CParticleSystemInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCParticleSystemInstance@@@8
	DD	FLAT:??_R3CParticleSystemInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKNMEGII@list?5too?5long@
CONST	SEGMENT
??_C@_0O@NKNMEGII@list?5too?5long@ DB 'list too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CParticleSystemInstance@@6B@
CONST	SEGMENT
??_7CParticleSystemInstance@@6B@ DD FLAT:??_R4CParticleSystemInstance@@6B@ ; CParticleSystemInstance::`vftable'
	DD	FLAT:??_ECParticleSystemInstance@@UAEPAXI@Z
	DD	FLAT:?OnSetDataPointer@CParticleSystemInstance@@UAEXPAVCEffectElementBase@@@Z
	DD	FLAT:?OnInitialize@CParticleSystemInstance@@MAEXXZ
	DD	FLAT:?OnDestroy@CParticleSystemInstance@@MAEXXZ
	DD	FLAT:?OnUpdate@CParticleSystemInstance@@MAE_NM@Z
	DD	FLAT:?OnRender@CParticleSystemInstance@@MAEXXZ
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCParticleSystemInstance@@@@6B@ ; CParticleSystemInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Attach_head@U?$_List_simple_types@PAVCParticleInstance@@@std@@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Attach_head@U?$_List_simple_types@PAVCParticleInstance@@@std@@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@1@@Z$0
__ehfuncinfo$??$_Attach_head@U?$_List_simple_types@PAVCParticleInstance@@@std@@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Attach_head@U?$_List_simple_types@PAVCParticleInstance@@@std@@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z$0
__ehfuncinfo$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$2
__ehfuncinfo$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAVCParticleInstance@@@std@@@std@@U_Iterator_base0@2@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z$2
__ehfuncinfo$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$construct@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@AAV12@@?$_Default_allocator_traits@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@1@QAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@AAV31@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z$2
__ehfuncinfo$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Emplace_back@AAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAEXAAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$3
__ehfuncinfo$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z$2
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAVCParticleInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@1@ABQAVCParticleInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAVCParticleInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@1@ABQAVCParticleInstance@@@Z$0
__ehfuncinfo$??$?0ABQAVCParticleInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@1@ABQAVCParticleInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAVCParticleInstance@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@1@ABQAVCParticleInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABQAVCParticleInstance@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAU?$_List_node@PAVCParticleInstance@@PAX@1@QAU21@ABQAVCParticleInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABQAVCParticleInstance@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAU?$_List_node@PAVCParticleInstance@@PAX@1@QAU21@ABQAVCParticleInstance@@@Z$1
__ehfuncinfo$??$_Emplace@ABQAVCParticleInstance@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAU?$_List_node@PAVCParticleInstance@@PAX@1@QAU21@ABQAVCParticleInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABQAVCParticleInstance@@@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAU?$_List_node@PAVCParticleInstance@@PAX@1@QAU21@ABQAVCParticleInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEXABQAVCParticleInstance@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEXABQAVCParticleInstance@@@Z$1
__ehfuncinfo$?push_back@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEXABQAVCParticleInstance@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEXABQAVCParticleInstance@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemInstance@@@@QAEPAVCParticleSystemInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCParticleSystemInstance@@@@QAEPAVCParticleSystemInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCParticleSystemInstance@@@@QAEPAVCParticleSystemInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemInstance@@@@QAEPAVCParticleSystemInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z$1
__ehfuncinfo$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateParticles@CParticleSystemInstance@@QAEXM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateParticles@CParticleSystemInstance@@QAEXM@Z$1
__ehfuncinfo$?CreateParticles@CParticleSystemInstance@@QAEXM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateParticles@CParticleSystemInstance@@QAEXM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CParticleSystemInstance@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$2
__ehfuncinfo$??0CParticleSystemInstance@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CParticleSystemInstance@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CParticleSystemInstance@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CParticleSystemInstance@@SAPAV1@XZ$0
__ehfuncinfo$?New@CParticleSystemInstance@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CParticleSystemInstance@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
;	COMDAT ??1?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = -4						; size = 4
??1?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >, COMDAT
; _this$ = ecx

; 734  :     ~_List_node_insert_op2() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 735  :         if (_Added == 0) {

  00007	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0000b	74 47		 je	 SHORT $LN3@List_node_

; 736  :             return;
; 737  :         }
; 738  : 
; 739  :         _Construct_in_place(_Head->_Prev, pointer{});

  0000d	8d 45 fc	 lea	 eax, DWORD PTR $T2[ebp]
  00010	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00017	50		 push	 eax
  00018	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001b	83 c0 04	 add	 eax, 4
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> *>

; 740  :         _Construct_in_place(_Tail->_Next, pointer{});

  00024	8d 45 fc	 lea	 eax, DWORD PTR $T1[ebp]
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  0002e	50		 push	 eax
  0002f	ff 76 08	 push	 DWORD PTR [esi+8]
  00032	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@PAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@$$QAPAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> *>

; 741  :         pointer _Subject = _Head;

  00037	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  0003a	83 c4 10	 add	 esp, 16			; 00000010H

; 742  :         while (_Subject) {

  0003d	85 f6		 test	 esi, esi
  0003f	74 13		 je	 SHORT $LN3@List_node_
$LL2@List_node_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00041	8b c6		 mov	 eax, esi

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00043	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00045	6a 0c		 push	 12			; 0000000cH
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 742  :         while (_Subject) {

  00050	85 f6		 test	 esi, esi
  00052	75 ed		 jne	 SHORT $LL2@List_node_
$LN3@List_node_:
  00054	5e		 pop	 esi

; 743  :             value_type::_Freenode(_Al, _STD exchange(_Subject, _Subject->_Next));
; 744  :         }
; 745  :     }

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??1?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Appended$2 = -68					; size = 16
__Backout$3 = -52					; size = 12
__Newnode$4 = -40					; size = 8
__Newnode$5 = -32					; size = 8
__Local_tail$6 = -24					; size = 4
__Appended$2$ = -20					; size = 4
__Appended$3$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Local_head$7 = 16					; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > *,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >, COMDAT

; 1527 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  0002e	89 75 cc	 mov	 DWORD PTR __Backout$3[ebp], esi
  00031	89 75 d0	 mov	 DWORD PTR __Backout$3[ebp+4], esi
  00034	89 45 d4	 mov	 DWORD PTR __Backout$3[ebp+8], eax

; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  00037	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00044	0f 84 80 01 00
	00		 je	 $LN3@Uninitiali
  0004a	8b 45 c8	 mov	 eax, DWORD PTR __Appended$2[ebp+12]
  0004d	89 45 ec	 mov	 DWORD PTR __Appended$2$[ebp], eax
  00050	8b 45 c4	 mov	 eax, DWORD PTR __Appended$2[ebp+8]
  00053	89 45 f0	 mov	 DWORD PTR __Appended$3$[ebp], eax
  00056	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL4@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 620  :     explicit _List_node_insert_op2(_Alnode& _Al_) : _Al(_Al_), _Added(0) {}

  00060	33 db		 xor	 ebx, ebx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00062	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00068	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0006f	8b 39		 mov	 edi, DWORD PTR [ecx]

; 620  :     explicit _List_node_insert_op2(_Alnode& _Al_) : _Al(_Al_), _Added(0) {}

  00071	89 75 bc	 mov	 DWORD PTR __Appended$2[ebp], esi
  00074	89 5d c0	 mov	 DWORD PTR __Appended$2[ebp+4], ebx

; 865  :         _Appended._Append_range_unchecked(_First, _Last);

  00077	8b 37		 mov	 esi, DWORD PTR [edi]

; 74   :         return _Ptr == _Right._Ptr;

  00079	3b f7		 cmp	 esi, edi

; 657  :         if (_First == _Last) { // throws

  0007b	0f 84 92 00 00
	00		 je	 $LN79@Uninitiali
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00081	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00084	89 45 e0	 mov	 DWORD PTR __Newnode$5[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00087	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 661  :         _Alloc_construct_ptr<_Alnode> _Newnode(_Al);

  00089	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0008d	89 5d e4	 mov	 DWORD PTR __Newnode$5[ebp+4], ebx

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00090	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00095	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00097	89 5d e4	 mov	 DWORD PTR __Newnode$5[ebp+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 664  :             _Alnode_traits::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), *_First); // throws

  0009a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 668  :             ++_Added;

  000a0	bb 01 00 00 00	 mov	 ebx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  000a5	89 4d ec	 mov	 DWORD PTR __Appended$2$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 666  :             _Head               = _Newhead;

  000a8	89 4d c8	 mov	 DWORD PTR __Appended$2[ebp+12], ecx
  000ab	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 667  :             _Tail               = _Newhead;

  000ae	8b c1		 mov	 eax, ecx

; 52   :         _Ptr = _Ptr->_Next;

  000b0	8b 36		 mov	 esi, DWORD PTR [esi]

; 667  :             _Tail               = _Newhead;

  000b2	89 45 f0	 mov	 DWORD PTR __Appended$3$[ebp], eax
  000b5	89 45 c4	 mov	 DWORD PTR __Appended$2[ebp+8], eax

; 668  :             ++_Added;

  000b8	89 5d c0	 mov	 DWORD PTR __Appended$2[ebp+4], ebx

; 74   :         return _Ptr == _Right._Ptr;

  000bb	3b f7		 cmp	 esi, edi

; 672  :         while (_First != _Last) { // throws

  000bd	74 54		 je	 SHORT $LN79@Uninitiali
  000bf	90		 npad	 1
$LL33@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c0	6a 0c		 push	 12			; 0000000cH

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000c2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __Newnode$5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000c9	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  000ce	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 674  :             _Alnode_traits::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), *_First); // throws

  000d0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  000d3	89 4d e4	 mov	 DWORD PTR __Newnode$5[ebp+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 674  :             _Alnode_traits::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), *_First); // throws

  000d6	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 675  :             _Construct_in_place(_Tail->_Next, _Newnode._Ptr);

  000d9	8d 45 e4	 lea	 eax, DWORD PTR __Newnode$5[ebp+4]
  000dc	50		 push	 eax
  000dd	8b 45 f0	 mov	 eax, DWORD PTR __Appended$3$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>

; 676  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Tail);

  000e6	8d 45 c4	 lea	 eax, DWORD PTR __Appended$2[ebp+8]
  000e9	50		 push	 eax
  000ea	8b 45 e4	 mov	 eax, DWORD PTR __Newnode$5[ebp+4]
  000ed	83 c0 04	 add	 eax, 4
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  000f6	8b 45 e4	 mov	 eax, DWORD PTR __Newnode$5[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 678  :             ++_Added;

  000f9	43		 inc	 ebx

; 52   :         _Ptr = _Ptr->_Next;

  000fa	8b 36		 mov	 esi, DWORD PTR [esi]

; 676  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Tail);

  000fc	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 599  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  000ff	89 45 f0	 mov	 DWORD PTR __Appended$3$[ebp], eax

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  00102	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __Newnode$5[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 677  :             _Tail = _STD exchange(_Newnode._Ptr, pointer{});

  00109	89 45 c4	 mov	 DWORD PTR __Appended$2[ebp+8], eax

; 678  :             ++_Added;

  0010c	89 5d c0	 mov	 DWORD PTR __Appended$2[ebp+4], ebx

; 74   :         return _Ptr == _Right._Ptr;

  0010f	3b f7		 cmp	 esi, edi

; 672  :         while (_First != _Last) { // throws

  00111	75 ad		 jne	 SHORT $LL33@Uninitiali
$LN79@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00113	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  00116	89 75 d8	 mov	 DWORD PTR __Newnode$4[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00119	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 715  :         _Alloc_construct_ptr<_Alnode> _Newnode(_Al);

  0011b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0011f	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR __Newnode$4[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00126	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0012b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  0012e	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR __Appended$2[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  00135	8b f8		 mov	 edi, eax
  00137	89 7d dc	 mov	 DWORD PTR __Newnode$4[ebp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 718  :         if (_Local_added == 0) {

  0013a	85 db		 test	 ebx, ebx
  0013c	75 1c		 jne	 SHORT $LN85@Uninitiali

; 719  :             _Construct_in_place(_Newnode._Ptr->_Next, _Newnode._Ptr);

  0013e	8d 45 dc	 lea	 eax, DWORD PTR __Newnode$4[ebp+4]
  00141	50		 push	 eax
  00142	57		 push	 edi
  00143	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>

; 720  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Newnode._Ptr);

  00148	8d 45 dc	 lea	 eax, DWORD PTR __Newnode$4[ebp+4]
  0014b	50		 push	 eax
  0014c	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>
  00155	83 c4 10	 add	 esp, 16			; 00000010H

; 721  :         } else {

  00158	eb 42		 jmp	 SHORT $LN86@Uninitiali
$LN85@Uninitiali:

; 722  :             const auto _Local_head = _Head;

  0015a	8b 45 ec	 mov	 eax, DWORD PTR __Appended$2$[ebp]
  0015d	89 45 10	 mov	 DWORD PTR __Local_head$7[ebp], eax

; 723  :             const auto _Local_tail = _Tail;

  00160	8b 45 f0	 mov	 eax, DWORD PTR __Appended$3$[ebp]
  00163	89 45 e8	 mov	 DWORD PTR __Local_tail$6[ebp], eax

; 724  :             _Construct_in_place(_Newnode._Ptr->_Next, _Local_head);

  00166	8d 45 10	 lea	 eax, DWORD PTR __Local_head$7[ebp]
  00169	50		 push	 eax
  0016a	57		 push	 edi
  0016b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 725  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Local_tail);

  00170	8d 45 e8	 lea	 eax, DWORD PTR __Local_tail$6[ebp]
  00173	50		 push	 eax
  00174	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 726  :             _Construct_in_place(_Local_head->_Prev, _Newnode._Ptr);

  0017d	8d 45 dc	 lea	 eax, DWORD PTR __Newnode$4[ebp+4]
  00180	50		 push	 eax
  00181	8b 45 ec	 mov	 eax, DWORD PTR __Appended$2$[ebp]
  00184	83 c0 04	 add	 eax, 4
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>

; 727  :             _Construct_in_place(_Local_tail->_Next, _Newnode._Ptr);

  0018d	8d 45 dc	 lea	 eax, DWORD PTR __Newnode$4[ebp+4]
  00190	50		 push	 eax
  00191	ff 75 f0	 push	 DWORD PTR __Appended$3$[ebp]
  00194	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>
  00199	83 c4 20	 add	 esp, 32			; 00000020H
$LN86@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  0019c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0019f	83 c1 08	 add	 ecx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 730  :         _List_data._Mysize = _Local_added;

  001a2	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 731  :         _List_data._Myhead = _Newnode._Release();

  001a5	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  001a7	83 c6 08	 add	 esi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility

; 600  :     _Val         = static_cast<_Other&&>(_New_val);

  001aa	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR __Newnode$4[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 868  :     }

  001b1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  001b5	89 75 10	 mov	 DWORD PTR __Dest$[ebp], esi
  001b8	89 75 d0	 mov	 DWORD PTR __Backout$3[ebp+4], esi

; 1541 :         for (; _UFirst != _ULast; ++_UFirst) {

  001bb	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
  001be	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  001c1	0f 85 99 fe ff
	ff		 jne	 $LL4@Uninitiali
  001c7	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  001ca	50		 push	 eax
  001cb	56		 push	 esi
  001cc	56		 push	 esi
  001cd	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  001d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1542 :             _Backout._Emplace_back(*_UFirst);
; 1543 :         }
; 1544 : 
; 1545 :         _Dest = _Backout._Release();
; 1546 :     }
; 1547 : 
; 1548 :     return _Dest;

  001d5	8b c6		 mov	 eax, esi

; 1549 : }

  001d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e1	59		 pop	 ecx
  001e2	5f		 pop	 edi
  001e3	5e		 pop	 esi
  001e4	5b		 pop	 ebx
  001e5	8b e5		 mov	 esp, ebp
  001e7	5d		 pop	 ebp
  001e8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR __Backout$3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$1:
  00008	8d 4d bc	 lea	 ecx, DWORD PTR __Appended$2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_List_node_insert_op2@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_List_node_insert_op2<std::allocator<std::_List_node<CParticleInstance *,void *> > >
__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$2:
  00010	8d 4d e0	 lea	 ecx, DWORD PTR __Newnode$5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
__unwindfunclet$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR __Newnode$4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > *,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >, COMDAT
; _this$ = ecx

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1504 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCParticleSystemInstance@@PAPAV1@@std@@YAPAPAVCParticleSystemInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCParticleSystemInstance@@PAPAV1@@std@@YAPAPAVCParticleSystemInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CParticleSystemInstance * *,CParticleSystemInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCParticleSystemInstance@@PAPAV1@@std@@YAPAPAVCParticleSystemInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CParticleSystemInstance * *,CParticleSystemInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<CParticleInstance *,void *> *>, COMDAT

; 268  :     _Obj.~_Ty();
; 269  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<CParticleInstance *,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__Newhead$3 = 8						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >, COMDAT

; 1824 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1497 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0002b	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0002e	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00031	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00034	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  00037	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00041	85 db		 test	 ebx, ebx
  00043	74 4e		 je	 SHORT $LN3@Uninitiali
  00045	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@Uninitiali:

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00050	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

  00052	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00058	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1775 :         auto _Newhead = _Al.allocate(1);

  00064	8b f0		 mov	 esi, eax

; 1776 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  00066	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  00069	50		 push	 eax
  0006a	56		 push	 esi
  0006b	89 75 08	 mov	 DWORD PTR __Newhead$3[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>

; 1777 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  00073	8d 45 08	 lea	 eax, DWORD PTR __Newhead$3[ebp]
  00076	50		 push	 eax
  00077	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * &>

; 1778 :         _Mypair._Myval2._Myhead = _Newhead;

  00080	89 37		 mov	 DWORD PTR [edi], esi
  00082	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1509 :         ++_Last;

  00085	83 c7 08	 add	 edi, 8
  00088	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1825 :     // value-initialize _Count objects to raw _First, using _Al
; 1826 :     using _Ptrty = typename _Alloc::value_type*;
; 1827 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1828 :         auto _PFirst = _Unfancy(_First);
; 1829 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1830 :         return _First + _Count;
; 1831 :     } else {
; 1832 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1833 :         for (; 0 < _Count; --_Count) {

  0008b	83 eb 01	 sub	 ebx, 1
  0008e	75 c0		 jne	 SHORT $LL4@Uninitiali
  00090	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1503 :         _Destroy_range(_First, _Last, _Al);

  00093	50		 push	 eax
  00094	57		 push	 edi
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 :             _Backout._Emplace_back();
; 1835 :         }
; 1836 : 
; 1837 :         return _Backout._Release();

  0009e	8b c7		 mov	 eax, edi

; 1838 :     }
; 1839 : }

  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~_Uninitialized_backout_al<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z PROC ; std::_Uninitialized_move<CParticleSystemInstance * *,std::allocator<CParticleSystemInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleSystemInstance@@PAPAV1@@std@@YAPAPAVCParticleSystemInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemInstance * *,CParticleSystemInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CParticleSystemInstance * *,std::allocator<CParticleSystemInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Newvec$ = -36						; size = 4
_this$ = -32						; size = 4
__Appended_first$ = -28					; size = 4
tv353 = -24						; size = 4
__Oldsize$1$ = -20					; size = 4
__Appended_last$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 e0	 mov	 DWORD PTR _this$[ebp], esi

; 1183 :         if (_Newsize > max_size()) {

  00030	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  00033	81 ff ff ff ff
	1f		 cmp	 edi, 536870911		; 1fffffffH
  00039	0f 87 f7 00 00
	00		 ja	 $LN39@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0003f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00042	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00047	2b 0e		 sub	 ecx, DWORD PTR [esi]
  00049	c1 f9 03	 sar	 ecx, 3
  0004c	89 4d ec	 mov	 DWORD PTR __Oldsize$1$[ebp], ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004f	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00052	2b 0e		 sub	 ecx, DWORD PTR [esi]
  00054	c1 f9 03	 sar	 ecx, 3

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00057	8b d1		 mov	 edx, ecx
  00059	d1 ea		 shr	 edx, 1
  0005b	2b c2		 sub	 eax, edx
  0005d	3b c8		 cmp	 ecx, eax
  0005f	77 17		 ja	 SHORT $LN37@Resize_rea

; 1620 :             return _Newsize; // geometric growth would overflow
; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00061	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  00064	3b c7		 cmp	 eax, edi
  00066	72 10		 jb	 SHORT $LN37@Resize_rea

; 1626 :             return _Newsize; // geometric growth would be insufficient
; 1627 :         }
; 1628 : 
; 1629 :         return _Geometric; // geometric growth is sufficient

  00068	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  0006b	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00070	0f 87 c5 00 00
	00		 ja	 $LN40@Resize_rea
  00076	eb 05		 jmp	 SHORT $LN18@Resize_rea
$LN37@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00078	8b c7		 mov	 eax, edi
  0007a	89 45 08	 mov	 DWORD PTR __Newcapacity$[ebp], eax
$LN18@Resize_rea:
  0007d	c1 e0 03	 shl	 eax, 3

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00080	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00081	89 45 e8	 mov	 DWORD PTR tv353[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00084	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00089	8b 4d ec	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008c	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0008e	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00090	89 5d dc	 mov	 DWORD PTR __Newvec$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00093	56		 push	 esi

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00094	2b c1		 sub	 eax, ecx
  00096	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0009d	8d 14 cb	 lea	 edx, DWORD PTR [ebx+ecx*8]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000a0	50		 push	 eax
  000a1	52		 push	 edx

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000a2	89 55 e4	 mov	 DWORD PTR __Appended_first$[ebp], edx

; 1196 :         pointer _Appended_last        = _Appended_first;

  000a5	89 55 ec	 mov	 DWORD PTR __Appended_last$[ebp], edx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  000ad	83 c4 10	 add	 esp, 16			; 00000010H

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000b0	89 45 ec	 mov	 DWORD PTR __Appended_last$[ebp], eax

; 1602 :         _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000b3	56		 push	 esi
  000b4	53		 push	 ebx
  000b5	ff 76 04	 push	 DWORD PTR [esi+4]
  000b8	ff 36		 push	 DWORD PTR [esi]
  000ba	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@0PAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > *,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000bf	8b 06		 mov	 eax, DWORD PTR [esi]

; 1602 :         _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  000c1	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000c4	85 c0		 test	 eax, eax
  000c6	74 1e		 je	 SHORT $LN29@Resize_rea

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000c8	56		 push	 esi
  000c9	ff 76 04	 push	 DWORD PTR [esi+4]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000d2	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000d4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d7	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d9	83 e0 f8	 and	 eax, -8			; fffffff8H
  000dc	50		 push	 eax
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e3	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000e6	8d 04 fb	 lea	 eax, DWORD PTR [ebx+edi*8]
  000e9	89 1e		 mov	 DWORD PTR [esi], ebx
  000eb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000ee	8b 45 e8	 mov	 eax, DWORD PTR tv353[ebp]
  000f1	03 c3		 add	 eax, ebx
  000f3	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 1208 :     }

  000f6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00100	59		 pop	 ecx
  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 08 00	 ret	 8
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1201 :         _CATCH_ALL
; 1202 :         _Destroy(_Appended_first, _Appended_last);

  0010a	ff 75 ec	 push	 DWORD PTR __Appended_last$[ebp]
  0010d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 75 e4	 push	 DWORD PTR __Appended_first$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@0@Z ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Destroy

; 1203 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00118	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	ff 75 dc	 push	 DWORD PTR __Newvec$[ebp]
  00121	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@XZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Getal
  00126	8b c8		 mov	 ecx, eax
  00128	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@QAEXQAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@I@Z ; std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > >::deallocate

; 1204 :         _RERAISE;

  0012d	6a 00		 push	 0
  0012f	6a 00		 push	 0
  00131	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN39@Resize_rea:

; 1184 :             _Xlength();

  00136	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Xlength
$LN40@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN36@Resize_rea:
  00140	cc		 int	 3
  00141	cc		 int	 3
  00142	cc		 int	 3
  00143	cc		 int	 3
  00144	cc		 int	 3
  00145	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >, COMDAT
; _this$ = ecx

; 1052 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 0c		 push	 12			; 0000000cH
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1053 :             _Al.deallocate(_Ptr, 1);
; 1054 :         }
; 1055 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAXPAPAVCParticleSystemInstance@@QAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAXPAPAVCParticleSystemInstance@@QAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CParticleSystemInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAXPAPAVCParticleSystemInstance@@QAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CParticleSystemInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >, COMDAT

; 955  : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  0000b	3b fb		 cmp	 edi, ebx
  0000d	74 39		 je	 SHORT $LN3@Destroy_ra
  0000f	56		 push	 esi
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1440 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  00010	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0001b	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0001d	85 c0		 test	 eax, eax
  0001f	74 13		 je	 SHORT $LN17@Destroy_ra
$LL18@Destroy_ra:

; 328  :             _Pnext = _Pnode->_Next;

  00021	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 0c		 push	 12			; 0000000cH
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0002e	8b c6		 mov	 eax, esi
  00030	85 f6		 test	 esi, esi
  00032	75 ed		 jne	 SHORT $LL18@Destroy_ra
$LN17@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00034	6a 0c		 push	 12			; 0000000cH
  00036	ff 37		 push	 DWORD PTR [edi]
  00038	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {

  0003d	83 c7 08	 add	 edi, 8

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	83 c4 08	 add	 esp, 8

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {

  00043	3b fb		 cmp	 edi, ebx
  00045	75 c9		 jne	 SHORT $LL4@Destroy_ra
  00047	5e		 pop	 esi
$LN3@Destroy_ra:
  00048	5f		 pop	 edi

; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00049	5b		 pop	 ebx
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAXPAPAVCGraphicImageInstance@@QAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Emplace_reallocate<CParticleSystemInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ; std::_Uninitialized_move<CParticleSystemInstance * *,std::allocator<CParticleSystemInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@YAPAPAVCParticleSystemInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleSystemInstance@@@0@@Z ; std::_Uninitialized_move<CParticleSystemInstance * *,std::allocator<CParticleSystemInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Emplace_reallocate<CParticleSystemInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
;	COMDAT ??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z
_TEXT	SEGMENT
_dwFrameIndex$1$ = -36					; size = 4
_FunObj$GSCopy$1$ = -32					; size = 4
$T1 = -28						; size = 12
$T2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_FunObj$ = 8						; size = 4
??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z PROC ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::ThreeSideRenderer>, COMDAT
; _this$ = ecx

; 25   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _FunObj$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx
  00016	89 45 e0	 mov	 DWORD PTR _FunObj$GSCopy$1$[ebp], eax
  00019	57		 push	 edi

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0001a	33 ff		 xor	 edi, edi
  0001c	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001f	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00022	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  00025	2b c1		 sub	 eax, ecx
  00027	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 62 01 00
	00		 je	 $LN71@ForEachPar
  00032	56		 push	 esi
$LL4@ForEachPar:

; 28   : 			{
; 29   : 				STATEMANAGER.SetTexture(0, m_kVct_pkImgInst[dwFrameIndex]->GetTextureReference().GetD3DTexture());

  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00036	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00050	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00053	8b 04 f8	 mov	 eax, DWORD PTR [eax+edi*8]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00056	8b 30		 mov	 esi, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  00058	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  0005a	0f 84 1c 01 00
	00		 je	 $LN2@ForEachPar
$LL7@ForEachPar:

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  00060	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]

; 32   : 				{
; 33   : 					if (!InFrustum(*itor))

  00063	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  00066	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0006a	74 3a		 je	 SHORT $LN47@ForEachPar

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  00074	f3 0f 10 48 38	 movss	 xmm1, DWORD PTR [eax+56]
  00079	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  0007e	f3 0f 58 51 10	 addss	 xmm2, DWORD PTR [ecx+16]
  00083	f3 0f 58 49 14	 addss	 xmm1, DWORD PTR [ecx+20]
  00088	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 38   : 		y = b;

  0008d	f3 0f 11 55 f4	 movss	 DWORD PTR $T2[ebp+4], xmm2

; 39   : 		z = c;

  00092	f3 0f 11 4d f8	 movss	 DWORD PTR $T2[ebp+8], xmm1
  00097	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  0009c	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  000a1	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000a4	eb 26		 jmp	 SHORT $LN73@ForEachPar
$LN47@ForEachPar:
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 37   : 		x = a;

  000a6	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000ab	f3 0f 11 45 e4	 movss	 DWORD PTR $T1[ebp], xmm0

; 38   : 		y = b;

  000b0	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000b5	f3 0f 11 45 e8	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 39   : 		z = c;

  000ba	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  000bf	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 56   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(pInstance->m_v3Position.x,pInstance->m_v3Position.y,pInstance->m_v3Position.z),pInstance->GetRadiusApproximation())!=VS_OUTSIDE;

  000c4	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  000c9	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
$LN73@ForEachPar:

; 32   : 				{
; 33   : 					if (!InFrustum(*itor))

  000cc	51		 push	 ecx
  000cd	d9 1c 24	 fstp	 DWORD PTR [esp]
  000d0	50		 push	 eax
  000d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_frustum@CScreen@@1VFrustum@@A ; CScreen::ms_frustum
  000d6	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  000db	83 f8 02	 cmp	 eax, 2
  000de	0f 95 c0	 setne	 al
  000e1	84 c0		 test	 al, al
  000e3	0f 84 aa 00 00
	00		 je	 $LN72@ForEachPar
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 378  : 			pInstance->Transform(pmat);

  000e9	8b 45 e0	 mov	 eax, DWORD PTR _FunObj$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 35   : 					FunObj(*itor);

  000ec	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 378  : 			pInstance->Transform(pmat);

  000ef	8b cf		 mov	 ecx, edi
  000f1	ff 30		 push	 DWORD PTR [eax]
  000f3	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z ; CParticleInstance::Transform

; 379  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  000f8	6a 14		 push	 20			; 00000014H
  000fa	8b cf		 mov	 ecx, edi
  000fc	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  00101	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00107	50		 push	 eax
  00108	6a 02		 push	 2
  0010a	6a 05		 push	 5
  0010c	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 380  : 			pInstance->Transform(pmat,D3DXToRadian(-60.0f));

  00111	8b 45 e0	 mov	 eax, DWORD PTR _FunObj$GSCopy$1$[ebp]
  00114	51		 push	 ecx
  00115	c7 04 24 92 0a
	86 bf		 mov	 DWORD PTR [esp], -1081734510 ; bf860a92H
  0011c	8b cf		 mov	 ecx, edi
  0011e	ff 30		 push	 DWORD PTR [eax]
  00120	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CParticleInstance::Transform

; 381  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  00125	6a 14		 push	 20			; 00000014H
  00127	8b cf		 mov	 ecx, edi
  00129	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00134	50		 push	 eax
  00135	6a 02		 push	 2
  00137	6a 05		 push	 5
  00139	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 382  : 			pInstance->Transform(pmat,D3DXToRadian(+60.0f));

  0013e	8b 45 e0	 mov	 eax, DWORD PTR _FunObj$GSCopy$1$[ebp]
  00141	51		 push	 ecx
  00142	c7 04 24 92 0a
	86 3f		 mov	 DWORD PTR [esp], 1065749138 ; 3f860a92H
  00149	8b cf		 mov	 ecx, edi
  0014b	ff 30		 push	 DWORD PTR [eax]
  0014d	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CParticleInstance::Transform

; 383  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  00152	6a 14		 push	 20			; 00000014H
  00154	8b cf		 mov	 ecx, edi
  00156	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00161	50		 push	 eax
  00162	6a 02		 push	 2
  00164	6a 05		 push	 5
  00166	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0016b	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 199  :         return this->_Ptr == _Right._Ptr;

  0016e	8b 7d dc	 mov	 edi, DWORD PTR _dwFrameIndex$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00171	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00173	3b 34 f8	 cmp	 esi, DWORD PTR [eax+edi*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  00176	0f 85 e4 fe ff
	ff		 jne	 $LL7@ForEachPar
$LN2@ForEachPar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0017c	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0017f	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00180	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  00183	2b c1		 sub	 eax, ecx
  00185	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  00188	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
  0018b	3b f8		 cmp	 edi, eax
  0018d	0f 82 a0 fe ff
	ff		 jb	 $LL4@ForEachPar
$LN72@ForEachPar:
  00193	5e		 pop	 esi
$LN71@ForEachPar:

; 36   : 				}
; 37   : 			}
; 38   : 		}

  00194	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00197	5f		 pop	 edi
  00198	33 cd		 xor	 ecx, ebp
  0019a	5b		 pop	 ebx
  0019b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a0	8b e5		 mov	 esp, ebp
  001a2	5d		 pop	 ebp
  001a3	c2 04 00	 ret	 4
??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z ENDP ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::ThreeSideRenderer>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
;	COMDAT ??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z
_TEXT	SEGMENT
_dwFrameIndex$1$ = -36					; size = 4
_FunObj$GSCopy$1$ = -32					; size = 4
$T1 = -28						; size = 12
$T2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_FunObj$ = 8						; size = 4
??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z PROC ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::TwoSideRenderer>, COMDAT
; _this$ = ecx

; 25   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _FunObj$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx
  00016	89 45 e0	 mov	 DWORD PTR _FunObj$GSCopy$1$[ebp], eax
  00019	57		 push	 edi

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0001a	33 ff		 xor	 edi, edi
  0001c	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001f	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00022	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  00025	2b c1		 sub	 eax, ecx
  00027	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 3d 01 00
	00		 je	 $LN71@ForEachPar
  00032	56		 push	 esi
$LL4@ForEachPar:

; 28   : 			{
; 29   : 				STATEMANAGER.SetTexture(0, m_kVct_pkImgInst[dwFrameIndex]->GetTextureReference().GetD3DTexture());

  00033	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00036	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00050	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  00053	8b 04 f8	 mov	 eax, DWORD PTR [eax+edi*8]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00056	8b 30		 mov	 esi, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  00058	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  0005a	0f 84 f7 00 00
	00		 je	 $LN2@ForEachPar
$LL7@ForEachPar:

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  00060	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]

; 32   : 				{
; 33   : 					if (!InFrustum(*itor))

  00063	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  00066	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0006a	74 3a		 je	 SHORT $LN47@ForEachPar

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  0006c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006f	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  00074	f3 0f 10 48 38	 movss	 xmm1, DWORD PTR [eax+56]
  00079	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  0007e	f3 0f 58 51 10	 addss	 xmm2, DWORD PTR [ecx+16]
  00083	f3 0f 58 49 14	 addss	 xmm1, DWORD PTR [ecx+20]
  00088	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 38   : 		y = b;

  0008d	f3 0f 11 55 f4	 movss	 DWORD PTR $T2[ebp+4], xmm2

; 39   : 		z = c;

  00092	f3 0f 11 4d f8	 movss	 DWORD PTR $T2[ebp+8], xmm1
  00097	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  0009c	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  000a1	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  000a4	eb 26		 jmp	 SHORT $LN73@ForEachPar
$LN47@ForEachPar:
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 37   : 		x = a;

  000a6	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  000ab	f3 0f 11 45 e4	 movss	 DWORD PTR $T1[ebp], xmm0

; 38   : 		y = b;

  000b0	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000b5	f3 0f 11 45 e8	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 39   : 		z = c;

  000ba	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  000bf	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 56   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(pInstance->m_v3Position.x,pInstance->m_v3Position.y,pInstance->m_v3Position.z),pInstance->GetRadiusApproximation())!=VS_OUTSIDE;

  000c4	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  000c9	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
$LN73@ForEachPar:

; 32   : 				{
; 33   : 					if (!InFrustum(*itor))

  000cc	51		 push	 ecx
  000cd	d9 1c 24	 fstp	 DWORD PTR [esp]
  000d0	50		 push	 eax
  000d1	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_frustum@CScreen@@1VFrustum@@A ; CScreen::ms_frustum
  000d6	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  000db	83 f8 02	 cmp	 eax, 2
  000de	0f 95 c0	 setne	 al
  000e1	84 c0		 test	 al, al
  000e3	0f 84 85 00 00
	00		 je	 $LN72@ForEachPar
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 360  : 			pInstance->Transform(pmat,D3DXToRadian(-30.0f));

  000e9	8b 45 e0	 mov	 eax, DWORD PTR _FunObj$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 35   : 					FunObj(*itor);

  000ec	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 360  : 			pInstance->Transform(pmat,D3DXToRadian(-30.0f));

  000ef	51		 push	 ecx
  000f0	c7 04 24 92 0a
	06 bf		 mov	 DWORD PTR [esp], -1090123118 ; bf060a92H
  000f7	8b cf		 mov	 ecx, edi
  000f9	ff 30		 push	 DWORD PTR [eax]
  000fb	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CParticleInstance::Transform

; 361  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  00100	6a 14		 push	 20			; 00000014H
  00102	8b cf		 mov	 ecx, edi
  00104	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010f	50		 push	 eax
  00110	6a 02		 push	 2
  00112	6a 05		 push	 5
  00114	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP

; 362  : 
; 363  : 			pInstance->Transform(pmat,D3DXToRadian(+30.0f));

  00119	8b 45 e0	 mov	 eax, DWORD PTR _FunObj$GSCopy$1$[ebp]
  0011c	51		 push	 ecx
  0011d	c7 04 24 92 0a
	06 3f		 mov	 DWORD PTR [esp], 1057360530 ; 3f060a92H
  00124	8b cf		 mov	 ecx, edi
  00126	ff 30		 push	 DWORD PTR [eax]
  00128	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CParticleInstance::Transform

; 364  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  0012d	6a 14		 push	 20			; 00000014H
  0012f	8b cf		 mov	 ecx, edi
  00131	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0013c	50		 push	 eax
  0013d	6a 02		 push	 2
  0013f	6a 05		 push	 5
  00141	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00146	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 199  :         return this->_Ptr == _Right._Ptr;

  00149	8b 7d dc	 mov	 edi, DWORD PTR _dwFrameIndex$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0014c	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  0014e	3b 34 f8	 cmp	 esi, DWORD PTR [eax+edi*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  00151	0f 85 09 ff ff
	ff		 jne	 $LL7@ForEachPar
$LN2@ForEachPar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00157	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0015a	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0015b	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  0015e	2b c1		 sub	 eax, ecx
  00160	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  00163	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
  00166	3b f8		 cmp	 edi, eax
  00168	0f 82 c5 fe ff
	ff		 jb	 $LL4@ForEachPar
$LN72@ForEachPar:
  0016e	5e		 pop	 esi
$LN71@ForEachPar:

; 36   : 				}
; 37   : 			}
; 38   : 		}

  0016f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00172	5f		 pop	 edi
  00173	33 cd		 xor	 ecx, ebp
  00175	5b		 pop	 ebx
  00176	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017b	8b e5		 mov	 esp, ebp
  0017d	5d		 pop	 ebp
  0017e	c2 04 00	 ret	 4
??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z ENDP ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::TwoSideRenderer>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CParticleSystemInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A ; CParticleSystemInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ ; CDynamicPool<CParticleSystemInstance>::~CDynamicPool<CParticleSystemInstance>
??__F?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CParticleSystemInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ??__E?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CParticleSystemInstance::ms_kPool'', COMDAT

; 8    : CDynamicPool<CParticleSystemInstance>	CParticleSystemInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CParticleSystemInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CParticleSystemInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CParticleSystemInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ ; CDynamicPool<CParticleSystemInstance>::~CDynamicPool<CParticleSystemInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCParticleSystemInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CParticleSystemInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCParticleSystemInstance@@@@KAXPAVCParticleSystemInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCParticleSystemInstance@@@@KAXPAVCParticleSystemInstance@@@Z PROC ; CDynamicPool<CParticleSystemInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCParticleSystemInstance@@@@KAXPAVCParticleSystemInstance@@@Z ENDP ; CDynamicPool<CParticleSystemInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ PROC ; CDynamicPool<CParticleSystemInstance>::~CDynamicPool<CParticleSystemInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCParticleSystemInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCParticleSystemInstance@@@@UAE@XZ ENDP ; CDynamicPool<CParticleSystemInstance>::~CDynamicPool<CParticleSystemInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCParticleSystemInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCParticleSystemInstance@@UAEPAXI@Z PROC		; CParticleSystemInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CParticleSystemInstance@@UAE@XZ ; CParticleSystemInstance::~CParticleSystemInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 54		 push	 84			; 00000054H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCParticleSystemInstance@@UAEPAXI@Z ENDP		; CParticleSystemInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv254 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;
; 1254 :         pointer& _Myfirst = _My_data._Myfirst;
; 1255 :         pointer& _Mylast  = _My_data._Mylast;
; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0000e	2b 3e		 sub	 edi, DWORD PTR [esi]
  00010	c1 ff 02	 sar	 edi, 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00013	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00018	77 4c		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0001a	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0001d	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0001e	89 45 08	 mov	 DWORD PTR tv254[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00021	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00026	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00027	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00029	53		 push	 ebx
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	ff 36		 push	 DWORD PTR [esi]
  0002f	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@YAPAPAVCGraphicImageInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCGraphicImageInstance@@@0@@Z ; std::_Uninitialized_move<CGraphicImageInstance * *,std::allocator<CGraphicImageInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00034	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00036	83 c4 14	 add	 esp, 20			; 00000014H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  00039	85 c9		 test	 ecx, ecx
  0003b	74 12		 je	 SHORT $LN20@Reallocate

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00040	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00042	83 e0 fc	 and	 eax, -4			; fffffffcH
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0004c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  0004f	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00052	89 1e		 mov	 DWORD PTR [esi], ebx
  00054	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  00057	8b 45 08	 mov	 eax, DWORD PTR tv254[ebp]
  0005a	03 c3		 add	 eax, ebx
  0005c	5f		 pop	 edi
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx

; 1269 :     }

  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00066	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0006b	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 26		 je	 SHORT $LN4@vector

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e0 fc	 and	 eax, -4			; fffffffcH
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00021	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00028	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0002f	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00030	c3		 ret	 0
??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Getal@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@XZ PROC ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Getal, COMDAT
; _this$ = ecx

; 1732 :         return _Mypair._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 1733 :     }

  00002	c3		 ret	 0
?_Getal@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@XZ ENDP ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Destroy@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@0@Z PROC ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@0@Z ENDP ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??1?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 32		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	56		 push	 esi
  0000a	ff 76 04	 push	 DWORD PTR [esi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00015	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00018	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001a	83 e0 f8	 and	 eax, -8			; fffffff8H
  0001d	50		 push	 eax
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00024	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002a	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0002d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1699 :             _Myend   = pointer();

  00034	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  0003b	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0003c	c3		 ret	 0
??1?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@QAEXQAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@QAEXQAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@I@Z PROC ; std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > >::deallocate, COMDAT
; _this$ = ecx

; 801  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 802  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	c1 e0 03	 shl	 eax, 3
  00009	50		 push	 eax
  0000a	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0000d	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00012	83 c4 08	 add	 esp, 8

; 804  :     }

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@QAEXQAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@2@I@Z ENDP ; std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?OnRender@CParticleSystemInstance@@MAEXXZ
_TEXT	SEGMENT
_dwFrameIndex$1$ = -36					; size = 4
_dwFrameIndex$1$ = -36					; size = 4
_this$GSCopy$1$ = -32					; size = 4
$T1 = -32						; size = 4
$T2 = -32						; size = 4
$T3 = -32						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 12
$T6 = -28						; size = 12
$T7 = -16						; size = 12
$T8 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?OnRender@CParticleSystemInstance@@MAEXXZ PROC		; CParticleSystemInstance::OnRender, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b d9		 mov	 ebx, ecx
  00013	89 5d e0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx

; 413  : 	CScreen::Identity();

  00016	e8 00 00 00 00	 call	 ?Identity@CScreen@@SAXXZ ; CScreen::Identity

; 414  : 	STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, m_pParticleProperty->m_bySrcBlendType);

  0001b	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	0f b6 40 10	 movzx	 eax, BYTE PTR [eax+16]
  00028	50		 push	 eax
  00029	6a 13		 push	 19			; 00000013H
  0002b	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 415  : 	STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, m_pParticleProperty->m_byDestBlendType);

  00030	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00039	0f b6 40 11	 movzx	 eax, BYTE PTR [eax+17]
  0003d	50		 push	 eax
  0003e	6a 14		 push	 20			; 00000014H
  00040	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 416  : 	STATEMANAGER.SetTextureStageState(0,D3DTSS_COLOROP,m_pParticleProperty->m_byColorOperationType);

  00045	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004e	0f b6 40 12	 movzx	 eax, BYTE PTR [eax+18]
  00052	50		 push	 eax
  00053	6a 01		 push	 1
  00055	6a 00		 push	 0
  00057	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 417  : 	if (m_pParticleProperty->m_byBillboardType < BILLBOARD_TYPE_2FACE)

  0005c	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  0005f	8a 48 13	 mov	 cl, BYTE PTR [eax+19]
  00062	80 f9 04	 cmp	 cl, 4
  00065	0f 83 62 02 00
	00		 jae	 $LN2@OnRender

; 418  : 	{
; 419  : 		if (!m_pParticleProperty->m_bAttachFlag)

  0006b	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0006f	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  00072	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00075	56		 push	 esi
  00076	57		 push	 edi
  00077	0f 85 26 01 00
	00		 jne	 $LN4@OnRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0007d	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0007f	33 ff		 xor	 edi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00081	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  00084	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
  00087	85 c0		 test	 eax, eax
  00089	0f 84 03 01 00
	00		 je	 $LN164@OnRender
  0008f	90		 npad	 1
$LL17@OnRender:

; 28   : 			{
; 29   : 				STATEMANAGER.SetTexture(0, m_kVct_pkImgInst[dwFrameIndex]->GetTextureReference().GetD3DTexture());

  00090	8b 0c b9	 mov	 ecx, DWORD PTR [ecx+edi*4]
  00093	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000a5	50		 push	 eax
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  000ad	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  000b0	8b 04 f8	 mov	 eax, DWORD PTR [eax+edi*8]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  000b3	8b 30		 mov	 esi, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  000b5	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  000b7	0f 84 be 00 00
	00		 je	 $LN15@OnRender
  000bd	0f 1f 00	 npad	 3
$LL20@OnRender:

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  000c0	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]

; 33   : 					if (!InFrustum(*itor))

  000c3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  000c6	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  000ca	74 3a		 je	 SHORT $LN60@OnRender

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  000cc	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cf	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  000d4	f3 0f 10 48 38	 movss	 xmm1, DWORD PTR [eax+56]
  000d9	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  000de	f3 0f 58 51 10	 addss	 xmm2, DWORD PTR [ecx+16]
  000e3	f3 0f 58 49 14	 addss	 xmm1, DWORD PTR [ecx+20]
  000e8	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 38   : 		y = b;

  000ed	f3 0f 11 55 f4	 movss	 DWORD PTR $T8[ebp+4], xmm2

; 39   : 		z = c;

  000f2	f3 0f 11 4d f8	 movss	 DWORD PTR $T8[ebp+8], xmm1
  000f7	f3 0f 11 45 f0	 movss	 DWORD PTR $T8[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  000fc	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  00101	8d 45 f0	 lea	 eax, DWORD PTR $T8[ebp]
  00104	eb 26		 jmp	 SHORT $LN166@OnRender
$LN60@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 37   : 		x = a;

  00106	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0010b	f3 0f 11 45 e4	 movss	 DWORD PTR $T6[ebp], xmm0

; 38   : 		y = b;

  00110	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  00115	f3 0f 11 45 e8	 movss	 DWORD PTR $T6[ebp+4], xmm0

; 39   : 		z = c;

  0011a	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  0011f	f3 0f 11 45 ec	 movss	 DWORD PTR $T6[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 56   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(pInstance->m_v3Position.x,pInstance->m_v3Position.y,pInstance->m_v3Position.z),pInstance->GetRadiusApproximation())!=VS_OUTSIDE;

  00124	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  00129	8d 45 e4	 lea	 eax, DWORD PTR $T6[ebp]
$LN166@OnRender:

; 33   : 					if (!InFrustum(*itor))

  0012c	51		 push	 ecx
  0012d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00130	50		 push	 eax
  00131	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_frustum@CScreen@@1VFrustum@@A ; CScreen::ms_frustum
  00136	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  0013b	83 f8 02	 cmp	 eax, 2
  0013e	0f 95 c0	 setne	 al
  00141	84 c0		 test	 al, al
  00143	74 4d		 je	 SHORT $LN164@OnRender

; 34   : 						return;
; 35   : 					FunObj(*itor);

  00145	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 391  : 			pInstance->Transform();

  00148	8b cf		 mov	 ecx, edi
  0014a	6a 00		 push	 0
  0014c	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z ; CParticleInstance::Transform

; 392  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  00151	6a 14		 push	 20			; 00000014H
  00153	8b cf		 mov	 ecx, edi
  00155	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00160	50		 push	 eax
  00161	6a 02		 push	 2
  00163	6a 05		 push	 5
  00165	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0016a	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 199  :         return this->_Ptr == _Right._Ptr;

  0016d	8b 7d dc	 mov	 edi, DWORD PTR _dwFrameIndex$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00170	8b 36		 mov	 esi, DWORD PTR [esi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00172	3b 34 f8	 cmp	 esi, DWORD PTR [eax+edi*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  00175	0f 85 45 ff ff
	ff		 jne	 $LL20@OnRender
$LN15@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0017b	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  0017e	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0017f	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  00182	2b c1		 sub	 eax, ecx
  00184	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  00187	89 7d dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edi
  0018a	3b f8		 cmp	 edi, eax
  0018c	0f 82 fe fe ff
	ff		 jb	 $LL17@OnRender
$LN164@OnRender:
  00192	5f		 pop	 edi
  00193	5e		 pop	 esi
$LN12@OnRender:
  00194	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 450  : }

  00195	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00198	33 cd		 xor	 ecx, ebp
  0019a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019f	8b e5		 mov	 esp, ebp
  001a1	5d		 pop	 ebp
  001a2	c3		 ret	 0
$LN4@OnRender:

; 399  : 			: pmat(pmat)

  001a3	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001a6	2b c1		 sub	 eax, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  001a8	33 d2		 xor	 edx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001aa	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  001ad	89 55 dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edx
  001b0	85 c0		 test	 eax, eax
  001b2	74 de		 je	 SHORT $LN164@OnRender
$LL78@OnRender:

; 28   : 			{
; 29   : 				STATEMANAGER.SetTexture(0, m_kVct_pkImgInst[dwFrameIndex]->GetTextureReference().GetD3DTexture());

  001b4	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  001b7	e8 00 00 00 00	 call	 ?GetTextureReference@CGraphicImageInstance@@QBEABVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTextureReference
  001bc	8b c8		 mov	 ecx, eax
  001be	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  001c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c9	50		 push	 eax
  001ca	6a 00		 push	 0
  001cc	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  001d1	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  001d4	8b 55 dc	 mov	 edx, DWORD PTR _dwFrameIndex$1$[ebp]
  001d7	8b 04 d0	 mov	 eax, DWORD PTR [eax+edx*8]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  001da	8b 30		 mov	 esi, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  001dc	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  001de	0f 84 c1 00 00
	00		 je	 $LN76@OnRender
$LL81@OnRender:

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  001e4	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]

; 33   : 					if (!InFrustum(*itor))

  001e7	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 49   : 			if (m_pParticleProperty->m_bAttachFlag)

  001ea	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  001ee	74 3a		 je	 SHORT $LN121@OnRender

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  001f0	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  001f3	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  001f8	f3 0f 10 48 38	 movss	 xmm1, DWORD PTR [eax+56]
  001fd	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00202	f3 0f 58 51 10	 addss	 xmm2, DWORD PTR [ecx+16]
  00207	f3 0f 58 49 14	 addss	 xmm1, DWORD PTR [ecx+20]
  0020c	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 38   : 		y = b;

  00211	f3 0f 11 55 e8	 movss	 DWORD PTR $T5[ebp+4], xmm2

; 39   : 		z = c;

  00216	f3 0f 11 4d ec	 movss	 DWORD PTR $T5[ebp+8], xmm1
  0021b	f3 0f 11 45 e4	 movss	 DWORD PTR $T5[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 50   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(

  00220	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  00225	8d 45 e4	 lea	 eax, DWORD PTR $T5[ebp]
  00228	eb 26		 jmp	 SHORT $LN167@OnRender
$LN121@OnRender:
; File C:\DS Project\DS Files\Source\ClientSource\Client\SphereLib\vector.h

; 37   : 		x = a;

  0022a	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0022f	f3 0f 11 45 f0	 movss	 DWORD PTR $T7[ebp], xmm0

; 38   : 		y = b;

  00234	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  00239	f3 0f 11 45 f4	 movss	 DWORD PTR $T7[ebp+4], xmm0

; 39   : 		z = c;

  0023e	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00243	f3 0f 11 45 f8	 movss	 DWORD PTR $T7[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 56   : 				return CScreen::GetFrustum().ViewVolumeTest(Vector3d(pInstance->m_v3Position.x,pInstance->m_v3Position.y,pInstance->m_v3Position.z),pInstance->GetRadiusApproximation())!=VS_OUTSIDE;

  00248	e8 00 00 00 00	 call	 ?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
  0024d	8d 45 f0	 lea	 eax, DWORD PTR $T7[ebp]
$LN167@OnRender:

; 33   : 					if (!InFrustum(*itor))

  00250	51		 push	 ecx
  00251	d9 1c 24	 fstp	 DWORD PTR [esp]
  00254	50		 push	 eax
  00255	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_frustum@CScreen@@1VFrustum@@A ; CScreen::ms_frustum
  0025a	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  0025f	83 f8 02	 cmp	 eax, 2
  00262	0f 95 c0	 setne	 al
  00265	84 c0		 test	 al, al
  00267	0f 84 25 ff ff
	ff		 je	 $LN164@OnRender

; 34   : 						return;
; 35   : 					FunObj(*itor);

  0026d	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 405  : 			pInstance->Transform(pmat);

  00270	8b cb		 mov	 ecx, ebx
  00272	57		 push	 edi
  00273	e8 00 00 00 00	 call	 ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z ; CParticleInstance::Transform

; 406  : 			STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 2, pInstance->GetParticleMeshPointer(), sizeof(TPTVertex));

  00278	6a 14		 push	 20			; 00000014H
  0027a	8b cb		 mov	 ecx, ebx
  0027c	e8 00 00 00 00	 call	 ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
  00281	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00287	50		 push	 eax
  00288	6a 02		 push	 2
  0028a	6a 05		 push	 5
  0028c	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00291	8b 5d e0	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]

; 199  :         return this->_Ptr == _Right._Ptr;

  00294	8b 55 dc	 mov	 edx, DWORD PTR _dwFrameIndex$1$[ebp]

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00297	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00299	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 199  :         return this->_Ptr == _Right._Ptr;

  0029c	3b 34 d0	 cmp	 esi, DWORD PTR [eax+edx*8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 31   : 				for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end(); ++itor)

  0029f	0f 85 3f ff ff
	ff		 jne	 $LL81@OnRender
$LN76@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  002a5	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  002a8	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  002a9	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  002ac	2b c1		 sub	 eax, ecx
  002ae	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.h

; 27   : 			for(dwFrameIndex=0; dwFrameIndex<m_kVct_pkImgInst.size(); dwFrameIndex++)

  002b1	89 55 dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], edx
  002b4	3b d0		 cmp	 edx, eax
  002b6	0f 82 f8 fe ff
	ff		 jb	 $LL78@OnRender
  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	5b		 pop	 ebx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 450  : }

  002bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c2	33 cd		 xor	 ecx, ebp
  002c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c9	8b e5		 mov	 esp, ebp
  002cb	5d		 pop	 ebp
  002cc	c3		 ret	 0
$LN2@OnRender:

; 420  : 		{
; 421  : 			ForEachParticleRendering(NParticleRenderer::NormalRenderer());
; 422  : 		}
; 423  : 		else
; 424  : 		{
; 425  : 			ForEachParticleRendering(NParticleRenderer::AttachRenderer(mc_pmatLocal));
; 426  : 		}
; 427  : 	}
; 428  : 	else if (m_pParticleProperty->m_byBillboardType == BILLBOARD_TYPE_2FACE)

  002cd	75 45		 jne	 SHORT $LN6@OnRender

; 429  : 	{
; 430  : 		if (!m_pParticleProperty->m_bAttachFlag)

  002cf	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  002d3	8b cb		 mov	 ecx, ebx
  002d5	75 1f		 jne	 SHORT $LN8@OnRender

; 431  : 		{
; 432  : 			ForEachParticleRendering(NParticleRenderer::TwoSideRenderer());

  002d7	8d 45 e0	 lea	 eax, DWORD PTR $T4[ebp]

; 354  : 			: pmat(pmat)

  002da	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0

; 431  : 		{
; 432  : 			ForEachParticleRendering(NParticleRenderer::TwoSideRenderer());

  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::TwoSideRenderer>
  002e7	5b		 pop	 ebx

; 450  : }

  002e8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002eb	33 cd		 xor	 ecx, ebp
  002ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f2	8b e5		 mov	 esp, ebp
  002f4	5d		 pop	 ebp
  002f5	c3		 ret	 0
$LN8@OnRender:

; 354  : 			: pmat(pmat)

  002f6	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002f9	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax

; 433  : 		}
; 434  : 		else
; 435  : 		{
; 436  : 			ForEachParticleRendering(NParticleRenderer::TwoSideRenderer(mc_pmatLocal));

  002fc	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  002ff	50		 push	 eax
  00300	e8 00 00 00 00	 call	 ??$ForEachParticleRendering@UTwoSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUTwoSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::TwoSideRenderer>
  00305	5b		 pop	 ebx

; 450  : }

  00306	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00309	33 cd		 xor	 ecx, ebp
  0030b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00310	8b e5		 mov	 esp, ebp
  00312	5d		 pop	 ebp
  00313	c3		 ret	 0
$LN6@OnRender:

; 437  : 		}
; 438  : 	}
; 439  : 	else if (m_pParticleProperty->m_byBillboardType == BILLBOARD_TYPE_3FACE)

  00314	80 f9 05	 cmp	 cl, 5
  00317	0f 85 77 fe ff
	ff		 jne	 $LN12@OnRender

; 440  : 	{
; 441  : 		if (!m_pParticleProperty->m_bAttachFlag)

  0031d	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00321	8b cb		 mov	 ecx, ebx
  00323	75 1f		 jne	 SHORT $LN11@OnRender

; 442  : 		{
; 443  : 			ForEachParticleRendering(NParticleRenderer::ThreeSideRenderer());

  00325	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]

; 372  : 			: pmat(pmat)

  00328	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 442  : 		{
; 443  : 			ForEachParticleRendering(NParticleRenderer::ThreeSideRenderer());

  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::ThreeSideRenderer>
  00335	5b		 pop	 ebx

; 450  : }

  00336	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00339	33 cd		 xor	 ecx, ebp
  0033b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00340	8b e5		 mov	 esp, ebp
  00342	5d		 pop	 ebp
  00343	c3		 ret	 0
$LN11@OnRender:

; 372  : 			: pmat(pmat)

  00344	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00347	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax

; 444  : 		}
; 445  : 		else
; 446  : 		{
; 447  : 			ForEachParticleRendering(NParticleRenderer::ThreeSideRenderer(mc_pmatLocal));

  0034a	8d 45 e0	 lea	 eax, DWORD PTR $T1[ebp]
  0034d	50		 push	 eax
  0034e	e8 00 00 00 00	 call	 ??$ForEachParticleRendering@UThreeSideRenderer@NParticleRenderer@@@CParticleSystemInstance@@QAEXAAUThreeSideRenderer@NParticleRenderer@@@Z ; CParticleSystemInstance::ForEachParticleRendering<NParticleRenderer::ThreeSideRenderer>

; 450  : }

  00353	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00356	33 cd		 xor	 ecx, ebp
  00358	5b		 pop	 ebx
  00359	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0035e	8b e5		 mov	 esp, ebp
  00360	5d		 pop	 ebp
  00361	c3		 ret	 0
?OnRender@CParticleSystemInstance@@MAEXXZ ENDP		; CParticleSystemInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?OnUpdate@CParticleSystemInstance@@MAE_NM@Z
_TEXT	SEGMENT
_fAngularVelocity$ = -60				; size = 4
__Count$1$ = -56					; size = 4
_this$GSCopy$1$ = -56					; size = 4
_dwFrameCount$1$ = -52					; size = 4
tv1464 = -48						; size = 4
__Insert_after$2 = -48					; size = 4
$T3 = -44						; size = 4
_dwFrameIndex$2$ = -44					; size = 4
__Insert_before$4 = -44					; size = 4
__Where$1$ = -40					; size = 4
tv1429 = -40						; size = 4
__First$1$ = -36					; size = 4
_dwFrameIndex$1$ = -36					; size = 4
_bMakeParticle$1$ = -29					; size = 1
$T5 = -28						; size = 12
__Op$6 = -24						; size = 8
__Right_head$1$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fElapsedTime$ = 8					; size = 4
?OnUpdate@CParticleSystemInstance@@MAE_NM@Z PROC	; CParticleSystemInstance::OnUpdate, COMDAT
; _this$ = ecx

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d c8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ebx

; 276  : 	bool bMakeParticle = true;
; 277  : 
; 278  : 	/////
; 279  : 
; 280  : 	if (m_fLocalTime >= m_pEmitterProperty->GetCycleLength())

  00030	8b 7b 50	 mov	 edi, DWORD PTR [ebx+80]
  00033	f3 0f 10 43 0c	 movss	 xmm0, DWORD PTR [ebx+12]
  00038	c6 45 e3 01	 mov	 BYTE PTR _bMakeParticle$1$[ebp], 1
  0003c	0f 2f 47 08	 comiss	 xmm0, DWORD PTR [edi+8]
  00040	72 50		 jb	 SHORT $LN15@OnUpdate

; 281  : 	{
; 282  : 		if (m_pEmitterProperty->isCycleLoop() && --m_iLoopCount!=0)

  00042	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  00046	74 23		 je	 SHORT $LN12@OnUpdate
  00048	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  0004b	83 e9 01	 sub	 ecx, 1
  0004e	89 4b 2c	 mov	 DWORD PTR [ebx+44], ecx
  00051	74 18		 je	 SHORT $LN12@OnUpdate

; 283  : 		{
; 284  : 			if (m_iLoopCount<0)

  00053	33 d2		 xor	 edx, edx
  00055	8b c1		 mov	 eax, ecx
  00057	85 c9		 test	 ecx, ecx
  00059	0f 48 c2	 cmovs	 eax, edx
  0005c	89 43 2c	 mov	 DWORD PTR [ebx+44], eax

; 285  : 				m_iLoopCount = 0;
; 286  : 			m_fLocalTime = m_fLocalTime - m_pEmitterProperty->GetCycleLength();

  0005f	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
  00064	f3 0f 11 43 0c	 movss	 DWORD PTR [ebx+12], xmm0

; 287  : 		}

  00069	eb 27		 jmp	 SHORT $LN15@OnUpdate
$LN12@OnUpdate:

; 288  : 		else
; 289  : 		{
; 290  : 			bMakeParticle = false;
; 291  : 			m_iLoopCount=1;
; 292  : 			if (GetEmissionCount()==0)

  0006b	8b cb		 mov	 ecx, ebx
  0006d	c6 45 e3 00	 mov	 BYTE PTR _bMakeParticle$1$[ebp], 0
  00071	c7 43 2c 01 00
	00 00		 mov	 DWORD PTR [ebx+44], 1
  00078	f3 0f 11 45 d4	 movss	 DWORD PTR $T3[ebp], xmm0
  0007d	e8 00 00 00 00	 call	 ?GetEmissionCount@CParticleSystemInstance@@QAEKXZ ; CParticleSystemInstance::GetEmissionCount
  00082	85 c0		 test	 eax, eax
  00084	75 07		 jne	 SHORT $LN208@OnUpdate

; 293  : 				return false;

  00086	32 c0		 xor	 al, al
  00088	e9 d5 02 00 00	 jmp	 $LN1@OnUpdate
$LN208@OnUpdate:

; 288  : 		else
; 289  : 		{
; 290  : 			bMakeParticle = false;
; 291  : 			m_iLoopCount=1;
; 292  : 			if (GetEmissionCount()==0)

  0008d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR $T3[ebp]
$LN15@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00092	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00095	8b 70 74	 mov	 esi, DWORD PTR [eax+116]
  00098	2b 70 70	 sub	 esi, DWORD PTR [eax+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 303  : 	m_pEmitterProperty->GetEmittingAngularVelocity(m_fLocalTime,&fAngularVelocity);

  0009b	8d 45 c4	 lea	 eax, DWORD PTR _fAngularVelocity$[ebp]
  0009e	50		 push	 eax
  0009f	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a0	c1 fe 02	 sar	 esi, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 303  : 	m_pEmitterProperty->GetEmittingAngularVelocity(m_fLocalTime,&fAngularVelocity);

  000a3	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a5	89 75 cc	 mov	 DWORD PTR _dwFrameCount$1$[ebp], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 303  : 	m_pEmitterProperty->GetEmittingAngularVelocity(m_fLocalTime,&fAngularVelocity);

  000a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ad	e8 00 00 00 00	 call	 ?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingAngularVelocity

; 304  : 
; 305  : 	if (fAngularVelocity && !m_pParticleProperty->m_bAttachFlag)

  000b2	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _fAngularVelocity$[ebp]
  000b7	0f 57 c0	 xorps	 xmm0, xmm0
  000ba	0f 2e c8	 ucomiss xmm1, xmm0
  000bd	9f		 lahf
  000be	f6 c4 44	 test	 ah, 68			; 00000044H
  000c1	7b 2e		 jnp	 SHORT $LN16@OnUpdate
  000c3	8b 43 4c	 mov	 eax, DWORD PTR [ebx+76]
  000c6	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  000ca	75 25		 jne	 SHORT $LN16@OnUpdate

; 307  : 		D3DXVec3TransformNormal(&m_pParticleProperty->m_v3ZAxis,&D3DXVECTOR3(0.0f,0.0f,1.0f),mc_pmatLocal);

  000cc	ff 73 04	 push	 DWORD PTR [ebx+4]
  000cf	8d 4d e4	 lea	 ecx, DWORD PTR $T5[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  000d2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 307  : 		D3DXVec3TransformNormal(&m_pParticleProperty->m_v3ZAxis,&D3DXVECTOR3(0.0f,0.0f,1.0f),mc_pmatLocal);

  000d9	51		 push	 ecx
  000da	83 c0 7c	 add	 eax, 124		; 0000007cH
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  000dd	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 307  : 		D3DXVec3TransformNormal(&m_pParticleProperty->m_v3ZAxis,&D3DXVECTOR3(0.0f,0.0f,1.0f),mc_pmatLocal);

  000e4	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000e5	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR $T5[ebp+8], 1065353216 ; 3f800000H
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 307  : 		D3DXVec3TransformNormal(&m_pParticleProperty->m_v3ZAxis,&D3DXVECTOR3(0.0f,0.0f,1.0f),mc_pmatLocal);

  000ec	e8 00 00 00 00	 call	 _D3DXVec3TransformNormal@12
$LN16@OnUpdate:

; 308  : 	}
; 309  : 
; 310  : 	for (dwFrameIndex = 0; dwFrameIndex < dwFrameCount; dwFrameIndex++)

  000f1	33 c0		 xor	 eax, eax
  000f3	89 45 dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], eax
  000f6	85 f6		 test	 esi, esi
  000f8	0f 8e 69 01 00
	00		 jle	 $LN201@OnUpdate
  000fe	66 90		 npad	 2
$LL4@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00100	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00107	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  0010a	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  0010d	8b 30		 mov	 esi, DWORD PTR [eax]

; 199  :         return this->_Ptr == _Right._Ptr;

  0010f	3b f0		 cmp	 esi, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 313  : 		for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end();)

  00111	0f 84 3e 01 00
	00		 je	 $LN2@OnUpdate
  00117	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL5@OnUpdate:

; 314  : 		{
; 315  : 			CParticleInstance * pInstance = *itor;
; 316  : 
; 317  : 			if (!pInstance->Update(fElapsedTime,fAngularVelocity))

  00120	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _fAngularVelocity$[ebp]
  00125	83 ec 08	 sub	 esp, 8
  00128	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0012b	8b cf		 mov	 ecx, edi
  0012d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00133	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00138	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013d	e8 00 00 00 00	 call	 ?Update@CParticleInstance@@QAEHMM@Z ; CParticleInstance::Update
  00142	85 c0		 test	 eax, eax
  00144	75 3d		 jne	 SHORT $LN17@OnUpdate

; 318  : 			{
; 319  : 				pInstance->DeleteThis();

  00146	8b cf		 mov	 ecx, edi
  00148	e8 00 00 00 00	 call	 ?DeleteThis@CParticleInstance@@QAEXXZ ; CParticleInstance::DeleteThis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0014d	8b 4d dc	 mov	 ecx, DWORD PTR _dwFrameIndex$1$[ebp]
  00150	8b 53 30	 mov	 edx, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1353 :         const auto _Result = _Where._Ptr->_Next;

  00153	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00155	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00157	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  0015e	03 d0		 add	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00160	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00163	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00164	89 38		 mov	 DWORD PTR [eax], edi

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00166	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00168	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0016b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 398  :         --_Mysize;

  0016e	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00171	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00176	83 c4 08	 add	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 322  : 				m_dwCurrentEmissionCount--;

  00179	8b f7		 mov	 esi, edi
  0017b	ff 4b 28	 dec	 DWORD PTR [ebx+40]

; 323  : 			}

  0017e	e9 bc 00 00 00	 jmp	 $LN20@OnUpdate
$LN17@OnUpdate:

; 324  : 			else
; 325  : 			{
; 326  : 				if (pInstance->m_byFrameIndex != dwFrameIndex)

  00183	0f b6 47 50	 movzx	 eax, BYTE PTR [edi+80]
  00187	3b 45 dc	 cmp	 eax, DWORD PTR _dwFrameIndex$1$[ebp]
  0018a	0f 84 ad 00 00
	00		 je	 $LN19@OnUpdate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00190	8b 4d cc	 mov	 ecx, DWORD PTR _dwFrameCount$1$[ebp]
  00193	03 c8		 add	 ecx, eax
  00195	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  00198	81 7c c8 04 55
	55 55 15	 cmp	 DWORD PTR [eax+ecx*8+4], 357913941 ; 15555555H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001a0	8d 3c c8	 lea	 edi, DWORD PTR [eax+ecx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  001a3	8b 07		 mov	 eax, DWORD PTR [edi]
  001a5	89 45 d8	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  001a8	0f 84 d2 01 00
	00		 je	 $LN186@OnUpdate
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  001ae	89 7d e8	 mov	 DWORD PTR __Op$6[ebp], edi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001b1	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  001b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  001ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Op$6[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001c1	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 587  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  001c6	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1048 :         _Ptr = _Al.allocate(1);

  001c9	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1020 :         return _Op._Transfer_before(_Where);

  001cb	8b 45 d8	 mov	 eax, DWORD PTR __Where$1$[ebp]
  001ce	89 45 d4	 mov	 DWORD PTR __Insert_before$4[ebp], eax

; 588  :     }

  001d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001d8	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 1019 :         ++_Mysize;

  001db	ff 47 04	 inc	 DWORD PTR [edi+4]

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  001de	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  001e1	8d 45 d4	 lea	 eax, DWORD PTR __Insert_before$4[ebp]
  001e4	50		 push	 eax
  001e5	53		 push	 ebx
  001e6	89 7d d0	 mov	 DWORD PTR __Insert_after$2[ebp], edi
  001e9	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  001ee	8d 45 d0	 lea	 eax, DWORD PTR __Insert_after$2[ebp]
  001f1	50		 push	 eax
  001f2	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 605  :         _Insert_before->_Prev = _Result;

  001fb	8b 45 d8	 mov	 eax, DWORD PTR __Where$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  001fe	8b 4d dc	 mov	 ecx, DWORD PTR _dwFrameIndex$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00201	6a 0c		 push	 12			; 0000000cH
  00203	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 605  :         _Insert_before->_Prev = _Result;

  00204	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 606  :         _Insert_after->_Next  = _Result;

  00207	89 1f		 mov	 DWORD PTR [edi], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00209	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00210	8b 5d c8	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1353 :         const auto _Result = _Where._Ptr->_Next;

  00213	8b 3e		 mov	 edi, DWORD PTR [esi]

; 604  :         this->_Ptr            = pointer{};

  00215	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __Op$6[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0021c	8b 53 30	 mov	 edx, DWORD PTR [ebx+48]
  0021f	03 d0		 add	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 396  :         _Pnode->_Prev->_Next = _Pnode->_Next;

  00221	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00224	89 38		 mov	 DWORD PTR [eax], edi

; 397  :         _Pnode->_Next->_Prev = _Pnode->_Prev;

  00226	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00228	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0022b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 398  :         --_Mysize;

  0022e	ff 4a 04	 dec	 DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00231	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00236	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 329  : 					itor = m_ParticleInstanceListVector[dwFrameIndex].erase(itor);

  00239	8b f7		 mov	 esi, edi

; 330  : 				}

  0023b	eb 02		 jmp	 SHORT $LN20@OnUpdate
$LN19@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  0023d	8b 36		 mov	 esi, DWORD PTR [esi]
$LN20@OnUpdate:

; 199  :         return this->_Ptr == _Right._Ptr;

  0023f	8b 55 dc	 mov	 edx, DWORD PTR _dwFrameIndex$1$[ebp]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00242	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]

; 199  :         return this->_Ptr == _Right._Ptr;

  00245	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  0024c	3b 34 01	 cmp	 esi, DWORD PTR [ecx+eax]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 313  : 		for (; itor != m_ParticleInstanceListVector[dwFrameIndex].end();)

  0024f	0f 85 cb fe ff
	ff		 jne	 $LL5@OnUpdate
$LN2@OnUpdate:

; 308  : 	}
; 309  : 
; 310  : 	for (dwFrameIndex = 0; dwFrameIndex < dwFrameCount; dwFrameIndex++)

  00255	8b 45 dc	 mov	 eax, DWORD PTR _dwFrameIndex$1$[ebp]
  00258	8b 75 cc	 mov	 esi, DWORD PTR _dwFrameCount$1$[ebp]
  0025b	40		 inc	 eax
  0025c	89 45 dc	 mov	 DWORD PTR _dwFrameIndex$1$[ebp], eax
  0025f	3b c6		 cmp	 eax, esi
  00261	0f 8c 99 fe ff
	ff		 jl	 $LL4@OnUpdate
$LN201@OnUpdate:

; 331  : 				else
; 332  : 					++itor;
; 333  : 			}
; 334  : 		}
; 335  : 	}
; 336  : 	if (isActive() && bMakeParticle)

  00267	8b cb		 mov	 ecx, ebx
  00269	e8 00 00 00 00	 call	 ?isActive@CEffectElementBaseInstance@@QAE_NXZ ; CEffectElementBaseInstance::isActive
  0026e	84 c0		 test	 al, al
  00270	74 18		 je	 SHORT $LN21@OnUpdate
  00272	80 7d e3 00	 cmp	 BYTE PTR _bMakeParticle$1$[ebp], 0
  00276	74 12		 je	 SHORT $LN21@OnUpdate

; 337  : 		CreateParticles(fElapsedTime);

  00278	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0027d	51		 push	 ecx
  0027e	8b cb		 mov	 ecx, ebx
  00280	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00285	e8 00 00 00 00	 call	 ?CreateParticles@CParticleSystemInstance@@QAEXM@Z ; CParticleSystemInstance::CreateParticles
$LN21@OnUpdate:

; 339  : 	for (dwFrameIndex = 0; dwFrameIndex < dwFrameCount; ++dwFrameIndex)

  0028a	33 c0		 xor	 eax, eax
  0028c	89 45 d4	 mov	 DWORD PTR _dwFrameIndex$2$[ebp], eax
  0028f	85 f6		 test	 esi, esi
  00291	0f 8e c9 00 00
	00		 jle	 $LN202@OnUpdate
  00297	c1 e6 03	 shl	 esi, 3
  0029a	89 75 d8	 mov	 DWORD PTR tv1429[ebp], esi
  0029d	0f 1f 00	 npad	 3
$LL10@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1100 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

  002a0	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
  002a3	8d 14 c7	 lea	 edx, DWORD PTR [edi+eax*8]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  002a6	8b 02		 mov	 eax, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  002a8	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  002ab	89 45 d0	 mov	 DWORD PTR tv1464[ebp], eax

; 1454 :         if (this != _STD addressof(_Right) && _Right_data._Mysize != 0) { // worth splicing, do it

  002ae	3b d1		 cmp	 edx, ecx
  002b0	74 5d		 je	 SHORT $LN164@OnUpdate
  002b2	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  002b5	89 45 c8	 mov	 DWORD PTR __Count$1$[ebp], eax
  002b8	85 c0		 test	 eax, eax
  002ba	74 53		 je	 SHORT $LN164@OnUpdate

; 1455 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1456 :             _STL_VERIFY(_Where._Getcont() == _STD addressof(_Mypair._Myval2), "list splice iterator outside range");
; 1457 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1458 :             const auto _Right_head = _Right_data._Myhead;

  002bc	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1748 :             if (max_size() - _My_data._Mysize < _Count) {

  002be	8b 7d c8	 mov	 edi, DWORD PTR __Count$1$[ebp]

; 1458 :             const auto _Right_head = _Right_data._Myhead;

  002c1	89 45 ec	 mov	 DWORD PTR __Right_head$1$[ebp], eax

; 1459 :             _Splice(_Where._Ptr, _Right, _Right_head->_Next, _Right_head, _Right_data._Mysize);

  002c4	8b 00		 mov	 eax, DWORD PTR [eax]
  002c6	89 45 dc	 mov	 DWORD PTR __First$1$[ebp], eax

; 1748 :             if (max_size() - _My_data._Mysize < _Count) {

  002c9	b8 55 55 55 15	 mov	 eax, 357913941		; 15555555H
  002ce	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  002d1	3b c7		 cmp	 eax, edi
  002d3	0f 82 a7 00 00
	00		 jb	 $LN186@OnUpdate

; 1750 :             }
; 1751 : 
; 1752 :             auto& _Right_data = _Right._Mypair._Myval2;
; 1753 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1754 :             // transfer ownership
; 1755 :             if (_Count == 1) {
; 1756 :                 _My_data._Adopt_unique(_Right_data, _First);
; 1757 :             } else if (_Count == _Right_data._Mysize) {
; 1758 :                 _My_data._Adopt_all(_Right_data);
; 1759 :             } else {
; 1760 :                 _My_data._Adopt_range(_Right_data, _First, _Last);
; 1761 :             }
; 1762 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1763 : 
; 1764 :             _My_data._Mysize += _Count;

  002d9	01 7a 04	 add	 DWORD PTR [edx+4], edi

; 1765 :             _Right_data._Mysize -= _Count;

  002dc	29 79 04	 sub	 DWORD PTR [ecx+4], edi

; 475  :         const auto _First_prev  = _First->_Prev;

  002df	8b 45 dc	 mov	 eax, DWORD PTR __First$1$[ebp]

; 476  :         _First_prev->_Next      = _Last;

  002e2	8b 7d ec	 mov	 edi, DWORD PTR __Right_head$1$[ebp]

; 477  :         const auto _Last_prev   = _Last->_Prev;
; 478  :         _Last_prev->_Next       = _Before;
; 479  :         const auto _Before_prev = _Before->_Prev;
; 480  :         _Before_prev->_Next     = _First;

  002e5	8b 75 dc	 mov	 esi, DWORD PTR __First$1$[ebp]
  002e8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002eb	8b 45 d0	 mov	 eax, DWORD PTR tv1464[ebp]
  002ee	89 3a		 mov	 DWORD PTR [edx], edi
  002f0	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  002f3	89 01		 mov	 DWORD PTR [ecx], eax
  002f5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  002f8	89 30		 mov	 DWORD PTR [eax], esi

; 481  : 
; 482  :         // fixup the _Prev values
; 483  :         _Before->_Prev = _Last_prev;

  002fa	8b 75 d0	 mov	 esi, DWORD PTR tv1464[ebp]
  002fd	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 485  :         _First->_Prev  = _Before_prev;

  00300	8b 4d dc	 mov	 ecx, DWORD PTR __First$1$[ebp]
  00303	8b 75 d8	 mov	 esi, DWORD PTR tv1429[ebp]

; 484  :         _Last->_Prev   = _First_prev;

  00306	89 57 04	 mov	 DWORD PTR [edi+4], edx

; 485  :         _First->_Prev  = _Before_prev;

  00309	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0030c	8b 7b 30	 mov	 edi, DWORD PTR [ebx+48]
$LN164@OnUpdate:

; 1429 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0030f	8b 0c 3e	 mov	 ecx, DWORD PTR [esi+edi]

; 324  :         _Head->_Prev->_Next = nullptr;

  00312	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00315	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  0031b	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0031d	85 c0		 test	 eax, eax
  0031f	74 16		 je	 SHORT $LN172@OnUpdate
$LL173@OnUpdate:

; 328  :             _Pnext = _Pnode->_Next;

  00321	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00323	6a 0c		 push	 12			; 0000000cH
  00325	50		 push	 eax
  00326	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0032b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0032e	8b c6		 mov	 eax, esi
  00330	85 f6		 test	 esi, esi
  00332	75 ed		 jne	 SHORT $LL173@OnUpdate
  00334	8b 75 d8	 mov	 esi, DWORD PTR tv1429[ebp]
$LN172@OnUpdate:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00337	8b 04 3e	 mov	 eax, DWORD PTR [esi+edi]
  0033a	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0033c	8b 04 3e	 mov	 eax, DWORD PTR [esi+edi]
  0033f	89 40 04	 mov	 DWORD PTR [eax+4], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 339  : 	for (dwFrameIndex = 0; dwFrameIndex < dwFrameCount; ++dwFrameIndex)

  00342	8b 45 d4	 mov	 eax, DWORD PTR _dwFrameIndex$2$[ebp]
  00345	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1432 :         _My_data._Mysize        = 0;

  00346	c7 44 3e 04 00
	00 00 00	 mov	 DWORD PTR [esi+edi+4], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 339  : 	for (dwFrameIndex = 0; dwFrameIndex < dwFrameCount; ++dwFrameIndex)

  0034e	83 c6 08	 add	 esi, 8
  00351	89 45 d4	 mov	 DWORD PTR _dwFrameIndex$2$[ebp], eax
  00354	89 75 d8	 mov	 DWORD PTR tv1429[ebp], esi
  00357	3b 45 cc	 cmp	 eax, DWORD PTR _dwFrameCount$1$[ebp]
  0035a	0f 8c 40 ff ff
	ff		 jl	 $LL10@OnUpdate
$LN202@OnUpdate:

; 340  : 	{
; 341  : 		m_ParticleInstanceListVector[dwFrameIndex].splice(m_ParticleInstanceListVector[dwFrameIndex].end(),m_ParticleInstanceListVector[dwFrameIndex+dwFrameCount]);
; 342  : 		m_ParticleInstanceListVector[dwFrameIndex+dwFrameCount].clear();
; 343  : 	}
; 344  : 
; 345  : 	return true;

  00360	b0 01		 mov	 al, 1
$LN1@OnUpdate:

; 346  : }

  00362	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00365	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0036c	59		 pop	 ecx
  0036d	5f		 pop	 edi
  0036e	5e		 pop	 esi
  0036f	5b		 pop	 ebx
  00370	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00373	33 cd		 xor	 ecx, ebp
  00375	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0037a	8b e5		 mov	 esp, ebp
  0037c	5d		 pop	 ebp
  0037d	c2 04 00	 ret	 4
$LN186@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1749 :                 _Xlength_error("list too long");

  00380	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  00385	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN210@OnUpdate:
  0038a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z$1:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Op$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnUpdate@CParticleSystemInstance@@MAE_NM@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnUpdate@CParticleSystemInstance@@MAE_NM@Z ENDP	; CParticleSystemInstance::OnUpdate
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?OnDestroy@CParticleSystemInstance@@MAEXXZ
_TEXT	SEGMENT
?OnDestroy@CParticleSystemInstance@@MAEXXZ PROC		; CParticleSystemInstance::OnDestroy, COMDAT
; _this$ = ecx

; 484  : {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00004	8d 73 30	 lea	 esi, DWORD PTR [ebx+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 484  : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00008	8b 3e		 mov	 edi, DWORD PTR [esi]
  0000a	3b 7b 34	 cmp	 edi, DWORD PTR [ebx+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 486  : 	for(i = m_ParticleInstanceListVector.begin(); i!=m_ParticleInstanceListVector.end(); ++i)

  0000d	74 56		 je	 SHORT $LN3@OnDestroy
  0000f	90		 npad	 1
$LL4@OnDestroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1092 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

  00010	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00012	8b 31		 mov	 esi, DWORD PTR [ecx]
  00014	3b f1		 cmp	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 491  : 		for(j = rkLst_kParticleInst.begin(); j!=rkLst_kParticleInst.end(); ++j)

  00016	74 10		 je	 SHORT $LN113@OnDestroy
$LL7@OnDestroy:

; 492  : 		{
; 493  : 			CParticleInstance* pkParticleInst=*j;
; 494  : 			pkParticleInst->DeleteThis();

  00018	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001b	e8 00 00 00 00	 call	 ?DeleteThis@CParticleInstance@@QAEXXZ ; CParticleInstance::DeleteThis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 166  :         this->_Ptr = this->_Ptr->_Next;

  00020	8b 36		 mov	 esi, DWORD PTR [esi]

; 39   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

  00022	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 199  :         return this->_Ptr == _Right._Ptr;

  00024	3b f1		 cmp	 esi, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 491  : 		for(j = rkLst_kParticleInst.begin(); j!=rkLst_kParticleInst.end(); ++j)

  00026	75 f0		 jne	 SHORT $LL7@OnDestroy
$LN113@OnDestroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 324  :         _Head->_Prev->_Next = nullptr;

  00028	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

  00031	8b 01		 mov	 eax, DWORD PTR [ecx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00033	85 c0		 test	 eax, eax
  00035	74 13		 je	 SHORT $LN71@OnDestroy
$LL72@OnDestroy:

; 328  :             _Pnext = _Pnode->_Next;

  00037	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 689  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00039	6a 0c		 push	 12			; 0000000cH
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00041	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  00044	8b c6		 mov	 eax, esi
  00046	85 f6		 test	 esi, esi
  00048	75 ed		 jne	 SHORT $LL72@OnDestroy
$LN71@OnDestroy:

; 1430 :         _My_data._Myhead->_Next = _My_data._Myhead;

  0004a	8b 07		 mov	 eax, DWORD PTR [edi]
  0004c	89 00		 mov	 DWORD PTR [eax], eax

; 1431 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  0004e	8b 07		 mov	 eax, DWORD PTR [edi]
  00050	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1432 :         _My_data._Mysize        = 0;

  00053	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 75   :         ++_Ptr;

  0005a	83 c7 08	 add	 edi, 8

; 149  :         return _Ptr == _Right._Ptr;

  0005d	3b 7b 34	 cmp	 edi, DWORD PTR [ebx+52]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 486  : 	for(i = m_ParticleInstanceListVector.begin(); i!=m_ParticleInstanceListVector.end(); ++i)

  00060	75 ae		 jne	 SHORT $LL4@OnDestroy
  00062	8d 73 30	 lea	 esi, DWORD PTR [ebx+48]
$LN3@OnDestroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00065	56		 push	 esi
  00066	ff 76 04	 push	 DWORD PTR [esi+4]
  00069	ff 36		 push	 DWORD PTR [esi]
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1390 :         _Mylast = _Myfirst;

  00070	8b 06		 mov	 eax, DWORD PTR [esi]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00072	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  00075	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00078	8b 7b 40	 mov	 edi, DWORD PTR [ebx+64]
  0007b	8b 73 3c	 mov	 esi, DWORD PTR [ebx+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007e	3b f7		 cmp	 esi, edi
  00080	74 1b		 je	 SHORT $LN118@OnDestroy
$LL99@OnDestroy:

; 236  :         _Func(*_UFirst);

  00082	ff 36		 push	 DWORD PTR [esi]
  00084	e8 00 00 00 00	 call	 ?Delete@CGraphicImageInstance@@SAXPAV1@@Z ; CGraphicImageInstance::Delete
  00089	83 c6 04	 add	 esi, 4
  0008c	83 c4 04	 add	 esp, 4
  0008f	3b f7		 cmp	 esi, edi
  00091	75 ef		 jne	 SHORT $LL99@OnDestroy
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 503  : }

  00093	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	89 43 40	 mov	 DWORD PTR [ebx+64], eax
  0009b	5b		 pop	 ebx
  0009c	c3		 ret	 0
$LN118@OnDestroy:
  0009d	5f		 pop	 edi

; 495  : 		}
; 496  : 
; 497  : 		rkLst_kParticleInst.clear();
; 498  : 	}
; 499  : 	m_ParticleInstanceListVector.clear();
; 500  : 
; 501  : 	std::for_each(m_kVct_pkImgInst.begin(), m_kVct_pkImgInst.end(), CGraphicImageInstance::Delete);
; 502  : 	m_kVct_pkImgInst.clear();

  0009e	89 73 40	 mov	 DWORD PTR [ebx+64], esi

; 503  : }

  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	c3		 ret	 0
?OnDestroy@CParticleSystemInstance@@MAEXXZ ENDP		; CParticleSystemInstance::OnDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?OnInitialize@CParticleSystemInstance@@MAEXXZ
_TEXT	SEGMENT
?OnInitialize@CParticleSystemInstance@@MAEXXZ PROC	; CParticleSystemInstance::OnInitialize, COMDAT
; _this$ = ecx

; 478  : 	m_dwCurrentEmissionCount = 0;

  00000	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 479  : 	m_iLoopCount = 0;

  00007	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 480  : 	m_fEmissionResidue = 0.0f;

  0000e	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 481  : }

  00015	c3		 ret	 0
?OnInitialize@CParticleSystemInstance@@MAEXXZ ENDP	; CParticleSystemInstance::OnInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?GetEmissionCount@CParticleSystemInstance@@QAEKXZ
_TEXT	SEGMENT
?GetEmissionCount@CParticleSystemInstance@@QAEKXZ PROC	; CParticleSystemInstance::GetEmissionCount, COMDAT
; _this$ = ecx

; 35   : 	return m_dwCurrentEmissionCount;

  00000	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]

; 36   : }

  00003	c3		 ret	 0
?GetEmissionCount@CParticleSystemInstance@@QAEKXZ ENDP	; CParticleSystemInstance::GetEmissionCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?CreateParticles@CParticleSystemInstance@@QAEXM@Z
_TEXT	SEGMENT
$T2 = -176						; size = 12
_v2HalfSize$ = -164					; size = 8
_fEmissionCount$ = -156					; size = 4
_i$1$ = -152						; size = 4
_this$GSCopy$1$ = -148					; size = 4
_fElapsedTime$GSCopy$1$ = -144				; size = 4
_fLieRotation$1$ = -140					; size = 4
_fVelocity$ = -136					; size = 4
_pInstance$1$ = -132					; size = 4
__Insert_before$3 = -132				; size = 4
_pNewDecorator$1$ = -128				; size = 4
__Insert_after$4 = -128					; size = 4
_pFirstInstance$1$ = -124				; size = 4
tv2501 = -120						; size = 8
tv2498 = -120						; size = 8
tv2492 = -120						; size = 8
__Op$5 = -120						; size = 8
_iCreatingCount$1$ = -108				; size = 4
_fLifeTime$ = -104					; size = 4
_fEmittingSize$ = -100					; size = 4
__Where$1$ = -96					; size = 4
_pDest$1$ = -96						; size = 4
tv1112 = -96						; size = 4
tv1096 = -96						; size = 4
_f$ = -96						; size = 4
_f$ = -96						; size = 4
tv750 = -96						; size = 4
tv639 = -96						; size = 4
$T6 = -92						; size = 12
$T7 = -80						; size = 12
__v3TimePosition$ = -68					; size = 12
__v3Velocity$ = -56					; size = 12
_v3Velocity$8 = -44					; size = 12
_v3TimePosition$9 = -32					; size = 12
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_fElapsedTime$ = 8					; size = 4
?CreateParticles@CParticleSystemInstance@@QAEXM@Z PROC	; CParticleSystemInstance::CreateParticles, COMDAT
; _this$ = ecx

; 39   : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f8	 and	 esp, -8			; fffffff8H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?CreateParticles@CParticleSystemInstance@@QAEXM@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	8b f1		 mov	 esi, ecx
  00043	89 b5 6c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00049	f3 0f 10 43 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebx]

; 40   : 	float fEmissionCount;
; 41   : 	m_pEmitterProperty->GetEmissionCountPerSecond(m_fLocalTime, &fEmissionCount);

  0004e	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _fEmissionCount$[ebp]
  00054	50		 push	 eax
  00055	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _fElapsedTime$GSCopy$1$[ebp], xmm0
  0005d	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00062	51		 push	 ecx
  00063	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmissionCountPerSecond

; 42   : 
; 43   : 	float fCreatingValue = fEmissionCount * (fElapsedTime / 1.0f) + m_fEmissionResidue;

  00070	f3 0f 10 8d 70
	ff ff ff	 movss	 xmm1, DWORD PTR _fElapsedTime$GSCopy$1$[ebp]

; 44   : 	int iCreatingCount = int(fCreatingValue);
; 45   : 	m_fEmissionResidue = fCreatingValue - iCreatingCount;
; 46   : 
; 47   : 	int icurEmissionCount = GetEmissionCount();

  00078	8b ce		 mov	 ecx, esi
  0007a	f3 0f 59 8d 64
	ff ff ff	 mulss	 xmm1, DWORD PTR _fEmissionCount$[ebp]
  00082	f3 0f 58 4e 24	 addss	 xmm1, DWORD PTR [esi+36]
  00087	f3 0f 2c f9	 cvttss2si edi, xmm1
  0008b	66 0f 6e c7	 movd	 xmm0, edi
  0008f	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00092	f3 0f 5c c8	 subss	 xmm1, xmm0
  00096	f3 0f 11 4e 24	 movss	 DWORD PTR [esi+36], xmm1
  0009b	e8 00 00 00 00	 call	 ?GetEmissionCount@CParticleSystemInstance@@QAEKXZ ; CParticleSystemInstance::GetEmissionCount

; 48   : 	int iMaxEmissionCount = int(m_pEmitterProperty->GetMaxEmissionCount());

  000a0	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  000a3	0f 57 c0	 xorps	 xmm0, xmm0

; 49   : 	int iNextEmissionCount = int(icurEmissionCount + iCreatingCount);
; 50   : 	iCreatingCount -= max(0, iNextEmissionCount - iMaxEmissionCount);
; 51   : 
; 52   : 	float fLifeTime = 0.0f;
; 53   : 	float fEmittingSize = 0.0f;
; 54   : 	D3DXVECTOR3 _v3TimePosition;
; 55   : 	D3DXVECTOR3 _v3Velocity;
; 56   : 	float fVelocity = 0.0f;
; 57   : 	D3DXVECTOR2 v2HalfSize;
; 58   : 	float fLieRotation = 0;

  000a6	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _fLieRotation$1$[ebp], xmm0
  000ae	8d 0c 38	 lea	 ecx, DWORD PTR [eax+edi]
  000b1	b8 00 00 00 00	 mov	 eax, 0
  000b6	2b 4a 04	 sub	 ecx, DWORD PTR [edx+4]
  000b9	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _fLifeTime$[ebp], 0
  000c0	0f 49 c1	 cmovns	 eax, ecx
  000c3	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _fEmittingSize$[ebp], 0
  000ca	2b f8		 sub	 edi, eax
  000cc	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _fVelocity$[ebp], 0
  000d6	89 7d 94	 mov	 DWORD PTR _iCreatingCount$1$[ebp], edi

; 59   : 	if (iCreatingCount)

  000d9	0f 84 89 01 00
	00		 je	 $LN10@CreatePart

; 60   : 	{
; 61   : 		m_pEmitterProperty->GetParticleLifeTime(m_fLocalTime, &fLifeTime);

  000df	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  000e4	8d 45 98	 lea	 eax, DWORD PTR _fLifeTime$[ebp]
  000e7	50		 push	 eax
  000e8	51		 push	 ecx
  000e9	8b ca		 mov	 ecx, edx
  000eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f0	e8 00 00 00 00	 call	 ?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetParticleLifeTime

; 62   : 		if (fLifeTime==0.0f)

  000f5	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fLifeTime$[ebp]
  000fa	0f 57 c9	 xorps	 xmm1, xmm1
  000fd	0f 2e c1	 ucomiss xmm0, xmm1
  00100	9f		 lahf
  00101	f6 c4 44	 test	 ah, 68			; 00000044H
  00104	0f 8b ab 09 00
	00		 jnp	 $LN3@CreatePart

; 63   : 		{
; 64   : 			return;
; 65   : 		}
; 66   : 
; 67   : 		m_pEmitterProperty->GetEmittingSize(m_fLocalTime, &fEmittingSize);

  0010a	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0010f	8d 45 9c	 lea	 eax, DWORD PTR _fEmittingSize$[ebp]
  00112	50		 push	 eax
  00113	51		 push	 ecx
  00114	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	e8 00 00 00 00	 call	 ?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingSize

; 68   : 
; 69   : 		m_pData->GetPosition(m_fLocalTime, _v3TimePosition);

  00121	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00126	8d 45 bc	 lea	 eax, DWORD PTR __v3TimePosition$[ebp]
  00129	50		 push	 eax
  0012a	51		 push	 ecx
  0012b	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition

; 70   : 
; 71   : 		m_pEmitterProperty->GetEmittingDirectionX(m_fLocalTime, &_v3Velocity.x);

  00138	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0013d	8d 45 c8	 lea	 eax, DWORD PTR __v3Velocity$[ebp]
  00140	50		 push	 eax
  00141	51		 push	 ecx
  00142	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	e8 00 00 00 00	 call	 ?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionX

; 72   : 		m_pEmitterProperty->GetEmittingDirectionY(m_fLocalTime, &_v3Velocity.y);

  0014f	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00154	8d 45 cc	 lea	 eax, DWORD PTR __v3Velocity$[ebp+4]
  00157	50		 push	 eax
  00158	51		 push	 ecx
  00159	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  0015c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00161	e8 00 00 00 00	 call	 ?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionY

; 73   : 		m_pEmitterProperty->GetEmittingDirectionZ(m_fLocalTime, &_v3Velocity.z);

  00166	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0016b	8d 45 d0	 lea	 eax, DWORD PTR __v3Velocity$[ebp+8]
  0016e	50		 push	 eax
  0016f	51		 push	 ecx
  00170	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00173	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00178	e8 00 00 00 00	 call	 ?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionZ

; 74   : 
; 75   : 		m_pEmitterProperty->GetEmittingVelocity(m_fLocalTime, &fVelocity);

  0017d	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00182	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _fVelocity$[ebp]
  00188	50		 push	 eax
  00189	51		 push	 ecx
  0018a	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	e8 00 00 00 00	 call	 ?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingVelocity

; 76   : 
; 77   : 		m_pEmitterProperty->GetParticleSizeX(m_fLocalTime, &v2HalfSize.x);

  00197	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  0019c	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _v2HalfSize$[ebp]
  001a2	50		 push	 eax
  001a3	51		 push	 ecx
  001a4	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  001a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ac	e8 00 00 00 00	 call	 ?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetParticleSizeX

; 78   : 		m_pEmitterProperty->GetParticleSizeY(m_fLocalTime, &v2HalfSize.y);

  001b1	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  001b6	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _v2HalfSize$[ebp+4]
  001bc	50		 push	 eax
  001bd	51		 push	 ecx
  001be	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  001c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c6	e8 00 00 00 00	 call	 ?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetParticleSizeY

; 79   : 
; 80   : 		if (BILLBOARD_TYPE_LIE == m_pParticleProperty->m_byBillboardType && mc_pmatLocal)

  001cb	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  001ce	80 78 13 03	 cmp	 BYTE PTR [eax+19], 3
  001d2	0f 85 90 00 00
	00		 jne	 $LN10@CreatePart
  001d8	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  001db	85 ff		 test	 edi, edi
  001dd	0f 84 82 00 00
	00		 je	 $LN144@CreatePart

; 81   : 		{
; 82   : 			float fsx = mc_pmatLocal->_32;

  001e3	f3 0f 10 4f 24	 movss	 xmm1, DWORD PTR [edi+36]

; 83   : 			float fcx = sqrtf(1.0f - fsx * fsx);

  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f0	f3 0f 59 c9	 mulss	 xmm1, xmm1
  001f4	f3 0f 5c c1	 subss	 xmm0, xmm1
  001f8	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  001fb	0f 5a c0	 cvtps2pd xmm0, xmm0
  001fe	66 0f 2e c8	 ucomisd xmm1, xmm0
  00202	77 06		 ja	 SHORT $LN146@CreatePart
  00204	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00208	eb 05		 jmp	 SHORT $LN147@CreatePart
$LN146@CreatePart:
  0020a	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN147@CreatePart:
  0020f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 85   : 			if (fcx >= 0.00001f)

  00213	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3727c5ac
  0021a	72 49		 jb	 SHORT $LN144@CreatePart

; 86   : 				fLieRotation = D3DXToDegree(atan2f(-mc_pmatLocal->_12, mc_pmatLocal->_22));

  0021c	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00221	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 634  :             return (float)atan2(_Y, _X);

  00228	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0022c	f2 0f 11 45 88	 movsd	 QWORD PTR tv2501[ebp], xmm0
  00231	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  00236	dd 45 88	 fld	 QWORD PTR tv2501[ebp]
  00239	0f 5a c0	 cvtps2pd xmm0, xmm0
  0023c	f2 0f 11 45 88	 movsd	 QWORD PTR tv2498[ebp], xmm0
  00241	dd 45 88	 fld	 QWORD PTR tv2498[ebp]
  00244	e8 00 00 00 00	 call	 __CIatan2
  00249	dd 5d 88	 fstp	 QWORD PTR tv2492[ebp]
  0024c	f2 0f 10 4d 88	 movsd	 xmm1, QWORD PTR tv2492[ebp]
  00251	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 86   : 				fLieRotation = D3DXToDegree(atan2f(-mc_pmatLocal->_12, mc_pmatLocal->_22));

  00255	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42652ee0
  0025d	f3 0f 11 8d 74
	ff ff ff	 movss	 DWORD PTR _fLieRotation$1$[ebp], xmm1
$LN144@CreatePart:

; 87   : 		}
; 88   : 
; 89   : 	}
; 90   : 
; 91   : 	CParticleInstance * pFirstInstance = 0;

  00265	8b 7d 94	 mov	 edi, DWORD PTR _iCreatingCount$1$[ebp]
$LN10@CreatePart:
  00268	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _pFirstInstance$1$[ebp], 0

; 93   : 	for (int i = 0; i < iCreatingCount; ++i)

  0026f	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00279	85 ff		 test	 edi, edi
  0027b	0f 8e 34 08 00
	00		 jle	 $LN3@CreatePart
$LL4@CreatePart:

; 94   : 	{
; 95   : 		CParticleInstance * pInstance;
; 96   : 
; 97   : 		pInstance = CParticleInstance::New();

  00281	e8 00 00 00 00	 call	 ?New@CParticleInstance@@SAPAV1@XZ ; CParticleInstance::New

; 98   : 		pInstance->m_pParticleProperty = m_pParticleProperty;

  00286	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00289	8b f8		 mov	 edi, eax
  0028b	89 bd 7c ff ff
	ff		 mov	 DWORD PTR _pInstance$1$[ebp], edi
  00291	89 4f 5c	 mov	 DWORD PTR [edi+92], ecx

; 99   : 		pInstance->m_pEmitterProperty = m_pEmitterProperty;

  00294	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00297	89 4f 60	 mov	 DWORD PTR [edi+96], ecx

; 100  : 
; 101  : 		// LifeTime
; 102  : 		pInstance->m_fLifeTime = fLifeTime;

  0029a	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fLifeTime$[ebp]
  0029f	f3 0f 11 47 54	 movss	 DWORD PTR [edi+84], xmm0

; 103  : 		pInstance->m_fLastLifeTime = fLifeTime;

  002a4	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fLifeTime$[ebp]
  002a9	f3 0f 11 47 58	 movss	 DWORD PTR [edi+88], xmm0

; 104  : 
; 105  : 		// Position
; 106  : 		switch (m_pEmitterProperty->GetEmitterShape())

  002ae	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  002b1	e8 00 00 00 00	 call	 ?GetEmitterShape@CEmitterProperty@@QAEEXZ ; CEmitterProperty::GetEmitterShape
  002b6	0f b6 c0	 movzx	 eax, al
  002b9	83 f8 03	 cmp	 eax, 3
  002bc	0f 87 4a 02 00
	00		 ja	 $LN18@CreatePart
  002c2	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN142@CreatePart[eax*4]
$LN11@CreatePart:

; 107  : 		{
; 108  : 			case CEmitterProperty::EMITTER_SHAPE_POINT:
; 109  : 				pInstance->m_v3Position.x = 0.0f;

  002c9	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 110  : 				pInstance->m_v3Position.y = 0.0f;

  002d0	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 111  : 				pInstance->m_v3Position.z = 0.0f;

  002d7	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 112  : 				break;

  002de	e9 29 02 00 00	 jmp	 $LN18@CreatePart
$LN12@CreatePart:

; 113  : 
; 114  : 			case CEmitterProperty::EMITTER_SHAPE_ELLIPSE:
; 115  : 				pInstance->m_v3Position.x = frandom(-500.0f, 500.0f);

  002e3	83 ec 08	 sub	 esp, 8
  002e6	c7 44 24 04 00
	00 fa 43	 mov	 DWORD PTR [esp+4], 1140457472 ; 43fa0000H
  002ee	c7 04 24 00 00
	fa c3		 mov	 DWORD PTR [esp], -1007026176 ; c3fa0000H
  002f5	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  002fa	d9 5f 0c	 fstp	 DWORD PTR [edi+12]

; 116  : 				pInstance->m_v3Position.y = frandom(-500.0f, 500.0f);

  002fd	c7 44 24 04 00
	00 fa 43	 mov	 DWORD PTR [esp+4], 1140457472 ; 43fa0000H
  00305	c7 04 24 00 00
	fa c3		 mov	 DWORD PTR [esp], -1007026176 ; c3fa0000H
  0030c	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00311	83 c4 08	 add	 esp, 8

; 117  : 				pInstance->m_v3Position.z = 0.0f;
; 118  : 				D3DXVec3Normalize(&pInstance->m_v3Position, &pInstance->m_v3Position);

  00314	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00317	d9 5f 10	 fstp	 DWORD PTR [edi+16]
  0031a	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
  00321	50		 push	 eax
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 119  : 
; 120  : 				if (m_pEmitterProperty->isEmitFromEdge())

  00328	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  0032b	e8 00 00 00 00	 call	 ?isEmitFromEdge@CEmitterProperty@@QAEHXZ ; CEmitterProperty::isEmitFromEdge
  00330	85 c0		 test	 eax, eax
  00332	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00335	74 0f		 je	 SHORT $LN13@CreatePart

; 121  : 				{
; 122  : 					pInstance->m_v3Position *= (m_pEmitterProperty->m_fEmittingRadius + fEmittingSize);

  00337	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  0033c	f3 0f 58 4d 9c	 addss	 xmm1, DWORD PTR _fEmittingSize$[ebp]

; 123  : 				}

  00341	e9 a1 01 00 00	 jmp	 $LN149@CreatePart
$LN13@CreatePart:

; 124  : 				else
; 125  : 				{
; 126  : 					pInstance->m_v3Position *= (frandom(0.0f, m_pEmitterProperty->m_fEmittingRadius) + fEmittingSize);

  00346	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  0034b	83 ec 08	 sub	 esp, 8
  0034e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00354	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  0035b	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00360	d8 45 9c	 fadd	 DWORD PTR _fEmittingSize$[ebp]
  00363	83 c4 08	 add	 esp, 8
  00366	d9 5d a0	 fstp	 DWORD PTR _f$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00369	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _f$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 128  : 				break;

  0036e	e9 21 01 00 00	 jmp	 $LN150@CreatePart
$LN15@CreatePart:

; 129  : 
; 130  : 			case CEmitterProperty::EMITTER_SHAPE_SQUARE:
; 131  : 				pInstance->m_v3Position.x = (frandom(-m_pEmitterProperty->m_v3EmittingSize.x/2.0f, m_pEmitterProperty->m_v3EmittingSize.x/2.0f) + fEmittingSize);

  00373	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00376	83 ec 08	 sub	 esp, 8
  00379	f3 0f 10 48 1c	 movss	 xmm1, DWORD PTR [eax+28]
  0037e	0f 28 c1	 movaps	 xmm0, xmm1
  00381	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00388	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00390	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00398	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0039e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  003a3	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  003a8	d8 45 9c	 fadd	 DWORD PTR _fEmittingSize$[ebp]
  003ab	d9 5f 0c	 fstp	 DWORD PTR [edi+12]

; 132  : 				pInstance->m_v3Position.y = (frandom(-m_pEmitterProperty->m_v3EmittingSize.y/2.0f, m_pEmitterProperty->m_v3EmittingSize.y/2.0f) + fEmittingSize);

  003ae	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  003b1	f3 0f 10 48 20	 movss	 xmm1, DWORD PTR [eax+32]
  003b6	0f 28 c1	 movaps	 xmm0, xmm1
  003b9	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  003c0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  003c8	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  003d0	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  003d6	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  003db	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  003e0	d8 45 9c	 fadd	 DWORD PTR _fEmittingSize$[ebp]
  003e3	d9 5f 10	 fstp	 DWORD PTR [edi+16]

; 133  : 				pInstance->m_v3Position.z = (frandom(-m_pEmitterProperty->m_v3EmittingSize.z/2.0f, m_pEmitterProperty->m_v3EmittingSize.z/2.0f) + fEmittingSize);

  003e6	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  003e9	f3 0f 10 48 24	 movss	 xmm1, DWORD PTR [eax+36]
  003ee	0f 28 c1	 movaps	 xmm0, xmm1
  003f1	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  003f8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00400	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00408	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0040e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00413	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00418	d8 45 9c	 fadd	 DWORD PTR _fEmittingSize$[ebp]
  0041b	83 c4 08	 add	 esp, 8
  0041e	d9 5f 14	 fstp	 DWORD PTR [edi+20]

; 134  : 				break;

  00421	e9 e6 00 00 00	 jmp	 $LN18@CreatePart
$LN16@CreatePart:

; 135  : 
; 136  : 			case CEmitterProperty::EMITTER_SHAPE_SPHERE:
; 137  : 				pInstance->m_v3Position.x = frandom(-500.0f, 500.0f);

  00426	83 ec 08	 sub	 esp, 8
  00429	c7 44 24 04 00
	00 fa 43	 mov	 DWORD PTR [esp+4], 1140457472 ; 43fa0000H
  00431	c7 04 24 00 00
	fa c3		 mov	 DWORD PTR [esp], -1007026176 ; c3fa0000H
  00438	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  0043d	d9 5f 0c	 fstp	 DWORD PTR [edi+12]

; 138  : 				pInstance->m_v3Position.y = frandom(-500.0f, 500.0f);

  00440	c7 44 24 04 00
	00 fa 43	 mov	 DWORD PTR [esp+4], 1140457472 ; 43fa0000H
  00448	c7 04 24 00 00
	fa c3		 mov	 DWORD PTR [esp], -1007026176 ; c3fa0000H
  0044f	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00454	d9 5f 10	 fstp	 DWORD PTR [edi+16]

; 139  : 				pInstance->m_v3Position.z = frandom(-500.0f, 500.0f);

  00457	c7 44 24 04 00
	00 fa 43	 mov	 DWORD PTR [esp+4], 1140457472 ; 43fa0000H
  0045f	c7 04 24 00 00
	fa c3		 mov	 DWORD PTR [esp], -1007026176 ; c3fa0000H
  00466	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  0046b	83 c4 08	 add	 esp, 8

; 140  : 				D3DXVec3Normalize(&pInstance->m_v3Position, &pInstance->m_v3Position);

  0046e	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00471	d9 5f 14	 fstp	 DWORD PTR [edi+20]
  00474	50		 push	 eax
  00475	50		 push	 eax
  00476	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 141  : 
; 142  : 				if (m_pEmitterProperty->isEmitFromEdge())

  0047b	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  0047e	e8 00 00 00 00	 call	 ?isEmitFromEdge@CEmitterProperty@@QAEHXZ ; CEmitterProperty::isEmitFromEdge
  00483	85 c0		 test	 eax, eax
  00485	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00488	74 35		 je	 SHORT $LN17@CreatePart

; 143  : 				{
; 144  : 					pInstance->m_v3Position *= (m_pEmitterProperty->m_fEmittingRadius + fEmittingSize);

  0048a	f3 0f 10 48 28	 movss	 xmm1, DWORD PTR [eax+40]
  0048f	f3 0f 58 4d 9c	 addss	 xmm1, DWORD PTR _fEmittingSize$[ebp]
$LN150@CreatePart:

; 154  : 		D3DXVECTOR3 v3TimePosition=_v3TimePosition;

  00494	0f 28 c1	 movaps	 xmm0, xmm1
  00497	f3 0f 59 47 0c	 mulss	 xmm0, DWORD PTR [edi+12]
  0049c	f3 0f 11 47 0c	 movss	 DWORD PTR [edi+12], xmm0
  004a1	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]
  004a6	f3 0f 59 c1	 mulss	 xmm0, xmm1
  004aa	f3 0f 11 47 10	 movss	 DWORD PTR [edi+16], xmm0
  004af	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  004b4	f3 0f 59 c1	 mulss	 xmm0, xmm1
  004b8	f3 0f 11 47 14	 movss	 DWORD PTR [edi+20], xmm0
  004bd	eb 4d		 jmp	 SHORT $LN18@CreatePart
$LN17@CreatePart:

; 145  : 				}
; 146  : 				else
; 147  : 				{
; 148  : 					pInstance->m_v3Position *= (frandom(0.0f, m_pEmitterProperty->m_fEmittingRadius) + fEmittingSize);

  004bf	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  004c4	83 ec 08	 sub	 esp, 8
  004c7	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  004cd	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  004d4	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  004d9	d8 45 9c	 fadd	 DWORD PTR _fEmittingSize$[ebp]
  004dc	83 c4 08	 add	 esp, 8
  004df	d9 5d a0	 fstp	 DWORD PTR _f$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  004e2	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR _f$[ebp]
$LN149@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 154  : 		D3DXVECTOR3 v3TimePosition=_v3TimePosition;

  004e7	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  004ec	f3 0f 59 c1	 mulss	 xmm0, xmm1
  004f0	f3 0f 11 47 0c	 movss	 DWORD PTR [edi+12], xmm0
  004f5	0f 28 c1	 movaps	 xmm0, xmm1
  004f8	f3 0f 59 4f 14	 mulss	 xmm1, DWORD PTR [edi+20]
  004fd	f3 0f 59 47 10	 mulss	 xmm0, DWORD PTR [edi+16]
  00502	f3 0f 11 4f 14	 movss	 DWORD PTR [edi+20], xmm1
  00507	f3 0f 11 47 10	 movss	 DWORD PTR [edi+16], xmm0
$LN18@CreatePart:
  0050c	f3 0f 7e 45 bc	 movq	 xmm0, QWORD PTR __v3TimePosition$[ebp]

; 155  : 
; 156  : 		pInstance->m_v3Position += v3TimePosition;

  00511	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00514	8b 45 c4	 mov	 eax, DWORD PTR __v3TimePosition$[ebp+8]
  00517	66 0f d6 45 e0	 movq	 QWORD PTR _v3TimePosition$9[ebp], xmm0
  0051c	89 45 e8	 mov	 DWORD PTR _v3TimePosition$9[ebp+8], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 204  :     x += v.x;

  0051f	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00523	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR __v3TimePosition$[ebp]
  00528	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 205  :     y += v.y;

  0052c	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00531	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _v3TimePosition$9[ebp+4]
  00536	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 206  :     z += v.z;

  0053b	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00540	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _v3TimePosition$9[ebp+8]
  00545	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 158  : 		if (mc_pmatLocal && !m_pParticleProperty->m_bAttachFlag)

  0054a	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0054d	85 d2		 test	 edx, edx
  0054f	74 1e		 je	 SHORT $LN19@CreatePart
  00551	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  00554	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00558	75 15		 jne	 SHORT $LN19@CreatePart

; 159  : 		{
; 160  : 			D3DXVec3TransformCoord(&pInstance->m_v3Position,&pInstance->m_v3Position,mc_pmatLocal);

  0055a	52		 push	 edx
  0055b	51		 push	 ecx
  0055c	51		 push	 ecx
  0055d	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 161  : 			D3DXVec3TransformCoord(&v3TimePosition, &v3TimePosition, mc_pmatLocal);

  00562	ff 76 04	 push	 DWORD PTR [esi+4]
  00565	8d 45 e0	 lea	 eax, DWORD PTR _v3TimePosition$9[ebp]
  00568	50		 push	 eax
  00569	50		 push	 eax
  0056a	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12
$LN19@CreatePart:

; 162  : 		}
; 163  : 		pInstance->m_v3StartPosition = v3TimePosition;

  0056f	f3 0f 7e 45 e0	 movq	 xmm0, QWORD PTR _v3TimePosition$9[ebp]
  00574	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  00578	8b 45 e8	 mov	 eax, DWORD PTR _v3TimePosition$9[ebp+8]
  0057b	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 164  : 		//pInstance->m_v3LastPosition = pInstance->m_v3Position;
; 165  : 
; 166  : 		// Direction & Velocity
; 167  : 		pInstance->m_v3Velocity.x = 0.0f;

  0057e	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0

; 168  : 		pInstance->m_v3Velocity.y = 0.0f;

  00585	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0

; 169  : 		pInstance->m_v3Velocity.z = 0.0f;

  0058c	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0

; 170  : 
; 171  : 		if (CEmitterProperty::EMITTER_ADVANCED_TYPE_INNER == m_pEmitterProperty->GetEmitterAdvancedType())

  00593	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00596	e8 00 00 00 00	 call	 ?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ ; CEmitterProperty::GetEmitterAdvancedType
  0059b	3c 02		 cmp	 al, 2
  0059d	75 47		 jne	 SHORT $LN20@CreatePart
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0059f	f3 0f 10 57 0c	 movss	 xmm2, DWORD PTR [edi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 173  : 			D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  005a4	8d 45 b0	 lea	 eax, DWORD PTR $T7[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  005a7	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  005ac	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  005b1	f3 0f 5c 55 e0	 subss	 xmm2, DWORD PTR _v3TimePosition$9[ebp]
  005b6	f3 0f 5c 4d e4	 subss	 xmm1, DWORD PTR _v3TimePosition$9[ebp+4]
  005bb	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _v3TimePosition$9[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 173  : 			D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  005c0	50		 push	 eax
  005c1	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  005c4	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  005c5	f3 0f 11 55 b0	 movss	 DWORD PTR $T7[ebp], xmm2

; 181  :     y = fy;

  005ca	f3 0f 11 4d b4	 movss	 DWORD PTR $T7[ebp+4], xmm1

; 182  :     z = fz;

  005cf	f3 0f 11 45 b8	 movss	 DWORD PTR $T7[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 173  : 			D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  005d4	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  005d9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@c2c80000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 175  : 		}

  005e1	e9 ab 00 00 00	 jmp	 $LN151@CreatePart
$LN20@CreatePart:

; 176  : 		else if (CEmitterProperty::EMITTER_ADVANCED_TYPE_OUTER == m_pEmitterProperty->GetEmitterAdvancedType())

  005e6	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  005e9	e8 00 00 00 00	 call	 ?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ ; CEmitterProperty::GetEmitterAdvancedType
  005ee	3c 01		 cmp	 al, 1
  005f0	0f 85 c5 00 00
	00		 jne	 $LN24@CreatePart

; 177  : 		{
; 178  : 			if (m_pEmitterProperty->GetEmitterShape() == CEmitterProperty::EMITTER_SHAPE_POINT)

  005f6	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  005f9	e8 00 00 00 00	 call	 ?GetEmitterShape@CEmitterProperty@@QAEEXZ ; CEmitterProperty::GetEmitterShape
  005fe	84 c0		 test	 al, al
  00600	75 4d		 jne	 SHORT $LN23@CreatePart

; 179  : 			{
; 180  : 				pInstance->m_v3Velocity.x = frandom(-100.0f, 100.0f);

  00602	83 ec 08	 sub	 esp, 8
  00605	c7 44 24 04 00
	00 c8 42	 mov	 DWORD PTR [esp+4], 1120403456 ; 42c80000H
  0060d	c7 04 24 00 00
	c8 c2		 mov	 DWORD PTR [esp], -1027080192 ; c2c80000H
  00614	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00619	d9 5f 24	 fstp	 DWORD PTR [edi+36]

; 181  : 				pInstance->m_v3Velocity.y = frandom(-100.0f, 100.0f);

  0061c	c7 44 24 04 00
	00 c8 42	 mov	 DWORD PTR [esp+4], 1120403456 ; 42c80000H
  00624	c7 04 24 00 00
	c8 c2		 mov	 DWORD PTR [esp], -1027080192 ; c2c80000H
  0062b	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00630	d9 5f 28	 fstp	 DWORD PTR [edi+40]

; 182  : 				pInstance->m_v3Velocity.z = frandom(-100.0f, 100.0f);

  00633	c7 44 24 04 00
	00 c8 42	 mov	 DWORD PTR [esp+4], 1120403456 ; 42c80000H
  0063b	c7 04 24 00 00
	c8 c2		 mov	 DWORD PTR [esp], -1027080192 ; c2c80000H
  00642	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00647	d9 5f 2c	 fstp	 DWORD PTR [edi+44]
  0064a	83 c4 08	 add	 esp, 8

; 183  : 			}

  0064d	eb 6c		 jmp	 SHORT $LN24@CreatePart
$LN23@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0064f	f3 0f 10 57 0c	 movss	 xmm2, DWORD PTR [edi+12]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 186  : 				D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  00654	8d 45 a4	 lea	 eax, DWORD PTR $T6[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00657	f3 0f 10 4f 10	 movss	 xmm1, DWORD PTR [edi+16]
  0065c	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  00661	f3 0f 5c 55 e0	 subss	 xmm2, DWORD PTR _v3TimePosition$9[ebp]
  00666	f3 0f 5c 4d e4	 subss	 xmm1, DWORD PTR _v3TimePosition$9[ebp+4]
  0066b	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _v3TimePosition$9[ebp+8]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 186  : 				D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  00670	50		 push	 eax
  00671	8d 47 24	 lea	 eax, DWORD PTR [edi+36]
  00674	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00675	f3 0f 11 55 a4	 movss	 DWORD PTR $T6[ebp], xmm2

; 181  :     y = fy;

  0067a	f3 0f 11 4d a8	 movss	 DWORD PTR $T6[ebp+4], xmm1

; 182  :     z = fz;

  0067f	f3 0f 11 45 ac	 movss	 DWORD PTR $T6[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 186  : 				D3DXVec3Normalize(&pInstance->m_v3Velocity, &(pInstance->m_v3Position-v3TimePosition));

  00684	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00689	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42c80000
$LN151@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 191  : 		D3DXVECTOR3 v3Velocity = _v3Velocity;

  00691	f3 0f 10 47 24	 movss	 xmm0, DWORD PTR [edi+36]
  00696	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0069a	f3 0f 11 47 24	 movss	 DWORD PTR [edi+36], xmm0
  0069f	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
  006a4	f3 0f 59 c1	 mulss	 xmm0, xmm1
  006a8	f3 0f 11 47 28	 movss	 DWORD PTR [edi+40], xmm0
  006ad	f3 0f 10 47 2c	 movss	 xmm0, DWORD PTR [edi+44]
  006b2	f3 0f 59 c1	 mulss	 xmm0, xmm1
  006b6	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
$LN24@CreatePart:
  006bb	f3 0f 7e 45 c8	 movq	 xmm0, QWORD PTR __v3Velocity$[ebp]

; 192  : 		if (mc_pmatLocal && !m_pParticleProperty->m_bAttachFlag)

  006c0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  006c3	8b 45 d0	 mov	 eax, DWORD PTR __v3Velocity$[ebp+8]
  006c6	66 0f d6 45 d4	 movq	 QWORD PTR _v3Velocity$8[ebp], xmm0
  006cb	89 45 dc	 mov	 DWORD PTR _v3Velocity$8[ebp+8], eax
  006ce	85 c9		 test	 ecx, ecx
  006d0	74 14		 je	 SHORT $LN25@CreatePart
  006d2	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  006d5	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  006d9	75 0b		 jne	 SHORT $LN25@CreatePart

; 193  : 		{
; 194  : 			D3DXVec3TransformNormal(&v3Velocity, &v3Velocity, mc_pmatLocal);

  006db	51		 push	 ecx
  006dc	8d 45 d4	 lea	 eax, DWORD PTR _v3Velocity$8[ebp]
  006df	50		 push	 eax
  006e0	50		 push	 eax
  006e1	e8 00 00 00 00	 call	 _D3DXVec3TransformNormal@12
$LN25@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 204  :     x += v.x;

  006e6	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _v3Velocity$8[ebp]
  006eb	f3 0f 58 47 24	 addss	 xmm0, DWORD PTR [edi+36]
  006f0	f3 0f 11 47 24	 movss	 DWORD PTR [edi+36], xmm0

; 205  :     y += v.y;

  006f5	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _v3Velocity$8[ebp+4]
  006fa	f3 0f 58 47 28	 addss	 xmm0, DWORD PTR [edi+40]
  006ff	f3 0f 11 47 28	 movss	 DWORD PTR [edi+40], xmm0

; 206  :     z += v.z;

  00704	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _v3Velocity$8[ebp+8]
  00709	f3 0f 58 47 2c	 addss	 xmm0, DWORD PTR [edi+44]
  0070e	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
  00713	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 198  : 		if (m_pEmitterProperty->m_v3EmittingDirection.x > 0.0f)

  00716	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00719	f3 0f 10 48 2c	 movss	 xmm1, DWORD PTR [eax+44]
  0071e	0f 2f c8	 comiss	 xmm1, xmm0
  00721	76 4e		 jbe	 SHORT $LN26@CreatePart

; 199  : 			pInstance->m_v3Velocity.x += frandom(-m_pEmitterProperty->m_v3EmittingDirection.x/2.0f, m_pEmitterProperty->m_v3EmittingDirection.x/2.0f) * 1000.0f;

  00723	0f 28 c1	 movaps	 xmm0, xmm1
  00726	83 ec 08	 sub	 esp, 8
  00729	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00730	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00738	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00740	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00746	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0074b	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00750	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@447a0000
  00756	83 c4 08	 add	 esp, 8
  00759	d9 5d a0	 fstp	 DWORD PTR tv639[ebp]
  0075c	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv639[ebp]
  00761	f3 0f 58 47 24	 addss	 xmm0, DWORD PTR [edi+36]
  00766	f3 0f 11 47 24	 movss	 DWORD PTR [edi+36], xmm0
  0076b	0f 57 c0	 xorps	 xmm0, xmm0
  0076e	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
$LN26@CreatePart:

; 200  : 		if (m_pEmitterProperty->m_v3EmittingDirection.y > 0.0f)

  00771	f3 0f 10 48 30	 movss	 xmm1, DWORD PTR [eax+48]
  00776	0f 2f c8	 comiss	 xmm1, xmm0
  00779	76 4e		 jbe	 SHORT $LN27@CreatePart

; 201  : 			pInstance->m_v3Velocity.y += frandom(-m_pEmitterProperty->m_v3EmittingDirection.y/2.0f, m_pEmitterProperty->m_v3EmittingDirection.y/2.0f) * 1000.0f;

  0077b	0f 28 c1	 movaps	 xmm0, xmm1
  0077e	83 ec 08	 sub	 esp, 8
  00781	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00788	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00790	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  00798	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0079e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  007a3	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  007a8	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@447a0000
  007ae	83 c4 08	 add	 esp, 8
  007b1	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
  007b6	d9 5d a0	 fstp	 DWORD PTR tv1096[ebp]
  007b9	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR tv1096[ebp]
  007be	f3 0f 11 47 28	 movss	 DWORD PTR [edi+40], xmm0
  007c3	0f 57 c0	 xorps	 xmm0, xmm0
  007c6	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
$LN27@CreatePart:

; 202  : 		if (m_pEmitterProperty->m_v3EmittingDirection.z > 0.0f)

  007c9	f3 0f 10 48 34	 movss	 xmm1, DWORD PTR [eax+52]
  007ce	0f 2f c8	 comiss	 xmm1, xmm0
  007d1	76 48		 jbe	 SHORT $LN28@CreatePart

; 203  : 			pInstance->m_v3Velocity.z += frandom(-m_pEmitterProperty->m_v3EmittingDirection.z/2.0f, m_pEmitterProperty->m_v3EmittingDirection.z/2.0f) * 1000.0f;

  007d3	0f 28 c1	 movaps	 xmm0, xmm1
  007d6	83 ec 08	 sub	 esp, 8
  007d9	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  007e0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  007e8	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  007f0	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  007f6	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  007fb	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00800	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@447a0000
  00806	83 c4 08	 add	 esp, 8
  00809	f3 0f 10 47 2c	 movss	 xmm0, DWORD PTR [edi+44]
  0080e	d9 5d a0	 fstp	 DWORD PTR tv1112[ebp]
  00811	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR tv1112[ebp]
  00816	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
$LN28@CreatePart:

; 204  : 
; 205  : 		pInstance->m_v3Velocity *= fVelocity;

  0081b	f3 0f 10 8d 78
	ff ff ff	 movss	 xmm1, DWORD PTR _fVelocity$[ebp]

; 212  : 		pInstance->m_fRotation = frandom(m_pParticleProperty->m_wRotationRandomStartingBegin,m_pParticleProperty->m_wRotationRandomStartingEnd);

  00823	83 ec 08	 sub	 esp, 8
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00826	0f 28 c1	 movaps	 xmm0, xmm1
  00829	f3 0f 59 47 24	 mulss	 xmm0, DWORD PTR [edi+36]
  0082e	f3 0f 11 47 24	 movss	 DWORD PTR [edi+36], xmm0

; 223  :     y *= f;

  00833	0f 28 c1	 movaps	 xmm0, xmm1
  00836	f3 0f 59 47 28	 mulss	 xmm0, DWORD PTR [edi+40]

; 224  :     z *= f;

  0083b	f3 0f 59 4f 2c	 mulss	 xmm1, DWORD PTR [edi+44]
  00840	f3 0f 11 47 28	 movss	 DWORD PTR [edi+40], xmm0
  00845	f3 0f 11 4f 2c	 movss	 DWORD PTR [edi+44], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 208  : 		pInstance->m_v2HalfSize = v2HalfSize;

  0084a	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _v2HalfSize$[ebp]
  00850	89 47 30	 mov	 DWORD PTR [edi+48], eax
  00853	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _v2HalfSize$[ebp+4]
  00859	89 47 34	 mov	 DWORD PTR [edi+52], eax

; 209  : 
; 210  : 		// Rotation
; 211  : 		pInstance->m_fRotation = m_pParticleProperty->m_wRotationRandomStartingBegin;

  0085c	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  0085f	0f b7 40 1c	 movzx	 eax, WORD PTR [eax+28]
  00863	66 0f 6e c0	 movd	 xmm0, eax
  00867	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0086a	f3 0f 11 47 40	 movss	 DWORD PTR [edi+64], xmm0

; 212  : 		pInstance->m_fRotation = frandom(m_pParticleProperty->m_wRotationRandomStartingBegin,m_pParticleProperty->m_wRotationRandomStartingEnd);

  0086f	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00872	0f b7 41 1e	 movzx	 eax, WORD PTR [ecx+30]
  00876	66 0f 6e c0	 movd	 xmm0, eax
  0087a	0f b7 41 1c	 movzx	 eax, WORD PTR [ecx+28]
  0087e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00881	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00887	66 0f 6e c0	 movd	 xmm0, eax
  0088b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0088e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00893	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00898	d9 5d a0	 fstp	 DWORD PTR tv750[ebp]
  0089b	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv750[ebp]
  008a0	83 c4 08	 add	 esp, 8
  008a3	f3 0f 11 47 40	 movss	 DWORD PTR [edi+64], xmm0

; 213  : 		if (BILLBOARD_TYPE_LIE == m_pParticleProperty->m_byBillboardType && mc_pmatLocal)

  008a8	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  008ab	80 78 13 03	 cmp	 BYTE PTR [eax+19], 3
  008af	75 13		 jne	 SHORT $LN29@CreatePart
  008b1	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  008b5	74 0d		 je	 SHORT $LN29@CreatePart

; 214  : 		{
; 215  : 			pInstance->m_fRotation += fLieRotation;

  008b7	f3 0f 58 85 74
	ff ff ff	 addss	 xmm0, DWORD PTR _fLieRotation$1$[ebp]
  008bf	f3 0f 11 47 40	 movss	 DWORD PTR [edi+64], xmm0
$LN29@CreatePart:

; 216  : 		}
; 217  : 
; 218  : 		// Texture Animation
; 219  : 		pInstance->m_byFrameIndex = 0;

  008c4	c6 47 50 00	 mov	 BYTE PTR [edi+80], 0

; 220  : 		pInstance->m_byTextureAnimationType = m_pParticleProperty->GetTextureAnimationType();

  008c8	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  008cb	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  008ce	88 47 48	 mov	 BYTE PTR [edi+72], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  008d1	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  008d4	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  008d7	2b 41 70	 sub	 eax, DWORD PTR [ecx+112]
  008da	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 222  : 		if (m_pParticleProperty->GetTextureAnimationFrameCount() > 1)

  008dd	83 f8 01	 cmp	 eax, 1
  008e0	76 4f		 jbe	 SHORT $LN34@CreatePart

; 223  : 		{
; 224  : 			if (CParticleProperty::TEXTURE_ANIMATION_TYPE_RANDOM_DIRECTION == m_pParticleProperty->GetTextureAnimationType())

  008e2	80 79 04 04	 cmp	 BYTE PTR [ecx+4], 4
  008e6	75 28		 jne	 SHORT $LN33@CreatePart

; 225  : 			{
; 226  : 				if (random() & 1)

  008e8	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  008ed	a8 01		 test	 al, 1
  008ef	74 0a		 je	 SHORT $LN32@CreatePart

; 227  : 				{
; 228  : 					pInstance->m_byFrameIndex = 0;

  008f1	c6 47 50 00	 mov	 BYTE PTR [edi+80], 0

; 229  : 					pInstance->m_byTextureAnimationType = CParticleProperty::TEXTURE_ANIMATION_TYPE_CW;

  008f5	c6 47 48 01	 mov	 BYTE PTR [edi+72], 1

; 230  : 				}

  008f9	eb 15		 jmp	 SHORT $LN33@CreatePart
$LN32@CreatePart:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  008fb	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  008fe	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  00901	2b 48 70	 sub	 ecx, DWORD PTR [eax+112]
  00904	c1 f9 02	 sar	 ecx, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 233  : 					pInstance->m_byFrameIndex = m_pParticleProperty->GetTextureAnimationFrameCount() - 1;

  00907	fe c9		 dec	 cl
  00909	88 4f 50	 mov	 BYTE PTR [edi+80], cl

; 234  : 					pInstance->m_byTextureAnimationType = CParticleProperty::TEXTURE_ANIMATION_TYPE_CCW;

  0090c	c6 47 48 02	 mov	 BYTE PTR [edi+72], 2
$LN33@CreatePart:

; 235  : 				}
; 236  : 			}
; 237  : 			if (m_pParticleProperty->m_bTexAniRandomStartFrameFlag)

  00910	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00913	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00917	74 18		 je	 SHORT $LN34@CreatePart
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00919	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  0091c	2b 41 70	 sub	 eax, DWORD PTR [ecx+112]
  0091f	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 239  : 				pInstance->m_byFrameIndex = random_range(0,m_pParticleProperty->GetTextureAnimationFrameCount()-1);

  00922	48		 dec	 eax
  00923	50		 push	 eax
  00924	6a 00		 push	 0
  00926	e8 00 00 00 00	 call	 ?random_range@@YAJJJ@Z	; random_range
  0092b	83 c4 08	 add	 esp, 8
  0092e	88 47 50	 mov	 BYTE PTR [edi+80], al
$LN34@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00931	f3 0f 10 9d 70
	ff ff ff	 movss	 xmm3, DWORD PTR _fElapsedTime$GSCopy$1$[ebp]
  00939	f3 0f 10 4f 28	 movss	 xmm1, DWORD PTR [edi+40]
  0093e	0f 28 c3	 movaps	 xmm0, xmm3
  00941	f3 0f 59 47 24	 mulss	 xmm0, DWORD PTR [edi+36]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 259  : 		if (!pFirstInstance)

  00946	8b 4d 84	 mov	 ecx, DWORD PTR _pFirstInstance$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00949	f3 0f 10 57 2c	 movss	 xmm2, DWORD PTR [edi+44]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0094e	f3 0f 10 67 0c	 movss	 xmm4, DWORD PTR [edi+12]

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00953	f3 0f 59 cb	 mulss	 xmm1, xmm3

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00957	f3 0f 5c e0	 subss	 xmm4, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 259  : 		if (!pFirstInstance)

  0095b	57		 push	 edi
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0095c	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00961	f3 0f 59 d3	 mulss	 xmm2, xmm3

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00965	f3 0f 10 5f 10	 movss	 xmm3, DWORD PTR [edi+16]
  0096a	f3 0f 5c d9	 subss	 xmm3, xmm1
  0096e	f3 0f 5c c2	 subss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 245  : 			pInstance->m_v3LastPosition = pInstance->m_v3Position - (pInstance->m_v3Velocity * fElapsedTime);

  00972	0f 14 e3	 unpcklps xmm4, xmm3
  00975	66 0f d6 67 18	 movq	 QWORD PTR [edi+24], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0097a	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR $T2[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 245  : 			pInstance->m_v3LastPosition = pInstance->m_v3Position - (pInstance->m_v3Velocity * fElapsedTime);

  00982	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp+8]
  00988	89 47 20	 mov	 DWORD PTR [edi+32], eax

; 246  : 			pInstance->m_v2Scale.x = m_pParticleProperty->m_TimeEventScaleX.front().m_Value;

  0098b	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  0098e	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  00991	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00994	89 47 38	 mov	 DWORD PTR [edi+56], eax

; 247  : 			pInstance->m_v2Scale.y= m_pParticleProperty->m_TimeEventScaleY.front().m_Value;

  00997	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  0099a	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]
  0099d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  009a0	89 47 3c	 mov	 DWORD PTR [edi+60], eax

; 248  : 			//pInstance->m_v2Scale = m_pParticleProperty->m_TimeEventScaleXY.front().m_Value;
; 249  : #ifdef WORLD_EDITOR
; 250  : 			pInstance->m_Color.r = m_pParticleProperty->m_TimeEventColorRed.front().m_Value;
; 251  : 			pInstance->m_Color.g = m_pParticleProperty->m_TimeEventColorGreen.front().m_Value;
; 252  : 			pInstance->m_Color.b = m_pParticleProperty->m_TimeEventColorBlue.front().m_Value;
; 253  : 			pInstance->m_Color.a = m_pParticleProperty->m_TimeEventAlpha.front().m_Value;
; 254  : #else
; 255  : 			pInstance->m_dcColor = m_pParticleProperty->m_TimeEventColor.front().m_Value;

  009a3	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  009a6	8b 40 58	 mov	 eax, DWORD PTR [eax+88]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\Type.h

; 141  : 		m_dwColor = r.m_dwColor;

  009a9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  009ac	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 259  : 		if (!pFirstInstance)

  009af	85 c9		 test	 ecx, ecx
  009b1	75 0d		 jne	 SHORT $LN35@CreatePart

; 260  : 		{
; 261  : 			m_pData->BuildDecorator(pInstance);

  009b3	8b 4e 48	 mov	 ecx, DWORD PTR [esi+72]
  009b6	e8 00 00 00 00	 call	 ?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z ; CParticleSystemData::BuildDecorator

; 262  : 			pFirstInstance = pInstance;

  009bb	89 7d 84	 mov	 DWORD PTR _pFirstInstance$1$[ebp], edi

; 263  : 		}

  009be	eb 51		 jmp	 SHORT $LN36@CreatePart
$LN35@CreatePart:

; 266  : 			pInstance->m_pDecorator = pFirstInstance->m_pDecorator->Clone(pFirstInstance,pInstance);

  009c0	8b 71 70	 mov	 esi, DWORD PTR [ecx+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h

; 52   : 			CBaseDecorator * pNewDecorator = __Clone(pFirstInstance, pInstance);

  009c3	51		 push	 ecx
  009c4	8b ce		 mov	 ecx, esi
  009c6	8b 06		 mov	 eax, DWORD PTR [esi]
  009c8	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  009cb	ff d0		 call	 eax

; 53   : 			CBaseDecorator * pSrc = this;
; 54   : 			CBaseDecorator * pDest = pNewDecorator;
; 55   : 			while (pSrc->m_NextDecorator)

  009cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  009d0	83 c6 04	 add	 esi, 4
  009d3	89 45 80	 mov	 DWORD PTR _pNewDecorator$1$[ebp], eax
  009d6	89 45 a0	 mov	 DWORD PTR _pDest$1$[ebp], eax
  009d9	85 c9		 test	 ecx, ecx
  009db	74 2b		 je	 SHORT $LN94@CreatePart
  009dd	0f 1f 00	 npad	 3
$LL93@CreatePart:

; 56   : 			{
; 57   : 				pDest->m_NextDecorator = pSrc->m_NextDecorator->__Clone(pFirstInstance, pInstance);

  009e0	8b 01		 mov	 eax, DWORD PTR [ecx]
  009e2	57		 push	 edi
  009e3	ff 75 84	 push	 DWORD PTR _pFirstInstance$1$[ebp]
  009e6	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  009e9	ff d0		 call	 eax
  009eb	8b 55 a0	 mov	 edx, DWORD PTR _pDest$1$[ebp]
  009ee	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 58   : 				pDest->m_NextDecorator->m_PrevDecorator = pDest;

  009f1	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 59   : 
; 60   : 				pSrc = pSrc->m_NextDecorator;

  009f4	8b 36		 mov	 esi, DWORD PTR [esi]

; 61   : 				pDest = pDest->m_NextDecorator;

  009f6	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  009f9	83 c6 04	 add	 esi, 4
  009fc	89 4d a0	 mov	 DWORD PTR _pDest$1$[ebp], ecx
  009ff	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00a01	85 c9		 test	 ecx, ecx
  00a03	75 db		 jne	 SHORT $LL93@CreatePart
  00a05	8b 45 80	 mov	 eax, DWORD PTR _pNewDecorator$1$[ebp]
$LN94@CreatePart:
  00a08	8b b5 6c ff ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 266  : 			pInstance->m_pDecorator = pFirstInstance->m_pDecorator->Clone(pFirstInstance,pInstance);

  00a0e	89 47 70	 mov	 DWORD PTR [edi+112], eax
$LN36@CreatePart:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00a11	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 269  : 		m_ParticleInstanceListVector[pInstance->m_byFrameIndex].push_back(pInstance);

  00a14	0f b6 4f 50	 movzx	 ecx, BYTE PTR [edi+80]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1014 :         if (_Mysize == max_size()) {

  00a18	81 7c c8 04 55
	55 55 15	 cmp	 DWORD PTR [eax+ecx*8+4], 357913941 ; 15555555H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00a20	8d 34 c8	 lea	 esi, DWORD PTR [eax+ecx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1252 :         _Emplace(_Mypair._Myval2._Myhead, _Val);

  00a23	8b 06		 mov	 eax, DWORD PTR [esi]
  00a25	89 45 a0	 mov	 DWORD PTR __Where$1$[ebp], eax

; 1014 :         if (_Mysize == max_size()) {

  00a28	0f 84 a7 00 00
	00		 je	 $LN135@CreatePart
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1040 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00a2e	89 75 88	 mov	 DWORD PTR __Op$5[ebp], esi

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00a31	6a 0c		 push	 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 585  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00a33	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 1047 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00a3a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR __Op$5[ebp+4], 0

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00a41	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1048 :         _Ptr = _Al.allocate(1);

  00a46	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 588  :     }

  00a48	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a4f	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _pInstance$1$[ebp]
  00a55	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 1020 :         return _Op._Transfer_before(_Where);

  00a58	8b 45 a0	 mov	 eax, DWORD PTR __Where$1$[ebp]
  00a5b	ff 46 04	 inc	 DWORD PTR [esi+4]
  00a5e	89 85 7c ff ff
	ff		 mov	 DWORD PTR __Insert_before$3[ebp], eax

; 600  :         const pointer _Insert_after = _Insert_before->_Prev;

  00a64	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 601  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  00a67	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR __Insert_before$3[ebp]
  00a6d	50		 push	 eax
  00a6e	57		 push	 edi
  00a6f	89 75 80	 mov	 DWORD PTR __Insert_after$4[ebp], esi
  00a72	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 602  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  00a77	8d 45 80	 lea	 eax, DWORD PTR __Insert_after$4[ebp]
  00a7a	50		 push	 eax
  00a7b	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00a7e	50		 push	 eax
  00a7f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_List_node@PAVCParticleInstance@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAVCParticleInstance@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<CParticleInstance *,void *> *,std::_List_node<CParticleInstance *,void *> * const &>

; 603  :         const auto _Result    = this->_Ptr;
; 604  :         this->_Ptr            = pointer{};
; 605  :         _Insert_before->_Prev = _Result;

  00a84	8b 45 a0	 mov	 eax, DWORD PTR __Where$1$[ebp]
  00a87	83 c4 14	 add	 esp, 20			; 00000014H
  00a8a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR __Op$5[ebp+4], 0
  00a91	89 78 04	 mov	 DWORD PTR [eax+4], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 93   : 	for (int i = 0; i < iCreatingCount; ++i)

  00a94	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 606  :         _Insert_after->_Next  = _Result;

  00a9a	89 3e		 mov	 DWORD PTR [esi], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 93   : 	for (int i = 0; i < iCreatingCount; ++i)

  00a9c	40		 inc	 eax

; 270  : 		m_dwCurrentEmissionCount++;

  00a9d	8b b5 6c ff ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00aa3	89 85 68 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00aa9	ff 46 28	 inc	 DWORD PTR [esi+40]
  00aac	3b 45 94	 cmp	 eax, DWORD PTR _iCreatingCount$1$[ebp]
  00aaf	0f 8c cc f7 ff
	ff		 jl	 $LL4@CreatePart
$LN3@CreatePart:

; 272  : }

  00ab5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ab8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00abf	59		 pop	 ecx
  00ac0	5f		 pop	 edi
  00ac1	5e		 pop	 esi
  00ac2	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ac5	33 cd		 xor	 ecx, ebp
  00ac7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00acc	8b e5		 mov	 esp, ebp
  00ace	5d		 pop	 ebp
  00acf	8b e3		 mov	 esp, ebx
  00ad1	5b		 pop	 ebx
  00ad2	c2 04 00	 ret	 4
$LN135@CreatePart:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\list

; 1015 :             _Xlength_error("list too long");

  00ad5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKNMEGII@list?5too?5long@
  00ada	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN148@CreatePart:
  00adf	90		 npad	 1
$LN142@CreatePart:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 272  : }

  00ae0	00 00 00 00	 DD	 $LN11@CreatePart
  00ae4	00 00 00 00	 DD	 $LN12@CreatePart
  00ae8	00 00 00 00	 DD	 $LN15@CreatePart
  00aec	00 00 00 00	 DD	 $LN16@CreatePart
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateParticles@CParticleSystemInstance@@QAEXM@Z$1:
  00000	8d 4d 88	 lea	 ecx, DWORD PTR __Op$5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAVCParticleInstance@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<CParticleInstance *,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?CreateParticles@CParticleSystemInstance@@QAEXM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateParticles@CParticleSystemInstance@@QAEXM@Z
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateParticles@CParticleSystemInstance@@QAEXM@Z ENDP	; CParticleSystemInstance::CreateParticles
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?OnSetDataPointer@CParticleSystemInstance@@UAEXPAVCEffectElementBase@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_pkImgInstNew$1 = 8					; size = 4
_pElement$ = 8						; size = 4
$T2 = 11						; size = 1
?OnSetDataPointer@CParticleSystemInstance@@UAEXPAVCEffectElementBase@@@Z PROC ; CParticleSystemInstance::OnSetDataPointer, COMDAT
; _this$ = ecx

; 453  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx

; 454  : 	m_pData = (CParticleSystemData *)pElement;

  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pElement$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 5d fc	 mov	 DWORD PTR _this$1$[ebp], ebx
  0000f	89 4b 48	 mov	 DWORD PTR [ebx+72], ecx

; 455  : 
; 456  : 	m_dwCurrentEmissionCount = 0;

  00012	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], 0

; 457  : 	m_pParticleProperty = m_pData->GetParticlePropertyPointer();

  00019	e8 00 00 00 00	 call	 ?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ ; CParticleSystemData::GetParticlePropertyPointer

; 458  : 	m_pEmitterProperty = m_pData->GetEmitterPropertyPointer();

  0001e	8b 4b 48	 mov	 ecx, DWORD PTR [ebx+72]
  00021	89 43 4c	 mov	 DWORD PTR [ebx+76], eax
  00024	e8 00 00 00 00	 call	 ?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ ; CParticleSystemData::GetEmitterPropertyPointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00029	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 460  : 	m_ParticleInstanceListVector.resize(m_pParticleProperty->GetTextureAnimationFrameCount()*2+2);

  0002c	8d 7b 30	 lea	 edi, DWORD PTR [ebx+48]
  0002f	89 43 50	 mov	 DWORD PTR [ebx+80], eax
  00032	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00035	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00038	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  0003b	2b 41 70	 sub	 eax, DWORD PTR [ecx+112]

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0003e	8b 37		 mov	 esi, DWORD PTR [edi]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00040	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 460  : 	m_ParticleInstanceListVector.resize(m_pParticleProperty->GetTextureAnimationFrameCount()*2+2);

  00043	8d 0c 45 02 00
	00 00		 lea	 ecx, DWORD PTR [eax*2+2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0004a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004d	8b d0		 mov	 edx, eax
  0004f	2b d6		 sub	 edx, esi
  00051	c1 fa 03	 sar	 edx, 3

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00054	3b ca		 cmp	 ecx, edx
  00056	73 10		 jae	 SHORT $LN13@OnSetDataP

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00058	57		 push	 edi

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00059	8d 34 ce	 lea	 esi, DWORD PTR [esi+ecx*8]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0005c	50		 push	 eax
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1220 :             _Mylast = _Newlast;

  00063	89 77 04	 mov	 DWORD PTR [edi+4], esi

; 1221 :             return;

  00066	eb 2b		 jmp	 SHORT $LN46@OnSetDataP
$LN13@OnSetDataP:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  00068	76 2c		 jbe	 SHORT $LN14@OnSetDataP

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0006a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006d	2b c6		 sub	 eax, esi
  0006f	c1 f8 03	 sar	 eax, 3

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00072	3b c8		 cmp	 ecx, eax
  00074	76 0e		 jbe	 SHORT $LN15@OnSetDataP

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00076	8d 45 0b	 lea	 eax, DWORD PTR $T2[ebp]
  00079	50		 push	 eax
  0007a	51		 push	 ecx
  0007b	8b cf		 mov	 ecx, edi
  0007d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  00082	eb 12		 jmp	 SHORT $LN14@OnSetDataP
$LN15@OnSetDataP:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00084	57		 push	 edi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00085	2b ca		 sub	 ecx, edx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00087	51		 push	 ecx
  00088	ff 77 04	 push	 DWORD PTR [edi+4]
  0008b	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@PAV10@IAAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00090	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN46@OnSetDataP:

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00093	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@OnSetDataP:
  00096	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 465  : 	m_kVct_pkImgInst.reserve(m_pParticleProperty->m_ImageVector.size());

  00099	8d 73 3c	 lea	 esi, DWORD PTR [ebx+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0009c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009f	2b 06		 sub	 eax, DWORD PTR [esi]
  000a1	c1 f8 02	 sar	 eax, 2

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a4	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  000a7	2b 51 70	 sub	 edx, DWORD PTR [ecx+112]
  000aa	c1 fa 02	 sar	 edx, 2

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  000ad	3b d0		 cmp	 edx, eax
  000af	76 13		 jbe	 SHORT $LN24@OnSetDataP

; 1307 :             if (_Newcapacity > max_size()) {

  000b1	81 fa ff ff ff
	3f		 cmp	 edx, 1073741823		; 3fffffffH
  000b7	77 6c		 ja	 SHORT $LN48@OnSetDataP

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  000b9	52		 push	 edx
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
  000c1	8b 4b 4c	 mov	 ecx, DWORD PTR [ebx+76]
$LN24@OnSetDataP:

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000c4	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 466  : 	for (DWORD i = 0; i < m_pParticleProperty->m_ImageVector.size(); ++i)

  000c7	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000c9	2b 41 70	 sub	 eax, DWORD PTR [ecx+112]
  000cc	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 466  : 	for (DWORD i = 0; i < m_pParticleProperty->m_ImageVector.size(); ++i)

  000cf	85 c0		 test	 eax, eax
  000d1	74 49		 je	 SHORT $LN3@OnSetDataP
$LL4@OnSetDataP:

; 467  : 	{
; 468  : 		CGraphicImage * pImage = m_pParticleProperty->m_ImageVector[i];

  000d3	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  000d6	8b 3c 98	 mov	 edi, DWORD PTR [eax+ebx*4]

; 469  : 
; 470  : 		CGraphicImageInstance* pkImgInstNew = CGraphicImageInstance::New();

  000d9	e8 00 00 00 00	 call	 ?New@CGraphicImageInstance@@SAPAV1@XZ ; CGraphicImageInstance::New

; 471  : 		pkImgInstNew->SetImagePointer(pImage);

  000de	57		 push	 edi
  000df	8b c8		 mov	 ecx, eax
  000e1	89 45 08	 mov	 DWORD PTR _pkImgInstNew$1[ebp], eax
  000e4	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000e9	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ec	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  000ef	74 0b		 je	 SHORT $LN37@OnSetDataP

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  000f1	8b 45 08	 mov	 eax, DWORD PTR _pkImgInstNew$1[ebp]
  000f4	89 01		 mov	 DWORD PTR [ecx], eax

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  000f6	83 46 04 04	 add	 DWORD PTR [esi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  000fa	eb 0c		 jmp	 SHORT $LN2@OnSetDataP
$LN37@OnSetDataP:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  000fc	8d 45 08	 lea	 eax, DWORD PTR _pkImgInstNew$1[ebp]
  000ff	50		 push	 eax
  00100	51		 push	 ecx
  00101	8b ce		 mov	 ecx, esi
  00103	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN2@OnSetDataP:

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00108	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 466  : 	for (DWORD i = 0; i < m_pParticleProperty->m_ImageVector.size(); ++i)

  0010b	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0010c	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0010f	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]
  00112	2b 41 70	 sub	 eax, DWORD PTR [ecx+112]
  00115	c1 f8 02	 sar	 eax, 2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 466  : 	for (DWORD i = 0; i < m_pParticleProperty->m_ImageVector.size(); ++i)

  00118	3b d8		 cmp	 ebx, eax
  0011a	72 b7		 jb	 SHORT $LL4@OnSetDataP
$LN3@OnSetDataP:
  0011c	5f		 pop	 edi

; 474  : }

  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 04 00	 ret	 4
$LN48@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1308 :                 _Xlength();

  00125	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN45@OnSetDataP:
  0012a	cc		 int	 3
?OnSetDataPointer@CParticleSystemInstance@@UAEXPAVCEffectElementBase@@@Z ENDP ; CParticleSystemInstance::OnSetDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ??1CParticleSystemInstance@@UAE@XZ
_TEXT	SEGMENT
??1CParticleSystemInstance@@UAE@XZ PROC			; CParticleSystemInstance::~CParticleSystemInstance, COMDAT
; _this$ = ecx

; 511  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemInstance@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0000a	8b 4e 3c	 mov	 ecx, DWORD PTR [esi+60]
  0000d	85 c9		 test	 ecx, ecx
  0000f	74 27		 je	 SHORT $LN6@CParticleS

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00014	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00016	83 e0 fc	 and	 eax, -4			; fffffffcH
  00019	50		 push	 eax
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00020	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0002a	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0

; 1699 :             _Myend   = pointer();

  00031	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
$LN6@CParticleS:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00038	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 514  : }

  0003b	8d 7e 30	 lea	 edi, DWORD PTR [esi+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0003e	85 c0		 test	 eax, eax
  00040	74 32		 je	 SHORT $LN13@CParticleS

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00042	57		 push	 edi
  00043	ff 77 04	 push	 DWORD PTR [edi+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@std@@@std@@YAXPAV?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@0@QAV10@AAV?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >

; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00051	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00053	83 e0 f8	 and	 eax, -8			; fffffff8H
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0005d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00063	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00066	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1699 :             _Myend   = pointer();

  0006d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN13@CParticleS:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 514  : }

  00074	5f		 pop	 edi
  00075	8b ce		 mov	 ecx, esi
  00077	5e		 pop	 esi
  00078	e9 00 00 00 00	 jmp	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
??1CParticleSystemInstance@@UAE@XZ ENDP			; CParticleSystemInstance::~CParticleSystemInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ??0CParticleSystemInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CParticleSystemInstance@@QAE@XZ PROC			; CParticleSystemInstance::CParticleSystemInstance, COMDAT
; _this$ = ecx

; 506  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CParticleSystemInstance@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CEffectElementBaseInstance@@QAE@XZ ; CEffectElementBaseInstance::CEffectElementBaseInstance
  0002e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemInstance@@6B@
  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003b	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00042	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00049	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00050	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  00057	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
  0005e	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 507  : 	Initialize();

  00065	8b ce		 mov	 ecx, esi
  00067	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006b	e8 00 00 00 00	 call	 ?Initialize@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Initialize

; 508  : }

  00070	8b c6		 mov	 eax, esi
  00072	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00075	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007c	59		 pop	 ecx
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 30	 add	 ecx, 48			; 00000030H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@V?$allocator@V?$list@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >::~vector<std::list<CParticleInstance *,std::allocator<CParticleInstance *> >,std::allocator<std::list<CParticleInstance *,std::allocator<CParticleInstance *> > > >
__unwindfunclet$??0CParticleSystemInstance@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00019	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAE@XZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::~vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0CParticleSystemInstance@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CParticleSystemInstance@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CParticleSystemInstance@@QAE@XZ ENDP			; CParticleSystemInstance::CParticleSystemInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?Delete@CParticleSystemInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkPSInst$ = 8						; size = 4
?Delete@CParticleSystemInstance@@SAXPAV1@@Z PROC	; CParticleSystemInstance::Delete, COMDAT

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 27   : 	pkPSInst->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkPSInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 28   : 	ms_kPool.Free(pkPSInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 29   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Emplace_reallocate<CParticleSystemInstance * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 29   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CParticleSystemInstance@@SAXPAV1@@Z ENDP	; CParticleSystemInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?New@CParticleSystemInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CParticleSystemInstance@@SAPAV1@XZ PROC		; CParticleSystemInstance::New, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CParticleSystemInstance@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 54		 push	 84			; 00000054H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0CParticleSystemInstance@@QAE@XZ ; CParticleSystemInstance::CParticleSystemInstance
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 22   : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 23   : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemInstance@@@?$vector@PAVCParticleSystemInstance@@V?$allocator@PAVCParticleSystemInstance@@@std@@@std@@QAEPAPAVCParticleSystemInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemInstance *,std::allocator<CParticleSystemInstance *> >::_Emplace_reallocate<CParticleSystemInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 22   : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 23   : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 23   : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CParticleSystemInstance@@SAPAV1@XZ$0:
  00000	6a 54		 push	 84			; 00000054H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@CParticleSystemInstance@@SAPAV1@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CParticleSystemInstance@@SAPAV1@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CParticleSystemInstance@@SAPAV1@XZ ENDP		; CParticleSystemInstance::New
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?DestroySystem@CParticleSystemInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CParticleSystemInstance@@SAXXZ PROC	; CParticleSystemInstance::DestroySystem, COMDAT

; 13   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 13   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+8

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 19		 je	 SHORT $LN19@DestroySys
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+4
$LN19@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  0002b	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+16
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 16   : 	CParticleInstance::DestroySystem();

  00030	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00031	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+8, esi

; 52   : 			m_kVct_pkFree.clear();

  00037	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleSystemInstance@@2V?$CDynamicPool@VCParticleSystemInstance@@@@A+20, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp

; 16   : 	CParticleInstance::DestroySystem();

  0003c	5e		 pop	 esi
  0003d	e9 00 00 00 00	 jmp	 ?DestroySystem@CParticleInstance@@SAXXZ ; CParticleInstance::DestroySystem
?DestroySystem@CParticleSystemInstance@@SAXXZ ENDP	; CParticleSystemInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleSystemInstance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
