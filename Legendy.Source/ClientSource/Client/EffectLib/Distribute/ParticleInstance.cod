; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCParticleInstance@@@@6B@	; CDynamicPool<CParticleInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z ; CDynamicPool<CParticleInstance>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCParticleInstance@@@@6B@	; CDynamicPool<CParticleInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCParticleInstance@@@@@8	; CDynamicPool<CParticleInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCParticleInstance@@@@8	; CDynamicPool<CParticleInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCParticleInstance@@@@8	; CDynamicPool<CParticleInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCParticleInstance@@@@8 ; CDynamicPool<CParticleInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CParticleInstance>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCParticleInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCParticleInstance@@@@@8 ; CDynamicPool<CParticleInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCParticleInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCParticleInstance@@@@8 ; CDynamicPool<CParticleInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCParticleInstance@@@@8 DD 00H	; CDynamicPool<CParticleInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCParticleInstance@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPool@VCParticleInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CParticleInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCParticleInstance@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCParticleInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCParticleInstance@@@@6B@ DD 00H	; CDynamicPool<CParticleInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCParticleInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCParticleInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$r	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCParticleInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCParticleInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCParticleInstance@@@@6B@ ; CDynamicPool<CParticleInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPTVertex@@QAE@XZ				; SPTVertex::SPTVertex
PUBLIC	?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ ; NEffectUpdateDecorator::CBaseDecorator::DeleteThis
PUBLIC	??0CParticleInstance@@QAE@XZ			; CParticleInstance::CParticleInstance
PUBLIC	??1CParticleInstance@@QAE@XZ			; CParticleInstance::~CParticleInstance
PUBLIC	?GetRadiusApproximation@CParticleInstance@@QAEMXZ ; CParticleInstance::GetRadiusApproximation
PUBLIC	?Update@CParticleInstance@@QAEHMM@Z		; CParticleInstance::Update
PUBLIC	?New@CParticleInstance@@SAPAV1@XZ		; CParticleInstance::New
PUBLIC	?DestroySystem@CParticleInstance@@SAXXZ		; CParticleInstance::DestroySystem
PUBLIC	?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z ; CParticleInstance::Transform
PUBLIC	?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ; CParticleInstance::Transform
PUBLIC	?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ; CParticleInstance::GetParticleMeshPointer
PUBLIC	?DeleteThis@CParticleInstance@@QAEXXZ		; CParticleInstance::DeleteThis
PUBLIC	?Destroy@CParticleInstance@@QAEXXZ		; CParticleInstance::Destroy
PUBLIC	?__Initialize@CParticleInstance@@IAEXXZ		; CParticleInstance::__Initialize
PUBLIC	??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ	; CDynamicPool<CParticleInstance>::~CDynamicPool<CParticleInstance>
PUBLIC	?Delete@?$CDynamicPool@VCParticleInstance@@@@KAXPAVCParticleInstance@@@Z ; CDynamicPool<CParticleInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@CAXXZ ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Emplace_reallocate<CParticleInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAXPAPAVCParticleInstance@@QAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CParticleInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ; std::_Uninitialized_move<CParticleInstance * *,std::allocator<CParticleInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCParticleInstance@@PAPAV1@@std@@YAPAPAVCParticleInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleInstance * *,CParticleInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A ; CParticleInstance::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f800000
PUBLIC	__real@80000000
PUBLIC	__real@bf800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	_D3DXVec3TransformNormal@12:PROC
EXTRN	_D3DXMatrixRotationAxis@12:PROC
EXTRN	_D3DXQuaternionRotationAxis@12:PROC
EXTRN	_D3DXQuaternionMultiply@12:PROC
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_log_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CParticleInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CParticleInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCParticleInstance@@@@6B@ ; CParticleInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CParticleInstance@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCParticleInstance@@PAPAV1@@std@@YAPAPAVCParticleInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCParticleInstance@@PAPAV1@@std@@YAPAPAVCParticleInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CParticleInstance * *,CParticleInstance * *>, COMDAT

; 4113 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4114 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4115 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4116 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4117 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4118 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4120 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCParticleInstance@@PAPAV1@@std@@YAPAPAVCParticleInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CParticleInstance * *,CParticleInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z PROC ; std::_Uninitialized_move<CParticleInstance * *,std::allocator<CParticleInstance *> >, COMDAT

; 1647 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1648 :     // move [_First, _Last) to raw _Dest, using _Al
; 1649 :     // note: only called internally from elsewhere in the STL
; 1650 :     using _Ptrval     = typename _Alloc::value_type*;
; 1651 :     auto _UFirst      = _Get_unwrapped(_First);
; 1652 :     const auto _ULast = _Get_unwrapped(_Last);
; 1653 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1654 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1655 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleInstance@@PAPAV1@@std@@YAPAPAVCParticleInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleInstance * *,CParticleInstance * *>

; 1656 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1657 :     } else {
; 1658 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1659 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1660 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1661 :         }
; 1662 : 
; 1663 :         return _Backout._Release();
; 1664 :     }
; 1665 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CParticleInstance * *,std::allocator<CParticleInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAXPAPAVCParticleInstance@@QAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAXPAPAVCParticleInstance@@QAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CParticleInstance *> >, COMDAT

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     using _Ty = typename _Alloc::value_type;
; 958  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 959  :         for (; _First != _Last; ++_First) {
; 960  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 961  :         }
; 962  :     }
; 963  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAXPAPAVCParticleInstance@@QAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CParticleInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv436 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv435 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Emplace_reallocate<CParticleInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 be 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1619 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 04		 jbe	 SHORT $LN12@Emplace_re

; 1620 :             return _Newsize; // geometric growth would overflow

  00045	8b c7		 mov	 eax, edi
  00047	eb 08		 jmp	 SHORT $LN13@Emplace_re
$LN12@Emplace_re:

; 1621 :         }
; 1622 : 
; 1623 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00049	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1624 : 
; 1625 :         if (_Geometric < _Newsize) {

  0004c	3b c7		 cmp	 eax, edi
  0004e	0f 42 c7	 cmovb	 eax, edi
$LN13@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00051	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00056	0f 87 8f 00 00
	00		 ja	 $LN40@Emplace_re

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  0005c	c1 e0 02	 shl	 eax, 2

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005f	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00060	89 45 f4	 mov	 DWORD PTR tv436[ebp], eax

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00063	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006b	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0006d	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 807  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00070	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00073	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00076	89 45 fc	 mov	 DWORD PTR tv435[ebp], eax
  00079	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0007b	89 08		 mov	 DWORD PTR [eax], ecx
  0007d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00080	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00082	3b da		 cmp	 ebx, edx
  00084	75 07		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00086	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00089	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0008b	eb 17		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ; std::_Uninitialized_move<CParticleInstance * *,std::allocator<CParticleInstance *> >
  00096	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00099	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  0009b	8b 5d fc	 mov	 ebx, DWORD PTR tv435[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0009e	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@YAPAPAVCParticleInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCParticleInstance@@@0@@Z ; std::_Uninitialized_move<CParticleInstance * *,std::allocator<CParticleInstance *> >

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000ad	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000af	83 c4 10	 add	 esp, 16			; 00000010H

; 1675 :         if (_Myfirst) { // destroy and deallocate old array

  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN33@Emplace_re

; 1676 :             _Destroy(_Myfirst, _Mylast);
; 1677 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000b6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b9	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bb	83 e0 fc	 and	 eax, -4			; fffffffcH
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c5	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000cb	8b c3		 mov	 eax, ebx

; 1680 :         _Myfirst = _Newvec;

  000cd	89 3e		 mov	 DWORD PTR [esi], edi

; 1681 :         _Mylast  = _Newvec + _Newsize;

  000cf	8d 0c 8f	 lea	 ecx, DWORD PTR [edi+ecx*4]
  000d2	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000d5	8b 4d f4	 mov	 ecx, DWORD PTR tv436[ebp]
  000d8	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000da	5f		 pop	 edi

; 1682 :         _Myend   = _Newvec + _Newcapacity;

  000db	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx

; 767  :     }

  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000e6	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@CAXXZ ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000eb	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f0	cc		 int	 3
??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Emplace_reallocate<CParticleInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1699 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1699 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CParticleInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A ; CParticleInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ ; CDynamicPool<CParticleInstance>::~CDynamicPool<CParticleInstance>
??__F?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CParticleInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ??__E?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CParticleInstance::ms_kPool'', COMDAT

; 9    : CDynamicPool<CParticleInstance> CParticleInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CParticleInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CParticleInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z PROC	; CDynamicPool<CParticleInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ ; CDynamicPool<CParticleInstance>::~CDynamicPool<CParticleInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCParticleInstance@@@@UAEPAXI@Z ENDP	; CDynamicPool<CParticleInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Xlength, COMDAT

; 1704 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCParticleInstance@@@@KAXPAVCParticleInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCParticleInstance@@@@KAXPAVCParticleInstance@@@Z PROC ; CDynamicPool<CParticleInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 110  : 			delete pkData;

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 15		 je	 SHORT $LN6@Delete
  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ??1CParticleInstance@@QAE@XZ ; CParticleInstance::~CParticleInstance
  00012	68 c4 00 00 00	 push	 196			; 000000c4H
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001d	83 c4 08	 add	 esp, 8
$LN6@Delete:
  00020	5e		 pop	 esi

; 111  : 		}

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?Delete@?$CDynamicPool@VCParticleInstance@@@@KAXPAVCParticleInstance@@@Z ENDP ; CDynamicPool<CParticleInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ PROC	; CDynamicPool<CParticleInstance>::~CDynamicPool<CParticleInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCParticleInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1699 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1693 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1694 :             _Destroy(_Myfirst, _Mylast);
; 1695 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1697 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory

; 803  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1698 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1699 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCParticleInstance@@@@UAE@XZ ENDP	; CDynamicPool<CParticleInstance>::~CDynamicPool<CParticleInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?__Initialize@CParticleInstance@@IAEXXZ
_TEXT	SEGMENT
$T6 = -12						; size = 12
$T7 = -12						; size = 12
?__Initialize@CParticleInstance@@IAEXXZ PROC		; CParticleInstance::__Initialize, COMDAT
; _this$ = ecx

; 434  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c9	 xorps	 xmm1, xmm1

; 435  : 	//*
; 436  : 	m_pDecorator=NULL;

  00009	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  00010	0f 57 c0	 xorps	 xmm0, xmm0

; 441  : 
; 442  : 	m_v2Scale = D3DXVECTOR2(1.0f, 1.0f);

  00013	c7 41 38 00 00
	80 3f		 mov	 DWORD PTR [ecx+56], 1065353216 ; 3f800000H
  0001a	0f 14 c1	 unpcklps xmm0, xmm1
  0001d	66 0f d6 41 0c	 movq	 QWORD PTR [ecx+12], xmm0
  00022	66 0f d6 41 18	 movq	 QWORD PTR [ecx+24], xmm0
  00027	c7 41 3c 00 00
	80 3f		 mov	 DWORD PTR [ecx+60], 1065353216 ; 3f800000H

; 443  : #ifdef WORLD_EDITOR
; 444  : 	m_Color = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
; 445  : #else
; 446  : 	m_dcColor.m_dwColor = 0xffffffff;

  0002e	c7 41 44 ff ff
	ff ff		 mov	 DWORD PTR [ecx+68], -1

; 447  : #endif
; 448  : 
; 449  : 	m_byFrameIndex = 0;

  00035	c6 41 50 00	 mov	 BYTE PTR [ecx+80], 0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 438  : 	m_v3Position = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00040	8b 45 fc	 mov	 eax, DWORD PTR $T7[ebp+8]
  00043	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 439  : 	m_v3LastPosition = m_v3Position;

  00046	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 440  : 	m_v3Velocity = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00049	0f 14 c9	 unpcklps xmm1, xmm1
  0004c	66 0f d6 49 24	 movq	 QWORD PTR [ecx+36], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+8], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 440  : 	m_v3Velocity = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00058	8b 45 fc	 mov	 eax, DWORD PTR $T6[ebp+8]
  0005b	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 450  : 	m_ParticleMesh[0].texCoord = D3DXVECTOR2(0.0f, 1.0f);

  0005e	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0
  00068	c7 81 84 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+132], 1065353216 ; 3f800000H

; 451  : 	m_ParticleMesh[1].texCoord = D3DXVECTOR2(0.0f, 0.0f);

  00072	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0
  0007c	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 452  : 	m_ParticleMesh[2].texCoord = D3DXVECTOR2(1.0f, 1.0f);

  00086	c7 81 a8 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+168], 1065353216 ; 3f800000H
  00090	c7 81 ac 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+172], 1065353216 ; 3f800000H

; 453  : 	m_ParticleMesh[3].texCoord = D3DXVECTOR2(1.0f, 0.0f);

  0009a	c7 81 bc 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [ecx+188], 1065353216 ; 3f800000H
  000a4	c7 81 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+192], 0

; 454  : }

  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
?__Initialize@CParticleInstance@@IAEXXZ ENDP		; CParticleInstance::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?Destroy@CParticleInstance@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CParticleInstance@@QAEXXZ PROC			; CParticleInstance::Destroy, COMDAT
; _this$ = ecx

; 425  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 426  : 	if (m_pDecorator)

  00004	8b 77 70	 mov	 esi, DWORD PTR [edi+112]
  00007	85 f6		 test	 esi, esi
  00009	74 14		 je	 SHORT $LN7@Destroy
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h

; 46   : 			if (m_NextDecorator)

  0000b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000e	85 c9		 test	 ecx, ecx
  00010	74 05		 je	 SHORT $LN5@Destroy

; 47   : 				m_NextDecorator->DeleteThis();

  00012	e8 00 00 00 00	 call	 ?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ ; NEffectUpdateDecorator::CBaseDecorator::DeleteThis
$LN5@Destroy:

; 48   : 			delete this;

  00017	8b 06		 mov	 eax, DWORD PTR [esi]
  00019	8b ce		 mov	 ecx, esi
  0001b	6a 01		 push	 1
  0001d	ff 10		 call	 DWORD PTR [eax]
$LN7@Destroy:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 429  : 	__Initialize();

  0001f	8b cf		 mov	 ecx, edi
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	e9 00 00 00 00	 jmp	 ?__Initialize@CParticleInstance@@IAEXXZ ; CParticleInstance::__Initialize
?Destroy@CParticleInstance@@QAEXXZ ENDP			; CParticleInstance::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?DeleteThis@CParticleInstance@@QAEXXZ
_TEXT	SEGMENT
_pkData$ = -4						; size = 4
?DeleteThis@CParticleInstance@@QAEXXZ PROC		; CParticleInstance::DeleteThis, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 25   : 	Destroy();

  00007	e8 00 00 00 00	 call	 ?Destroy@CParticleInstance@@QAEXXZ ; CParticleInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000c	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 27   : 	ms_kPool.Free(this);

  00011	89 75 fc	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00014	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+24
  0001a	74 0e		 je	 SHORT $LN8@DeleteThis

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001c	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  0001e	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20, 4
  00025	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 28   : }

  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@DeleteThis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d fc	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Emplace_reallocate<CParticleInstance * const &>
  00039	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 28   : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?DeleteThis@CParticleInstance@@QAEXXZ ENDP		; CParticleInstance::DeleteThis
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ
_TEXT	SEGMENT
?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ PROC ; CParticleInstance::GetParticleMeshPointer, COMDAT
; _this$ = ecx

; 494  : 	return m_ParticleMesh;

  00000	8d 41 74	 lea	 eax, DWORD PTR [ecx+116]

; 495  : }

  00003	c3		 ret	 0
?GetParticleMeshPointer@CParticleInstance@@QAEPAUSPTVertex@@XZ ENDP ; CParticleInstance::GetParticleMeshPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z
_TEXT	SEGMENT
_v3Up$9$ = -164						; size = 4
_v3Up$7$ = -164						; size = 4
tv2822 = -164						; size = 4
tv2714 = -164						; size = 4
_v3Cross$5$ = -160					; size = 4
_v3Up$12$ = -160					; size = 4
tv2811 = -160						; size = 4
_v3Up$2$ = -156						; size = 4
_c_matLocal$GSCopy$1$ = -156				; size = 4
tv2812 = -156						; size = 4
_v3Up$14$ = -152					; size = 4
_v3Cross$2$ = -148					; size = 4
_v3Up$4$ = -144						; size = 4
$T1 = -140						; size = 12
$T2 = -140						; size = 12
$T3 = -140						; size = 12
$T4 = -140						; size = 12
$T5 = -140						; size = 12
$T6 = -140						; size = 12
$T7 = -140						; size = 12
$T8 = -140						; size = 12
tv2942 = -128						; size = 16
tv2938 = -128						; size = 16
_v3Up$ = -112						; size = 12
_v3Cross$ = -100					; size = 12
_fCos$1$ = -88						; size = 4
_length$1$ = -88					; size = 4
tv2932 = -88						; size = 8
tv2889 = -88						; size = 4
_v3Position$9 = -88					; size = 12
$T10 = -88						; size = 12
_matRotation$11 = -72					; size = 64
__$ArrayPad$ = -4					; size = 4
_c_matLocal$ = 8					; size = 4
_c_fZRotation$ = 12					; size = 4
?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z PROC ; CParticleInstance::Transform, COMDAT
; _this$ = ecx

; 277  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f0	 and	 esp, -16		; fffffff0H
  00006	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 a4 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+168], eax
  0001a	56		 push	 esi
  0001b	8b f1		 mov	 esi, ecx

; 278  : #ifdef WORLD_EDITOR
; 279  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, m_Color);
; 280  : #else
; 281  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, (DWORD)m_dcColor);

  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00023	57		 push	 edi
  00024	8b 7d 08	 mov	 edi, DWORD PTR _c_matLocal$[ebp]
  00027	89 7c 24 14	 mov	 DWORD PTR _c_matLocal$GSCopy$1$[esp+176], edi
  0002b	ff 76 44	 push	 DWORD PTR [esi+68]
  0002e	6a 3c		 push	 60			; 0000003cH
  00030	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 282  : #endif
; 283  : 
; 284  : 	/////
; 285  : 
; 286  : 	D3DXVECTOR3 v3Up;
; 287  : 	D3DXVECTOR3 v3Cross;
; 288  : 
; 289  : 	if (!m_pParticleProperty->m_bStretchFlag)

  00035	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00038	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0003c	0f 85 4b 03 00
	00		 jne	 $LN4@Transform

; 290  : 	{
; 291  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  00048	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 292  : 		const D3DXVECTOR3 & c_rv3Up = pCurrentCamera->GetUp();
; 293  : 		const D3DXVECTOR3 & c_rv3Cross = pCurrentCamera->GetCross();
; 294  : 
; 295  : 		D3DXVECTOR3 v3Rotation;
; 296  : 
; 297  : 		switch(m_pParticleProperty->m_byBillboardType) {

  0004d	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  00050	8b f8		 mov	 edi, eax
  00052	0f b6 49 13	 movzx	 ecx, BYTE PTR [ecx+19]
  00056	83 c1 fe	 add	 ecx, -2			; fffffffeH
  00059	83 f9 03	 cmp	 ecx, 3
  0005c	0f 87 48 02 00
	00		 ja	 $LN10@Transform
  00062	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN162@Transform[ecx*4]
$LN6@Transform:

; 298  : 		case BILLBOARD_TYPE_LIE:
; 299  : 			{
; 300  : 				float fCos = cosf(D3DXToRadian(m_fRotation)), fSin = sinf(D3DXToRadian(m_fRotation));

  00069	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]
  0006e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  00076	0f 5a c0	 cvtps2pd xmm0, xmm0
  00079	f2 0f 11 44 24
	58		 movsd	 QWORD PTR tv2932[esp+176], xmm0
  0007f	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  00084	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00088	f3 0f 11 44 24
	20		 movss	 DWORD PTR _v3Up$4$[esp+176], xmm0

; 750  :             return (float)sin(_X);

  0008e	f2 0f 10 44 24
	58		 movsd	 xmm0, QWORD PTR tv2932[esp+176]
  00094	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 306  : 				v3Cross.y = fCos;

  00099	f3 0f 10 6c 24
	20		 movss	 xmm5, DWORD PTR _v3Up$4$[esp+176]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  0009f	0f 57 f6	 xorps	 xmm6, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 309  : 			break;

  000a2	8b 7c 24 14	 mov	 edi, DWORD PTR _c_matLocal$GSCopy$1$[esp+176]
  000a6	0f 28 cd	 movaps	 xmm1, xmm5
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  000a9	f2 0f 5a f0	 cvtsd2ss xmm6, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 307  : 				v3Cross.z = 0;

  000ad	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR _v3Cross$[esp+184], 0
  000b5	0f 57 c0	 xorps	 xmm0, xmm0
  000b8	0f 28 e6	 movaps	 xmm4, xmm6
  000bb	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Up$14$[esp+176], xmm0
  000c1	0f 57 25 00 00
	00 00		 xorps	 xmm4, DWORD PTR __xmm@80000000800000008000000080000000

; 309  : 			break;

  000c8	e9 8a 04 00 00	 jmp	 $LN166@Transform
$LN7@Transform:

; 310  : 		case BILLBOARD_TYPE_2FACE:
; 311  : 		case BILLBOARD_TYPE_3FACE:
; 312  : 			// using setting with y, and local rotation at render
; 313  : 		case BILLBOARD_TYPE_Y:
; 314  : 			{
; 315  : 				v3Up = D3DXVECTOR3(0.0f,0.0f,1.0f);

  000cd	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  000d5	0f 57 db	 xorps	 xmm3, xmm3
  000d8	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+176], 0
  000e0	0f 57 f6	 xorps	 xmm6, xmm6
  000e3	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+180], 0
  000eb	c7 44 24 48 00
	00 80 3f	 mov	 DWORD PTR _v3Up$[esp+184], 1065353216 ; 3f800000H

; 316  : 				//v3Up = D3DXVECTOR3(cosf(D3DXToRadian(m_fRotation)),0.0f,-sinf(D3DXToRadian(m_fRotation)));
; 317  : 				const D3DXVECTOR3 & c_rv3View = pCurrentCamera->GetView();
; 318  : 				if (v3Up.x * c_rv3View.y - v3Up.y * c_rv3View.x<0)

  000f3	f3 0f 10 67 58	 movss	 xmm4, DWORD PTR [edi+88]
  000f8	f3 0f 10 6f 54	 movss	 xmm5, DWORD PTR [edi+84]
  000fd	0f 28 cc	 movaps	 xmm1, xmm4
  00100	0f 28 c5	 movaps	 xmm0, xmm5
  00103	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00107	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0010b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0010f	0f 2f d9	 comiss	 xmm3, xmm1
  00112	76 32		 jbe	 SHORT $LN8@Transform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00114	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@80000000

; 224  :     z *= f;

  0011c	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@bf800000
  00124	c7 44 24 40 00
	00 00 80	 mov	 DWORD PTR _v3Up$[esp+176], -2147483648 ; 80000000H
  0012c	c7 44 24 44 00
	00 00 80	 mov	 DWORD PTR _v3Up$[esp+180], -2147483648 ; 80000000H
  00134	c7 44 24 48 00
	00 80 bf	 mov	 DWORD PTR _v3Up$[esp+184], -1082130432 ; bf800000H
  0013c	f3 0f 10 6f 54	 movss	 xmm5, DWORD PTR [edi+84]
  00141	f3 0f 10 67 58	 movss	 xmm4, DWORD PTR [edi+88]
$LN8@Transform:

; 182  :     z = fz;

  00146	0f 28 d6	 movaps	 xmm2, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 321  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  00149	8d 44 24 4c	 lea	 eax, DWORD PTR _v3Cross$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0014d	0f 28 cc	 movaps	 xmm1, xmm4

; 182  :     z = fz;

  00150	f3 0f 59 d3	 mulss	 xmm2, xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 321  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  00154	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00155	f3 0f 59 cf	 mulss	 xmm1, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 321  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  00159	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0015a	0f 28 c2	 movaps	 xmm0, xmm2

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  0015d	f3 0f 59 e6	 mulss	 xmm4, xmm6
  00161	f3 0f 5c c1	 subss	 xmm0, xmm1

; 1280 : 
; 1281 :     *pOut = v;

  00165	f3 0f 11 44 24
	54		 movss	 DWORD PTR _v3Cross$[esp+184], xmm0
  0016b	0f 28 c5	 movaps	 xmm0, xmm5
  0016e	f3 0f 59 c7	 mulss	 xmm0, xmm7
  00172	f3 0f 59 ee	 mulss	 xmm5, xmm6
  00176	f3 0f 5c c2	 subss	 xmm0, xmm2
  0017a	f3 0f 5c e5	 subss	 xmm4, xmm5
  0017e	f3 0f 11 44 24
	58		 movss	 DWORD PTR _v3Cross$[esp+188], xmm0
  00184	f3 0f 11 64 24
	5c		 movss	 DWORD PTR _v3Cross$[esp+192], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 321  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  0018a	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 322  : 
; 323  : 				if (m_fRotation)

  0018f	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]
  00194	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0019b	9f		 lahf
  0019c	f6 c4 44	 test	 ah, 68			; 00000044H
  0019f	0f 8b df 01 00
	00		 jnp	 $LN163@Transform

; 325  : 					float fCos = -sinf(D3DXToRadian(m_fRotation)); // + 90

  001a5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  001ad	f3 0f 11 44 24
	0c		 movss	 DWORD PTR tv2714[esp+176], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  001b3	0f 5a c0	 cvtps2pd xmm0, xmm0
  001b6	e8 00 00 00 00	 call	 __libm_sse2_sin_precise

; 649  :             return (float)cos(_X);

  001bb	f3 0f 10 4c 24
	0c		 movss	 xmm1, DWORD PTR tv2714[esp+176]

; 750  :             return (float)sin(_X);

  001c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 325  : 					float fCos = -sinf(D3DXToRadian(m_fRotation)); // + 90

  001c5	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001cc	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Up$14$[esp+176], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001d2	0f 5a c1	 cvtps2pd xmm0, xmm1
  001d5	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001da	f3 0f 10 64 24
	18		 movss	 xmm4, DWORD PTR _v3Up$14$[esp+176]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001e0	0f 57 ed	 xorps	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001e3	f3 0f 59 64 24
	4c		 mulss	 xmm4, DWORD PTR _v3Cross$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 337  : 			break;

  001e9	8b 7c 24 14	 mov	 edi, DWORD PTR _c_matLocal$GSCopy$1$[esp+176]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001ed	f2 0f 5a e8	 cvtsd2ss xmm5, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001f1	f3 0f 10 5c 24
	18		 movss	 xmm3, DWORD PTR _v3Up$14$[esp+176]
  001f7	0f 28 c5	 movaps	 xmm0, xmm5
  001fa	f3 0f 11 64 24
	1c		 movss	 DWORD PTR _v3Cross$2$[esp+176], xmm4
  00200	f3 0f 59 44 24
	40		 mulss	 xmm0, DWORD PTR _v3Up$[esp+176]
  00206	0f 28 f5	 movaps	 xmm6, xmm5
  00209	f3 0f 59 74 24
	4c		 mulss	 xmm6, DWORD PTR _v3Cross$[esp+176]
  0020f	0f 28 fd	 movaps	 xmm7, xmm5

; 182  :     z = fz;

  00212	f3 0f 58 e0	 addss	 xmm4, xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00216	f3 0f 59 7c 24
	50		 mulss	 xmm7, DWORD PTR _v3Cross$[esp+180]
  0021c	0f 28 c5	 movaps	 xmm0, xmm5
  0021f	0f 28 d5	 movaps	 xmm2, xmm5
  00222	f3 0f 59 44 24
	44		 mulss	 xmm0, DWORD PTR _v3Up$[esp+180]
  00228	f3 0f 59 6c 24
	48		 mulss	 xmm5, DWORD PTR _v3Up$[esp+184]
  0022e	f3 0f 59 54 24
	54		 mulss	 xmm2, DWORD PTR _v3Cross$[esp+184]

; 182  :     z = fz;

  00234	f3 0f 11 64 24
	1c		 movss	 DWORD PTR _v3Cross$2$[esp+176], xmm4

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0023a	f3 0f 10 64 24
	18		 movss	 xmm4, DWORD PTR _v3Up$14$[esp+176]
  00240	f3 0f 59 64 24
	50		 mulss	 xmm4, DWORD PTR _v3Cross$[esp+180]

; 180  :     x = fx;

  00246	f3 0f 58 e0	 addss	 xmm4, xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0024a	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _v3Up$14$[esp+176]
  00250	f3 0f 59 44 24
	54		 mulss	 xmm0, DWORD PTR _v3Cross$[esp+184]

; 181  :     y = fy;

  00256	f3 0f 58 c5	 addss	 xmm0, xmm5
  0025a	f3 0f 11 64 24
	10		 movss	 DWORD PTR _v3Cross$5$[esp+176], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 337  : 			break;

  00260	f3 0f 10 4c 24
	10		 movss	 xmm1, DWORD PTR _v3Cross$5$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00266	0f 28 eb	 movaps	 xmm5, xmm3
  00269	f3 0f 59 6c 24
	40		 mulss	 xmm5, DWORD PTR _v3Up$[esp+176]
  0026f	0f 28 e3	 movaps	 xmm4, xmm3
  00272	f3 0f 59 5c 24
	48		 mulss	 xmm3, DWORD PTR _v3Up$[esp+184]
  00278	f3 0f 59 64 24
	44		 mulss	 xmm4, DWORD PTR _v3Up$[esp+180]

; 182  :     z = fz;

  0027e	f3 0f 5c ee	 subss	 xmm5, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 337  : 			break;

  00282	f3 0f 10 74 24
	1c		 movss	 xmm6, DWORD PTR _v3Cross$2$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00288	f3 0f 5c da	 subss	 xmm3, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 329  : 					v3Cross = v3Cross * fCos + v3Up * fSin;

  0028c	f3 0f 11 44 24
	54		 movss	 DWORD PTR _v3Cross$[esp+184], xmm0
  00292	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00295	f3 0f 5c e7	 subss	 xmm4, xmm7

; 182  :     z = fz;

  00299	f3 0f 11 6c 24
	20		 movss	 DWORD PTR _v3Up$4$[esp+176], xmm5

; 181  :     y = fy;

  0029f	f3 0f 11 5c 24
	18		 movss	 DWORD PTR _v3Up$14$[esp+176], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 337  : 			break;

  002a5	e9 b9 02 00 00	 jmp	 $LN167@Transform
$LN10@Transform:

; 338  : 		case BILLBOARD_TYPE_ALL:
; 339  : 		default:
; 340  : 			{
; 341  : 				if (m_fRotation==0.0f)

  002aa	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]
  002af	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  002b6	9f		 lahf
  002b7	f6 c4 44	 test	 ah, 68			; 00000044H
  002ba	7a 53		 jp	 SHORT $LN11@Transform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  002bc	f3 0f 10 67 64	 movss	 xmm4, DWORD PTR [edi+100]
  002c1	f3 0f 10 4f 68	 movss	 xmm1, DWORD PTR [edi+104]
  002c6	f3 0f 10 6f 60	 movss	 xmm5, DWORD PTR [edi+96]
  002cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002d3	0f 57 c8	 xorps	 xmm1, xmm0
  002d6	0f 57 e8	 xorps	 xmm5, xmm0
  002d9	0f 57 e0	 xorps	 xmm4, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 343  : 					v3Up = -c_rv3Cross;

  002dc	f3 0f 11 6c 24
	40		 movss	 DWORD PTR _v3Up$[esp+176], xmm5
  002e2	f3 0f 11 64 24
	44		 movss	 DWORD PTR _v3Up$[esp+180], xmm4
  002e8	f3 0f 11 4c 24
	48		 movss	 DWORD PTR _v3Up$[esp+184], xmm1

; 344  : 					v3Cross = c_rv3Up;

  002ee	f3 0f 7e 47 48	 movq	 xmm0, QWORD PTR [edi+72]
  002f3	66 0f d6 44 24
	4c		 movq	 QWORD PTR _v3Cross$[esp+176], xmm0
  002f9	8b 47 50	 mov	 eax, DWORD PTR [edi+80]

; 345  : 				}

  002fc	8b 7c 24 14	 mov	 edi, DWORD PTR _c_matLocal$GSCopy$1$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00300	f3 0f 11 4c 24
	18		 movss	 DWORD PTR _v3Up$14$[esp+176], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 344  : 					v3Cross = c_rv3Up;

  00306	89 44 24 54	 mov	 DWORD PTR _v3Cross$[esp+184], eax

; 345  : 				}

  0030a	e9 33 02 00 00	 jmp	 $LN169@Transform
$LN11@Transform:

; 346  : 				else
; 347  : 				{
; 348  : 					const D3DXVECTOR3 & c_rv3View = pCurrentCamera->GetView();
; 349  : 					D3DXMATRIX matRotation;
; 350  : 
; 351  : 					D3DXMatrixRotationAxis(&matRotation, &c_rv3View, D3DXToRadian(m_fRotation));

  0030f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00317	8d 47 54	 lea	 eax, DWORD PTR [edi+84]
  0031a	51		 push	 ecx
  0031b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00320	50		 push	 eax
  00321	8d 44 24 70	 lea	 eax, DWORD PTR _matRotation$11[esp+184]
  00325	50		 push	 eax
  00326	e8 00 00 00 00	 call	 _D3DXMatrixRotationAxis@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  0032b	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  00333	8d 44 24 68	 lea	 eax, DWORD PTR _matRotation$11[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00337	f3 0f 10 47 60	 movss	 xmm0, DWORD PTR [edi+96]
  0033c	0f 57 c1	 xorps	 xmm0, xmm1

; 180  :     x = fx;

  0033f	f3 0f 11 44 24
	58		 movss	 DWORD PTR $T10[esp+176], xmm0

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00345	f3 0f 10 47 64	 movss	 xmm0, DWORD PTR [edi+100]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  0034a	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  0034b	0f 57 c1	 xorps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  0034e	8d 44 24 5c	 lea	 eax, DWORD PTR $T10[esp+180]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00352	f3 0f 11 44 24
	60		 movss	 DWORD PTR $T10[esp+184], xmm0

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00358	f3 0f 10 47 68	 movss	 xmm0, DWORD PTR [edi+104]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  0035d	50		 push	 eax
  0035e	8d 44 24 48	 lea	 eax, DWORD PTR _v3Up$[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00362	0f 57 c1	 xorps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  00365	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00366	f3 0f 11 44 24
	6c		 movss	 DWORD PTR $T10[esp+196], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 352  : 					D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);

  0036c	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 353  : 					D3DXVec3TransformCoord(&v3Cross, &c_rv3Up, &matRotation);

  00371	8d 44 24 68	 lea	 eax, DWORD PTR _matRotation$11[esp+176]
  00375	50		 push	 eax
  00376	8d 47 48	 lea	 eax, DWORD PTR [edi+72]
  00379	50		 push	 eax
  0037a	8d 44 24 54	 lea	 eax, DWORD PTR _v3Cross$[esp+184]
  0037e	50		 push	 eax
  0037f	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12
$LN163@Transform:

; 383  : 
; 384  : 	}
; 385  : 
; 386  : 	if (c_fZRotation)

  00384	8b 7c 24 14	 mov	 edi, DWORD PTR _c_matLocal$GSCopy$1$[esp+176]
  00388	e9 9d 01 00 00	 jmp	 $LN168@Transform
$LN4@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0038d	f3 0f 10 56 0c	 movss	 xmm2, DWORD PTR [esi+12]
  00392	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00397	f3 0f 10 5e 14	 movss	 xmm3, DWORD PTR [esi+20]
  0039c	f3 0f 5c 56 18	 subss	 xmm2, DWORD PTR [esi+24]
  003a1	f3 0f 5c 46 1c	 subss	 xmm0, DWORD PTR [esi+28]
  003a6	f3 0f 5c 5e 20	 subss	 xmm3, DWORD PTR [esi+32]
  003ab	f3 0f 11 54 24
	14		 movss	 DWORD PTR _v3Up$2$[esp+176], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 361  : 		v3Up = m_v3Position - m_v3LastPosition;

  003b1	f3 0f 11 54 24
	40		 movss	 DWORD PTR _v3Up$[esp+176], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003b7	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _v3Up$7$[esp+176], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 361  : 		v3Up = m_v3Position - m_v3LastPosition;

  003bd	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+180], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003c3	f3 0f 11 5c 24
	10		 movss	 DWORD PTR _v3Up$12$[esp+176], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 361  : 		v3Up = m_v3Position - m_v3LastPosition;

  003c9	f3 0f 11 5c 24
	48		 movss	 DWORD PTR _v3Up$[esp+184], xmm3

; 362  : 
; 363  : 		if (c_matLocal)

  003cf	85 ff		 test	 edi, edi
  003d1	74 30		 je	 SHORT $LN13@Transform

; 364  : 		{
; 365  : 			//if (!m_pParticleProperty->m_bAttachFlag)
; 366  : 				D3DXVec3TransformNormal(&v3Up, &v3Up, c_matLocal);

  003d3	57		 push	 edi
  003d4	8d 44 24 44	 lea	 eax, DWORD PTR _v3Up$[esp+180]
  003d8	50		 push	 eax
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 _D3DXVec3TransformNormal@12
  003df	f3 0f 10 5c 24
	48		 movss	 xmm3, DWORD PTR _v3Up$[esp+184]
  003e5	f3 0f 10 44 24
	44		 movss	 xmm0, DWORD PTR _v3Up$[esp+180]
  003eb	f3 0f 10 54 24
	40		 movss	 xmm2, DWORD PTR _v3Up$[esp+176]
  003f1	f3 0f 11 5c 24
	10		 movss	 DWORD PTR _v3Up$12$[esp+176], xmm3
  003f7	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _v3Up$7$[esp+176], xmm0
  003fd	f3 0f 11 54 24
	14		 movss	 DWORD PTR _v3Up$2$[esp+176], xmm2
$LN13@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00403	0f 28 c8	 movaps	 xmm1, xmm0
  00406	f3 0f 59 c8	 mulss	 xmm1, xmm0
  0040a	0f 28 c2	 movaps	 xmm0, xmm2
  0040d	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00411	f3 0f 58 c8	 addss	 xmm1, xmm0
  00415	0f 28 c3	 movaps	 xmm0, xmm3
  00418	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0041c	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00420	0f 5a c1	 cvtps2pd xmm0, xmm1
  00423	0f 57 c9	 xorps	 xmm1, xmm1
  00426	66 0f 2e c8	 ucomisd xmm1, xmm0
  0042a	77 06		 ja	 SHORT $LN164@Transform
  0042c	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00430	eb 05		 jmp	 SHORT $LN165@Transform
$LN164@Transform:
  00432	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN165@Transform:
  00437	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 370  : 		if (length == 0.0f)

  0043b	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00442	f3 0f 11 44 24
	58		 movss	 DWORD PTR _length$1$[esp+176], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 370  : 		if (length == 0.0f)

  00448	9f		 lahf
  00449	f6 c4 44	 test	 ah, 68			; 00000044H
  0044c	7a 1a		 jp	 SHORT $LN14@Transform

; 371  : 		{
; 372  : 			v3Up = D3DXVECTOR3(0.0f,0.0f,1.0f);

  0044e	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+176], 0
  00456	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+180], 0
  0045e	c7 44 24 48 00
	00 80 3f	 mov	 DWORD PTR _v3Up$[esp+184], 1065353216 ; 3f800000H

; 373  : 		}

  00466	eb 50		 jmp	 SHORT $LN15@Transform
$LN14@Transform:

; 375  : 			v3Up *=(1+log(1+length))/length;

  00468	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 732  :             return (float)log(_X);

  00470	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00474	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00479	0f 57 c9	 xorps	 xmm1, xmm1
  0047c	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 375  : 			v3Up *=(1+log(1+length))/length;

  00480	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f800000
  00488	f3 0f 5e 4c 24
	58		 divss	 xmm1, DWORD PTR _length$1$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  0048e	0f 28 c1	 movaps	 xmm0, xmm1
  00491	f3 0f 59 44 24
	14		 mulss	 xmm0, DWORD PTR _v3Up$2$[esp+176]
  00497	f3 0f 11 44 24
	40		 movss	 DWORD PTR _v3Up$[esp+176], xmm0

; 223  :     y *= f;

  0049d	0f 28 c1	 movaps	 xmm0, xmm1
  004a0	f3 0f 59 44 24
	0c		 mulss	 xmm0, DWORD PTR _v3Up$7$[esp+176]

; 224  :     z *= f;

  004a6	f3 0f 59 4c 24
	10		 mulss	 xmm1, DWORD PTR _v3Up$12$[esp+176]
  004ac	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+180], xmm0
  004b2	f3 0f 11 4c 24
	48		 movss	 DWORD PTR _v3Up$[esp+184], xmm1
$LN15@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 379  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  004b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  004be	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  004c3	f3 0f 10 5c 24
	44		 movss	 xmm3, DWORD PTR _v3Up$[esp+180]
  004c9	f3 0f 10 60 5c	 movss	 xmm4, DWORD PTR [eax+92]
  004ce	f3 0f 10 70 58	 movss	 xmm6, DWORD PTR [eax+88]
  004d3	0f 28 d4	 movaps	 xmm2, xmm4

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  004d6	f3 0f 10 68 54	 movss	 xmm5, DWORD PTR [eax+84]
  004db	0f 28 c6	 movaps	 xmm0, xmm6
  004de	f3 0f 59 44 24
	48		 mulss	 xmm0, DWORD PTR _v3Up$[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 382  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  004e4	8d 44 24 4c	 lea	 eax, DWORD PTR _v3Cross$[esp+176]
  004e8	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  004e9	f3 0f 59 64 24
	44		 mulss	 xmm4, DWORD PTR _v3Up$[esp+180]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 382  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  004ef	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  004f0	f3 0f 59 74 24
	48		 mulss	 xmm6, DWORD PTR _v3Up$[esp+184]
  004f6	f3 0f 59 d3	 mulss	 xmm2, xmm3
  004fa	f3 0f 5c d0	 subss	 xmm2, xmm0

; 1280 : 
; 1281 :     *pOut = v;

  004fe	f3 0f 11 54 24
	54		 movss	 DWORD PTR _v3Cross$[esp+184], xmm2
  00504	0f 28 d5	 movaps	 xmm2, xmm5
  00507	f3 0f 59 54 24
	50		 mulss	 xmm2, DWORD PTR _v3Up$[esp+192]
  0050d	f3 0f 59 eb	 mulss	 xmm5, xmm3
  00511	f3 0f 5c d4	 subss	 xmm2, xmm4
  00515	f3 0f 5c f5	 subss	 xmm6, xmm5
  00519	f3 0f 11 54 24
	58		 movss	 DWORD PTR _v3Cross$[esp+188], xmm2
  0051f	f3 0f 11 74 24
	5c		 movss	 DWORD PTR _v3Cross$[esp+192], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 382  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  00525	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
$LN168@Transform:

; 383  : 
; 384  : 	}
; 385  : 
; 386  : 	if (c_fZRotation)

  0052a	f3 0f 10 44 24
	48		 movss	 xmm0, DWORD PTR _v3Up$[esp+184]
  00530	f3 0f 10 64 24
	44		 movss	 xmm4, DWORD PTR _v3Up$[esp+180]
  00536	f3 0f 10 6c 24
	40		 movss	 xmm5, DWORD PTR _v3Up$[esp+176]
  0053c	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Up$14$[esp+176], xmm0
$LN169@Transform:
  00542	f3 0f 10 74 24
	4c		 movss	 xmm6, DWORD PTR _v3Cross$[esp+176]
  00548	0f 57 c0	 xorps	 xmm0, xmm0
  0054b	f3 0f 10 4c 24
	50		 movss	 xmm1, DWORD PTR _v3Cross$[esp+180]
  00551	f3 0f 11 6c 24
	20		 movss	 DWORD PTR _v3Up$4$[esp+176], xmm5
$LN166@Transform:
  00557	f3 0f 11 4c 24
	10		 movss	 DWORD PTR _v3Cross$5$[esp+176], xmm1
  0055d	f3 0f 11 74 24
	1c		 movss	 DWORD PTR _v3Cross$2$[esp+176], xmm6
$LN167@Transform:
  00563	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _c_fZRotation$[ebp]
  00568	0f 2e d0	 ucomiss xmm2, xmm0
  0056b	f3 0f 11 64 24
	0c		 movss	 DWORD PTR _v3Up$9$[esp+176], xmm4
  00571	9f		 lahf
  00572	f6 c4 44	 test	 ah, 68			; 00000044H
  00575	0f 8b 84 00 00
	00		 jnp	 $LN16@Transform
  0057b	0f 28 c2	 movaps	 xmm0, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  0057e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00581	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  00586	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058a	f3 0f 11 44 24
	58		 movss	 DWORD PTR _fCos$1$[esp+176], xmm0
  00590	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _c_fZRotation$[ebp]

; 750  :             return (float)sin(_X);

  00595	0f 5a c0	 cvtps2pd xmm0, xmm0
  00598	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 392  : 		x = v3Up.x;

  0059d	f3 0f 10 5c 24
	58		 movss	 xmm3, DWORD PTR _fCos$1$[esp+176]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  005a3	0f 57 d2	 xorps	 xmm2, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 392  : 		x = v3Up.x;

  005a6	f3 0f 10 4c 24
	20		 movss	 xmm1, DWORD PTR _v3Up$4$[esp+176]
  005ac	0f 28 eb	 movaps	 xmm5, xmm3

; 393  : 		y = v3Up.y;
; 394  : 		v3Up.x = x * fCos - y * fSin;

  005af	f3 0f 10 64 24
	0c		 movss	 xmm4, DWORD PTR _v3Up$9$[esp+176]

; 396  : 
; 397  : 		x = v3Cross.x;

  005b5	0f 28 f3	 movaps	 xmm6, xmm3
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  005b8	f2 0f 5a d0	 cvtsd2ss xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 392  : 		x = v3Up.x;

  005bc	f3 0f 59 e9	 mulss	 xmm5, xmm1

; 393  : 		y = v3Up.y;
; 394  : 		v3Up.x = x * fCos - y * fSin;

  005c0	0f 28 c2	 movaps	 xmm0, xmm2

; 395  : 		v3Up.y = y * fCos + x * fSin;

  005c3	f3 0f 59 ca	 mulss	 xmm1, xmm2
  005c7	f3 0f 59 c4	 mulss	 xmm0, xmm4
  005cb	f3 0f 5c e8	 subss	 xmm5, xmm0
  005cf	0f 28 c3	 movaps	 xmm0, xmm3

; 398  : 		y = v3Cross.y;
; 399  : 		v3Cross.x = x * fCos - y * fSin;
; 400  : 		v3Cross.y = y * fCos + x * fSin;

  005d2	f3 0f 59 5c 24
	10		 mulss	 xmm3, DWORD PTR _v3Cross$5$[esp+176]
  005d8	f3 0f 59 e0	 mulss	 xmm4, xmm0
  005dc	0f 28 c2	 movaps	 xmm0, xmm2
  005df	f3 0f 59 44 24
	10		 mulss	 xmm0, DWORD PTR _v3Cross$5$[esp+176]
  005e5	f3 0f 58 e1	 addss	 xmm4, xmm1
  005e9	f3 0f 10 4c 24
	1c		 movss	 xmm1, DWORD PTR _v3Cross$2$[esp+176]
  005ef	f3 0f 59 f1	 mulss	 xmm6, xmm1
  005f3	f3 0f 59 ca	 mulss	 xmm1, xmm2
  005f7	f3 0f 5c f0	 subss	 xmm6, xmm0
  005fb	f3 0f 58 cb	 addss	 xmm1, xmm3
$LN16@Transform:

; 403  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  005ff	f3 0f 10 7e 38	 movss	 xmm7, DWORD PTR [esi+56]
  00604	f3 0f 59 7e 30	 mulss	 xmm7, DWORD PTR [esi+48]
  00609	0f 57 3d 00 00
	00 00		 xorps	 xmm7, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00610	0f 28 d7	 movaps	 xmm2, xmm7
  00613	0f 28 c7	 movaps	 xmm0, xmm7
  00616	f3 0f 59 7c 24
	54		 mulss	 xmm7, DWORD PTR _v3Cross$[esp+184]
  0061c	f3 0f 59 d6	 mulss	 xmm2, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 404  : 	v3Up = (m_v2HalfSize.y*m_v2Scale.y) * v3Up;

  00620	f3 0f 10 76 3c	 movss	 xmm6, DWORD PTR [esi+60]
  00625	f3 0f 59 76 34	 mulss	 xmm6, DWORD PTR [esi+52]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  0062a	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0062e	f3 0f 11 54 24
	10		 movss	 DWORD PTR tv2811[esp+176], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 403  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  00634	f3 0f 11 54 24
	4c		 movss	 DWORD PTR _v3Cross$[esp+176], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  0063a	f3 0f 11 44 24
	14		 movss	 DWORD PTR tv2812[esp+176], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 403  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  00640	f3 0f 11 44 24
	50		 movss	 DWORD PTR _v3Cross$[esp+180], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00646	0f 28 c6	 movaps	 xmm0, xmm6
  00649	f3 0f 59 c5	 mulss	 xmm0, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 403  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  0064d	f3 0f 11 7c 24
	54		 movss	 DWORD PTR _v3Cross$[esp+184], xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00653	0f 11 44 24 30	 movups	 XMMWORD PTR tv2938[esp+176], xmm0
  00658	0f 28 c6	 movaps	 xmm0, xmm6
  0065b	f3 0f 59 74 24
	18		 mulss	 xmm6, DWORD PTR _v3Up$14$[esp+176]
  00661	f3 0f 59 c4	 mulss	 xmm0, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 404  : 	v3Up = (m_v2HalfSize.y*m_v2Scale.y) * v3Up;

  00665	f3 0f 11 74 24
	48		 movss	 DWORD PTR _v3Up$[esp+184], xmm6
  0066b	0f 10 6c 24 30	 movups	 xmm5, XMMWORD PTR tv2938[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00670	f3 0f 11 44 24
	0c		 movss	 DWORD PTR tv2822[esp+176], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 404  : 	v3Up = (m_v2HalfSize.y*m_v2Scale.y) * v3Up;

  00676	f3 0f 11 6c 24
	40		 movss	 DWORD PTR _v3Up$[esp+176], xmm5
  0067c	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+180], xmm0

; 405  : 
; 406  : 	if (c_matLocal && m_pParticleProperty->m_bAttachFlag)

  00682	85 ff		 test	 edi, edi
  00684	0f 84 28 01 00
	00		 je	 $LN17@Transform
  0068a	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0068d	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00691	0f 84 1b 01 00
	00		 je	 $LN17@Transform

; 407  : 	{
; 408  : 		D3DXVECTOR3 v3Position;
; 409  : 		D3DXVec3TransformCoord(&v3Position, &m_v3Position, c_matLocal);

  00697	57		 push	 edi
  00698	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0069b	50		 push	 eax
  0069c	8d 44 24 60	 lea	 eax, DWORD PTR _v3Position$9[esp+184]
  006a0	50		 push	 eax
  006a1	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  006a6	f3 0f 10 44 24
	58		 movss	 xmm0, DWORD PTR _v3Position$9[esp+176]
  006ac	f3 0f 10 64 24
	5c		 movss	 xmm4, DWORD PTR _v3Position$9[esp+180]
  006b2	0f 28 f0	 movaps	 xmm6, xmm0
  006b5	f3 0f 5c 74 24
	40		 subss	 xmm6, DWORD PTR _v3Up$[esp+176]
  006bb	f3 0f 5c 64 24
	44		 subss	 xmm4, DWORD PTR _v3Up$[esp+180]
  006c1	f3 0f 10 5c 24
	60		 movss	 xmm3, DWORD PTR _v3Position$9[esp+184]
  006c7	f3 0f 5c 5c 24
	48		 subss	 xmm3, DWORD PTR _v3Up$[esp+184]
  006cd	0f 29 44 24 30	 movaps	 XMMWORD PTR tv2942[esp+176], xmm0

; 182  :     z = fz;

  006d2	0f 28 d6	 movaps	 xmm2, xmm6
  006d5	f3 0f 58 54 24
	4c		 addss	 xmm2, DWORD PTR _v3Cross$[esp+176]
  006db	f3 0f 5c 74 24
	4c		 subss	 xmm6, DWORD PTR _v3Cross$[esp+176]

; 180  :     x = fx;

  006e1	0f 28 cc	 movaps	 xmm1, xmm4

; 181  :     y = fy;

  006e4	0f 28 c3	 movaps	 xmm0, xmm3
  006e7	f3 0f 58 4c 24
	50		 addss	 xmm1, DWORD PTR _v3Cross$[esp+180]

; 180  :     x = fx;

  006ed	f3 0f 5c 64 24
	50		 subss	 xmm4, DWORD PTR _v3Cross$[esp+180]

; 181  :     y = fy;

  006f3	f3 0f 58 44 24
	54		 addss	 xmm0, DWORD PTR _v3Cross$[esp+184]
  006f9	f3 0f 5c 5c 24
	54		 subss	 xmm3, DWORD PTR _v3Cross$[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 410  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  006ff	0f 14 d1	 unpcklps xmm2, xmm1
  00702	66 0f d6 56 74	 movq	 QWORD PTR [esi+116], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00707	0f 28 54 24 30	 movaps	 xmm2, XMMWORD PTR tv2942[esp+176]
  0070c	f3 0f 58 54 24
	40		 addss	 xmm2, DWORD PTR _v3Up$[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 411  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  00712	0f 14 f4	 unpcklps xmm6, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00715	f3 0f 10 64 24
	60		 movss	 xmm4, DWORD PTR _v3Position$9[esp+184]
  0071b	f3 0f 58 64 24
	48		 addss	 xmm4, DWORD PTR _v3Up$[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 411  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  00721	66 0f d6 b6 88
	00 00 00	 movq	 QWORD PTR [esi+136], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00729	f3 0f 10 74 24
	5c		 movss	 xmm6, DWORD PTR _v3Position$9[esp+180]
  0072f	f3 0f 58 74 24
	44		 addss	 xmm6, DWORD PTR _v3Up$[esp+180]
  00735	0f 29 54 24 30	 movaps	 XMMWORD PTR tv2942[esp+176], xmm2

; 182  :     z = fz;

  0073a	0f 28 6c 24 30	 movaps	 xmm5, XMMWORD PTR tv2942[esp+176]
  0073f	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T8[esp+184], xmm0
  00745	0f 28 d5	 movaps	 xmm2, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 410  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  00748	8b 44 24 2c	 mov	 eax, DWORD PTR $T8[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0074c	0f 28 c4	 movaps	 xmm0, xmm4

; 182  :     z = fz;

  0074f	f3 0f 58 54 24
	4c		 addss	 xmm2, DWORD PTR _v3Cross$[esp+176]

; 181  :     y = fy;

  00755	f3 0f 58 44 24
	54		 addss	 xmm0, DWORD PTR _v3Cross$[esp+184]

; 182  :     z = fz;

  0075b	f3 0f 5c 6c 24
	4c		 subss	 xmm5, DWORD PTR _v3Cross$[esp+176]

; 181  :     y = fy;

  00761	f3 0f 5c 64 24
	54		 subss	 xmm4, DWORD PTR _v3Cross$[esp+184]

; 180  :     x = fx;

  00767	0f 28 ce	 movaps	 xmm1, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 410  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  0076a	89 46 7c	 mov	 DWORD PTR [esi+124], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0076d	f3 0f 58 4c 24
	50		 addss	 xmm1, DWORD PTR _v3Cross$[esp+180]
  00773	f3 0f 5c 74 24
	50		 subss	 xmm6, DWORD PTR _v3Cross$[esp+180]

; 182  :     z = fz;

  00779	f3 0f 11 5c 24
	2c		 movss	 DWORD PTR $T7[esp+184], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 411  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  0077f	8b 44 24 2c	 mov	 eax, DWORD PTR $T7[esp+184]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00783	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T6[esp+184], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 412  : 		m_ParticleMesh[2].position = v3Position + v3Up + v3Cross;

  00789	0f 14 d1	 unpcklps xmm2, xmm1
  0078c	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  00792	8b 44 24 2c	 mov	 eax, DWORD PTR $T6[esp+184]
  00796	66 0f d6 96 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm2
  0079e	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007a4	f3 0f 11 64 24
	2c		 movss	 DWORD PTR $T5[esp+184], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 413  : 		m_ParticleMesh[3].position = v3Position + v3Up - v3Cross;

  007aa	0f 14 ee	 unpcklps xmm5, xmm6

; 414  : 	}

  007ad	e9 f0 00 00 00	 jmp	 $LN170@Transform
$LN17@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  007b2	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  007b7	f3 0f 10 5e 0c	 movss	 xmm3, DWORD PTR [esi+12]
  007bc	f3 0f 5c c8	 subss	 xmm1, xmm0
  007c0	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  007c5	f3 0f 5c dd	 subss	 xmm3, xmm5
  007c9	f3 0f 5c c6	 subss	 xmm0, xmm6

; 180  :     x = fx;

  007cd	f3 0f 58 4c 24
	14		 addss	 xmm1, DWORD PTR tv2812[esp+176]

; 182  :     z = fz;

  007d3	f3 0f 58 d3	 addss	 xmm2, xmm3

; 181  :     y = fy;

  007d7	f3 0f 58 c7	 addss	 xmm0, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 417  : 		m_ParticleMesh[0].position = m_v3Position - v3Up + v3Cross;

  007db	0f 14 d1	 unpcklps xmm2, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007de	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T4[esp+184], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 417  : 		m_ParticleMesh[0].position = m_v3Position - v3Up + v3Cross;

  007e4	8b 44 24 2c	 mov	 eax, DWORD PTR $T4[esp+184]
  007e8	66 0f d6 56 74	 movq	 QWORD PTR [esi+116], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007ed	f3 0f 10 54 24
	10		 movss	 xmm2, DWORD PTR tv2811[esp+176]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 417  : 		m_ParticleMesh[0].position = m_v3Position - v3Up + v3Cross;

  007f3	89 46 7c	 mov	 DWORD PTR [esi+124], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007f6	f3 0f 5c da	 subss	 xmm3, xmm2

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  007fa	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  007ff	f3 0f 5c 4c 24
	0c		 subss	 xmm1, DWORD PTR tv2822[esp+176]
  00805	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  0080a	f3 0f 5c c6	 subss	 xmm0, xmm6

; 180  :     x = fx;

  0080e	f3 0f 5c 4c 24
	14		 subss	 xmm1, DWORD PTR tv2812[esp+176]

; 181  :     y = fy;

  00814	f3 0f 5c c7	 subss	 xmm0, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 418  : 		m_ParticleMesh[1].position = m_v3Position - v3Up - v3Cross;

  00818	0f 14 d9	 unpcklps xmm3, xmm1
  0081b	66 0f d6 9e 88
	00 00 00	 movq	 QWORD PTR [esi+136], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00823	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T3[esp+184], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 418  : 		m_ParticleMesh[1].position = m_v3Position - v3Up - v3Cross;

  00829	8b 44 24 2c	 mov	 eax, DWORD PTR $T3[esp+184]
  0082d	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00833	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  00838	f3 0f 58 6e 0c	 addss	 xmm5, DWORD PTR [esi+12]
  0083d	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00842	f3 0f 58 4c 24
	0c		 addss	 xmm1, DWORD PTR tv2822[esp+176]
  00848	f3 0f 58 c6	 addss	 xmm0, xmm6

; 182  :     z = fz;

  0084c	f3 0f 58 d5	 addss	 xmm2, xmm5
  00850	f3 0f 5c 6c 24
	10		 subss	 xmm5, DWORD PTR tv2811[esp+176]

; 180  :     x = fx;

  00856	f3 0f 58 4c 24
	14		 addss	 xmm1, DWORD PTR tv2812[esp+176]

; 181  :     y = fy;

  0085c	f3 0f 58 c7	 addss	 xmm0, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 419  : 		m_ParticleMesh[2].position = m_v3Position + v3Up + v3Cross;

  00860	0f 14 d1	 unpcklps xmm2, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00863	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T2[esp+184], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 419  : 		m_ParticleMesh[2].position = m_v3Position + v3Up + v3Cross;

  00869	8b 44 24 2c	 mov	 eax, DWORD PTR $T2[esp+184]
  0086d	66 0f d6 96 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm2
  00875	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0087b	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  00880	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00885	f3 0f 58 4c 24
	0c		 addss	 xmm1, DWORD PTR tv2822[esp+176]
  0088b	f3 0f 58 c6	 addss	 xmm0, xmm6

; 180  :     x = fx;

  0088f	f3 0f 5c 4c 24
	14		 subss	 xmm1, DWORD PTR tv2812[esp+176]

; 181  :     y = fy;

  00895	f3 0f 5c c7	 subss	 xmm0, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 420  : 		m_ParticleMesh[3].position = m_v3Position + v3Up - v3Cross;

  00899	0f 14 e9	 unpcklps xmm5, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0089c	f3 0f 11 44 24
	2c		 movss	 DWORD PTR $T1[esp+184], xmm0
$LN170@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 422  : }

  008a2	8b 44 24 2c	 mov	 eax, DWORD PTR $T1[esp+184]
  008a6	8b 8c 24 ac 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+176]
  008ad	66 0f d6 ae b0
	00 00 00	 movq	 QWORD PTR [esi+176], xmm5
  008b5	5f		 pop	 edi
  008b6	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
  008bc	5e		 pop	 esi
  008bd	33 cc		 xor	 ecx, esp
  008bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008c4	8b e5		 mov	 esp, ebp
  008c6	5d		 pop	 ebp
  008c7	c2 08 00	 ret	 8
  008ca	66 90		 npad	 2
$LN162@Transform:
  008cc	00 00 00 00	 DD	 $LN7@Transform
  008d0	00 00 00 00	 DD	 $LN6@Transform
  008d4	00 00 00 00	 DD	 $LN7@Transform
  008d8	00 00 00 00	 DD	 $LN7@Transform
?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@M@Z ENDP ; CParticleInstance::Transform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z
_TEXT	SEGMENT
_v3Cross$2$ = -96					; size = 4
_v3Up$7$ = -96						; size = 4
tv2752 = -96						; size = 4
_v3Up$14$ = -92						; size = 4
_v3Up$2$ = -92						; size = 4
tv2762 = -92						; size = 4
_v3Cross$5$ = -88					; size = 4
_v3Up$12$ = -88						; size = 4
_v3Up$4$ = -88						; size = 4
tv2751 = -88						; size = 4
tv2652 = -88						; size = 4
$T1 = -84						; size = 12
$T2 = -84						; size = 12
$T3 = -84						; size = 12
$T4 = -84						; size = 12
$T5 = -84						; size = 12
$T6 = -84						; size = 12
$T7 = -84						; size = 12
$T8 = -84						; size = 12
_qr$9 = -84						; size = 16
_qr$10 = -84						; size = 16
_c_matLocal$GSCopy$1$ = -68				; size = 4
tv2880 = -64						; size = 16
_qc$11 = -64						; size = 16
_v3Up$ = -48						; size = 12
_v3Cross$ = -36						; size = 12
_length$1$ = -24					; size = 4
_v3Cross$8$ = -24					; size = 4
tv2872 = -24						; size = 8
_v3Position$12 = -24					; size = 12
_q$13 = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_c_matLocal$ = 8					; size = 4
?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z PROC ; CParticleInstance::Transform, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f0	 and	 esp, -16		; fffffff0H
  00006	83 ec 68	 sub	 esp, 104		; 00000068H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 64	 mov	 DWORD PTR __$ArrayPad$[esp+104], eax
  00014	8b 45 08	 mov	 eax, DWORD PTR _c_matLocal$[ebp]
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	89 44 24 28	 mov	 DWORD PTR _c_matLocal$GSCopy$1$[esp+108], eax

; 126  : #ifdef WORLD_EDITOR
; 127  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, m_Color);
; 128  : #else
; 129  : 	STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, m_dcColor);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00024	57		 push	 edi
  00025	ff 76 44	 push	 DWORD PTR [esi+68]
  00028	6a 3c		 push	 60			; 0000003cH
  0002a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 130  : #endif
; 131  : 
; 132  : 	/////
; 133  : 
; 134  : 	D3DXVECTOR3 v3Up;
; 135  : 	D3DXVECTOR3 v3Cross;
; 136  : 
; 137  : 	if (!m_pParticleProperty->m_bStretchFlag)

  0002f	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00032	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00036	0f 85 f8 03 00
	00		 jne	 $LN4@Transform

; 138  : 	{
; 139  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  00042	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera

; 140  : 		const D3DXVECTOR3 & c_rv3Up = pCurrentCamera->GetUp();
; 141  : 		const D3DXVECTOR3 & c_rv3Cross = pCurrentCamera->GetCross();
; 142  : 
; 143  : 		D3DXVECTOR3 v3Rotation;
; 144  : 
; 145  : 		switch(m_pParticleProperty->m_byBillboardType) {

  00047	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0004a	8b f8		 mov	 edi, eax
  0004c	0f b6 49 13	 movzx	 ecx, BYTE PTR [ecx+19]
  00050	83 c1 fe	 add	 ecx, -2			; fffffffeH
  00053	83 f9 03	 cmp	 ecx, 3
  00056	0f 87 31 02 00
	00		 ja	 $LN10@Transform
  0005c	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN159@Transform[ecx*4]
$LN6@Transform:

; 146  : 		case BILLBOARD_TYPE_LIE:
; 147  : 			{
; 148  : 				float fCos = cosf(D3DXToRadian(m_fRotation)), fSin = sinf(D3DXToRadian(m_fRotation));

  00063	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]
  00068	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  00070	0f 5a c0	 cvtps2pd xmm0, xmm0
  00073	f2 0f 11 44 24
	58		 movsd	 QWORD PTR tv2872[esp+112], xmm0
  00079	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  0007e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00082	f3 0f 11 44 24
	18		 movss	 DWORD PTR _v3Up$4$[esp+112], xmm0

; 750  :             return (float)sin(_X);

  00088	f2 0f 10 44 24
	58		 movsd	 xmm0, QWORD PTR tv2872[esp+112]
  0008e	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 153  : 				v3Cross.y = fCos;

  00093	f3 0f 10 64 24
	18		 movss	 xmm4, DWORD PTR _v3Up$4$[esp+112]
  00099	0f 57 d2	 xorps	 xmm2, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  0009c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 153  : 				v3Cross.y = fCos;

  000a0	0f 28 cc	 movaps	 xmm1, xmm4
  000a3	0f 57 ed	 xorps	 xmm5, xmm5
  000a6	0f 28 d8	 movaps	 xmm3, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  000a9	f3 0f 11 44 24
	10		 movss	 DWORD PTR _v3Cross$2$[esp+112], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 150  : 				v3Up.y = -fSin;

  000af	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000b7	0f 57 d8	 xorps	 xmm3, xmm0

; 154  : 				v3Cross.z = 0;
; 155  : 			}
; 156  : 			break;

  000ba	e9 4a 05 00 00	 jmp	 $LN5@Transform
$LN7@Transform:

; 157  : 		case BILLBOARD_TYPE_2FACE:
; 158  : 		case BILLBOARD_TYPE_3FACE:
; 159  : 			// using setting with y, and local rotation at render
; 160  : 		case BILLBOARD_TYPE_Y:
; 161  : 			{
; 162  : 				v3Up = D3DXVECTOR3(0.0f,0.0f,1.0f);

  000bf	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  000c7	0f 57 ed	 xorps	 xmm5, xmm5
  000ca	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+112], 0
  000d2	0f 57 f6	 xorps	 xmm6, xmm6
  000d5	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+116], 0
  000dd	c7 44 24 48 00
	00 80 3f	 mov	 DWORD PTR _v3Up$[esp+120], 1065353216 ; 3f800000H

; 163  : 				//v3Up = D3DXVECTOR3(cosf(D3DXToRadian(m_fRotation)),0.0f,-sinf(D3DXToRadian(m_fRotation)));
; 164  : 				const D3DXVECTOR3 & c_rv3View = pCurrentCamera->GetView();
; 165  : 				if (v3Up.x * c_rv3View.y - v3Up.y * c_rv3View.x<0)

  000e5	f3 0f 10 5f 58	 movss	 xmm3, DWORD PTR [edi+88]
  000ea	f3 0f 10 67 54	 movss	 xmm4, DWORD PTR [edi+84]
  000ef	0f 28 cb	 movaps	 xmm1, xmm3
  000f2	0f 28 c4	 movaps	 xmm0, xmm4
  000f5	f3 0f 59 cd	 mulss	 xmm1, xmm5
  000f9	f3 0f 59 c5	 mulss	 xmm0, xmm5
  000fd	f3 0f 5c c8	 subss	 xmm1, xmm0
  00101	0f 2f e9	 comiss	 xmm5, xmm1
  00104	76 32		 jbe	 SHORT $LN8@Transform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  00106	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@80000000

; 224  :     z *= f;

  0010e	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@bf800000
  00116	c7 44 24 40 00
	00 00 80	 mov	 DWORD PTR _v3Up$[esp+112], -2147483648 ; 80000000H
  0011e	c7 44 24 44 00
	00 00 80	 mov	 DWORD PTR _v3Up$[esp+116], -2147483648 ; 80000000H
  00126	c7 44 24 48 00
	00 80 bf	 mov	 DWORD PTR _v3Up$[esp+120], -1082130432 ; bf800000H
  0012e	f3 0f 10 67 54	 movss	 xmm4, DWORD PTR [edi+84]
  00133	f3 0f 10 5f 58	 movss	 xmm3, DWORD PTR [edi+88]
$LN8@Transform:

; 182  :     z = fz;

  00138	0f 28 d6	 movaps	 xmm2, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 168  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  0013b	8d 44 24 4c	 lea	 eax, DWORD PTR _v3Cross$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0013f	0f 28 cb	 movaps	 xmm1, xmm3

; 182  :     z = fz;

  00142	f3 0f 59 d5	 mulss	 xmm2, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 168  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  00146	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00147	f3 0f 59 cf	 mulss	 xmm1, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 168  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  0014b	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0014c	0f 28 c2	 movaps	 xmm0, xmm2

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  0014f	f3 0f 59 de	 mulss	 xmm3, xmm6
  00153	f3 0f 5c c1	 subss	 xmm0, xmm1

; 1281 :     *pOut = v;

  00157	f3 0f 11 44 24
	54		 movss	 DWORD PTR _v3Cross$[esp+120], xmm0
  0015d	0f 28 c4	 movaps	 xmm0, xmm4
  00160	f3 0f 59 c7	 mulss	 xmm0, xmm7
  00164	f3 0f 59 e6	 mulss	 xmm4, xmm6
  00168	f3 0f 5c c2	 subss	 xmm0, xmm2
  0016c	f3 0f 5c dc	 subss	 xmm3, xmm4
  00170	f3 0f 11 44 24
	58		 movss	 DWORD PTR _v3Cross$[esp+124], xmm0
  00176	f3 0f 11 5c 24
	5c		 movss	 DWORD PTR _v3Cross$[esp+128], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 168  : 				D3DXVec3Normalize(&v3Cross, &v3Cross);

  0017c	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 169  : 
; 170  : 				if (m_fRotation)

  00181	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]
  00186	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0018d	9f		 lahf
  0018e	f6 c4 44	 test	 ah, 68			; 00000044H
  00191	0f 8b 40 04 00
	00		 jnp	 $LN160@Transform

; 172  : 					float fCos = -sinf(D3DXToRadian(m_fRotation)); // + 90

  00197	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  0019f	f3 0f 11 44 24
	18		 movss	 DWORD PTR tv2652[esp+112], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  001a5	0f 5a c0	 cvtps2pd xmm0, xmm0
  001a8	e8 00 00 00 00	 call	 __libm_sse2_sin_precise

; 649  :             return (float)cos(_X);

  001ad	f3 0f 10 4c 24
	18		 movss	 xmm1, DWORD PTR tv2652[esp+112]

; 750  :             return (float)sin(_X);

  001b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 172  : 					float fCos = -sinf(D3DXToRadian(m_fRotation)); // + 90

  001b7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001be	f3 0f 11 44 24
	14		 movss	 DWORD PTR _v3Up$14$[esp+112], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001c4	0f 5a c1	 cvtps2pd xmm0, xmm1
  001c7	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001cc	f3 0f 10 5c 24
	14		 movss	 xmm3, DWORD PTR _v3Up$14$[esp+112]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001d2	0f 57 e4	 xorps	 xmm4, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001d5	f3 0f 59 5c 24
	4c		 mulss	 xmm3, DWORD PTR _v3Cross$[esp+112]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  001db	f2 0f 5a e0	 cvtsd2ss xmm4, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001df	f3 0f 11 5c 24
	10		 movss	 DWORD PTR _v3Cross$2$[esp+112], xmm3
  001e5	0f 28 c4	 movaps	 xmm0, xmm4
  001e8	f3 0f 10 54 24
	14		 movss	 xmm2, DWORD PTR _v3Up$14$[esp+112]
  001ee	f3 0f 59 44 24
	40		 mulss	 xmm0, DWORD PTR _v3Up$[esp+112]
  001f4	0f 28 ec	 movaps	 xmm5, xmm4
  001f7	f3 0f 59 6c 24
	4c		 mulss	 xmm5, DWORD PTR _v3Cross$[esp+112]
  001fd	0f 28 f4	 movaps	 xmm6, xmm4

; 182  :     z = fz;

  00200	f3 0f 58 d8	 addss	 xmm3, xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00204	f3 0f 59 74 24
	50		 mulss	 xmm6, DWORD PTR _v3Cross$[esp+116]
  0020a	0f 28 c4	 movaps	 xmm0, xmm4
  0020d	0f 28 fc	 movaps	 xmm7, xmm4
  00210	f3 0f 59 44 24
	44		 mulss	 xmm0, DWORD PTR _v3Up$[esp+116]
  00216	f3 0f 59 64 24
	48		 mulss	 xmm4, DWORD PTR _v3Up$[esp+120]

; 182  :     z = fz;

  0021c	f3 0f 11 5c 24
	10		 movss	 DWORD PTR _v3Cross$2$[esp+112], xmm3

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00222	f3 0f 10 5c 24
	14		 movss	 xmm3, DWORD PTR _v3Up$14$[esp+112]
  00228	f3 0f 59 5c 24
	50		 mulss	 xmm3, DWORD PTR _v3Cross$[esp+116]
  0022e	f3 0f 59 7c 24
	54		 mulss	 xmm7, DWORD PTR _v3Cross$[esp+120]

; 180  :     x = fx;

  00234	f3 0f 58 d8	 addss	 xmm3, xmm0
  00238	f3 0f 11 5c 24
	18		 movss	 DWORD PTR _v3Cross$5$[esp+112], xmm3

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0023e	f3 0f 10 5c 24
	14		 movss	 xmm3, DWORD PTR _v3Up$14$[esp+112]
  00244	f3 0f 59 5c 24
	54		 mulss	 xmm3, DWORD PTR _v3Cross$[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 184  : 			break;

  0024a	f3 0f 10 4c 24
	18		 movss	 xmm1, DWORD PTR _v3Cross$5$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00250	f3 0f 58 dc	 addss	 xmm3, xmm4

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00254	0f 28 e2	 movaps	 xmm4, xmm2

; 181  :     y = fy;

  00257	f3 0f 11 5c 24
	58		 movss	 DWORD PTR _v3Cross$8$[esp+112], xmm3

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0025d	f3 0f 10 5c 24
	40		 movss	 xmm3, DWORD PTR _v3Up$[esp+112]
  00263	f3 0f 59 e3	 mulss	 xmm4, xmm3
  00267	0f 28 da	 movaps	 xmm3, xmm2
  0026a	f3 0f 59 5c 24
	44		 mulss	 xmm3, DWORD PTR _v3Up$[esp+116]
  00270	f3 0f 59 54 24
	48		 mulss	 xmm2, DWORD PTR _v3Up$[esp+120]

; 182  :     z = fz;

  00276	f3 0f 5c e5	 subss	 xmm4, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 184  : 			break;

  0027a	f3 0f 10 6c 24
	58		 movss	 xmm5, DWORD PTR _v3Cross$8$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00280	f3 0f 5c de	 subss	 xmm3, xmm6

; 181  :     y = fy;

  00284	f3 0f 5c d7	 subss	 xmm2, xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 184  : 			break;

  00288	e9 74 03 00 00	 jmp	 $LN163@Transform
$LN10@Transform:

; 185  : 		case BILLBOARD_TYPE_ALL:
; 186  : 		default:
; 187  : 			{
; 188  : 				if (m_fRotation==0.0f)

  0028d	f3 0f 10 4e 40	 movss	 xmm1, DWORD PTR [esi+64]
  00292	0f 57 c0	 xorps	 xmm0, xmm0
  00295	0f 2e c8	 ucomiss xmm1, xmm0
  00298	9f		 lahf
  00299	f6 c4 44	 test	 ah, 68			; 00000044H
  0029c	7a 49		 jp	 SHORT $LN11@Transform
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  0029e	f3 0f 10 5f 64	 movss	 xmm3, DWORD PTR [edi+100]
  002a3	f3 0f 10 57 68	 movss	 xmm2, DWORD PTR [edi+104]
  002a8	f3 0f 10 67 60	 movss	 xmm4, DWORD PTR [edi+96]
  002ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002b5	0f 57 e0	 xorps	 xmm4, xmm0
  002b8	0f 57 d8	 xorps	 xmm3, xmm0
  002bb	0f 57 d0	 xorps	 xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 190  : 					v3Up = -c_rv3Cross;

  002be	f3 0f 11 64 24
	40		 movss	 DWORD PTR _v3Up$[esp+112], xmm4
  002c4	f3 0f 11 5c 24
	44		 movss	 DWORD PTR _v3Up$[esp+116], xmm3
  002ca	f3 0f 11 54 24
	48		 movss	 DWORD PTR _v3Up$[esp+120], xmm2

; 191  : 					v3Cross = c_rv3Up;

  002d0	f3 0f 7e 47 48	 movq	 xmm0, QWORD PTR [edi+72]
  002d5	66 0f d6 44 24
	4c		 movq	 QWORD PTR _v3Cross$[esp+112], xmm0
  002db	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  002de	89 44 24 54	 mov	 DWORD PTR _v3Cross$[esp+120], eax

; 192  : 				}

  002e2	e9 02 03 00 00	 jmp	 $LN164@Transform
$LN11@Transform:

; 193  : 				else
; 194  : 				{
; 195  : 					const D3DXVECTOR3 & c_rv3View = pCurrentCamera->GetView();
; 196  : 					D3DXQUATERNION q,qc;
; 197  : 					D3DXQuaternionRotationAxis(&q, &c_rv3View, D3DXToRadian(m_fRotation));

  002e7	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c8efa35
  002ef	8d 47 54	 lea	 eax, DWORD PTR [edi+84]
  002f2	51		 push	 ecx
  002f3	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  002f8	50		 push	 eax
  002f9	8d 44 24 60	 lea	 eax, DWORD PTR _q$13[esp+120]
  002fd	50		 push	 eax
  002fe	e8 00 00 00 00	 call	 _D3DXQuaternionRotationAxis@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1616 :     pOut->x = -pQ->x;

  00303	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 202  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  0030b	8d 44 24 1c	 lea	 eax, DWORD PTR _qr$10[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1616 :     pOut->x = -pQ->x;

  0030f	f3 0f 10 44 24
	58		 movss	 xmm0, DWORD PTR _q$13[esp+112]
  00315	0f 57 c1	 xorps	 xmm0, xmm1

; 670  :     w = fw;

  00318	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR _qr$10[esp+124], 0

; 1616 :     pOut->x = -pQ->x;

  00320	f3 0f 11 44 24
	30		 movss	 DWORD PTR _qc$11[esp+112], xmm0

; 1617 :     pOut->y = -pQ->y;

  00326	f3 0f 10 44 24
	5c		 movss	 xmm0, DWORD PTR _q$13[esp+116]
  0032c	0f 57 c1	 xorps	 xmm0, xmm1
  0032f	f3 0f 11 44 24
	34		 movss	 DWORD PTR _qc$11[esp+116], xmm0

; 1618 :     pOut->z = -pQ->z;

  00335	f3 0f 10 44 24
	60		 movss	 xmm0, DWORD PTR _q$13[esp+120]
  0033b	0f 57 c1	 xorps	 xmm0, xmm1
  0033e	f3 0f 11 44 24
	38		 movss	 DWORD PTR _qc$11[esp+120], xmm0

; 1619 :     pOut->w =  pQ->w;

  00344	f3 0f 10 44 24
	64		 movss	 xmm0, DWORD PTR _q$13[esp+124]
  0034a	f3 0f 11 44 24
	3c		 movss	 DWORD PTR _qc$11[esp+124], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 201  : 						D3DXQUATERNION qr(-c_rv3Cross.x, -c_rv3Cross.y, -c_rv3Cross.z, 0);

  00350	f3 0f 10 47 60	 movss	 xmm0, DWORD PTR [edi+96]
  00355	0f 57 c1	 xorps	 xmm0, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  00358	f3 0f 11 44 24
	1c		 movss	 DWORD PTR _qr$10[esp+112], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 201  : 						D3DXQUATERNION qr(-c_rv3Cross.x, -c_rv3Cross.y, -c_rv3Cross.z, 0);

  0035e	f3 0f 10 47 64	 movss	 xmm0, DWORD PTR [edi+100]

; 202  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  00363	50		 push	 eax
  00364	0f 57 c1	 xorps	 xmm0, xmm1
  00367	8d 44 24 34	 lea	 eax, DWORD PTR _qc$11[esp+116]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 668  :     y = fy;

  0036b	f3 0f 11 44 24
	24		 movss	 DWORD PTR _qr$10[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 201  : 						D3DXQUATERNION qr(-c_rv3Cross.x, -c_rv3Cross.y, -c_rv3Cross.z, 0);

  00371	f3 0f 10 47 68	 movss	 xmm0, DWORD PTR [edi+104]

; 202  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  00376	50		 push	 eax
  00377	8d 44 24 24	 lea	 eax, DWORD PTR _qr$10[esp+120]
  0037b	0f 57 c1	 xorps	 xmm0, xmm1
  0037e	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 669  :     z = fz;

  0037f	f3 0f 11 44 24
	30		 movss	 DWORD PTR _qr$10[esp+132], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 202  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  00385	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 203  : 						D3DXQuaternionMultiply(&qr,&qr,&q);

  0038a	8d 44 24 58	 lea	 eax, DWORD PTR _q$13[esp+112]
  0038e	50		 push	 eax
  0038f	8d 44 24 20	 lea	 eax, DWORD PTR _qr$10[esp+116]
  00393	50		 push	 eax
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 204  : 						v3Up.x = qr.x;

  0039a	f3 0f 10 44 24
	1c		 movss	 xmm0, DWORD PTR _qr$10[esp+112]

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003a0	8d 44 24 1c	 lea	 eax, DWORD PTR _qr$9[esp+112]
  003a4	f3 0f 11 44 24
	40		 movss	 DWORD PTR _v3Up$[esp+112], xmm0
  003aa	f3 0f 10 44 24
	20		 movss	 xmm0, DWORD PTR _qr$10[esp+116]
  003b0	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+116], xmm0
  003b6	f3 0f 10 44 24
	24		 movss	 xmm0, DWORD PTR _qr$10[esp+120]
  003bc	f3 0f 11 44 24
	48		 movss	 DWORD PTR _v3Up$[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  003c2	f3 0f 10 47 48	 movss	 xmm0, DWORD PTR [edi+72]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003c7	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  003c8	f3 0f 11 44 24
	20		 movss	 DWORD PTR _qr$9[esp+116], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003ce	8d 44 24 34	 lea	 eax, DWORD PTR _qc$11[esp+116]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 668  :     y = fy;

  003d2	f3 0f 10 47 4c	 movss	 xmm0, DWORD PTR [edi+76]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003d7	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 668  :     y = fy;

  003d8	f3 0f 11 44 24
	28		 movss	 DWORD PTR _qr$9[esp+124], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003de	8d 44 24 24	 lea	 eax, DWORD PTR _qr$9[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 669  :     z = fz;

  003e2	f3 0f 10 47 50	 movss	 xmm0, DWORD PTR [edi+80]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003e7	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 669  :     z = fz;

  003e8	f3 0f 11 44 24
	30		 movss	 DWORD PTR _qr$9[esp+132], xmm0

; 670  :     w = fw;

  003ee	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR _qr$9[esp+136], 0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 210  : 						D3DXQuaternionMultiply(&qr,&qc,&qr);

  003f6	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 211  : 						D3DXQuaternionMultiply(&qr,&qr,&q);

  003fb	8d 44 24 58	 lea	 eax, DWORD PTR _q$13[esp+112]
  003ff	50		 push	 eax
  00400	8d 44 24 20	 lea	 eax, DWORD PTR _qr$9[esp+116]
  00404	50		 push	 eax
  00405	50		 push	 eax
  00406	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 212  : 						v3Cross.x = qr.x;

  0040b	f3 0f 10 44 24
	1c		 movss	 xmm0, DWORD PTR _qr$9[esp+112]

; 213  : 						v3Cross.y = qr.y;

  00411	f3 0f 10 4c 24
	20		 movss	 xmm1, DWORD PTR _qr$9[esp+116]

; 214  : 						v3Cross.z = qr.z;

  00417	f3 0f 10 6c 24
	24		 movss	 xmm5, DWORD PTR _qr$9[esp+120]

; 215  : 					}
; 216  : 
; 217  : 				}
; 218  : 				//D3DXMATRIX matRotation;
; 219  : 
; 220  : 				//D3DXMatrixRotationAxis(&matRotation, &c_rv3View, D3DXToRadian(m_fRotation));
; 221  : 
; 222  : 				//D3DXVec3TransformCoord(&v3Up, &(-c_rv3Cross), &matRotation);
; 223  : 				//D3DXVec3TransformCoord(&v3Cross, &c_rv3Up, &matRotation);
; 224  : 			}
; 225  : 			break;
; 226  : 		}
; 227  : 
; 228  : 	}

  0041d	f3 0f 10 54 24
	48		 movss	 xmm2, DWORD PTR _v3Up$[esp+120]
  00423	f3 0f 10 5c 24
	44		 movss	 xmm3, DWORD PTR _v3Up$[esp+116]
  00429	f3 0f 10 64 24
	40		 movss	 xmm4, DWORD PTR _v3Up$[esp+112]
  0042f	e9 c7 01 00 00	 jmp	 $LN165@Transform
$LN4@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00434	f3 0f 10 56 0c	 movss	 xmm2, DWORD PTR [esi+12]
  00439	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  0043e	f3 0f 10 5e 14	 movss	 xmm3, DWORD PTR [esi+20]
  00443	f3 0f 5c 56 18	 subss	 xmm2, DWORD PTR [esi+24]
  00448	f3 0f 5c 46 1c	 subss	 xmm0, DWORD PTR [esi+28]
  0044d	f3 0f 5c 5e 20	 subss	 xmm3, DWORD PTR [esi+32]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 233  : 		if (c_matLocal)

  00452	8b 44 24 2c	 mov	 eax, DWORD PTR _c_matLocal$GSCopy$1$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00456	f3 0f 11 54 24
	14		 movss	 DWORD PTR _v3Up$2$[esp+112], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 231  : 		v3Up = m_v3Position - m_v3LastPosition;

  0045c	f3 0f 11 54 24
	40		 movss	 DWORD PTR _v3Up$[esp+112], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00462	f3 0f 11 44 24
	10		 movss	 DWORD PTR _v3Up$7$[esp+112], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 231  : 		v3Up = m_v3Position - m_v3LastPosition;

  00468	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+116], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0046e	f3 0f 11 5c 24
	18		 movss	 DWORD PTR _v3Up$12$[esp+112], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 231  : 		v3Up = m_v3Position - m_v3LastPosition;

  00474	f3 0f 11 5c 24
	48		 movss	 DWORD PTR _v3Up$[esp+120], xmm3

; 233  : 		if (c_matLocal)

  0047a	85 c0		 test	 eax, eax
  0047c	74 30		 je	 SHORT $LN13@Transform

; 234  : 		{
; 235  : 			//if (!m_pParticleProperty->m_bAttachFlag)
; 236  : 				D3DXVec3TransformNormal(&v3Up, &v3Up, c_matLocal);

  0047e	50		 push	 eax
  0047f	8d 44 24 44	 lea	 eax, DWORD PTR _v3Up$[esp+116]
  00483	50		 push	 eax
  00484	50		 push	 eax
  00485	e8 00 00 00 00	 call	 _D3DXVec3TransformNormal@12
  0048a	f3 0f 10 5c 24
	48		 movss	 xmm3, DWORD PTR _v3Up$[esp+120]
  00490	f3 0f 10 44 24
	44		 movss	 xmm0, DWORD PTR _v3Up$[esp+116]
  00496	f3 0f 10 54 24
	40		 movss	 xmm2, DWORD PTR _v3Up$[esp+112]
  0049c	f3 0f 11 5c 24
	18		 movss	 DWORD PTR _v3Up$12$[esp+112], xmm3
  004a2	f3 0f 11 44 24
	10		 movss	 DWORD PTR _v3Up$7$[esp+112], xmm0
  004a8	f3 0f 11 54 24
	14		 movss	 DWORD PTR _v3Up$2$[esp+112], xmm2
$LN13@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  004ae	0f 28 c8	 movaps	 xmm1, xmm0
  004b1	f3 0f 59 c8	 mulss	 xmm1, xmm0
  004b5	0f 28 c2	 movaps	 xmm0, xmm2
  004b8	f3 0f 59 c2	 mulss	 xmm0, xmm2
  004bc	f3 0f 58 c8	 addss	 xmm1, xmm0
  004c0	0f 28 c3	 movaps	 xmm0, xmm3
  004c3	f3 0f 59 c3	 mulss	 xmm0, xmm3
  004c7	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  004cb	0f 5a c1	 cvtps2pd xmm0, xmm1
  004ce	0f 57 c9	 xorps	 xmm1, xmm1
  004d1	66 0f 2e c8	 ucomisd xmm1, xmm0
  004d5	77 06		 ja	 SHORT $LN161@Transform
  004d7	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  004db	eb 05		 jmp	 SHORT $LN162@Transform
$LN161@Transform:
  004dd	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN162@Transform:
  004e2	0f 57 c9	 xorps	 xmm1, xmm1
  004e5	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
  004e9	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 240  : 		if (length == 0.0f)

  004ec	0f 2e c8	 ucomiss xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  004ef	f3 0f 11 4c 24
	58		 movss	 DWORD PTR _length$1$[esp+112], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 240  : 		if (length == 0.0f)

  004f5	9f		 lahf
  004f6	f6 c4 44	 test	 ah, 68			; 00000044H
  004f9	7a 1a		 jp	 SHORT $LN14@Transform

; 241  : 		{
; 242  : 			v3Up = D3DXVECTOR3(0.0f,0.0f,1.0f);

  004fb	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+112], 0
  00503	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR _v3Up$[esp+116], 0
  0050b	c7 44 24 48 00
	00 80 3f	 mov	 DWORD PTR _v3Up$[esp+120], 1065353216 ; 3f800000H

; 243  : 		}

  00513	eb 52		 jmp	 SHORT $LN15@Transform
$LN14@Transform:

; 245  : 			v3Up *=(1+log(1+length))/length;

  00515	0f 28 c1	 movaps	 xmm0, xmm1
  00518	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 732  :             return (float)log(_X);

  00520	0f 5a c0	 cvtps2pd xmm0, xmm0
  00523	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00528	0f 57 c9	 xorps	 xmm1, xmm1
  0052b	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 245  : 			v3Up *=(1+log(1+length))/length;

  0052f	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f800000
  00537	f3 0f 5e 4c 24
	58		 divss	 xmm1, DWORD PTR _length$1$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 222  :     x *= f;

  0053d	0f 28 c1	 movaps	 xmm0, xmm1
  00540	f3 0f 59 44 24
	14		 mulss	 xmm0, DWORD PTR _v3Up$2$[esp+112]
  00546	f3 0f 11 44 24
	40		 movss	 DWORD PTR _v3Up$[esp+112], xmm0

; 223  :     y *= f;

  0054c	0f 28 c1	 movaps	 xmm0, xmm1
  0054f	f3 0f 59 44 24
	10		 mulss	 xmm0, DWORD PTR _v3Up$7$[esp+112]

; 224  :     z *= f;

  00555	f3 0f 59 4c 24
	18		 mulss	 xmm1, DWORD PTR _v3Up$12$[esp+112]
  0055b	f3 0f 11 44 24
	44		 movss	 DWORD PTR _v3Up$[esp+116], xmm0
  00561	f3 0f 11 4c 24
	48		 movss	 DWORD PTR _v3Up$[esp+120], xmm1
$LN15@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 247  : 		CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00567	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0056d	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00572	f3 0f 10 60 5c	 movss	 xmm4, DWORD PTR [eax+92]
  00577	f3 0f 10 70 58	 movss	 xmm6, DWORD PTR [eax+88]
  0057c	0f 28 d4	 movaps	 xmm2, xmm4
  0057f	f3 0f 59 54 24
	44		 mulss	 xmm2, DWORD PTR _v3Up$[esp+116]
  00585	0f 28 c6	 movaps	 xmm0, xmm6
  00588	f3 0f 59 44 24
	48		 mulss	 xmm0, DWORD PTR _v3Up$[esp+120]

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  0058e	f3 0f 10 68 54	 movss	 xmm5, DWORD PTR [eax+84]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 250  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  00593	8d 44 24 4c	 lea	 eax, DWORD PTR _v3Cross$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00597	f3 0f 59 64 24
	40		 mulss	 xmm4, DWORD PTR _v3Up$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 250  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  0059d	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  0059e	f3 0f 59 74 24
	44		 mulss	 xmm6, DWORD PTR _v3Up$[esp+116]
  005a4	f3 0f 5c d0	 subss	 xmm2, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 250  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  005a8	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1281 :     *pOut = v;

  005a9	f3 0f 11 54 24
	54		 movss	 DWORD PTR _v3Cross$[esp+120], xmm2
  005af	0f 28 d5	 movaps	 xmm2, xmm5
  005b2	f3 0f 59 54 24
	50		 mulss	 xmm2, DWORD PTR _v3Up$[esp+128]
  005b8	f3 0f 59 6c 24
	4c		 mulss	 xmm5, DWORD PTR _v3Up$[esp+124]
  005be	f3 0f 5c d4	 subss	 xmm2, xmm4
  005c2	f3 0f 5c f5	 subss	 xmm6, xmm5
  005c6	f3 0f 11 54 24
	58		 movss	 DWORD PTR _v3Cross$[esp+124], xmm2
  005cc	f3 0f 11 74 24
	5c		 movss	 DWORD PTR _v3Cross$[esp+128], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 250  : 		D3DXVec3Normalize(&v3Cross, &v3Cross);

  005d2	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
$LN160@Transform:

; 254  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  005d7	f3 0f 10 64 24
	40		 movss	 xmm4, DWORD PTR _v3Up$[esp+112]
  005dd	f3 0f 10 5c 24
	44		 movss	 xmm3, DWORD PTR _v3Up$[esp+116]
  005e3	f3 0f 10 54 24
	48		 movss	 xmm2, DWORD PTR _v3Up$[esp+120]
$LN164@Transform:
  005e9	f3 0f 10 44 24
	4c		 movss	 xmm0, DWORD PTR _v3Cross$[esp+112]
  005ef	f3 0f 10 6c 24
	54		 movss	 xmm5, DWORD PTR _v3Cross$[esp+120]
  005f5	f3 0f 10 4c 24
	50		 movss	 xmm1, DWORD PTR _v3Cross$[esp+116]
$LN165@Transform:
  005fb	f3 0f 11 44 24
	10		 movss	 DWORD PTR _v3Cross$2$[esp+112], xmm0
$LN163@Transform:
  00601	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
$LN5@Transform:
  00609	f3 0f 10 76 38	 movss	 xmm6, DWORD PTR [esi+56]
  0060e	f3 0f 59 76 30	 mulss	 xmm6, DWORD PTR [esi+48]

; 256  : 
; 257  : 	if (c_matLocal && m_pParticleProperty->m_bAttachFlag)

  00613	8b 4c 24 2c	 mov	 ecx, DWORD PTR _c_matLocal$GSCopy$1$[esp+112]
  00617	0f 57 f0	 xorps	 xmm6, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  0061a	0f 28 fe	 movaps	 xmm7, xmm6
  0061d	0f 28 c6	 movaps	 xmm0, xmm6
  00620	f3 0f 59 44 24
	10		 mulss	 xmm0, DWORD PTR _v3Cross$2$[esp+112]
  00626	f3 0f 59 f9	 mulss	 xmm7, xmm1
  0062a	f3 0f 59 f5	 mulss	 xmm6, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 255  : 	v3Up = (m_v2HalfSize.y*m_v2Scale.y) * v3Up;

  0062e	f3 0f 10 6e 3c	 movss	 xmm5, DWORD PTR [esi+60]
  00633	f3 0f 59 6e 34	 mulss	 xmm5, DWORD PTR [esi+52]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00638	f3 0f 11 7c 24
	10		 movss	 DWORD PTR tv2752[esp+112], xmm7
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 254  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  0063e	f3 0f 11 7c 24
	50		 movss	 DWORD PTR _v3Cross$[esp+116], xmm7
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00644	f3 0f 11 44 24
	18		 movss	 DWORD PTR tv2751[esp+112], xmm0
  0064a	0f 28 fd	 movaps	 xmm7, xmm5
  0064d	f3 0f 59 fc	 mulss	 xmm7, xmm4
  00651	0f 28 cd	 movaps	 xmm1, xmm5
  00654	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00658	f3 0f 59 ea	 mulss	 xmm5, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 254  : 	v3Cross = -(m_v2HalfSize.x*m_v2Scale.x) * v3Cross;

  0065c	f3 0f 11 44 24
	4c		 movss	 DWORD PTR _v3Cross$[esp+112], xmm0
  00662	f3 0f 11 74 24
	54		 movss	 DWORD PTR _v3Cross$[esp+120], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 283  :     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);

  00668	f3 0f 11 4c 24
	14		 movss	 DWORD PTR tv2762[esp+112], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 255  : 	v3Up = (m_v2HalfSize.y*m_v2Scale.y) * v3Up;

  0066e	f3 0f 11 7c 24
	40		 movss	 DWORD PTR _v3Up$[esp+112], xmm7
  00674	f3 0f 11 4c 24
	44		 movss	 DWORD PTR _v3Up$[esp+116], xmm1
  0067a	f3 0f 11 6c 24
	48		 movss	 DWORD PTR _v3Up$[esp+120], xmm5

; 256  : 
; 257  : 	if (c_matLocal && m_pParticleProperty->m_bAttachFlag)

  00680	85 c9		 test	 ecx, ecx
  00682	0f 84 30 01 00
	00		 je	 $LN16@Transform
  00688	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0068b	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0068f	0f 84 23 01 00
	00		 je	 $LN16@Transform

; 258  : 	{
; 259  : 		D3DXVECTOR3 v3Position;
; 260  : 		D3DXVec3TransformCoord(&v3Position, &m_v3Position, c_matLocal);

  00695	51		 push	 ecx
  00696	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00699	50		 push	 eax
  0069a	8d 44 24 60	 lea	 eax, DWORD PTR _v3Position$12[esp+120]
  0069e	50		 push	 eax
  0069f	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  006a4	f3 0f 10 44 24
	58		 movss	 xmm0, DWORD PTR _v3Position$12[esp+112]
  006aa	f3 0f 10 64 24
	5c		 movss	 xmm4, DWORD PTR _v3Position$12[esp+116]
  006b0	0f 28 f0	 movaps	 xmm6, xmm0
  006b3	f3 0f 5c 74 24
	40		 subss	 xmm6, DWORD PTR _v3Up$[esp+112]
  006b9	f3 0f 5c 64 24
	44		 subss	 xmm4, DWORD PTR _v3Up$[esp+116]
  006bf	f3 0f 10 5c 24
	60		 movss	 xmm3, DWORD PTR _v3Position$12[esp+120]
  006c5	f3 0f 5c 5c 24
	48		 subss	 xmm3, DWORD PTR _v3Up$[esp+120]
  006cb	0f 29 44 24 30	 movaps	 XMMWORD PTR tv2880[esp+112], xmm0

; 182  :     z = fz;

  006d0	0f 28 d6	 movaps	 xmm2, xmm6
  006d3	f3 0f 58 54 24
	4c		 addss	 xmm2, DWORD PTR _v3Cross$[esp+112]
  006d9	f3 0f 5c 74 24
	4c		 subss	 xmm6, DWORD PTR _v3Cross$[esp+112]

; 180  :     x = fx;

  006df	0f 28 cc	 movaps	 xmm1, xmm4

; 181  :     y = fy;

  006e2	0f 28 c3	 movaps	 xmm0, xmm3
  006e5	f3 0f 58 4c 24
	50		 addss	 xmm1, DWORD PTR _v3Cross$[esp+116]

; 180  :     x = fx;

  006eb	f3 0f 5c 64 24
	50		 subss	 xmm4, DWORD PTR _v3Cross$[esp+116]

; 181  :     y = fy;

  006f1	f3 0f 58 44 24
	54		 addss	 xmm0, DWORD PTR _v3Cross$[esp+120]
  006f7	f3 0f 5c 5c 24
	54		 subss	 xmm3, DWORD PTR _v3Cross$[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 261  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  006fd	0f 14 d1	 unpcklps xmm2, xmm1
  00700	66 0f d6 56 74	 movq	 QWORD PTR [esi+116], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00705	0f 28 54 24 30	 movaps	 xmm2, XMMWORD PTR tv2880[esp+112]
  0070a	f3 0f 58 54 24
	40		 addss	 xmm2, DWORD PTR _v3Up$[esp+112]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 262  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  00710	0f 14 f4	 unpcklps xmm6, xmm4
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00713	f3 0f 10 64 24
	60		 movss	 xmm4, DWORD PTR _v3Position$12[esp+120]
  00719	f3 0f 58 64 24
	48		 addss	 xmm4, DWORD PTR _v3Up$[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 262  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  0071f	66 0f d6 b6 88
	00 00 00	 movq	 QWORD PTR [esi+136], xmm6
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00727	f3 0f 10 74 24
	5c		 movss	 xmm6, DWORD PTR _v3Position$12[esp+116]
  0072d	f3 0f 58 74 24
	44		 addss	 xmm6, DWORD PTR _v3Up$[esp+116]
  00733	0f 29 54 24 30	 movaps	 XMMWORD PTR tv2880[esp+112], xmm2

; 182  :     z = fz;

  00738	0f 28 6c 24 30	 movaps	 xmm5, XMMWORD PTR tv2880[esp+112]
  0073d	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T8[esp+120], xmm0
  00743	0f 28 d5	 movaps	 xmm2, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 261  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  00746	8b 44 24 24	 mov	 eax, DWORD PTR $T8[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 181  :     y = fy;

  0074a	0f 28 c4	 movaps	 xmm0, xmm4

; 182  :     z = fz;

  0074d	f3 0f 58 54 24
	4c		 addss	 xmm2, DWORD PTR _v3Cross$[esp+112]

; 181  :     y = fy;

  00753	f3 0f 58 44 24
	54		 addss	 xmm0, DWORD PTR _v3Cross$[esp+120]

; 182  :     z = fz;

  00759	f3 0f 5c 6c 24
	4c		 subss	 xmm5, DWORD PTR _v3Cross$[esp+112]

; 181  :     y = fy;

  0075f	f3 0f 5c 64 24
	54		 subss	 xmm4, DWORD PTR _v3Cross$[esp+120]

; 180  :     x = fx;

  00765	0f 28 ce	 movaps	 xmm1, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 261  : 		m_ParticleMesh[0].position = v3Position - v3Up + v3Cross;

  00768	89 46 7c	 mov	 DWORD PTR [esi+124], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0076b	f3 0f 58 4c 24
	50		 addss	 xmm1, DWORD PTR _v3Cross$[esp+116]
  00771	f3 0f 5c 74 24
	50		 subss	 xmm6, DWORD PTR _v3Cross$[esp+116]

; 182  :     z = fz;

  00777	f3 0f 11 5c 24
	24		 movss	 DWORD PTR $T7[esp+120], xmm3
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 262  : 		m_ParticleMesh[1].position = v3Position - v3Up - v3Cross;

  0077d	8b 44 24 24	 mov	 eax, DWORD PTR $T7[esp+120]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00781	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T6[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 263  : 		m_ParticleMesh[2].position = v3Position + v3Up + v3Cross;

  00787	0f 14 d1	 unpcklps xmm2, xmm1
  0078a	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  00790	8b 44 24 24	 mov	 eax, DWORD PTR $T6[esp+120]

; 264  : 		m_ParticleMesh[3].position = v3Position + v3Up - v3Cross;

  00794	0f 14 ee	 unpcklps xmm5, xmm6
  00797	66 0f d6 96 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm2
  0079f	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007a5	f3 0f 11 64 24
	24		 movss	 DWORD PTR $T5[esp+120], xmm4
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 264  : 		m_ParticleMesh[3].position = v3Position + v3Up - v3Cross;

  007ab	66 0f d6 ae b0
	00 00 00	 movq	 QWORD PTR [esi+176], xmm5

; 265  : 	}

  007b3	e9 fd 00 00 00	 jmp	 $LN166@Transform
$LN16@Transform:
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  007b8	f3 0f 10 5e 0c	 movss	 xmm3, DWORD PTR [esi+12]

; 182  :     z = fz;

  007bd	0f 28 d0	 movaps	 xmm2, xmm0

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  007c0	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  007c5	f3 0f 5c df	 subss	 xmm3, xmm7
  007c9	f3 0f 5c 4c 24
	14		 subss	 xmm1, DWORD PTR tv2762[esp+112]
  007cf	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  007d4	f3 0f 5c c5	 subss	 xmm0, xmm5

; 182  :     z = fz;

  007d8	f3 0f 58 d3	 addss	 xmm2, xmm3

; 180  :     x = fx;

  007dc	f3 0f 58 4c 24
	10		 addss	 xmm1, DWORD PTR tv2752[esp+112]

; 181  :     y = fy;

  007e2	f3 0f 58 c6	 addss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 268  : 		m_ParticleMesh[0].position = m_v3Position - v3Up + v3Cross;

  007e6	0f 14 d1	 unpcklps xmm2, xmm1
  007e9	66 0f d6 56 74	 movq	 QWORD PTR [esi+116], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  007ee	f3 0f 10 54 24
	18		 movss	 xmm2, DWORD PTR tv2751[esp+112]
  007f4	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T4[esp+120], xmm0
  007fa	f3 0f 5c da	 subss	 xmm3, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 268  : 		m_ParticleMesh[0].position = m_v3Position - v3Up + v3Cross;

  007fe	8b 44 24 24	 mov	 eax, DWORD PTR $T4[esp+120]
  00802	89 46 7c	 mov	 DWORD PTR [esi+124], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00805	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  0080a	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  0080f	f3 0f 5c 4c 24
	14		 subss	 xmm1, DWORD PTR tv2762[esp+112]
  00815	f3 0f 5c c5	 subss	 xmm0, xmm5

; 180  :     x = fx;

  00819	f3 0f 5c 4c 24
	10		 subss	 xmm1, DWORD PTR tv2752[esp+112]

; 181  :     y = fy;

  0081f	f3 0f 5c c6	 subss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 269  : 		m_ParticleMesh[1].position = m_v3Position - v3Up - v3Cross;

  00823	0f 14 d9	 unpcklps xmm3, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00826	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T3[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 269  : 		m_ParticleMesh[1].position = m_v3Position - v3Up - v3Cross;

  0082c	8b 44 24 24	 mov	 eax, DWORD PTR $T3[esp+120]
  00830	66 0f d6 9e 88
	00 00 00	 movq	 QWORD PTR [esi+136], xmm3
  00838	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0083e	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  00843	f3 0f 58 7e 0c	 addss	 xmm7, DWORD PTR [esi+12]
  00848	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  0084d	f3 0f 58 4c 24
	14		 addss	 xmm1, DWORD PTR tv2762[esp+112]
  00853	f3 0f 58 c5	 addss	 xmm0, xmm5

; 182  :     z = fz;

  00857	f3 0f 58 d7	 addss	 xmm2, xmm7
  0085b	f3 0f 5c 7c 24
	18		 subss	 xmm7, DWORD PTR tv2751[esp+112]

; 180  :     x = fx;

  00861	f3 0f 58 4c 24
	10		 addss	 xmm1, DWORD PTR tv2752[esp+112]

; 181  :     y = fy;

  00867	f3 0f 58 c6	 addss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 270  : 		m_ParticleMesh[2].position = m_v3Position + v3Up + v3Cross;

  0086b	0f 14 d1	 unpcklps xmm2, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0086e	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T2[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 270  : 		m_ParticleMesh[2].position = m_v3Position + v3Up + v3Cross;

  00874	8b 44 24 24	 mov	 eax, DWORD PTR $T2[esp+120]
  00878	66 0f d6 96 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm2
  00880	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00886	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]
  0088b	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00890	f3 0f 58 4c 24
	14		 addss	 xmm1, DWORD PTR tv2762[esp+112]
  00896	f3 0f 58 c5	 addss	 xmm0, xmm5

; 180  :     x = fx;

  0089a	f3 0f 5c 4c 24
	10		 subss	 xmm1, DWORD PTR tv2752[esp+112]

; 181  :     y = fy;

  008a0	f3 0f 5c c6	 subss	 xmm0, xmm6
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 271  : 		m_ParticleMesh[3].position = m_v3Position + v3Up - v3Cross;

  008a4	0f 14 f9	 unpcklps xmm7, xmm1
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 182  :     z = fz;

  008a7	f3 0f 11 44 24
	24		 movss	 DWORD PTR $T1[esp+120], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 271  : 		m_ParticleMesh[3].position = m_v3Position + v3Up - v3Cross;

  008ad	66 0f d6 be b0
	00 00 00	 movq	 QWORD PTR [esi+176], xmm7
$LN166@Transform:

; 272  : 	}
; 273  : }

  008b5	8b 44 24 24	 mov	 eax, DWORD PTR $T1[esp+120]
  008b9	8b 4c 24 6c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+112]
  008bd	5f		 pop	 edi
  008be	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
  008c4	5e		 pop	 esi
  008c5	33 cc		 xor	 ecx, esp
  008c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008cc	8b e5		 mov	 esp, ebp
  008ce	5d		 pop	 ebp
  008cf	c2 04 00	 ret	 4
  008d2	66 90		 npad	 2
$LN159@Transform:
  008d4	00 00 00 00	 DD	 $LN7@Transform
  008d8	00 00 00 00	 DD	 $LN6@Transform
  008dc	00 00 00 00	 DD	 $LN7@Transform
  008e0	00 00 00 00	 DD	 $LN7@Transform
?Transform@CParticleInstance@@QAEXPBUD3DXMATRIX@@@Z ENDP ; CParticleInstance::Transform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?DestroySystem@CParticleInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CParticleInstance@@SAXXZ PROC		; CParticleInstance::DestroySystem, COMDAT

; 14   : {

  00000	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 234  :     const auto _ULast = _Get_unwrapped(_Last);

  00001	8b 1d 08 00 00
	00		 mov	 ebx, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 14   : {

  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  00008	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+4
  0000e	3b f3		 cmp	 esi, ebx
  00010	74 3b		 je	 SHORT $LN33@DestroySys
  00012	57		 push	 edi
$LL20@DestroySys:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	85 ff		 test	 edi, edi
  00017	74 15		 je	 SHORT $LN18@DestroySys
  00019	8b cf		 mov	 ecx, edi
  0001b	e8 00 00 00 00	 call	 ??1CParticleInstance@@QAE@XZ ; CParticleInstance::~CParticleInstance
  00020	68 c4 00 00 00	 push	 196			; 000000c4H
  00025	57		 push	 edi
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\algorithm

; 235  :     for (; _UFirst != _ULast; ++_UFirst) {

  0002e	83 c6 04	 add	 esi, 4
  00031	3b f3		 cmp	 esi, ebx
  00033	75 de		 jne	 SHORT $LL20@DestroySys
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00035	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+4
  0003a	5f		 pop	 edi
  0003b	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+8, eax
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 16   : }

  00040	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+16
  00045	5e		 pop	 esi
  00046	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20, eax
  0004b	5b		 pop	 ebx
  0004c	c3		 ret	 0
$LN33@DestroySys:
  0004d	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+16
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00052	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+8, esi
  00058	5e		 pop	 esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 16   : }

  00059	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20, eax
  0005e	5b		 pop	 ebx
  0005f	c3		 ret	 0
?DestroySystem@CParticleInstance@@SAXXZ ENDP		; CParticleInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?New@CParticleInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pkNewData$2 = -4					; size = 4
?New@CParticleInstance@@SAPAV1@XZ PROC			; CParticleInstance::New, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+16, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00010	75 64		 jne	 SHORT $LN4@New

; 65   : 				T* pkNewData=new T;

  00012	56		 push	 esi
  00013	68 c4 00 00 00	 push	 196			; 000000c4H
  00018	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001d	83 c4 04	 add	 esp, 4
  00020	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN6@New
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ??0CParticleInstance@@QAE@XZ ; CParticleInstance::CParticleInstance
  0002e	8b f0		 mov	 esi, eax
  00030	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00032	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00034	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+8
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00039	89 75 fc	 mov	 DWORD PTR _pkNewData$2[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0003c	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+12
  00042	74 16		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00044	89 30		 mov	 DWORD PTR [eax], esi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 20   : 	return ms_kPool.Alloc();

  00046	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 690  :         ++_Mylast;

  00048	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+8, 4
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0004f	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 20   : 	return ms_kPool.Alloc();

  00055	5e		 pop	 esi

; 21   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$2[ebp]
  0005d	51		 push	 ecx
  0005e	50		 push	 eax
  0005f	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+4
  00064	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleInstance@@@?$vector@PAVCParticleInstance@@V?$allocator@PAVCParticleInstance@@@std@@@std@@QAEPAPAVCParticleInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleInstance *,std::allocator<CParticleInstance *> >::_Emplace_reallocate<CParticleInstance * const &>
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00069	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+32
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 20   : 	return ms_kPool.Alloc();

  0006f	8b c6		 mov	 eax, esi
  00071	5e		 pop	 esi

; 21   : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
$LN4@New:
; File C:\DS Project\DS Files\Source\ClientSource\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00076	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vector

; 1559 :         return _My_data._Mylast[-1];

  00079	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  0007c	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleInstance@@2V?$CDynamicPool@VCParticleInstance@@@@A+20, ecx
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 21   : }

  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?New@CParticleInstance@@SAPAV1@XZ ENDP			; CParticleInstance::New
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?Update@CParticleInstance@@QAEHMM@Z
_TEXT	SEGMENT
_qc$1 = -52						; size = 16
_q$2 = -36						; size = 16
_qr$3 = -20						; size = 16
$T4 = -16						; size = 12
_fCos$1$ = -4						; size = 4
_rx$1$ = 8						; size = 4
_fElapsedTime$ = 8					; size = 4
_fAngle$ = 12						; size = 4
?Update@CParticleInstance@@QAEHMM@Z PROC		; CParticleInstance::Update, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	m_fLastLifeTime -= fElapsedTime;

  00003	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _fElapsedTime$[ebp]
  00008	83 ec 34	 sub	 esp, 52			; 00000034H
  0000b	0f 57 c0	 xorps	 xmm0, xmm0
  0000e	57		 push	 edi
  0000f	8b f9		 mov	 edi, ecx
  00011	f3 0f 10 57 58	 movss	 xmm2, DWORD PTR [edi+88]
  00016	f3 0f 5c d3	 subss	 xmm2, xmm3

; 74   : 	if (m_fLastLifeTime < 0.0f)

  0001a	0f 2f c2	 comiss	 xmm0, xmm2
  0001d	f3 0f 11 57 58	 movss	 DWORD PTR [edi+88], xmm2
  00022	76 09		 jbe	 SHORT $LN2@Update

; 75   : 		return FALSE;

  00024	33 c0		 xor	 eax, eax
  00026	5f		 pop	 edi

; 122  : }

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
$LN2@Update:

; 77   : 	float fLifePercentage = (m_fLifeTime - m_fLastLifeTime) / m_fLifeTime;

  0002d	f3 0f 10 47 54	 movss	 xmm0, DWORD PTR [edi+84]
  00032	f3 0f 5c c2	 subss	 xmm0, xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h

; 29   : 			CBaseDecorator* pd = this;

  00036	8b 4f 70	 mov	 ecx, DWORD PTR [edi+112]

; 17   : 			: fTime(fTime), fElapsedTime(fElapsedTime), pInstance(pInstance)

  00039	f3 0f 11 5d f4	 movss	 DWORD PTR $T4[ebp+4], xmm3
  0003e	89 7d f8	 mov	 DWORD PTR $T4[ebp+8], edi
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 77   : 	float fLifePercentage = (m_fLifeTime - m_fLastLifeTime) / m_fLifeTime;

  00041	f3 0f 5e 47 54	 divss	 xmm0, DWORD PTR [edi+84]
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h

; 17   : 			: fTime(fTime), fElapsedTime(fElapsedTime), pInstance(pInstance)

  00046	f3 0f 11 45 f0	 movss	 DWORD PTR $T4[ebp], xmm0

; 30   : 			while(pd)

  0004b	85 c9		 test	 ecx, ecx
  0004d	74 19		 je	 SHORT $LN11@Update
  0004f	56		 push	 esi
$LL10@Update:

; 31   : 			{
; 32   : 				CBaseDecorator* pNextDecorator = pd->m_NextDecorator;
; 33   : 				pd->__Excute(d);

  00050	8b 01		 mov	 eax, DWORD PTR [ecx]
  00052	8d 55 f0	 lea	 edx, DWORD PTR $T4[ebp]
  00055	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00058	52		 push	 edx
  00059	ff 50 04	 call	 DWORD PTR [eax+4]

; 34   : 				pd = pNextDecorator;

  0005c	8b ce		 mov	 ecx, esi
  0005e	85 f6		 test	 esi, esi
  00060	75 ee		 jne	 SHORT $LL10@Update
  00062	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _fElapsedTime$[ebp]
  00067	5e		 pop	 esi
$LN11@Update:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 81   : 	m_v3LastPosition = m_v3Position;

  00068	f3 0f 7e 47 0c	 movq	 xmm0, QWORD PTR [edi+12]
  0006d	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00070	66 0f d6 47 18	 movq	 QWORD PTR [edi+24], xmm0
  00075	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00078	f3 0f 10 47 28	 movss	 xmm0, DWORD PTR [edi+40]
  0007d	f3 0f 10 4f 2c	 movss	 xmm1, DWORD PTR [edi+44]
  00082	f3 0f 10 57 24	 movss	 xmm2, DWORD PTR [edi+36]
  00087	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0008b	f3 0f 59 d3	 mulss	 xmm2, xmm3

; 205  :     y += v.y;

  0008f	f3 0f 58 47 10	 addss	 xmm0, DWORD PTR [edi+16]

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00094	f3 0f 59 cb	 mulss	 xmm1, xmm3

; 204  :     x += v.x;

  00098	f3 0f 58 57 0c	 addss	 xmm2, DWORD PTR [edi+12]

; 206  :     z += v.z;

  0009d	f3 0f 58 4f 14	 addss	 xmm1, DWORD PTR [edi+20]
  000a2	f3 0f 11 47 10	 movss	 DWORD PTR [edi+16], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 84   : 	if (fAngle)

  000a7	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fAngle$[ebp]
  000ac	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 204  :     x += v.x;

  000b3	f3 0f 11 55 08	 movss	 DWORD PTR _rx$1$[ebp], xmm2
  000b8	f3 0f 11 57 0c	 movss	 DWORD PTR [edi+12], xmm2
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 84   : 	if (fAngle)

  000bd	9f		 lahf
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 206  :     z += v.z;

  000be	f3 0f 11 4f 14	 movss	 DWORD PTR [edi+20], xmm1
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 84   : 	if (fAngle)

  000c3	f6 c4 44	 test	 ah, 68			; 00000044H
  000c6	0f 8b 75 01 00
	00		 jnp	 $LN5@Update

; 85   : 	{
; 86   : 		if (m_pParticleProperty->m_bAttachFlag)

  000cc	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  000cf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  000d7	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  000db	f3 0f 11 45 0c	 movss	 DWORD PTR _fAngle$[ebp], xmm0
  000e0	74 77		 je	 SHORT $LN4@Update
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  000e2	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e5	e8 00 00 00 00	 call	 __libm_sse2_cos_precise

; 750  :             return (float)sin(_X);

  000ea	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _fAngle$[ebp]

; 649  :             return (float)cos(_X);

  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	f3 0f 11 45 fc	 movss	 DWORD PTR _fCos$1$[ebp], xmm0

; 750  :             return (float)sin(_X);

  000f8	0f 5a c1	 cvtps2pd xmm0, xmm1
  000fb	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 94   : 			float ry = m_v3Position.y - m_v3StartPosition.y;

  00100	f3 0f 10 5f 10	 movss	 xmm3, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  00105	0f 57 ed	 xorps	 xmm5, xmm5
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 94   : 			float ry = m_v3Position.y - m_v3StartPosition.y;

  00108	f3 0f 5c 5f 04	 subss	 xmm3, DWORD PTR [edi+4]
  0010d	f3 0f 10 7d 08	 movss	 xmm7, DWORD PTR _rx$1$[ebp]

; 121  : 	return TRUE;

  00112	b8 01 00 00 00	 mov	 eax, 1
  00117	f3 0f 5c 3f	 subss	 xmm7, DWORD PTR [edi]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  0011b	f2 0f 5a e8	 cvtsd2ss xmm5, xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 96   : 			m_v3Position.x =   fCos * rx + fSin * ry + m_v3StartPosition.x;

  0011f	0f 28 cb	 movaps	 xmm1, xmm3

; 97   : 			m_v3Position.y = - fSin * rx + fCos * ry + m_v3StartPosition.y;

  00122	f3 0f 59 5d fc	 mulss	 xmm3, DWORD PTR _fCos$1$[ebp]
  00127	0f 28 c7	 movaps	 xmm0, xmm7
  0012a	f3 0f 59 cd	 mulss	 xmm1, xmm5
  0012e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _fCos$1$[ebp]
  00133	f3 0f 59 fd	 mulss	 xmm7, xmm5
  00137	f3 0f 58 c8	 addss	 xmm1, xmm0
  0013b	f3 0f 5c df	 subss	 xmm3, xmm7
  0013f	f3 0f 58 0f	 addss	 xmm1, DWORD PTR [edi]
  00143	f3 0f 58 5f 04	 addss	 xmm3, DWORD PTR [edi+4]
  00148	f3 0f 11 4f 0c	 movss	 DWORD PTR [edi+12], xmm1
  0014d	f3 0f 11 5f 10	 movss	 DWORD PTR [edi+16], xmm3
  00152	5f		 pop	 edi

; 122  : }

  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 08 00	 ret	 8
$LN4@Update:

; 98   : 		}
; 99   : 		else
; 100  : 		{
; 101  : 			D3DXQUATERNION q,qc;
; 102  : 			D3DXQuaternionRotationAxis(&q,&m_pParticleProperty->m_v3ZAxis,D3DXToRadian(fAngle));

  00159	51		 push	 ecx
  0015a	83 c0 7c	 add	 eax, 124		; 0000007cH
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	50		 push	 eax
  00163	8d 45 dc	 lea	 eax, DWORD PTR _q$2[ebp]
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 _D3DXQuaternionRotationAxis@12
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1616 :     pOut->x = -pQ->x;

  0016c	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 110  : 			D3DXQuaternionMultiply(&qr,&q,&qr);

  00174	8d 45 ec	 lea	 eax, DWORD PTR _qr$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 1616 :     pOut->x = -pQ->x;

  00177	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _q$2[ebp]
  0017c	0f 57 c1	 xorps	 xmm0, xmm1

; 670  :     w = fw;

  0017f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _qr$3[ebp+12], 0

; 1616 :     pOut->x = -pQ->x;

  00186	f3 0f 11 45 cc	 movss	 DWORD PTR _qc$1[ebp], xmm0

; 1617 :     pOut->y = -pQ->y;

  0018b	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _q$2[ebp+4]
  00190	0f 57 c1	 xorps	 xmm0, xmm1
  00193	f3 0f 11 45 d0	 movss	 DWORD PTR _qc$1[ebp+4], xmm0

; 1618 :     pOut->z = -pQ->z;

  00198	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _q$2[ebp+8]
  0019d	0f 57 c1	 xorps	 xmm0, xmm1
  001a0	f3 0f 11 45 d4	 movss	 DWORD PTR _qc$1[ebp+8], xmm0

; 1619 :     pOut->w =  pQ->w;

  001a5	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _q$2[ebp+12]
  001aa	f3 0f 11 45 d8	 movss	 DWORD PTR _qc$1[ebp+12], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 105  : 			D3DXQUATERNION qr(

  001af	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  001b4	f3 0f 5c 07	 subss	 xmm0, DWORD PTR [edi]

; 110  : 			D3DXQuaternionMultiply(&qr,&q,&qr);

  001b8	50		 push	 eax
  001b9	8d 45 dc	 lea	 eax, DWORD PTR _q$2[ebp]
  001bc	50		 push	 eax
  001bd	8d 45 ec	 lea	 eax, DWORD PTR _qr$3[ebp]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 667  :     x = fx;

  001c0	f3 0f 11 45 ec	 movss	 DWORD PTR _qr$3[ebp], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 105  : 			D3DXQUATERNION qr(

  001c5	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]
  001ca	f3 0f 5c 47 04	 subss	 xmm0, DWORD PTR [edi+4]

; 110  : 			D3DXQuaternionMultiply(&qr,&q,&qr);

  001cf	50		 push	 eax
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 668  :     y = fy;

  001d0	f3 0f 11 45 f0	 movss	 DWORD PTR _qr$3[ebp+4], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 105  : 			D3DXQUATERNION qr(

  001d5	f3 0f 10 47 14	 movss	 xmm0, DWORD PTR [edi+20]
  001da	f3 0f 5c 47 08	 subss	 xmm0, DWORD PTR [edi+8]
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 669  :     z = fz;

  001df	f3 0f 11 45 f4	 movss	 DWORD PTR _qr$3[ebp+8], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 110  : 			D3DXQuaternionMultiply(&qr,&q,&qr);

  001e4	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 111  : 			D3DXQuaternionMultiply(&qr,&qr,&qc);

  001e9	8d 45 cc	 lea	 eax, DWORD PTR _qc$1[ebp]
  001ec	50		 push	 eax
  001ed	8d 45 ec	 lea	 eax, DWORD PTR _qr$3[ebp]
  001f0	50		 push	 eax
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 112  : 
; 113  : 			m_v3Position.x = qr.x;

  001f7	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _qr$3[ebp]
  001fc	f3 0f 11 47 0c	 movss	 DWORD PTR [edi+12], xmm0

; 114  : 			m_v3Position.y = qr.y;

  00201	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _qr$3[ebp+4]
  00206	f3 0f 11 47 10	 movss	 DWORD PTR [edi+16], xmm0

; 115  : 			m_v3Position.z = qr.z;

  0020b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _qr$3[ebp+8]
  00210	f3 0f 11 47 14	 movss	 DWORD PTR [edi+20], xmm0
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.inl

; 204  :     x += v.x;

  00215	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00219	f3 0f 58 47 0c	 addss	 xmm0, DWORD PTR [edi+12]
  0021e	f3 0f 11 47 0c	 movss	 DWORD PTR [edi+12], xmm0

; 205  :     y += v.y;

  00223	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00228	f3 0f 58 47 10	 addss	 xmm0, DWORD PTR [edi+16]
  0022d	f3 0f 11 47 10	 movss	 DWORD PTR [edi+16], xmm0

; 206  :     z += v.z;

  00232	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]
  00237	f3 0f 58 47 14	 addss	 xmm0, DWORD PTR [edi+20]
  0023c	f3 0f 11 47 14	 movss	 DWORD PTR [edi+20], xmm0
$LN5@Update:
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp

; 121  : 	return TRUE;

  00241	b8 01 00 00 00	 mov	 eax, 1
  00246	5f		 pop	 edi

; 122  : }

  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 08 00	 ret	 8
?Update@CParticleInstance@@QAEHMM@Z ENDP		; CParticleInstance::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?GetRadiusApproximation@CParticleInstance@@QAEMXZ
_TEXT	SEGMENT
?GetRadiusApproximation@CParticleInstance@@QAEMXZ PROC	; CParticleInstance::GetRadiusApproximation, COMDAT
; _this$ = ecx

; 58   : 	return m_v2HalfSize.y*m_v2Scale.y + m_v2HalfSize.x*m_v2Scale.x;

  00000	d9 41 3c	 fld	 DWORD PTR [ecx+60]
  00003	d8 49 34	 fmul	 DWORD PTR [ecx+52]
  00006	d9 41 38	 fld	 DWORD PTR [ecx+56]
  00009	d8 49 30	 fmul	 DWORD PTR [ecx+48]
  0000c	de c1		 faddp	 ST(1), ST(0)

; 59   : }

  0000e	c3		 ret	 0
?GetRadiusApproximation@CParticleInstance@@QAEMXZ ENDP	; CParticleInstance::GetRadiusApproximation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ??1CParticleInstance@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CParticleInstance@@QAE@XZ PROC			; CParticleInstance::~CParticleInstance, COMDAT
; _this$ = ecx

; 462  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CParticleInstance@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 463  : 	Destroy();

  00022	e8 00 00 00 00	 call	 ?Destroy@CParticleInstance@@QAEXXZ ; CParticleInstance::Destroy

; 464  : }

  00027	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00031	59		 pop	 ecx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
  00036	cc		 int	 3
  00037	cc		 int	 3
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CParticleInstance@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CParticleInstance@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CParticleInstance@@QAE@XZ ENDP			; CParticleInstance::~CParticleInstance
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ??0CParticleInstance@@QAE@XZ
_TEXT	SEGMENT
??0CParticleInstance@@QAE@XZ PROC			; CParticleInstance::CParticleInstance, COMDAT
; _this$ = ecx

; 457  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 458  : 	__Initialize();

  00003	e8 00 00 00 00	 call	 ?__Initialize@CParticleInstance@@IAEXXZ ; CParticleInstance::__Initialize

; 459  : }

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi
  0000b	c3		 ret	 0
??0CParticleInstance@@QAE@XZ ENDP			; CParticleInstance::CParticleInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ
_TEXT	SEGMENT
?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ PROC ; NEffectUpdateDecorator::CBaseDecorator::DeleteThis, COMDAT
; _this$ = ecx

; 44   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 45   : 			//return;
; 46   : 			if (m_NextDecorator)

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 05		 je	 SHORT $LN2@DeleteThis

; 47   : 				m_NextDecorator->DeleteThis();

  0000a	e8 00 00 00 00	 call	 ?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ ; NEffectUpdateDecorator::CBaseDecorator::DeleteThis
$LN2@DeleteThis:

; 48   : 			delete this;

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	8b ce		 mov	 ecx, esi
  00013	6a 01		 push	 1
  00015	ff 10		 call	 DWORD PTR [eax]
  00017	5e		 pop	 esi

; 49   : 		}

  00018	c3		 ret	 0
?DeleteThis@CBaseDecorator@NEffectUpdateDecorator@@QAEXXZ ENDP ; NEffectUpdateDecorator::CBaseDecorator::DeleteThis
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SPTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPTVertex@@QAE@XZ PROC				; SPTVertex::SPTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPTVertex@@QAE@XZ ENDP				; SPTVertex::SPTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EffectLib\ParticleInstance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
