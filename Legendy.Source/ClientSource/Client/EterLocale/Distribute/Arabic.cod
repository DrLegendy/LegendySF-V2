; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29112.0 

	TITLE	C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Arabic_ConvSymbol@@YA_W_W@Z			; Arabic_ConvSymbol
PUBLIC	?Arabic_IsInSpace@@YA_N_W@Z			; Arabic_IsInSpace
PUBLIC	?Arabic_IsInSymbol@@YA_N_W@Z			; Arabic_IsInSymbol
PUBLIC	?Arabic_IsInPresentation@@YA_N_W@Z		; Arabic_IsInPresentation
PUBLIC	?Arabic_HasPresentation@@YA_NPA_WH@Z		; Arabic_HasPresentation
PUBLIC	?Arabic_MakeShape@@YAIPA_WI0I@Z			; Arabic_MakeShape
PUBLIC	?Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z ; Arabic_GetComposition
PUBLIC	?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z	; Arabic_GetMap
PUBLIC	?Arabic_IsInMap@@YA_N_W@Z			; Arabic_IsInMap
PUBLIC	?Arabic_IsInComposing@@YA_N_W@Z			; Arabic_IsInComposing
PUBLIC	?Arabic_IsNext@@YA_N_W@Z			; Arabic_IsNext
PUBLIC	?Arabic_IsComb1@@YA_N_W@Z			; Arabic_IsComb1
PUBLIC	?Arabic_IsComb2@@YA_N_W@Z			; Arabic_IsComb2
;	COMDAT ?YEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?YEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 064aH ; `Arabic_GetMap'::`2'::YEH
	DW	0fef1H
	DW	0fef3H
	DW	0fef4H
	DW	0fef2H
_DATA	ENDS
;	COMDAT ?ALEF_MAKSURA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ALEF_MAKSURA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0649H ; `Arabic_GetMap'::`2'::ALEF_MAKSURA
	DW	0feefH
	DW	00H
	DW	00H
	DW	0fef0H
_DATA	ENDS
;	COMDAT ?WAW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?WAW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0648H ; `Arabic_GetMap'::`2'::WAW
	DW	0feedH
	DW	00H
	DW	00H
	DW	0feeeH
_DATA	ENDS
;	COMDAT ?HEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?HEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0647H ; `Arabic_GetMap'::`2'::HEH
	DW	0fee9H
	DW	0feebH
	DW	0feecH
	DW	0feeaH
_DATA	ENDS
;	COMDAT ?NOON@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?NOON@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0646H ; `Arabic_GetMap'::`2'::NOON
	DW	0fee5H
	DW	0fee7H
	DW	0fee8H
	DW	0fee6H
_DATA	ENDS
;	COMDAT ?MEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?MEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0645H ; `Arabic_GetMap'::`2'::MEEM
	DW	0fee1H
	DW	0fee3H
	DW	0fee4H
	DW	0fee2H
_DATA	ENDS
;	COMDAT ?LAM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?LAM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0644H ; `Arabic_GetMap'::`2'::LAM
	DW	0feddH
	DW	0fedfH
	DW	0fee0H
	DW	0fedeH
_DATA	ENDS
;	COMDAT ?KAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?KAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0643H ; `Arabic_GetMap'::`2'::KAF
	DW	0fed9H
	DW	0fedbH
	DW	0fedcH
	DW	0fedaH
_DATA	ENDS
;	COMDAT ?QAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?QAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0642H ; `Arabic_GetMap'::`2'::QAF
	DW	0fed5H
	DW	0fed7H
	DW	0fed8H
	DW	0fed6H
_DATA	ENDS
;	COMDAT ?OX_FEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?OX_FEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0641H ; `Arabic_GetMap'::`2'::OX_FEH
	DW	0fed1H
	DW	0fed3H
	DW	0fed4H
	DW	0fed2H
_DATA	ENDS
;	COMDAT ?TATWEEL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?TATWEEL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0640H ; `Arabic_GetMap'::`2'::TATWEEL
	DW	0640H
	DW	00H
	DW	00H
	DW	00H
_DATA	ENDS
;	COMDAT ?GHAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?GHAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 063aH ; `Arabic_GetMap'::`2'::GHAIN
	DW	0fecdH
	DW	0fecfH
	DW	0fed0H
	DW	0feceH
_DATA	ENDS
;	COMDAT ?AIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?AIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0639H ; `Arabic_GetMap'::`2'::AIN
	DW	0fec9H
	DW	0fecbH
	DW	0feccH
	DW	0fecaH
_DATA	ENDS
;	COMDAT ?ZAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ZAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0638H ; `Arabic_GetMap'::`2'::ZAH
	DW	0fec5H
	DW	0fec7H
	DW	0fec8H
	DW	0fec6H
_DATA	ENDS
;	COMDAT ?TAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?TAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0637H ; `Arabic_GetMap'::`2'::TAH
	DW	0fec1H
	DW	0fec3H
	DW	0fec4H
	DW	0fec2H
_DATA	ENDS
;	COMDAT ?DAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?DAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0636H ; `Arabic_GetMap'::`2'::DAD
	DW	0febdH
	DW	0febfH
	DW	0fec0H
	DW	0febeH
_DATA	ENDS
;	COMDAT ?SAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?SAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0635H ; `Arabic_GetMap'::`2'::SAD
	DW	0feb9H
	DW	0febbH
	DW	0febcH
	DW	0febaH
_DATA	ENDS
;	COMDAT ?SHEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?SHEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0634H ; `Arabic_GetMap'::`2'::SHEEN
	DW	0feb5H
	DW	0feb7H
	DW	0feb8H
	DW	0feb6H
_DATA	ENDS
;	COMDAT ?SEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?SEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0633H ; `Arabic_GetMap'::`2'::SEEN
	DW	0feb1H
	DW	0feb3H
	DW	0feb4H
	DW	0feb2H
_DATA	ENDS
;	COMDAT ?ZAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ZAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0632H ; `Arabic_GetMap'::`2'::ZAIN
	DW	0feafH
	DW	00H
	DW	00H
	DW	0feb0H
_DATA	ENDS
;	COMDAT ?REH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?REH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0631H ; `Arabic_GetMap'::`2'::REH
	DW	0feadH
	DW	00H
	DW	00H
	DW	0feaeH
_DATA	ENDS
;	COMDAT ?THAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?THAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0630H ; `Arabic_GetMap'::`2'::THAL
	DW	0feabH
	DW	00H
	DW	00H
	DW	0feacH
_DATA	ENDS
;	COMDAT ?DAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?DAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062fH ; `Arabic_GetMap'::`2'::DAL
	DW	0fea9H
	DW	00H
	DW	00H
	DW	0feaaH
_DATA	ENDS
;	COMDAT ?KHAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?KHAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062eH ; `Arabic_GetMap'::`2'::KHAH
	DW	0fea5H
	DW	0fea7H
	DW	0fea8H
	DW	0fea6H
_DATA	ENDS
;	COMDAT ?HAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?HAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062dH ; `Arabic_GetMap'::`2'::HAH
	DW	0fea1H
	DW	0fea3H
	DW	0fea4H
	DW	0fea2H
_DATA	ENDS
;	COMDAT ?JEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?JEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062cH ; `Arabic_GetMap'::`2'::JEEM
	DW	0fe9dH
	DW	0fe9fH
	DW	0fea0H
	DW	0fe9eH
_DATA	ENDS
;	COMDAT ?THEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?THEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062bH ; `Arabic_GetMap'::`2'::THEH
	DW	0fe99H
	DW	0fe9bH
	DW	0fe9cH
	DW	0fe9aH
_DATA	ENDS
;	COMDAT ?TEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?TEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 062aH ; `Arabic_GetMap'::`2'::TEH
	DW	0fe95H
	DW	0fe97H
	DW	0fe98H
	DW	0fe96H
_DATA	ENDS
;	COMDAT ?TEH_MARBUTA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?TEH_MARBUTA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0629H ; `Arabic_GetMap'::`2'::TEH_MARBUTA
	DW	0fe93H
	DW	00H
	DW	00H
	DW	0fe94H
_DATA	ENDS
;	COMDAT ?BEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?BEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0628H ; `Arabic_GetMap'::`2'::BEH
	DW	0fe8fH
	DW	0fe91H
	DW	0fe92H
	DW	0fe90H
_DATA	ENDS
;	COMDAT ?ALEF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ALEF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0627H ; `Arabic_GetMap'::`2'::ALEF
	DW	0fe8dH
	DW	00H
	DW	00H
	DW	0fe8eH
_DATA	ENDS
;	COMDAT ?YEH_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?YEH_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0626H ; `Arabic_GetMap'::`2'::YEH_HAMZA
	DW	0fe89H
	DW	0fe8bH
	DW	0fe8cH
	DW	0fe8aH
_DATA	ENDS
;	COMDAT ?ALEF_HAMZA_BELOW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ALEF_HAMZA_BELOW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0625H ; `Arabic_GetMap'::`2'::ALEF_HAMZA_BELOW
	DW	0fe87H
	DW	00H
	DW	00H
	DW	0fe88H
_DATA	ENDS
;	COMDAT ?WAW_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?WAW_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0624H ; `Arabic_GetMap'::`2'::WAW_HAMZA
	DW	0fe85H
	DW	00H
	DW	00H
	DW	0fe86H
_DATA	ENDS
;	COMDAT ?ALEF_HAMZA_ABOVE@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ALEF_HAMZA_ABOVE@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0623H ; `Arabic_GetMap'::`2'::ALEF_HAMZA_ABOVE
	DW	0fe83H
	DW	00H
	DW	00H
	DW	0fe84H
_DATA	ENDS
;	COMDAT ?ALEF_MADDA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?ALEF_MADDA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0622H ; `Arabic_GetMap'::`2'::ALEF_MADDA
	DW	0fe81H
	DW	00H
	DW	00H
	DW	0fe82H
_DATA	ENDS
;	COMDAT ?HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0621H ; `Arabic_GetMap'::`2'::HAMZA
	DW	0fe80H
	DW	00H
	DW	00H
	DW	00H
_DATA	ENDS
;	COMDAT ?LAM_ALEF@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?LAM_ALEF@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0627H ; `Arabic_GetComposition'::`2'::LAM_ALEF
	DW	0fefbH
	DW	00H
	DW	00H
	DW	0fefcH
_DATA	ENDS
;	COMDAT ?LAM_ALEF_HAMZA_BELOW@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?LAM_ALEF_HAMZA_BELOW@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0625H ; `Arabic_GetComposition'::`2'::LAM_ALEF_HAMZA_BELOW
	DW	0fef9H
	DW	00H
	DW	00H
	DW	0fefaH
_DATA	ENDS
;	COMDAT ?LAM_ALEF_HAMZA_ABOVE@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?LAM_ALEF_HAMZA_ABOVE@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0623H ; `Arabic_GetComposition'::`2'::LAM_ALEF_HAMZA_ABOVE
	DW	0fef7H
	DW	00H
	DW	00H
	DW	0fef8H
_DATA	ENDS
;	COMDAT ?LAM_ALEF_MADDA@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA
_DATA	SEGMENT
?LAM_ALEF_MADDA@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA DW 0622H ; `Arabic_GetComposition'::`2'::LAM_ALEF_MADDA
	DW	0fef5H
	DW	00H
	DW	00H
	DW	0fef6H
_DATA	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsComb2@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsComb2@@YA_N_W@Z PROC				; Arabic_IsComb2, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 234  : 	switch (code)

  00003	0f b7 45 08	 movzx	 eax, WORD PTR _code$[ebp]
  00007	05 de f9 ff ff	 add	 eax, -1570		; fffff9deH
  0000c	83 f8 05	 cmp	 eax, 5
  0000f	77 12		 ja	 SHORT $LN2@Arabic_IsC
  00011	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN6@Arabic_IsC[eax]
  00018	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN7@Arabic_IsC[eax*4]
$LN4@Arabic_IsC:

; 235  : 	{
; 236  : 		case 0x0622:
; 237  : 		case 0x0623:
; 238  : 		case 0x0625:
; 239  : 		case 0x0627:
; 240  : 			return true;

  0001f	b0 01		 mov	 al, 1

; 244  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
$LN2@Arabic_IsC:

; 241  : 	}
; 242  : 
; 243  : 	return false;

  00023	32 c0		 xor	 al, al

; 244  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
  00027	90		 npad	 1
$LN7@Arabic_IsC:
  00028	00 00 00 00	 DD	 $LN4@Arabic_IsC
  0002c	00 00 00 00	 DD	 $LN2@Arabic_IsC
$LN6@Arabic_IsC:
  00030	00		 DB	 0
  00031	00		 DB	 0
  00032	01		 DB	 1
  00033	00		 DB	 0
  00034	01		 DB	 1
  00035	00		 DB	 0
?Arabic_IsComb2@@YA_N_W@Z ENDP				; Arabic_IsComb2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsComb1@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsComb1@@YA_N_W@Z PROC				; Arabic_IsComb1, COMDAT

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  : 	return (code == 0x0644);

  00003	b8 44 06 00 00	 mov	 eax, 1604		; 00000644H
  00008	66 39 45 08	 cmp	 WORD PTR _code$[ebp], ax
  0000c	0f 94 c0	 sete	 al

; 230  : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?Arabic_IsComb1@@YA_N_W@Z ENDP				; Arabic_IsComb1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsNext@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsNext@@YA_N_W@Z PROC				; Arabic_IsNext, COMDAT

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 224  : 	return (code == 0x0640);

  00003	b8 40 06 00 00	 mov	 eax, 1600		; 00000640H
  00008	66 39 45 08	 cmp	 WORD PTR _code$[ebp], ax
  0000c	0f 94 c0	 sete	 al

; 225  : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?Arabic_IsNext@@YA_N_W@Z ENDP				; Arabic_IsNext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsInComposing@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsInComposing@@YA_N_W@Z PROC			; Arabic_IsInComposing, COMDAT

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 179  : 	switch (code)

  00003	0f b7 45 08	 movzx	 eax, WORD PTR _code$[ebp]
  00007	05 b5 f9 ff ff	 add	 eax, -1611		; fffff9b5H
  0000c	3d a2 00 00 00	 cmp	 eax, 162		; 000000a2H
  00011	77 12		 ja	 SHORT $LN2@Arabic_IsI
  00013	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN6@Arabic_IsI[eax]
  0001a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN7@Arabic_IsI[eax*4]
$LN4@Arabic_IsI:

; 180  : 	{
; 181  : 		case 0x064B:         // FATHATAN
; 182  : 		case 0x064C:         // DAMMATAN
; 183  : 		case 0x064D:         // KASRATAN
; 184  : 		case 0x064E:         // FATHA
; 185  : 		case 0x064F:         // DAMMA
; 186  : 		case 0x0650:         // KASRA
; 187  : 		case 0x0651:         // SHADDA
; 188  : 		case 0x0652:         // SUKUN
; 189  : 		case 0x0653:         // MADDAH ABOVE
; 190  : 		case 0x0654:         // HAMZA ABOVE
; 191  : 		case 0x0655:         // HAMZA BELOW
; 192  : 		case 0x0670:         // SUPERSCRIPT ALEF
; 193  : 		case 0x06D6:         // HIGH LIG. SAD WITH LAM WITH ALEF MAKSURA
; 194  : 		case 0x06D7:         // HIGH LIG. QAF WITH LAM WITH ALEF MAKSURA
; 195  : 		case 0x06D8:         // HIGH MEEM INITIAL FORM
; 196  : 		case 0x06D9:         // HIGH LAM ALEF
; 197  : 		case 0x06DA:         // HIGH JEEM
; 198  : 		case 0x06DB:         // HIGH THREE DOTS
; 199  : 		case 0x06DC:         // HIGH SEEN
; 200  : 
; 201  : 		// The 2 entires below should not be here - contact unicode.org !!
; 202  : 		// case 0x06DD:         // END OF AYAH
; 203  : 		// case 0x06DE:         // START OF RUB EL HIZB
; 204  : 
; 205  : 		case 0x06DF:         // HIGH ROUNDED ZERO
; 206  : 		case 0x06E0:         // HIGH UPRIGHT RECTANGULAR ZERO
; 207  : 		case 0x06E1:         // HIGH DOTLESS HEAD OF KHAH
; 208  : 		case 0x06E2:         // HIGH MEEM ISOLATED FORM
; 209  : 		case 0x06E3:         // LOW SEEN
; 210  : 		case 0x06E4:         // HIGH MADDA
; 211  : 		case 0x06E7:         // HIGH YEH
; 212  : 		case 0x06E8:         // HIGH NOON
; 213  : 		case 0x06EA:         // EMPTY CENTRE LOW STOP
; 214  : 		case 0x06EB:         // EMPTY CENTRE HIGH STOP
; 215  : 		case 0x06EC:         // HIGH STOP WITH FILLED CENTRE
; 216  : 		case 0x06ED:         // LOW MEEM
; 217  : 			return true;

  00021	b0 01		 mov	 al, 1

; 220  : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN2@Arabic_IsI:

; 218  : 	}
; 219  : 	return false;

  00025	32 c0		 xor	 al, al

; 220  : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
  00029	0f 1f 00	 npad	 3
$LN7@Arabic_IsI:
  0002c	00 00 00 00	 DD	 $LN4@Arabic_IsI
  00030	00 00 00 00	 DD	 $LN2@Arabic_IsI
$LN6@Arabic_IsI:
  00034	00		 DB	 0
  00035	00		 DB	 0
  00036	00		 DB	 0
  00037	00		 DB	 0
  00038	00		 DB	 0
  00039	00		 DB	 0
  0003a	00		 DB	 0
  0003b	00		 DB	 0
  0003c	00		 DB	 0
  0003d	00		 DB	 0
  0003e	00		 DB	 0
  0003f	01		 DB	 1
  00040	01		 DB	 1
  00041	01		 DB	 1
  00042	01		 DB	 1
  00043	01		 DB	 1
  00044	01		 DB	 1
  00045	01		 DB	 1
  00046	01		 DB	 1
  00047	01		 DB	 1
  00048	01		 DB	 1
  00049	01		 DB	 1
  0004a	01		 DB	 1
  0004b	01		 DB	 1
  0004c	01		 DB	 1
  0004d	01		 DB	 1
  0004e	01		 DB	 1
  0004f	01		 DB	 1
  00050	01		 DB	 1
  00051	01		 DB	 1
  00052	01		 DB	 1
  00053	01		 DB	 1
  00054	01		 DB	 1
  00055	01		 DB	 1
  00056	01		 DB	 1
  00057	01		 DB	 1
  00058	01		 DB	 1
  00059	00		 DB	 0
  0005a	01		 DB	 1
  0005b	01		 DB	 1
  0005c	01		 DB	 1
  0005d	01		 DB	 1
  0005e	01		 DB	 1
  0005f	01		 DB	 1
  00060	01		 DB	 1
  00061	01		 DB	 1
  00062	01		 DB	 1
  00063	01		 DB	 1
  00064	01		 DB	 1
  00065	01		 DB	 1
  00066	01		 DB	 1
  00067	01		 DB	 1
  00068	01		 DB	 1
  00069	01		 DB	 1
  0006a	01		 DB	 1
  0006b	01		 DB	 1
  0006c	01		 DB	 1
  0006d	01		 DB	 1
  0006e	01		 DB	 1
  0006f	01		 DB	 1
  00070	01		 DB	 1
  00071	01		 DB	 1
  00072	01		 DB	 1
  00073	01		 DB	 1
  00074	01		 DB	 1
  00075	01		 DB	 1
  00076	01		 DB	 1
  00077	01		 DB	 1
  00078	01		 DB	 1
  00079	01		 DB	 1
  0007a	01		 DB	 1
  0007b	01		 DB	 1
  0007c	01		 DB	 1
  0007d	01		 DB	 1
  0007e	01		 DB	 1
  0007f	01		 DB	 1
  00080	01		 DB	 1
  00081	01		 DB	 1
  00082	01		 DB	 1
  00083	01		 DB	 1
  00084	01		 DB	 1
  00085	01		 DB	 1
  00086	01		 DB	 1
  00087	01		 DB	 1
  00088	01		 DB	 1
  00089	01		 DB	 1
  0008a	01		 DB	 1
  0008b	01		 DB	 1
  0008c	01		 DB	 1
  0008d	01		 DB	 1
  0008e	01		 DB	 1
  0008f	01		 DB	 1
  00090	01		 DB	 1
  00091	01		 DB	 1
  00092	01		 DB	 1
  00093	01		 DB	 1
  00094	01		 DB	 1
  00095	01		 DB	 1
  00096	01		 DB	 1
  00097	01		 DB	 1
  00098	01		 DB	 1
  00099	01		 DB	 1
  0009a	01		 DB	 1
  0009b	01		 DB	 1
  0009c	01		 DB	 1
  0009d	01		 DB	 1
  0009e	01		 DB	 1
  0009f	01		 DB	 1
  000a0	01		 DB	 1
  000a1	01		 DB	 1
  000a2	01		 DB	 1
  000a3	01		 DB	 1
  000a4	01		 DB	 1
  000a5	01		 DB	 1
  000a6	01		 DB	 1
  000a7	01		 DB	 1
  000a8	01		 DB	 1
  000a9	01		 DB	 1
  000aa	01		 DB	 1
  000ab	01		 DB	 1
  000ac	01		 DB	 1
  000ad	01		 DB	 1
  000ae	01		 DB	 1
  000af	01		 DB	 1
  000b0	01		 DB	 1
  000b1	01		 DB	 1
  000b2	01		 DB	 1
  000b3	01		 DB	 1
  000b4	01		 DB	 1
  000b5	01		 DB	 1
  000b6	01		 DB	 1
  000b7	01		 DB	 1
  000b8	01		 DB	 1
  000b9	01		 DB	 1
  000ba	01		 DB	 1
  000bb	01		 DB	 1
  000bc	01		 DB	 1
  000bd	01		 DB	 1
  000be	01		 DB	 1
  000bf	00		 DB	 0
  000c0	00		 DB	 0
  000c1	00		 DB	 0
  000c2	00		 DB	 0
  000c3	00		 DB	 0
  000c4	00		 DB	 0
  000c5	00		 DB	 0
  000c6	01		 DB	 1
  000c7	01		 DB	 1
  000c8	00		 DB	 0
  000c9	00		 DB	 0
  000ca	00		 DB	 0
  000cb	00		 DB	 0
  000cc	00		 DB	 0
  000cd	00		 DB	 0
  000ce	01		 DB	 1
  000cf	01		 DB	 1
  000d0	00		 DB	 0
  000d1	00		 DB	 0
  000d2	01		 DB	 1
  000d3	00		 DB	 0
  000d4	00		 DB	 0
  000d5	00		 DB	 0
  000d6	00		 DB	 0
?Arabic_IsInComposing@@YA_N_W@Z ENDP			; Arabic_IsInComposing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsInMap@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsInMap@@YA_N_W@Z PROC				; Arabic_IsInMap, COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 174  : 	return (code >= ARABIC_CODE_BASE && code <= ARABIC_CODE_LAST);

  00003	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  00006	05 df f9 ff ff	 add	 eax, -1569		; fffff9dfH
  0000b	66 83 f8 29	 cmp	 ax, 41			; 00000029H
  0000f	0f 96 c0	 setbe	 al

; 175  : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?Arabic_IsInMap@@YA_N_W@Z ENDP				; Arabic_IsInMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
_pos$ = 12						; size = 4
?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z PROC	; Arabic_GetMap, COMDAT

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   : 	static wchar_t HAMZA[ARABIC_FORM_TYPE_NUM]				= {0x0621        ,      0xFE80,      0,      0,      0};
; 92   : 	static wchar_t ALEF_MADDA[ARABIC_FORM_TYPE_NUM]			= {0x0622        ,      0xFE81,      0,      0, 0xFE82};
; 93   : 	static wchar_t ALEF_HAMZA_ABOVE[ARABIC_FORM_TYPE_NUM]	= {0x0623        ,      0xFE83,      0,      0, 0xFE84};
; 94   : 	static wchar_t WAW_HAMZA[ARABIC_FORM_TYPE_NUM]			= {0x0624        ,      0xFE85,      0,      0, 0xFE86};
; 95   : 	static wchar_t ALEF_HAMZA_BELOW[ARABIC_FORM_TYPE_NUM]	= {0x0625        ,      0xFE87,      0,      0, 0xFE88};
; 96   : 	static wchar_t YEH_HAMZA[ARABIC_FORM_TYPE_NUM]			= {0x0626        ,      0xFE89, 0xFE8B, 0xFE8C, 0xFE8A};
; 97   : 	static wchar_t ALEF[ARABIC_FORM_TYPE_NUM]				= {0x0627        ,      0xFE8D,      0,      0, 0xFE8E};
; 98   : 	static wchar_t BEH[ARABIC_FORM_TYPE_NUM]				= {0x0628        ,      0xFE8F, 0xFE91, 0xFE92, 0xFE90};
; 99   : 	static wchar_t TEH_MARBUTA[ARABIC_FORM_TYPE_NUM]		= {0x0629        ,      0xFE93,      0,      0, 0xFE94};
; 100  : 	static wchar_t TEH[ARABIC_FORM_TYPE_NUM]				= {0x062A        ,      0xFE95, 0xFE97, 0xFE98, 0xFE96};
; 101  : 	static wchar_t THEH[ARABIC_FORM_TYPE_NUM]				= {0x062B        ,      0xFE99, 0xFE9B, 0xFE9C, 0xFE9A};
; 102  : 	static wchar_t JEEM[ARABIC_FORM_TYPE_NUM]				= {0x062C        ,      0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E};
; 103  : 	static wchar_t HAH[ARABIC_FORM_TYPE_NUM]				= {0x062D        ,      0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2};
; 104  : 	static wchar_t KHAH[ARABIC_FORM_TYPE_NUM]				= {0x062E        ,      0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6};
; 105  : 	static wchar_t DAL[ARABIC_FORM_TYPE_NUM]				= {0x062F        ,      0xFEA9,      0,      0, 0xFEAA};
; 106  : 	static wchar_t THAL[ARABIC_FORM_TYPE_NUM]				= {0x0630        ,      0xFEAB,      0,      0, 0xFEAC};
; 107  : 	static wchar_t REH[ARABIC_FORM_TYPE_NUM]				= {0x0631        ,      0xFEAD,      0,      0, 0xFEAE};
; 108  : 	static wchar_t ZAIN[ARABIC_FORM_TYPE_NUM]				= {0x0632        ,      0xFEAF,      0,      0, 0xFEB0};
; 109  : 	static wchar_t SEEN[ARABIC_FORM_TYPE_NUM]				= {0x0633        ,      0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2};
; 110  : 	static wchar_t SHEEN[ARABIC_FORM_TYPE_NUM]				= {0x0634        ,      0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6};
; 111  : 	static wchar_t SAD[ARABIC_FORM_TYPE_NUM]				= {0x0635        ,      0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA};
; 112  : 	static wchar_t DAD[ARABIC_FORM_TYPE_NUM]				= {0x0636        ,      0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE};
; 113  : 	static wchar_t TAH[ARABIC_FORM_TYPE_NUM]				= {0x0637        ,      0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2};
; 114  : 	static wchar_t ZAH[ARABIC_FORM_TYPE_NUM]				= {0x0638        ,      0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6};
; 115  : 	static wchar_t AIN[ARABIC_FORM_TYPE_NUM]				= {0x0639        ,      0xFEC9, 0xFECB, 0xFECC, 0xFECA};
; 116  : 	static wchar_t GHAIN[ARABIC_FORM_TYPE_NUM]				= {0x063A        ,      0xFECD, 0xFECF, 0xFED0, 0xFECE};
; 117  : 	static wchar_t TATWEEL[ARABIC_FORM_TYPE_NUM]			= {0x0640        ,      0x0640,      0,      0,      0};
; 118  : 	static wchar_t OX_FEH[ARABIC_FORM_TYPE_NUM]				= {0x0641        ,      0xFED1, 0xFED3, 0xFED4, 0xFED2};
; 119  : 	static wchar_t QAF[ARABIC_FORM_TYPE_NUM]				= {0x0642        ,      0xFED5, 0xFED7, 0xFED8, 0xFED6};
; 120  : 	static wchar_t KAF[ARABIC_FORM_TYPE_NUM]				= {0x0643        ,      0xFED9, 0xFEDB, 0xFEDC, 0xFEDA};
; 121  : 	static wchar_t LAM[ARABIC_FORM_TYPE_NUM]				= {0x0644        ,      0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE};
; 122  : 	static wchar_t MEEM[ARABIC_FORM_TYPE_NUM]				= {0x0645        ,      0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2};
; 123  : 	static wchar_t NOON[ARABIC_FORM_TYPE_NUM]				= {0x0646        ,      0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6};
; 124  : 	static wchar_t HEH[ARABIC_FORM_TYPE_NUM]				= {0x0647        ,      0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA};
; 125  : 	static wchar_t WAW[ARABIC_FORM_TYPE_NUM]				= {0x0648        ,      0xFEED,      0,      0, 0xFEEE};
; 126  : 	static wchar_t ALEF_MAKSURA[ARABIC_FORM_TYPE_NUM]		= {0x0649        ,      0xFEEF,      0,      0, 0xFEF0};
; 127  : 	static wchar_t YEH[ARABIC_FORM_TYPE_NUM]				= {0x064A        ,      0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2};
; 128  : 
; 129  : 	switch (code)

  00003	0f b7 45 08	 movzx	 eax, WORD PTR _code$[ebp]
  00007	05 df f9 ff ff	 add	 eax, -1569		; fffff9dfH
  0000c	83 f8 29	 cmp	 eax, 41			; 00000029H
  0000f	0f 87 e8 01 00
	00		 ja	 $LN2@Arabic_Get
  00015	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN42@Arabic_Get[eax*4]
$LN4@Arabic_Get:

; 130  : 	{
; 131  : 		case 0x0621: return	HAMZA[pos];break;

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0001f	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN5@Arabic_Get:

; 132  : 		case 0x0622: return	ALEF_MADDA[pos];break;

  00029	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0002c	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ALEF_MADDA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN6@Arabic_Get:

; 133  : 		case 0x0623: return	ALEF_HAMZA_ABOVE[pos];break;

  00036	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00039	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ALEF_HAMZA_ABOVE@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN7@Arabic_Get:

; 134  : 		case 0x0624: return	WAW_HAMZA[pos];break;

  00043	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00046	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?WAW_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN8@Arabic_Get:

; 135  : 		case 0x0625: return	ALEF_HAMZA_BELOW[pos];break;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00053	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ALEF_HAMZA_BELOW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
$LN9@Arabic_Get:

; 136  : 		case 0x0626: return	YEH_HAMZA[pos];break;

  0005d	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00060	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?YEH_HAMZA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
$LN10@Arabic_Get:

; 137  : 		case 0x0627: return	ALEF[pos];break;

  0006a	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0006d	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ALEF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN11@Arabic_Get:

; 138  : 		case 0x0628: return	BEH[pos];break;

  00077	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0007a	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?BEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
$LN12@Arabic_Get:

; 139  : 		case 0x0629: return	TEH_MARBUTA[pos];break;

  00084	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00087	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?TEH_MARBUTA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN13@Arabic_Get:

; 140  : 		case 0x062A: return	TEH[pos];break;

  00091	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00094	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?TEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN14@Arabic_Get:

; 141  : 		case 0x062B: return	THEH[pos];break;

  0009e	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000a1	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?THEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
$LN15@Arabic_Get:

; 142  : 		case 0x062C: return	JEEM[pos];break;

  000ab	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000ae	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?JEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN16@Arabic_Get:

; 143  : 		case 0x062D: return	HAH[pos];break;

  000b8	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000bb	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?HAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN17@Arabic_Get:

; 144  : 		case 0x062E: return	KHAH[pos];break;

  000c5	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000c8	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?KHAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
$LN18@Arabic_Get:

; 145  : 		case 0x062F: return	DAL[pos];break;

  000d2	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000d5	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?DAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
$LN19@Arabic_Get:

; 146  : 		case 0x0630: return	THAL[pos];break;

  000df	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000e2	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?THAL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000ea	5d		 pop	 ebp
  000eb	c3		 ret	 0
$LN20@Arabic_Get:

; 147  : 		case 0x0631: return	REH[pos];break;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000ef	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?REH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  000f7	5d		 pop	 ebp
  000f8	c3		 ret	 0
$LN21@Arabic_Get:

; 148  : 		case 0x0632: return	ZAIN[pos];break;

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  000fc	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ZAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN22@Arabic_Get:

; 149  : 		case 0x0633: return	SEEN[pos];break;

  00106	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00109	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?SEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
$LN23@Arabic_Get:

; 150  : 		case 0x0634: return	SHEEN[pos];break;

  00113	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00116	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?SHEEN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0011e	5d		 pop	 ebp
  0011f	c3		 ret	 0
$LN24@Arabic_Get:

; 151  : 		case 0x0635: return	SAD[pos];break;

  00120	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00123	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?SAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0012b	5d		 pop	 ebp
  0012c	c3		 ret	 0
$LN25@Arabic_Get:

; 152  : 		case 0x0636: return	DAD[pos];break;

  0012d	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00130	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?DAD@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
$LN26@Arabic_Get:

; 153  : 		case 0x0637: return	TAH[pos];break;

  0013a	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0013d	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?TAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00145	5d		 pop	 ebp
  00146	c3		 ret	 0
$LN27@Arabic_Get:

; 154  : 		case 0x0638: return	ZAH[pos];break;

  00147	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0014a	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ZAH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00152	5d		 pop	 ebp
  00153	c3		 ret	 0
$LN28@Arabic_Get:

; 155  : 		case 0x0639: return	AIN[pos];break;

  00154	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00157	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?AIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0015f	5d		 pop	 ebp
  00160	c3		 ret	 0
$LN29@Arabic_Get:

; 156  : 		case 0x063A: return	GHAIN[pos];break;

  00161	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00164	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?GHAIN@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  0016c	5d		 pop	 ebp
  0016d	c3		 ret	 0
$LN30@Arabic_Get:

; 157  : 		case 0x0640: return	TATWEEL[pos];break;

  0016e	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00171	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?TATWEEL@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00179	5d		 pop	 ebp
  0017a	c3		 ret	 0
$LN31@Arabic_Get:

; 158  : 		case 0x0641: return	OX_FEH[pos];break;

  0017b	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0017e	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?OX_FEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00186	5d		 pop	 ebp
  00187	c3		 ret	 0
$LN32@Arabic_Get:

; 159  : 		case 0x0642: return	QAF[pos];break;

  00188	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  0018b	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?QAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  00193	5d		 pop	 ebp
  00194	c3		 ret	 0
$LN33@Arabic_Get:

; 160  : 		case 0x0643: return	KAF[pos];break;

  00195	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00198	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?KAF@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001a0	5d		 pop	 ebp
  001a1	c3		 ret	 0
$LN34@Arabic_Get:

; 161  : 		case 0x0644: return	LAM[pos];break;

  001a2	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001a5	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?LAM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
$LN35@Arabic_Get:

; 162  : 		case 0x0645: return	MEEM[pos];break;

  001af	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001b2	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?MEEM@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001ba	5d		 pop	 ebp
  001bb	c3		 ret	 0
$LN36@Arabic_Get:

; 163  : 		case 0x0646: return	NOON[pos];break;

  001bc	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001bf	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?NOON@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001c7	5d		 pop	 ebp
  001c8	c3		 ret	 0
$LN37@Arabic_Get:

; 164  : 		case 0x0647: return	HEH[pos];break;

  001c9	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001cc	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?HEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001d4	5d		 pop	 ebp
  001d5	c3		 ret	 0
$LN38@Arabic_Get:

; 165  : 		case 0x0648: return	WAW[pos];break;

  001d6	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001d9	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?WAW@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001e1	5d		 pop	 ebp
  001e2	c3		 ret	 0
$LN39@Arabic_Get:

; 166  : 		case 0x0649: return	ALEF_MAKSURA[pos];break;

  001e3	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001e6	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?ALEF_MAKSURA@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001ee	5d		 pop	 ebp
  001ef	c3		 ret	 0
$LN40@Arabic_Get:

; 167  : 		case 0x064A: return	YEH[pos];break;

  001f0	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001f3	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?YEH@?1??Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 170  : }

  001fb	5d		 pop	 ebp
  001fc	c3		 ret	 0
$LN2@Arabic_Get:

; 168  : 	}
; 169  : 	return 0;

  001fd	33 c0		 xor	 eax, eax

; 170  : }

  001ff	5d		 pop	 ebp
  00200	c3		 ret	 0
  00201	0f 1f 00	 npad	 3
$LN42@Arabic_Get:
  00204	00 00 00 00	 DD	 $LN4@Arabic_Get
  00208	00 00 00 00	 DD	 $LN5@Arabic_Get
  0020c	00 00 00 00	 DD	 $LN6@Arabic_Get
  00210	00 00 00 00	 DD	 $LN7@Arabic_Get
  00214	00 00 00 00	 DD	 $LN8@Arabic_Get
  00218	00 00 00 00	 DD	 $LN9@Arabic_Get
  0021c	00 00 00 00	 DD	 $LN10@Arabic_Get
  00220	00 00 00 00	 DD	 $LN11@Arabic_Get
  00224	00 00 00 00	 DD	 $LN12@Arabic_Get
  00228	00 00 00 00	 DD	 $LN13@Arabic_Get
  0022c	00 00 00 00	 DD	 $LN14@Arabic_Get
  00230	00 00 00 00	 DD	 $LN15@Arabic_Get
  00234	00 00 00 00	 DD	 $LN16@Arabic_Get
  00238	00 00 00 00	 DD	 $LN17@Arabic_Get
  0023c	00 00 00 00	 DD	 $LN18@Arabic_Get
  00240	00 00 00 00	 DD	 $LN19@Arabic_Get
  00244	00 00 00 00	 DD	 $LN20@Arabic_Get
  00248	00 00 00 00	 DD	 $LN21@Arabic_Get
  0024c	00 00 00 00	 DD	 $LN22@Arabic_Get
  00250	00 00 00 00	 DD	 $LN23@Arabic_Get
  00254	00 00 00 00	 DD	 $LN24@Arabic_Get
  00258	00 00 00 00	 DD	 $LN25@Arabic_Get
  0025c	00 00 00 00	 DD	 $LN26@Arabic_Get
  00260	00 00 00 00	 DD	 $LN27@Arabic_Get
  00264	00 00 00 00	 DD	 $LN28@Arabic_Get
  00268	00 00 00 00	 DD	 $LN29@Arabic_Get
  0026c	00 00 00 00	 DD	 $LN2@Arabic_Get
  00270	00 00 00 00	 DD	 $LN2@Arabic_Get
  00274	00 00 00 00	 DD	 $LN2@Arabic_Get
  00278	00 00 00 00	 DD	 $LN2@Arabic_Get
  0027c	00 00 00 00	 DD	 $LN2@Arabic_Get
  00280	00 00 00 00	 DD	 $LN30@Arabic_Get
  00284	00 00 00 00	 DD	 $LN31@Arabic_Get
  00288	00 00 00 00	 DD	 $LN32@Arabic_Get
  0028c	00 00 00 00	 DD	 $LN33@Arabic_Get
  00290	00 00 00 00	 DD	 $LN34@Arabic_Get
  00294	00 00 00 00	 DD	 $LN35@Arabic_Get
  00298	00 00 00 00	 DD	 $LN36@Arabic_Get
  0029c	00 00 00 00	 DD	 $LN37@Arabic_Get
  002a0	00 00 00 00	 DD	 $LN38@Arabic_Get
  002a4	00 00 00 00	 DD	 $LN39@Arabic_Get
  002a8	00 00 00 00	 DD	 $LN40@Arabic_Get
?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ENDP	; Arabic_GetMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z
_TEXT	SEGMENT
_cur$ = 8						; size = 2
_next$ = 12						; size = 2
_pos$ = 16						; size = 4
?Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z PROC ; Arabic_GetComposition, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	static wchar_t LAM_ALEF_MADDA[ARABIC_FORM_TYPE_NUM]			= {0x0622, 0xFEF5,      0,      0, 0xFEF6};
; 70   : 	static wchar_t LAM_ALEF_HAMZA_ABOVE[ARABIC_FORM_TYPE_NUM]	= {0x0623, 0xFEF7,      0,      0, 0xFEF8};
; 71   : 	static wchar_t LAM_ALEF_HAMZA_BELOW[ARABIC_FORM_TYPE_NUM]	= {0x0625, 0xFEF9,      0,      0, 0xFEFA};
; 72   : 	static wchar_t LAM_ALEF[ARABIC_FORM_TYPE_NUM]				= {0x0627, 0xFEFB,      0,      0, 0xFEFC};
; 73   : 
; 74   : 	switch (cur)

  00003	b8 44 06 00 00	 mov	 eax, 1604		; 00000644H
  00008	66 39 45 08	 cmp	 WORD PTR _cur$[ebp], ax
  0000c	75 49		 jne	 SHORT $LN4@Arabic_Get

; 75   : 	{
; 76   : 		case 0x0644:
; 77   : 			switch (next)

  0000e	0f b7 45 0c	 movzx	 eax, WORD PTR _next$[ebp]
  00012	05 de f9 ff ff	 add	 eax, -1570		; fffff9deH
  00017	83 f8 05	 cmp	 eax, 5
  0001a	77 3b		 ja	 SHORT $LN4@Arabic_Get
  0001c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@Arabic_Get[eax*4]
$LN7@Arabic_Get:

; 78   : 			{
; 79   : 				case 0x0622:return LAM_ALEF_MADDA[pos];break;

  00023	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  00026	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?LAM_ALEF_MADDA@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 87   : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN8@Arabic_Get:

; 80   : 				case 0x0623:return LAM_ALEF_HAMZA_ABOVE[pos];break;

  00030	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  00033	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?LAM_ALEF_HAMZA_ABOVE@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 87   : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN9@Arabic_Get:

; 81   : 				case 0x0625:return LAM_ALEF_HAMZA_BELOW[pos];break;

  0003d	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  00040	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?LAM_ALEF_HAMZA_BELOW@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 87   : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN10@Arabic_Get:

; 82   : 				case 0x0627:return LAM_ALEF[pos];break;

  0004a	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  0004d	66 8b 04 45 00
	00 00 00	 mov	 ax, WORD PTR ?LAM_ALEF@?1??Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z@4PA_WA[eax*2]

; 87   : }

  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN4@Arabic_Get:

; 83   : 			}
; 84   : 			break;
; 85   : 	}
; 86   : 	return 0;

  00057	33 c0		 xor	 eax, eax

; 87   : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	90		 npad	 1
$LN12@Arabic_Get:
  0005c	00 00 00 00	 DD	 $LN7@Arabic_Get
  00060	00 00 00 00	 DD	 $LN8@Arabic_Get
  00064	00 00 00 00	 DD	 $LN4@Arabic_Get
  00068	00 00 00 00	 DD	 $LN9@Arabic_Get
  0006c	00 00 00 00	 DD	 $LN4@Arabic_Get
  00070	00 00 00 00	 DD	 $LN10@Arabic_Get
?Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z ENDP ; Arabic_GetComposition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_MakeShape@@YAIPA_WI0I@Z
_TEXT	SEGMENT
_cur$1$ = -16						; size = 4
_prev$1$ = -12						; size = 4
_dstIndex$1$ = -8					; size = 4
_srcIndex$1$ = -4					; size = 4
_src$ = 8						; size = 4
_srcLen$ = 12						; size = 4
_dst$ = 16						; size = 4
_dstLen$ = 20						; size = 4
?Arabic_MakeShape@@YAIPA_WI0I@Z PROC			; Arabic_MakeShape, COMDAT

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 248  : 	assert(dstLen >= srcLen);
; 249  : 
; 250  : 	const size_t srcLastIndex = srcLen - 1;
; 251  : 
; 252  : 	unsigned dstIndex = 0;

  00007	33 db		 xor	 ebx, ebx
  00009	57		 push	 edi

; 253  : 	for (size_t srcIndex = 0; srcIndex < srcLen; ++srcIndex)

  0000a	33 ff		 xor	 edi, edi
  0000c	89 5d f8	 mov	 DWORD PTR _dstIndex$1$[ebp], ebx
  0000f	89 7d fc	 mov	 DWORD PTR _srcIndex$1$[ebp], edi
  00012	39 5d 0c	 cmp	 DWORD PTR _srcLen$[ebp], ebx
  00015	0f 84 5f 01 00
	00		 je	 $LN40@Arabic_Mak
  0001b	56		 push	 esi
  0001c	0f 1f 40 00	 npad	 4
$LL4@Arabic_Mak:

; 254  : 	{
; 255  : 		wchar_t cur = src[srcIndex];

  00020	8b 45 08	 mov	 eax, DWORD PTR _src$[ebp]
  00023	0f b7 34 78	 movzx	 esi, WORD PTR [eax+edi*2]

; 256  : 
; 257  : 		//printf("now %x\n", cur);
; 258  : 
; 259  : 		if (Arabic_IsInMap(cur))

  00027	56		 push	 esi
  00028	89 75 f0	 mov	 DWORD PTR _cur$1$[ebp], esi
  0002b	e8 00 00 00 00	 call	 ?Arabic_IsInMap@@YA_N_W@Z ; Arabic_IsInMap
  00030	83 c4 04	 add	 esp, 4
  00033	84 c0		 test	 al, al
  00035	0f 84 96 01 00
	00		 je	 $LN9@Arabic_Mak

; 260  : 		{
; 261  : 			wchar_t prev = 0;

  0003b	33 db		 xor	 ebx, ebx

; 262  : 			{
; 263  : 				size_t prevIndex = srcIndex;

  0003d	8b f7		 mov	 esi, edi
  0003f	8b 7d 08	 mov	 edi, DWORD PTR _src$[ebp]
  00042	89 5d f4	 mov	 DWORD PTR _prev$1$[ebp], ebx
$LL5@Arabic_Mak:

; 264  : 				while (prevIndex > 0)

  00045	85 f6		 test	 esi, esi
  00047	74 13		 je	 SHORT $LN11@Arabic_Mak

; 265  : 				{
; 266  : 					prevIndex--;
; 267  : 					prev = src[prevIndex];

  00049	0f b7 5c 77 fe	 movzx	 ebx, WORD PTR [edi+esi*2-2]
  0004e	4e		 dec	 esi

; 268  : 					//printf("\tprev %d:%x\n", prevIndex, cur);
; 269  : 					if (Arabic_IsInComposing(prev))

  0004f	53		 push	 ebx
  00050	e8 00 00 00 00	 call	 ?Arabic_IsInComposing@@YA_N_W@Z ; Arabic_IsInComposing
  00055	83 c4 04	 add	 esp, 4
  00058	84 c0		 test	 al, al
  0005a	75 e9		 jne	 SHORT $LL5@Arabic_Mak
$LN11@Arabic_Mak:

; 270  : 						continue;
; 271  : 					else
; 272  : 						break;
; 273  : 				}
; 274  : 
; 275  : 				if ((srcIndex == 0) ||
; 276  : 					(!Arabic_IsInMap(prev)) ||

  0005c	8b 7d fc	 mov	 edi, DWORD PTR _srcIndex$1$[ebp]
  0005f	89 5d f4	 mov	 DWORD PTR _prev$1$[ebp], ebx
  00062	85 ff		 test	 edi, edi
  00064	74 2d		 je	 SHORT $LN14@Arabic_Mak
  00066	53		 push	 ebx
  00067	e8 00 00 00 00	 call	 ?Arabic_IsInMap@@YA_N_W@Z ; Arabic_IsInMap
  0006c	83 c4 04	 add	 esp, 4
  0006f	84 c0		 test	 al, al
  00071	74 20		 je	 SHORT $LN14@Arabic_Mak
  00073	6a 02		 push	 2
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  0007b	83 c4 08	 add	 esp, 8
  0007e	66 85 c0	 test	 ax, ax
  00081	75 15		 jne	 SHORT $LN13@Arabic_Mak
  00083	6a 03		 push	 3
  00085	53		 push	 ebx
  00086	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  0008b	83 c4 08	 add	 esp, 8
  0008e	66 85 c0	 test	 ax, ax
  00091	75 05		 jne	 SHORT $LN13@Arabic_Mak
$LN14@Arabic_Mak:

; 277  : 					(!Arabic_GetMap(prev, INITIAL) && !Arabic_GetMap(prev, MEDIAL)))
; 278  : 				{
; 279  : 					//printf("\tprev not defined\n");
; 280  : 					prev = 0;

  00093	33 db		 xor	 ebx, ebx
  00095	89 5d f4	 mov	 DWORD PTR _prev$1$[ebp], ebx
$LN13@Arabic_Mak:

; 281  : 				}
; 282  : 			}
; 283  : 
; 284  : 			wchar_t next = 0;

  00098	8b 5d 08	 mov	 ebx, DWORD PTR _src$[ebp]
  0009b	33 f6		 xor	 esi, esi
  0009d	0f 1f 00	 npad	 3
$LL7@Arabic_Mak:

; 285  : 			{
; 286  : 				size_t nextIndex = srcIndex;
; 287  : 				while (nextIndex < srcLastIndex)

  000a0	8b 45 0c	 mov	 eax, DWORD PTR _srcLen$[ebp]
  000a3	48		 dec	 eax
  000a4	3b f8		 cmp	 edi, eax
  000a6	73 13		 jae	 SHORT $LN15@Arabic_Mak

; 288  : 				{
; 289  : 					nextIndex++;
; 290  : 					next = src[nextIndex];

  000a8	0f b7 74 7b 02	 movzx	 esi, WORD PTR [ebx+edi*2+2]
  000ad	47		 inc	 edi

; 291  : 					if (Arabic_IsInComposing(next))

  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ?Arabic_IsInComposing@@YA_N_W@Z ; Arabic_IsInComposing
  000b4	83 c4 04	 add	 esp, 4
  000b7	84 c0		 test	 al, al
  000b9	75 e5		 jne	 SHORT $LL7@Arabic_Mak
$LN15@Arabic_Mak:

; 292  : 						continue;
; 293  : 					else
; 294  : 						break;
; 295  : 				}
; 296  : 
; 297  : 				if ((nextIndex == srcLen) ||
; 298  : 					(!Arabic_IsInMap(next)) ||

  000bb	8b 5d f4	 mov	 ebx, DWORD PTR _prev$1$[ebp]
  000be	3b 7d 0c	 cmp	 edi, DWORD PTR _srcLen$[ebp]
  000c1	74 3a		 je	 SHORT $LN18@Arabic_Mak
  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 ?Arabic_IsInMap@@YA_N_W@Z ; Arabic_IsInMap
  000c9	83 c4 04	 add	 esp, 4
  000cc	84 c0		 test	 al, al
  000ce	74 2d		 je	 SHORT $LN18@Arabic_Mak
  000d0	6a 03		 push	 3
  000d2	56		 push	 esi
  000d3	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  000d8	83 c4 08	 add	 esp, 8
  000db	66 85 c0	 test	 ax, ax
  000de	75 1f		 jne	 SHORT $LN17@Arabic_Mak
  000e0	6a 04		 push	 4
  000e2	56		 push	 esi
  000e3	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  000e8	83 c4 08	 add	 esp, 8
  000eb	66 85 c0	 test	 ax, ax
  000ee	75 0f		 jne	 SHORT $LN17@Arabic_Mak
  000f0	56		 push	 esi
  000f1	e8 00 00 00 00	 call	 ?Arabic_IsNext@@YA_N_W@Z ; Arabic_IsNext
  000f6	83 c4 04	 add	 esp, 4
  000f9	84 c0		 test	 al, al
  000fb	75 02		 jne	 SHORT $LN17@Arabic_Mak
$LN18@Arabic_Mak:

; 299  : 					(!Arabic_GetMap(next, MEDIAL) && !Arabic_GetMap(next, FINAL) && !Arabic_IsNext(next)))
; 300  : 				{
; 301  : 					//printf("\tnext not defined\n");
; 302  : 					next = 0;

  000fd	33 f6		 xor	 esi, esi
$LN17@Arabic_Mak:

; 303  : 				}
; 304  : 			}
; 305  : 
; 306  : 			if (Arabic_IsComb1(cur) && Arabic_IsComb2(next))

  000ff	8b 7d f0	 mov	 edi, DWORD PTR _cur$1$[ebp]
  00102	57		 push	 edi
  00103	e8 00 00 00 00	 call	 ?Arabic_IsComb1@@YA_N_W@Z ; Arabic_IsComb1
  00108	83 c4 04	 add	 esp, 4
  0010b	84 c0		 test	 al, al
  0010d	74 32		 je	 SHORT $LN19@Arabic_Mak
  0010f	56		 push	 esi
  00110	e8 00 00 00 00	 call	 ?Arabic_IsComb2@@YA_N_W@Z ; Arabic_IsComb2
  00115	83 c4 04	 add	 esp, 4
  00118	84 c0		 test	 al, al
  0011a	74 25		 je	 SHORT $LN19@Arabic_Mak

; 307  : 			{
; 308  : 				if (prev)

  0011c	66 85 db	 test	 bx, bx
  0011f	74 04		 je	 SHORT $LN21@Arabic_Mak

; 309  : 					dst[dstIndex] = Arabic_GetComposition(cur, next, FINAL);

  00121	6a 04		 push	 4
  00123	eb 02		 jmp	 SHORT $LN46@Arabic_Mak
$LN21@Arabic_Mak:

; 310  : 				else
; 311  : 					dst[dstIndex] = Arabic_GetComposition(cur, next, ISOLATED);

  00125	6a 01		 push	 1
$LN46@Arabic_Mak:

; 312  : 
; 313  : 				//printf("\tGot me a complex:%x\n", dst[dstIndex]);
; 314  : 
; 315  : 				srcIndex++;

  00127	56		 push	 esi
  00128	57		 push	 edi
  00129	e8 00 00 00 00	 call	 ?Arabic_GetComposition@@YA_W_W0W4ARABIC_FORM_TYPE@@@Z ; Arabic_GetComposition
  0012e	8b 5d f8	 mov	 ebx, DWORD PTR _dstIndex$1$[ebp]
  00131	83 c4 0c	 add	 esp, 12			; 0000000cH
  00134	8b 4d 10	 mov	 ecx, DWORD PTR _dst$[ebp]
  00137	8b 7d fc	 mov	 edi, DWORD PTR _srcIndex$1$[ebp]
  0013a	47		 inc	 edi
  0013b	66 89 04 59	 mov	 WORD PTR [ecx+ebx*2], ax

; 316  : 				dstIndex++;
; 317  : 			}

  0013f	eb 27		 jmp	 SHORT $LN2@Arabic_Mak
$LN19@Arabic_Mak:

; 318  : 			else if (prev && next && (dst[dstIndex] = Arabic_GetMap(cur, MEDIAL)))

  00141	66 85 db	 test	 bx, bx
  00144	74 58		 je	 SHORT $LN44@Arabic_Mak
  00146	66 85 f6	 test	 si, si
  00149	74 37		 je	 SHORT $LN45@Arabic_Mak
  0014b	6a 03		 push	 3
  0014d	57		 push	 edi
  0014e	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  00153	8b 5d f8	 mov	 ebx, DWORD PTR _dstIndex$1$[ebp]
  00156	83 c4 08	 add	 esp, 8
  00159	8b 4d 10	 mov	 ecx, DWORD PTR _dst$[ebp]
  0015c	66 89 04 59	 mov	 WORD PTR [ecx+ebx*2], ax
  00160	66 85 c0	 test	 ax, ax
  00163	74 20		 je	 SHORT $LN23@Arabic_Mak
$LN43@Arabic_Mak:

; 253  : 	for (size_t srcIndex = 0; srcIndex < srcLen; ++srcIndex)

  00165	8b 7d fc	 mov	 edi, DWORD PTR _srcIndex$1$[ebp]
$LN2@Arabic_Mak:
  00168	47		 inc	 edi
  00169	43		 inc	 ebx
  0016a	89 5d f8	 mov	 DWORD PTR _dstIndex$1$[ebp], ebx
  0016d	89 7d fc	 mov	 DWORD PTR _srcIndex$1$[ebp], edi
  00170	3b 7d 0c	 cmp	 edi, DWORD PTR _srcLen$[ebp]
  00173	0f 82 a7 fe ff
	ff		 jb	 $LL4@Arabic_Mak

; 343  : 			dstIndex++;
; 344  : 		}
; 345  : 	}
; 346  : 	return dstIndex;

  00179	5e		 pop	 esi
$LN40@Arabic_Mak:
  0017a	5f		 pop	 edi

; 347  : }

  0017b	8b c3		 mov	 eax, ebx
  0017d	5b		 pop	 ebx
  0017e	8b e5		 mov	 esp, ebp
  00180	5d		 pop	 ebp
  00181	c3		 ret	 0
$LN45@Arabic_Mak:

; 318  : 			else if (prev && next && (dst[dstIndex] = Arabic_GetMap(cur, MEDIAL)))

  00182	8b 5d f8	 mov	 ebx, DWORD PTR _dstIndex$1$[ebp]
$LN23@Arabic_Mak:

; 319  : 			{
; 320  : 				//printf("\tGot prev & next:%x\n", dst[dstIndex]);
; 321  : 				dstIndex++;
; 322  : 			}
; 323  : 			else if (prev && (dst[dstIndex] = Arabic_GetMap(cur, FINAL)))

  00185	6a 04		 push	 4
  00187	57		 push	 edi
  00188	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  0018d	8b 4d 10	 mov	 ecx, DWORD PTR _dst$[ebp]
  00190	83 c4 08	 add	 esp, 8
  00193	66 89 04 59	 mov	 WORD PTR [ecx+ebx*2], ax
  00197	66 85 c0	 test	 ax, ax
  0019a	75 c9		 jne	 SHORT $LN43@Arabic_Mak

; 318  : 			else if (prev && next && (dst[dstIndex] = Arabic_GetMap(cur, MEDIAL)))

  0019c	eb 03		 jmp	 SHORT $LN25@Arabic_Mak
$LN44@Arabic_Mak:
  0019e	8b 5d f8	 mov	 ebx, DWORD PTR _dstIndex$1$[ebp]
$LN25@Arabic_Mak:

; 324  : 			{
; 325  : 				//printf("\tGot prev:%x\n", dst[dstIndex]);
; 326  : 				dstIndex++;
; 327  : 			}
; 328  : 			else if (next && (dst[dstIndex] = Arabic_GetMap(cur, INITIAL)))

  001a1	66 85 f6	 test	 si, si
  001a4	74 17		 je	 SHORT $LN27@Arabic_Mak
  001a6	6a 02		 push	 2
  001a8	57		 push	 edi
  001a9	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  001ae	8b 4d 10	 mov	 ecx, DWORD PTR _dst$[ebp]
  001b1	83 c4 08	 add	 esp, 8
  001b4	66 89 04 59	 mov	 WORD PTR [ecx+ebx*2], ax
  001b8	66 85 c0	 test	 ax, ax
  001bb	75 a8		 jne	 SHORT $LN43@Arabic_Mak
$LN27@Arabic_Mak:

; 329  : 			{
; 330  : 				//printf("\tGot next:%x\n", dst[dstIndex]);
; 331  : 				dstIndex++;
; 332  : 			}
; 333  : 			else
; 334  : 			{
; 335  : 				dst[dstIndex] = Arabic_GetMap(cur, ISOLATED);

  001bd	6a 01		 push	 1
  001bf	57		 push	 edi
  001c0	e8 00 00 00 00	 call	 ?Arabic_GetMap@@YA_W_WW4ARABIC_FORM_TYPE@@@Z ; Arabic_GetMap
  001c5	8b 4d 10	 mov	 ecx, DWORD PTR _dst$[ebp]
  001c8	83 c4 08	 add	 esp, 8
  001cb	66 89 04 59	 mov	 WORD PTR [ecx+ebx*2], ax

; 336  : 				//printf("\tGot nothing:%x\n", dst[dstIndex]);
; 337  : 				dstIndex++;
; 338  : 			}
; 339  : 		}

  001cf	eb 94		 jmp	 SHORT $LN43@Arabic_Mak
$LN9@Arabic_Mak:

; 340  : 		else
; 341  : 		{
; 342  : 			dst[dstIndex] = cur;

  001d1	8b 45 10	 mov	 eax, DWORD PTR _dst$[ebp]
  001d4	66 89 34 58	 mov	 WORD PTR [eax+ebx*2], si
  001d8	eb 8e		 jmp	 SHORT $LN2@Arabic_Mak
?Arabic_MakeShape@@YAIPA_WI0I@Z ENDP			; Arabic_MakeShape
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_HasPresentation@@YA_NPA_WH@Z
_TEXT	SEGMENT
_codes$ = 8						; size = 4
_last$ = 12						; size = 4
?Arabic_HasPresentation@@YA_NPA_WH@Z PROC		; Arabic_HasPresentation, COMDAT

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 50   : 	while (last > 0)

  00005	8b 75 0c	 mov	 esi, DWORD PTR _last$[ebp]
  00008	57		 push	 edi
  00009	85 f6		 test	 esi, esi
  0000b	7e 19		 jle	 SHORT $LN6@Arabic_Has
  0000d	8b 5d 08	 mov	 ebx, DWORD PTR _codes$[ebp]
$LL2@Arabic_Has:

; 51   : 	{
; 52   : 		if (Arabic_IsInSpace(codes[last]))

  00010	0f b7 3c 73	 movzx	 edi, WORD PTR [ebx+esi*2]
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ?Arabic_IsInSpace@@YA_N_W@Z ; Arabic_IsInSpace
  0001a	83 c4 04	 add	 esp, 4
  0001d	84 c0		 test	 al, al
  0001f	74 0c		 je	 SHORT $LN4@Arabic_Has

; 53   : 		{
; 54   : 			last--;

  00021	4e		 dec	 esi
  00022	85 f6		 test	 esi, esi
  00024	7f ea		 jg	 SHORT $LL2@Arabic_Has
$LN6@Arabic_Has:
  00026	5f		 pop	 edi

; 59   : 				return true;
; 60   : 			else
; 61   : 				break;
; 62   : 		}
; 63   : 	}
; 64   : 	return false;
; 65   : }

  00027	5e		 pop	 esi
  00028	32 c0		 xor	 al, al
  0002a	5b		 pop	 ebx
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN4@Arabic_Has:

; 55   : 		}
; 56   : 		else
; 57   : 		{
; 58   : 			if (Arabic_IsInPresentation(codes[last]))

  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 ?Arabic_IsInPresentation@@YA_N_W@Z ; Arabic_IsInPresentation
  00033	83 c4 04	 add	 esp, 4
  00036	84 c0		 test	 al, al
  00038	74 ec		 je	 SHORT $LN6@Arabic_Has

; 59   : 				return true;
; 60   : 			else
; 61   : 				break;
; 62   : 		}
; 63   : 	}
; 64   : 	return false;
; 65   : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	b0 01		 mov	 al, 1
  0003e	5b		 pop	 ebx
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?Arabic_HasPresentation@@YA_NPA_WH@Z ENDP		; Arabic_HasPresentation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsInPresentation@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsInPresentation@@YA_N_W@Z PROC			; Arabic_IsInPresentation, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 	return (code >= 0xfb50 && code <= 0xfdff) || (code >= 0xfe70 && code <= 0xfeff) || (code == 0x08);

  00003	66 8b 45 08	 mov	 ax, WORD PTR _code$[ebp]
  00007	b9 50 fb 00 00	 mov	 ecx, 64336		; 0000fb50H
  0000c	66 3b c1	 cmp	 ax, cx
  0000f	72 0a		 jb	 SHORT $LN3@Arabic_IsI
  00011	b9 ff fd 00 00	 mov	 ecx, 65023		; 0000fdffH
  00016	66 3b c1	 cmp	 ax, cx
  00019	76 1e		 jbe	 SHORT $LN5@Arabic_IsI
$LN3@Arabic_IsI:
  0001b	b9 70 fe 00 00	 mov	 ecx, 65136		; 0000fe70H
  00020	66 3b c1	 cmp	 ax, cx
  00023	72 0a		 jb	 SHORT $LN4@Arabic_IsI
  00025	b9 ff fe 00 00	 mov	 ecx, 65279		; 0000feffH
  0002a	66 3b c1	 cmp	 ax, cx
  0002d	76 0a		 jbe	 SHORT $LN5@Arabic_IsI
$LN4@Arabic_IsI:
  0002f	66 83 f8 08	 cmp	 ax, 8
  00033	74 04		 je	 SHORT $LN5@Arabic_IsI
  00035	32 c0		 xor	 al, al

; 46   : }

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN5@Arabic_IsI:

; 45   : 	return (code >= 0xfb50 && code <= 0xfdff) || (code >= 0xfe70 && code <= 0xfeff) || (code == 0x08);

  00039	b0 01		 mov	 al, 1

; 46   : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?Arabic_IsInPresentation@@YA_N_W@Z ENDP			; Arabic_IsInPresentation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsInSymbol@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsInSymbol@@YA_N_W@Z PROC			; Arabic_IsInSymbol, COMDAT

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 36   : 	return	(code >= 0x20 && code <= 0x2f) ||

  00003	8b 45 08	 mov	 eax, DWORD PTR _code$[ebp]
  00006	66 83 f8 20	 cmp	 ax, 32			; 00000020H
  0000a	72 06		 jb	 SHORT $LN3@Arabic_IsI
  0000c	66 83 f8 2f	 cmp	 ax, 47			; 0000002fH
  00010	76 21		 jbe	 SHORT $LN5@Arabic_IsI
$LN3@Arabic_IsI:
  00012	66 83 f8 3a	 cmp	 ax, 58			; 0000003aH
  00016	72 06		 jb	 SHORT $LN4@Arabic_IsI
  00018	66 83 f8 40	 cmp	 ax, 64			; 00000040H
  0001c	76 15		 jbe	 SHORT $LN5@Arabic_IsI
$LN4@Arabic_IsI:
  0001e	66 83 f8 5b	 cmp	 ax, 91			; 0000005bH
  00022	72 06		 jb	 SHORT $LN6@Arabic_IsI
  00024	66 83 f8 60	 cmp	 ax, 96			; 00000060H
  00028	76 09		 jbe	 SHORT $LN5@Arabic_IsI
$LN6@Arabic_IsI:
  0002a	83 c0 85	 add	 eax, -123		; ffffff85H
  0002d	66 83 f8 03	 cmp	 ax, 3
  00031	77 04		 ja	 SHORT $LN7@Arabic_IsI
$LN5@Arabic_IsI:
  00033	b0 01		 mov	 al, 1

; 37   : 			(code >= 0x3a && code <= 0x40) ||
; 38   : 			(code >= 0x5b && code <= 0x60) ||
; 39   : 			(code >= 0x7b && code <= 0x7e);
; 40   : }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN7@Arabic_IsI:

; 36   : 	return	(code >= 0x20 && code <= 0x2f) ||

  00037	32 c0		 xor	 al, al

; 37   : 			(code >= 0x3a && code <= 0x40) ||
; 38   : 			(code >= 0x5b && code <= 0x60) ||
; 39   : 			(code >= 0x7b && code <= 0x7e);
; 40   : }

  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?Arabic_IsInSymbol@@YA_N_W@Z ENDP			; Arabic_IsInSymbol
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_IsInSpace@@YA_N_W@Z
_TEXT	SEGMENT
_code$ = 8						; size = 2
?Arabic_IsInSpace@@YA_N_W@Z PROC			; Arabic_IsInSpace, COMDAT

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 24   : 	switch (code)

  00003	66 8b 45 08	 mov	 ax, WORD PTR _code$[ebp]
  00007	66 83 f8 09	 cmp	 ax, 9
  0000b	74 0a		 je	 SHORT $LN4@Arabic_IsI
  0000d	66 83 f8 20	 cmp	 ax, 32			; 00000020H
  00011	74 04		 je	 SHORT $LN4@Arabic_IsI

; 29   : 		default:
; 30   : 			return false;

  00013	32 c0		 xor	 al, al

; 31   : 	}
; 32   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
$LN4@Arabic_IsI:

; 25   : 	{
; 26   : 		case ' ':
; 27   : 		case '\t':
; 28   : 			return true;

  00017	b0 01		 mov	 al, 1

; 31   : 	}
; 32   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?Arabic_IsInSpace@@YA_N_W@Z ENDP			; Arabic_IsInSpace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\DS Project\DS Files\Source\ClientSource\Client\EterLocale\Arabic.cpp
;	COMDAT ?Arabic_ConvSymbol@@YA_W_W@Z
_TEXT	SEGMENT
_c$ = 8							; size = 2
?Arabic_ConvSymbol@@YA_W_W@Z PROC			; Arabic_ConvSymbol, COMDAT

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 351  : 	switch (c)

  00003	66 8b 4d 08	 mov	 cx, WORD PTR _c$[ebp]
  00007	0f b7 c1	 movzx	 eax, cx
  0000a	83 c0 d8	 add	 eax, -40		; ffffffd8H
  0000d	83 f8 55	 cmp	 eax, 85			; 00000055H
  00010	77 46		 ja	 SHORT $LN12@Arabic_Con
  00012	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@Arabic_Con[eax]
  00019	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@Arabic_Con[eax*4]
$LN4@Arabic_Con:

; 352  : 	{
; 353  : 		case '(': return')';break;

  00020	b8 29 00 00 00	 mov	 eax, 41			; 00000029H

; 363  : 	}
; 364  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN5@Arabic_Con:

; 354  : 		case ')': return'(';break;

  00027	b8 28 00 00 00	 mov	 eax, 40			; 00000028H

; 363  : 	}
; 364  : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN6@Arabic_Con:

; 355  : 		case '<': return'>';break;

  0002e	b8 3e 00 00 00	 mov	 eax, 62			; 0000003eH

; 363  : 	}
; 364  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN7@Arabic_Con:

; 356  : 		case '>': return'<';break;

  00035	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH

; 363  : 	}
; 364  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN8@Arabic_Con:

; 357  : 		case '{': return'}';break;

  0003c	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH

; 363  : 	}
; 364  : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN9@Arabic_Con:

; 358  : 		case '}': return'{';break;

  00043	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH

; 363  : 	}
; 364  : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN10@Arabic_Con:

; 359  : 		case '[': return']';break;

  0004a	b8 5d 00 00 00	 mov	 eax, 93			; 0000005dH

; 363  : 	}
; 364  : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN11@Arabic_Con:

; 360  : 		case ']': return '[';break;

  00051	b8 5b 00 00 00	 mov	 eax, 91			; 0000005bH

; 363  : 	}
; 364  : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN12@Arabic_Con:

; 361  : 		default:
; 362  : 			return c;

  00058	66 8b c1	 mov	 ax, cx

; 363  : 	}
; 364  : }

  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
  0005d	0f 1f 00	 npad	 3
$LN15@Arabic_Con:
  00060	00 00 00 00	 DD	 $LN4@Arabic_Con
  00064	00 00 00 00	 DD	 $LN5@Arabic_Con
  00068	00 00 00 00	 DD	 $LN6@Arabic_Con
  0006c	00 00 00 00	 DD	 $LN7@Arabic_Con
  00070	00 00 00 00	 DD	 $LN10@Arabic_Con
  00074	00 00 00 00	 DD	 $LN11@Arabic_Con
  00078	00 00 00 00	 DD	 $LN8@Arabic_Con
  0007c	00 00 00 00	 DD	 $LN9@Arabic_Con
  00080	00 00 00 00	 DD	 $LN12@Arabic_Con
$LN14@Arabic_Con:
  00084	00		 DB	 0
  00085	01		 DB	 1
  00086	08		 DB	 8
  00087	08		 DB	 8
  00088	08		 DB	 8
  00089	08		 DB	 8
  0008a	08		 DB	 8
  0008b	08		 DB	 8
  0008c	08		 DB	 8
  0008d	08		 DB	 8
  0008e	08		 DB	 8
  0008f	08		 DB	 8
  00090	08		 DB	 8
  00091	08		 DB	 8
  00092	08		 DB	 8
  00093	08		 DB	 8
  00094	08		 DB	 8
  00095	08		 DB	 8
  00096	08		 DB	 8
  00097	08		 DB	 8
  00098	02		 DB	 2
  00099	08		 DB	 8
  0009a	03		 DB	 3
  0009b	08		 DB	 8
  0009c	08		 DB	 8
  0009d	08		 DB	 8
  0009e	08		 DB	 8
  0009f	08		 DB	 8
  000a0	08		 DB	 8
  000a1	08		 DB	 8
  000a2	08		 DB	 8
  000a3	08		 DB	 8
  000a4	08		 DB	 8
  000a5	08		 DB	 8
  000a6	08		 DB	 8
  000a7	08		 DB	 8
  000a8	08		 DB	 8
  000a9	08		 DB	 8
  000aa	08		 DB	 8
  000ab	08		 DB	 8
  000ac	08		 DB	 8
  000ad	08		 DB	 8
  000ae	08		 DB	 8
  000af	08		 DB	 8
  000b0	08		 DB	 8
  000b1	08		 DB	 8
  000b2	08		 DB	 8
  000b3	08		 DB	 8
  000b4	08		 DB	 8
  000b5	08		 DB	 8
  000b6	08		 DB	 8
  000b7	04		 DB	 4
  000b8	08		 DB	 8
  000b9	05		 DB	 5
  000ba	08		 DB	 8
  000bb	08		 DB	 8
  000bc	08		 DB	 8
  000bd	08		 DB	 8
  000be	08		 DB	 8
  000bf	08		 DB	 8
  000c0	08		 DB	 8
  000c1	08		 DB	 8
  000c2	08		 DB	 8
  000c3	08		 DB	 8
  000c4	08		 DB	 8
  000c5	08		 DB	 8
  000c6	08		 DB	 8
  000c7	08		 DB	 8
  000c8	08		 DB	 8
  000c9	08		 DB	 8
  000ca	08		 DB	 8
  000cb	08		 DB	 8
  000cc	08		 DB	 8
  000cd	08		 DB	 8
  000ce	08		 DB	 8
  000cf	08		 DB	 8
  000d0	08		 DB	 8
  000d1	08		 DB	 8
  000d2	08		 DB	 8
  000d3	08		 DB	 8
  000d4	08		 DB	 8
  000d5	08		 DB	 8
  000d6	08		 DB	 8
  000d7	06		 DB	 6
  000d8	08		 DB	 8
  000d9	07		 DB	 7
?Arabic_ConvSymbol@@YA_W_W@Z ENDP			; Arabic_ConvSymbol
_TEXT	ENDS
END
